1) rabbitmq-plugins enable --offline rabbitmq_management

CommandNode(pos=(0, 53), parts=[
  WordNode(pos=(0, 16), word='rabbitmq-plugins'),
  WordNode(pos=(17, 23), word='enable'),
  WordNode(pos=(24, 33), word='--offline'),
  WordNode(pos=(34, 53), word='rabbitmq_management'),
])


2) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3) erl -noinput -eval '   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  ' -- /plugins/rabbitmq_management-*.ez > /usr/local/bin/rabbitmqadmin

CommandNode(pos=(11, 422), parts=[
  WordNode(pos=(11, 14), word='erl'),
  WordNode(pos=(15, 23), word='-noinput'),
  WordNode(pos=(24, 29), word='-eval'),
  WordNode(pos=(30, 354), word='   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  '),
  WordNode(pos=(355, 357), word='--'),
  WordNode(pos=(358, 391), word='/plugins/rabbitmq_management-*.ez'),
  RedirectNode(output=
    WordNode(pos=(394, 422), word='/usr/local/bin/rabbitmqadmin'), pos=(392, 422), type='>'),
])


4) [ -s /usr/local/bin/rabbitmqadmin ]

CommandNode(pos=(425, 460), parts=[
  WordNode(pos=(425, 426), word='['),
  WordNode(pos=(427, 429), word='-s'),
  WordNode(pos=(430, 458), word='/usr/local/bin/rabbitmqadmin'),
  WordNode(pos=(459, 460), word=']'),
])


5) chmod +x /usr/local/bin/rabbitmqadmin

CommandNode(pos=(463, 500), parts=[
  WordNode(pos=(463, 468), word='chmod'),
  WordNode(pos=(469, 471), word='+x'),
  WordNode(pos=(472, 500), word='/usr/local/bin/rabbitmqadmin'),
])


6) %%INSTALL_PYTHON%%

CommandNode(pos=(503, 521), parts=[
  WordNode(pos=(503, 521), word='%%INSTALL_PYTHON%%'),
])


7) rabbitmqadmin --version

CommandNode(pos=(524, 547), parts=[
  WordNode(pos=(524, 537), word='rabbitmqadmin'),
  WordNode(pos=(538, 547), word='--version'),
])


8) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


9) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


10) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


11) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


12) which gpg

CommandNode(pos=(32, 41), parts=[
  WordNode(pos=(32, 37), word='which'),
  WordNode(pos=(38, 41), word='gpg'),
])


13) apt-get install -y --no-install-recommends gnupg

CommandNode(pos=(50, 98), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 65), word='install'),
  WordNode(pos=(66, 68), word='-y'),
  WordNode(pos=(69, 92), word='--no-install-recommends'),
  WordNode(pos=(93, 98), word='gnupg'),
])


14) gpg --version

CommandNode(pos=(111, 124), parts=[
  WordNode(pos=(111, 114), word='gpg'),
  WordNode(pos=(115, 124), word='--version'),
])


15) grep -q '^gpg (GnuPG) 1\.'

CommandNode(pos=(127, 153), parts=[
  WordNode(pos=(127, 131), word='grep'),
  WordNode(pos=(132, 134), word='-q'),
  WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
])


16) apt-get install -y --no-install-recommends dirmngr

CommandNode(pos=(163, 213), parts=[
  WordNode(pos=(163, 170), word='apt-get'),
  WordNode(pos=(171, 178), word='install'),
  WordNode(pos=(179, 181), word='-y'),
  WordNode(pos=(182, 205), word='--no-install-recommends'),
  WordNode(pos=(206, 213), word='dirmngr'),
])


17) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(221, 248), parts=[
  WordNode(pos=(221, 223), word='rm'),
  WordNode(pos=(224, 227), word='-rf'),
  WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
])


18) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


19) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


20) apt-get update

CommandNode(pos=(53, 67), parts=[
  WordNode(pos=(53, 60), word='apt-get'),
  WordNode(pos=(61, 67), word='update'),
])


21) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


22) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


23) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


24) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


25) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


26) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


27) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(488, 591), parts=[
  WordNode(pos=(488, 491), word='gpg'),
  WordNode(pos=(492, 499), word='--batch'),
  WordNode(pos=(500, 511), word='--keyserver'),
  WordNode(pos=(512, 538), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(539, 550), word='--recv-keys'),
  WordNode(pos=(551, 591), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


28) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(594, 658), parts=[
  WordNode(pos=(594, 597), word='gpg'),
  WordNode(pos=(598, 605), word='--batch'),
  WordNode(pos=(606, 614), word='--verify'),
  WordNode(pos=(615, 638), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(639, 658), word='/usr/local/bin/gosu'),
])


29) command -v gpgconf > /dev/null

CommandNode(pos=(661, 691), parts=[
  WordNode(pos=(661, 668), word='command'),
  WordNode(pos=(669, 671), word='-v'),
  WordNode(pos=(672, 679), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(682, 691), word='/dev/null'), pos=(680, 691), type='>'),
])


30) gpgconf --kill all

CommandNode(pos=(695, 713), parts=[
  WordNode(pos=(695, 702), word='gpgconf'),
  WordNode(pos=(703, 709), word='--kill'),
  WordNode(pos=(710, 713), word='all'),
])


31) :

CommandNode(pos=(717, 718), parts=[
  WordNode(pos=(717, 718), word=':'),
])


32) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


33) chmod +x /usr/local/bin/gosu

CommandNode(pos=(767, 795), parts=[
  WordNode(pos=(767, 772), word='chmod'),
  WordNode(pos=(773, 775), word='+x'),
  WordNode(pos=(776, 795), word='/usr/local/bin/gosu'),
])


34) gosu nobody true

CommandNode(pos=(798, 814), parts=[
  WordNode(pos=(798, 802), word='gosu'),
  WordNode(pos=(803, 809), word='nobody'),
  WordNode(pos=(810, 814), word='true'),
])


35) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


36) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


37) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


38) apt-get install -y --no-install-recommends   apt-transport-https ca-certificates   pwgen

CommandNode(pos=(18, 106), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 82), word='apt-transport-https'),
  WordNode(pos=(83, 98), word='ca-certificates'),
  WordNode(pos=(101, 106), word='pwgen'),
])


39) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(111, 138), parts=[
  WordNode(pos=(111, 113), word='rm'),
  WordNode(pos=(114, 117), word='-rf'),
  WordNode(pos=(118, 138), word='/var/lib/apt/lists/*'),
])


40) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


41) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


42) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


43) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
])


44) command -v gpgconf > /dev/null

CommandNode(pos=(220, 250), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
])


45) gpgconf --kill all

CommandNode(pos=(254, 272), parts=[
  WordNode(pos=(254, 261), word='gpgconf'),
  WordNode(pos=(262, 268), word='--kill'),
  WordNode(pos=(269, 272), word='all'),
])


46) :

CommandNode(pos=(276, 277), parts=[
  WordNode(pos=(276, 277), word=':'),
])


47) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


48) apt-key list

CommandNode(pos=(301, 313), parts=[
  WordNode(pos=(301, 308), word='apt-key'),
  WordNode(pos=(309, 313), word='list'),
])


49) echo 'deb https://repo.percona.com/apt stretch main' > /etc/apt/sources.list.d/percona.list

CommandNode(pos=(0, 91), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 52), word='deb https://repo.percona.com/apt stretch main'),
  RedirectNode(output=
    WordNode(pos=(55, 91), word='/etc/apt/sources.list.d/percona.list'), pos=(53, 91), type='>'),
])


50) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


51) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


52) debconf-set-selections

CommandNode(pos=(309, 331), parts=[
  WordNode(pos=(309, 331), word='debconf-set-selections'),
])


53) apt-get update

CommandNode(pos=(334, 348), parts=[
  WordNode(pos=(334, 341), word='apt-get'),
  WordNode(pos=(342, 348), word='update'),
])


54) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


55) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(430, 457), parts=[
  WordNode(pos=(430, 432), word='rm'),
  WordNode(pos=(433, 436), word='-rf'),
  WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
])


56) sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 463), word='sed'),
  WordNode(pos=(464, 467), word='-ri'),
  WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
  WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
])


57) rm -rf /var/lib/mysql

CommandNode(pos=(504, 525), parts=[
  WordNode(pos=(504, 506), word='rm'),
  WordNode(pos=(507, 510), word='-rf'),
  WordNode(pos=(511, 525), word='/var/lib/mysql'),
])


58) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(528, 567), parts=[
  WordNode(pos=(528, 533), word='mkdir'),
  WordNode(pos=(534, 536), word='-p'),
  WordNode(pos=(537, 551), word='/var/lib/mysql'),
  WordNode(pos=(552, 567), word='/var/run/mysqld'),
])


59) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(570, 621), parts=[
  WordNode(pos=(570, 575), word='chown'),
  WordNode(pos=(576, 578), word='-R'),
  WordNode(pos=(579, 590), word='mysql:mysql'),
  WordNode(pos=(591, 605), word='/var/lib/mysql'),
  WordNode(pos=(606, 621), word='/var/run/mysqld'),
])


60) chmod 777 /var/run/mysqld

CommandNode(pos=(624, 649), parts=[
  WordNode(pos=(624, 629), word='chmod'),
  WordNode(pos=(630, 633), word='777'),
  WordNode(pos=(634, 649), word='/var/run/mysqld'),
])


61) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(652, 690), parts=[
  WordNode(pos=(652, 656), word='find'),
  WordNode(pos=(657, 668), word='/etc/mysql/'),
  WordNode(pos=(669, 674), word='-name'),
  WordNode(pos=(675, 682), word='*.cnf'),
  WordNode(pos=(683, 690), word='-print0'),
])


62) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(695, 735), parts=[
  WordNode(pos=(695, 700), word='xargs'),
  WordNode(pos=(701, 703), word='-0'),
  WordNode(pos=(704, 708), word='grep'),
  WordNode(pos=(709, 713), word='-lZE'),
  WordNode(pos=(714, 735), word='^(bind-address|log)'),
])


63) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(740, 788), parts=[
  WordNode(pos=(740, 745), word='xargs'),
  WordNode(pos=(746, 749), word='-rt'),
  WordNode(pos=(750, 752), word='-0'),
  WordNode(pos=(753, 756), word='sed'),
  WordNode(pos=(757, 760), word='-Ei'),
  WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
])


64) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(791, 873), parts=[
  WordNode(pos=(791, 795), word='echo'),
  WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
])


65) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


66) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


67) apt-get install -y --no-install-recommends   tk-dev

CommandNode(pos=(18, 69), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 69), word='tk-dev'),
])


68) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(74, 101), parts=[
  WordNode(pos=(74, 76), word='rm'),
  WordNode(pos=(77, 80), word='-rf'),
  WordNode(pos=(81, 101), word='/var/lib/apt/lists/*'),
])


69) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


70) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


71) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


72) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


73) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


74) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


75) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


76) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


77) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


78) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


79) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


80) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


81) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


82) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


83) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


84) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4

CommandNode(pos=(740, 814), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 790), word='--enable-shared'),
  WordNode(pos=(793, 814), word='--enable-unicode=ucs4'),
])


85) make -j "$(nproc)"

CommandNode(pos=(819, 837), parts=[
  WordNode(pos=(819, 823), word='make'),
  WordNode(pos=(824, 826), word='-j'),
  WordNode(pos=(827, 837), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(830, 835), parts=[
        WordNode(pos=(830, 835), word='nproc'),
      ]), pos=(828, 836)),
  ]),
])


86) make install

CommandNode(pos=(842, 854), parts=[
  WordNode(pos=(842, 846), word='make'),
  WordNode(pos=(847, 854), word='install'),
])


87) ldconfig

CommandNode(pos=(859, 867), parts=[
  WordNode(pos=(859, 867), word='ldconfig'),
])


88) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(873, 1040), parts=[
  WordNode(pos=(873, 877), word='find'),
  WordNode(pos=(878, 888), word='/usr/local'),
  WordNode(pos=(889, 895), word='-depth'),
  WordNode(pos=(898, 900), word='('),
  WordNode(pos=(904, 906), word='('),
  WordNode(pos=(907, 912), word='-type'),
  WordNode(pos=(913, 914), word='d'),
  WordNode(pos=(915, 917), word='-a'),
  WordNode(pos=(918, 920), word='('),
  WordNode(pos=(921, 926), word='-name'),
  WordNode(pos=(927, 931), word='test'),
  WordNode(pos=(932, 934), word='-o'),
  WordNode(pos=(935, 940), word='-name'),
  WordNode(pos=(941, 946), word='tests'),
  WordNode(pos=(947, 949), word=')'),
  WordNode(pos=(950, 952), word=')'),
  WordNode(pos=(956, 958), word='-o'),
  WordNode(pos=(962, 964), word='('),
  WordNode(pos=(965, 970), word='-type'),
  WordNode(pos=(971, 972), word='f'),
  WordNode(pos=(973, 975), word='-a'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(979, 984), word='-name'),
  WordNode(pos=(985, 992), word='*.pyc'),
  WordNode(pos=(993, 995), word='-o'),
  WordNode(pos=(996, 1001), word='-name'),
  WordNode(pos=(1002, 1009), word='*.pyo'),
  WordNode(pos=(1010, 1012), word=')'),
  WordNode(pos=(1013, 1015), word=')'),
  WordNode(pos=(1018, 1020), word=')'),
  WordNode(pos=(1021, 1026), word='-exec'),
  WordNode(pos=(1027, 1029), word='rm'),
  WordNode(pos=(1030, 1033), word='-rf'),
  WordNode(pos=(1034, 1038), word='{}'),
  WordNode(pos=(1039, 1040), word='+'),
])


89) rm -rf /usr/src/python

CommandNode(pos=(1045, 1067), parts=[
  WordNode(pos=(1045, 1047), word='rm'),
  WordNode(pos=(1048, 1051), word='-rf'),
  WordNode(pos=(1052, 1067), word='/usr/src/python'),
])


90) python2 --version

CommandNode(pos=(1073, 1090), parts=[
  WordNode(pos=(1073, 1080), word='python2'),
  WordNode(pos=(1081, 1090), word='--version'),
])


91) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


92) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


93) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


94) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


95) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


96) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


97) pip install --no-cache-dir virtualenv

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 26), word='--no-cache-dir'),
  WordNode(pos=(27, 37), word='virtualenv'),
])


98) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


99) apt-get install -y --no-install-recommends   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 119), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='git'),
  WordNode(pos=(69, 78), word='mercurial'),
  WordNode(pos=(81, 95), word='openssh-client'),
  WordNode(pos=(98, 108), word='subversion'),
  WordNode(pos=(113, 119), word='procps'),
])


100) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(124, 151), parts=[
  WordNode(pos=(124, 126), word='rm'),
  WordNode(pos=(127, 130), word='-rf'),
  WordNode(pos=(131, 151), word='/var/lib/apt/lists/*'),
])


101) groupadd -r redmine

CommandNode(pos=(0, 19), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 19), word='redmine'),
])


102) useradd -r -g redmine redmine

CommandNode(pos=(23, 52), parts=[
  WordNode(pos=(23, 30), word='useradd'),
  WordNode(pos=(31, 33), word='-r'),
  WordNode(pos=(34, 36), word='-g'),
  WordNode(pos=(37, 44), word='redmine'),
  WordNode(pos=(45, 52), word='redmine'),
])


103) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


104) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


105) apt-get install -y --no-install-recommends   ca-certificates   wget     bzr   git   mercurial   openssh-client   subversion     gsfonts   imagemagick

CommandNode(pos=(28, 177), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 95), word='wget'),
  WordNode(pos=(100, 103), word='bzr'),
  WordNode(pos=(106, 109), word='git'),
  WordNode(pos=(112, 121), word='mercurial'),
  WordNode(pos=(124, 138), word='openssh-client'),
  WordNode(pos=(141, 151), word='subversion'),
  WordNode(pos=(156, 163), word='gsfonts'),
  WordNode(pos=(166, 177), word='imagemagick'),
])


106) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(182, 209), parts=[
  WordNode(pos=(182, 184), word='rm'),
  WordNode(pos=(185, 188), word='-rf'),
  WordNode(pos=(189, 209), word='/var/lib/apt/lists/*'),
])


107) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


108) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


109) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


110) apt-get install -y --no-install-recommends   dirmngr   gnupg

CommandNode(pos=(68, 128), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(113, 120), word='dirmngr'),
  WordNode(pos=(123, 128), word='gnupg'),
])


111) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(133, 160), parts=[
  WordNode(pos=(133, 135), word='rm'),
  WordNode(pos=(136, 139), word='-rf'),
  WordNode(pos=(140, 160), word='/var/lib/apt/lists/*'),
])


112) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(164, 229), parts=[
  AssignmentNode(pos=(164, 229), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(176, 227), parts=[
        CommandNode(pos=(176, 201), parts=[
          WordNode(pos=(176, 180), word='dpkg'),
          WordNode(pos=(181, 201), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(202, 203)),
        CommandNode(pos=(204, 227), parts=[
          WordNode(pos=(204, 207), word='awk'),
          WordNode(pos=(208, 211), word='-F-'),
          WordNode(pos=(212, 227), word='{ print $NF }'),
        ]),
      ]), pos=(174, 228)),
  ]),
])


113) export GOSU_VERSION='1.11'

CommandNode(pos=(233, 259), parts=[
  WordNode(pos=(233, 239), word='export'),
  WordNode(pos=(240, 259), word='GOSU_VERSION=1.11'),
])


114) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(262, 369), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 289), word='/usr/local/bin/gosu'),
  WordNode(pos=(290, 369), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(340, 353), value='GOSU_VERSION'),
    ParameterNode(pos=(359, 368), value='dpkgArch'),
  ]),
])


115) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(372, 487), parts=[
  WordNode(pos=(372, 376), word='wget'),
  WordNode(pos=(377, 379), word='-O'),
  WordNode(pos=(380, 403), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(404, 487), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(454, 467), value='GOSU_VERSION'),
    ParameterNode(pos=(473, 482), value='dpkgArch'),
  ]),
])


116) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(490, 521), parts=[
  WordNode(pos=(490, 496), word='export'),
  WordNode(pos=(497, 521), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(510, 519), parts=[
        WordNode(pos=(510, 516), word='mktemp'),
        WordNode(pos=(517, 519), word='-d'),
      ]), pos=(508, 520)),
  ]),
])


117) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(524, 627), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 547), word='--keyserver'),
  WordNode(pos=(548, 574), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(575, 586), word='--recv-keys'),
  WordNode(pos=(587, 627), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


118) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(630, 694), parts=[
  WordNode(pos=(630, 633), word='gpg'),
  WordNode(pos=(634, 641), word='--batch'),
  WordNode(pos=(642, 650), word='--verify'),
  WordNode(pos=(651, 674), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(675, 694), word='/usr/local/bin/gosu'),
])


119) gpgconf --kill all

CommandNode(pos=(697, 715), parts=[
  WordNode(pos=(697, 704), word='gpgconf'),
  WordNode(pos=(705, 711), word='--kill'),
  WordNode(pos=(712, 715), word='all'),
])


120) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(718, 760), parts=[
  WordNode(pos=(718, 720), word='rm'),
  WordNode(pos=(721, 723), word='-r'),
  WordNode(pos=(724, 736), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(725, 735), value='GNUPGHOME'),
  ]),
  WordNode(pos=(737, 760), word='/usr/local/bin/gosu.asc'),
])


121) chmod +x /usr/local/bin/gosu

CommandNode(pos=(763, 791), parts=[
  WordNode(pos=(763, 768), word='chmod'),
  WordNode(pos=(769, 771), word='+x'),
  WordNode(pos=(772, 791), word='/usr/local/bin/gosu'),
])


122) gosu nobody true

CommandNode(pos=(794, 810), parts=[
  WordNode(pos=(794, 798), word='gosu'),
  WordNode(pos=(799, 805), word='nobody'),
  WordNode(pos=(806, 810), word='true'),
])


123) export TINI_VERSION='0.18.0'

CommandNode(pos=(814, 842), parts=[
  WordNode(pos=(814, 820), word='export'),
  WordNode(pos=(821, 842), word='TINI_VERSION=0.18.0'),
])


124) wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"

CommandNode(pos=(845, 954), parts=[
  WordNode(pos=(845, 849), word='wget'),
  WordNode(pos=(850, 852), word='-O'),
  WordNode(pos=(853, 872), word='/usr/local/bin/tini'),
  WordNode(pos=(873, 954), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch', parts=[
    ParameterNode(pos=(925, 938), value='TINI_VERSION'),
    ParameterNode(pos=(944, 953), value='dpkgArch'),
  ]),
])


125) wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"

CommandNode(pos=(957, 1074), parts=[
  WordNode(pos=(957, 961), word='wget'),
  WordNode(pos=(962, 964), word='-O'),
  WordNode(pos=(965, 988), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(989, 1074), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc', parts=[
    ParameterNode(pos=(1041, 1054), value='TINI_VERSION'),
    ParameterNode(pos=(1060, 1069), value='dpkgArch'),
  ]),
])


126) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(1077, 1108), parts=[
  WordNode(pos=(1077, 1083), word='export'),
  WordNode(pos=(1084, 1108), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1097, 1106), parts=[
        WordNode(pos=(1097, 1103), word='mktemp'),
        WordNode(pos=(1104, 1106), word='-d'),
      ]), pos=(1095, 1107)),
  ]),
])


127) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5

CommandNode(pos=(1111, 1214), parts=[
  WordNode(pos=(1111, 1114), word='gpg'),
  WordNode(pos=(1115, 1122), word='--batch'),
  WordNode(pos=(1123, 1134), word='--keyserver'),
  WordNode(pos=(1135, 1161), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(1162, 1173), word='--recv-keys'),
  WordNode(pos=(1174, 1214), word='6380DC428747F6C393FEACA59A84159D7001A4E5'),
])


128) gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini

CommandNode(pos=(1217, 1281), parts=[
  WordNode(pos=(1217, 1220), word='gpg'),
  WordNode(pos=(1221, 1228), word='--batch'),
  WordNode(pos=(1229, 1237), word='--verify'),
  WordNode(pos=(1238, 1261), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(1262, 1281), word='/usr/local/bin/tini'),
])


129) gpgconf --kill all

CommandNode(pos=(1284, 1302), parts=[
  WordNode(pos=(1284, 1291), word='gpgconf'),
  WordNode(pos=(1292, 1298), word='--kill'),
  WordNode(pos=(1299, 1302), word='all'),
])


130) rm -r "$GNUPGHOME" /usr/local/bin/tini.asc

CommandNode(pos=(1305, 1347), parts=[
  WordNode(pos=(1305, 1307), word='rm'),
  WordNode(pos=(1308, 1310), word='-r'),
  WordNode(pos=(1311, 1323), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1312, 1322), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1324, 1347), word='/usr/local/bin/tini.asc'),
])


131) chmod +x /usr/local/bin/tini

CommandNode(pos=(1350, 1378), parts=[
  WordNode(pos=(1350, 1355), word='chmod'),
  WordNode(pos=(1356, 1358), word='+x'),
  WordNode(pos=(1359, 1378), word='/usr/local/bin/tini'),
])


132) tini -h

CommandNode(pos=(1381, 1388), parts=[
  WordNode(pos=(1381, 1385), word='tini'),
  WordNode(pos=(1386, 1388), word='-h'),
])


133) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1392, 1422), parts=[
  WordNode(pos=(1392, 1400), word='apt-mark'),
  WordNode(pos=(1401, 1405), word='auto'),
  WordNode(pos=(1406, 1410), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1413, 1422), word='/dev/null'), pos=(1411, 1422), type='>'),
])


134) [ -z "$savedAptMark" ]

CommandNode(pos=(1425, 1447), parts=[
  WordNode(pos=(1425, 1426), word='['),
  WordNode(pos=(1427, 1429), word='-z'),
  WordNode(pos=(1430, 1445), word='$savedAptMark', parts=[
    ParameterNode(pos=(1431, 1444), value='savedAptMark'),
  ]),
  WordNode(pos=(1446, 1447), word=']'),
])


135) apt-mark manual $savedAptMark

CommandNode(pos=(1451, 1480), parts=[
  WordNode(pos=(1451, 1459), word='apt-mark'),
  WordNode(pos=(1460, 1466), word='manual'),
  WordNode(pos=(1467, 1480), word='$savedAptMark', parts=[
    ParameterNode(pos=(1467, 1480), value='savedAptMark'),
  ]),
])


136) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1483, 1559), parts=[
  WordNode(pos=(1483, 1490), word='apt-get'),
  WordNode(pos=(1491, 1496), word='purge'),
  WordNode(pos=(1497, 1499), word='-y'),
  WordNode(pos=(1500, 1513), word='--auto-remove'),
  WordNode(pos=(1514, 1516), word='-o'),
  WordNode(pos=(1517, 1559), word='APT::AutoRemove::RecommendsImportant=false'),
])


137) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


138) [ ! -d "$HOME" ]

CommandNode(pos=(11, 27), parts=[
  WordNode(pos=(11, 12), word='['),
  WordNode(pos=(13, 14), word='!'),
  WordNode(pos=(15, 17), word='-d'),
  WordNode(pos=(18, 25), word='$HOME', parts=[
    ParameterNode(pos=(19, 24), value='HOME'),
  ]),
  WordNode(pos=(26, 27), word=']'),
])


139) mkdir -p "$HOME"

CommandNode(pos=(30, 46), parts=[
  WordNode(pos=(30, 35), word='mkdir'),
  WordNode(pos=(36, 38), word='-p'),
  WordNode(pos=(39, 46), word='$HOME', parts=[
    ParameterNode(pos=(40, 45), value='HOME'),
  ]),
])


140) chown redmine:redmine "$HOME"

CommandNode(pos=(49, 78), parts=[
  WordNode(pos=(49, 54), word='chown'),
  WordNode(pos=(55, 70), word='redmine:redmine'),
  WordNode(pos=(71, 78), word='$HOME', parts=[
    ParameterNode(pos=(72, 77), value='HOME'),
  ]),
])


141) chmod 1777 "$HOME"

CommandNode(pos=(81, 99), parts=[
  WordNode(pos=(81, 86), word='chmod'),
  WordNode(pos=(87, 91), word='1777'),
  WordNode(pos=(92, 99), word='$HOME', parts=[
    ParameterNode(pos=(93, 98), value='HOME'),
  ]),
])


142) wget -O redmine.tar.gz "https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz"

CommandNode(pos=(0, 91), parts=[
  WordNode(pos=(0, 4), word='wget'),
  WordNode(pos=(5, 7), word='-O'),
  WordNode(pos=(8, 22), word='redmine.tar.gz'),
  WordNode(pos=(23, 91), word='https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(65, 83), value='REDMINE_VERSION'),
  ]),
])


143) echo "$REDMINE_DOWNLOAD_MD5 redmine.tar.gz"

CommandNode(pos=(96, 139), parts=[
  WordNode(pos=(96, 100), word='echo'),
  WordNode(pos=(101, 139), word='$REDMINE_DOWNLOAD_MD5 redmine.tar.gz', parts=[
    ParameterNode(pos=(102, 123), value='REDMINE_DOWNLOAD_MD5'),
  ]),
])


144) md5sum -c -

CommandNode(pos=(142, 153), parts=[
  WordNode(pos=(142, 148), word='md5sum'),
  WordNode(pos=(149, 151), word='-c'),
  WordNode(pos=(152, 153), word='-'),
])


145) tar -xvf redmine.tar.gz --strip-components=1

CommandNode(pos=(158, 202), parts=[
  WordNode(pos=(158, 161), word='tar'),
  WordNode(pos=(162, 166), word='-xvf'),
  WordNode(pos=(167, 181), word='redmine.tar.gz'),
  WordNode(pos=(182, 202), word='--strip-components=1'),
])


146) rm redmine.tar.gz files/delete.me log/delete.me

CommandNode(pos=(207, 254), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 224), word='redmine.tar.gz'),
  WordNode(pos=(225, 240), word='files/delete.me'),
  WordNode(pos=(241, 254), word='log/delete.me'),
])


147) mkdir -p log public/plugin_assets sqlite tmp/pdf tmp/pids

CommandNode(pos=(259, 316), parts=[
  WordNode(pos=(259, 264), word='mkdir'),
  WordNode(pos=(265, 267), word='-p'),
  WordNode(pos=(268, 271), word='log'),
  WordNode(pos=(272, 292), word='public/plugin_assets'),
  WordNode(pos=(293, 299), word='sqlite'),
  WordNode(pos=(300, 307), word='tmp/pdf'),
  WordNode(pos=(308, 316), word='tmp/pids'),
])


148) chown -R redmine:redmine ./

CommandNode(pos=(321, 348), parts=[
  WordNode(pos=(321, 326), word='chown'),
  WordNode(pos=(327, 329), word='-R'),
  WordNode(pos=(330, 345), word='redmine:redmine'),
  WordNode(pos=(346, 348), word='./'),
])


149) echo 'config.logger = Logger.new(STDOUT)' > config/additional_environment.rb

CommandNode(pos=(353, 429), parts=[
  WordNode(pos=(353, 357), word='echo'),
  WordNode(pos=(358, 394), word='config.logger = Logger.new(STDOUT)'),
  RedirectNode(output=
    WordNode(pos=(397, 429), word='config/additional_environment.rb'), pos=(395, 429), type='>'),
])


150) chmod -R ugo=rwX config db sqlite

CommandNode(pos=(434, 467), parts=[
  WordNode(pos=(434, 439), word='chmod'),
  WordNode(pos=(440, 442), word='-R'),
  WordNode(pos=(443, 450), word='ugo=rwX'),
  WordNode(pos=(451, 457), word='config'),
  WordNode(pos=(458, 460), word='db'),
  WordNode(pos=(461, 467), word='sqlite'),
])


151) find log tmp -type d -exec chmod 1777 '{}' +

CommandNode(pos=(472, 516), parts=[
  WordNode(pos=(472, 476), word='find'),
  WordNode(pos=(477, 480), word='log'),
  WordNode(pos=(481, 484), word='tmp'),
  WordNode(pos=(485, 490), word='-type'),
  WordNode(pos=(491, 492), word='d'),
  WordNode(pos=(493, 498), word='-exec'),
  WordNode(pos=(499, 504), word='chmod'),
  WordNode(pos=(505, 509), word='1777'),
  WordNode(pos=(510, 514), word='{}'),
  WordNode(pos=(515, 516), word='+'),
])


152) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


153) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


154) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


155) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libmagickcore-dev   libmagickwand-dev   libmariadbclient-dev   libpq-dev   libsqlite3-dev   make   patch     libssl1.0-dev

CommandNode(pos=(69, 253), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 122), word='dpkg-dev'),
  WordNode(pos=(125, 128), word='gcc'),
  WordNode(pos=(131, 148), word='libmagickcore-dev'),
  WordNode(pos=(151, 168), word='libmagickwand-dev'),
  WordNode(pos=(171, 191), word='libmariadbclient-dev'),
  WordNode(pos=(194, 203), word='libpq-dev'),
  WordNode(pos=(206, 220), word='libsqlite3-dev'),
  WordNode(pos=(223, 227), word='make'),
  WordNode(pos=(230, 235), word='patch'),
  WordNode(pos=(240, 253), word='libssl1.0-dev'),
])


156) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(258, 285), parts=[
  WordNode(pos=(258, 260), word='rm'),
  WordNode(pos=(261, 264), word='-rf'),
  WordNode(pos=(265, 285), word='/var/lib/apt/lists/*'),
])


157) wget -O freetds.tar.bz2 'http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'

CommandNode(pos=(289, 374), parts=[
  WordNode(pos=(289, 293), word='wget'),
  WordNode(pos=(294, 296), word='-O'),
  WordNode(pos=(297, 312), word='freetds.tar.bz2'),
  WordNode(pos=(313, 374), word='http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'),
])


158) echo '8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2'

CommandNode(pos=(377, 433), parts=[
  WordNode(pos=(377, 381), word='echo'),
  WordNode(pos=(382, 433), word='8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2'),
])


159) md5sum -c -

CommandNode(pos=(436, 447), parts=[
  WordNode(pos=(436, 442), word='md5sum'),
  WordNode(pos=(443, 445), word='-c'),
  WordNode(pos=(446, 447), word='-'),
])


160) mkdir freetds

CommandNode(pos=(450, 463), parts=[
  WordNode(pos=(450, 455), word='mkdir'),
  WordNode(pos=(456, 463), word='freetds'),
])


161) tar -xf freetds.tar.bz2 -C freetds --strip-components=1

CommandNode(pos=(466, 521), parts=[
  WordNode(pos=(466, 469), word='tar'),
  WordNode(pos=(470, 473), word='-xf'),
  WordNode(pos=(474, 489), word='freetds.tar.bz2'),
  WordNode(pos=(490, 492), word='-C'),
  WordNode(pos=(493, 500), word='freetds'),
  WordNode(pos=(501, 521), word='--strip-components=1'),
])


162) rm freetds.tar.bz2

CommandNode(pos=(524, 542), parts=[
  WordNode(pos=(524, 526), word='rm'),
  WordNode(pos=(527, 542), word='freetds.tar.bz2'),
])


163) cd freetds

CommandNode(pos=(547, 557), parts=[
  WordNode(pos=(547, 549), word='cd'),
  WordNode(pos=(550, 557), word='freetds'),
])


164) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(561, 618), parts=[
  AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(572, 616), parts=[
        WordNode(pos=(572, 589), word='dpkg-architecture'),
        WordNode(pos=(590, 597), word='--query'),
        WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(570, 617)),
  ]),
])


165) ./configure --build="$gnuArch" --enable-silent-rules

CommandNode(pos=(622, 674), parts=[
  WordNode(pos=(622, 633), word='./configure'),
  WordNode(pos=(634, 652), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(643, 651), value='gnuArch'),
  ]),
  WordNode(pos=(653, 674), word='--enable-silent-rules'),
])


166) make -j "$(nproc)"

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-j'),
  WordNode(pos=(686, 696), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 694), parts=[
        WordNode(pos=(689, 694), word='nproc'),
      ]), pos=(687, 695)),
  ]),
])


167) make -C src install

CommandNode(pos=(700, 719), parts=[
  WordNode(pos=(700, 704), word='make'),
  WordNode(pos=(705, 707), word='-C'),
  WordNode(pos=(708, 711), word='src'),
  WordNode(pos=(712, 719), word='install'),
])


168) make -C include install

CommandNode(pos=(723, 746), parts=[
  WordNode(pos=(723, 727), word='make'),
  WordNode(pos=(728, 730), word='-C'),
  WordNode(pos=(731, 738), word='include'),
  WordNode(pos=(739, 746), word='install'),
])


169) rm -rf freetds

CommandNode(pos=(751, 765), parts=[
  WordNode(pos=(751, 753), word='rm'),
  WordNode(pos=(754, 757), word='-rf'),
  WordNode(pos=(758, 765), word='freetds'),
])


170) gosu redmine bundle config build.tiny_tds --enable-system-freetds

CommandNode(pos=(768, 833), parts=[
  WordNode(pos=(768, 772), word='gosu'),
  WordNode(pos=(773, 780), word='redmine'),
  WordNode(pos=(781, 787), word='bundle'),
  WordNode(pos=(788, 794), word='config'),
  WordNode(pos=(795, 809), word='build.tiny_tds'),
  WordNode(pos=(810, 833), word='--enable-system-freetds'),
])


171) gosu redmine bundle install --without development test

CommandNode(pos=(837, 891), parts=[
  WordNode(pos=(837, 841), word='gosu'),
  WordNode(pos=(842, 849), word='redmine'),
  WordNode(pos=(850, 856), word='bundle'),
  WordNode(pos=(857, 864), word='install'),
  WordNode(pos=(865, 874), word='--without'),
  WordNode(pos=(875, 886), word='development'),
  WordNode(pos=(887, 891), word='test'),
])


172) echo "$RAILS_ENV:" > ./config/database.yml

CommandNode(pos=(951, 993), parts=[
  WordNode(pos=(951, 955), word='echo'),
  WordNode(pos=(956, 969), word='$RAILS_ENV:', parts=[
    ParameterNode(pos=(957, 967), value='RAILS_ENV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(972, 993), word='./config/database.yml'), pos=(970, 993), type='>'),
])


173) echo "  adapter: $adapter" >> ./config/database.yml

CommandNode(pos=(997, 1048), parts=[
  WordNode(pos=(997, 1001), word='echo'),
  WordNode(pos=(1002, 1023), word='  adapter: $adapter', parts=[
    ParameterNode(pos=(1014, 1022), value='adapter'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1027, 1048), word='./config/database.yml'), pos=(1024, 1048), type='>>'),
])


174) gosu redmine bundle install --without development test

CommandNode(pos=(1052, 1106), parts=[
  WordNode(pos=(1052, 1056), word='gosu'),
  WordNode(pos=(1057, 1064), word='redmine'),
  WordNode(pos=(1065, 1071), word='bundle'),
  WordNode(pos=(1072, 1079), word='install'),
  WordNode(pos=(1080, 1089), word='--without'),
  WordNode(pos=(1090, 1101), word='development'),
  WordNode(pos=(1102, 1106), word='test'),
])


175) cp Gemfile.lock "Gemfile.lock.${adapter}"

CommandNode(pos=(1110, 1151), parts=[
  WordNode(pos=(1110, 1112), word='cp'),
  WordNode(pos=(1113, 1125), word='Gemfile.lock'),
  WordNode(pos=(1126, 1151), word='Gemfile.lock.${adapter}', parts=[
    ParameterNode(pos=(1140, 1150), value='adapter'),
  ]),
])


176) rm ./config/database.yml

CommandNode(pos=(1161, 1185), parts=[
  WordNode(pos=(1161, 1163), word='rm'),
  WordNode(pos=(1164, 1185), word='./config/database.yml'),
])


177) chmod -R ugo=rwX Gemfile.lock "$GEM_HOME"

CommandNode(pos=(1188, 1229), parts=[
  WordNode(pos=(1188, 1193), word='chmod'),
  WordNode(pos=(1194, 1196), word='-R'),
  WordNode(pos=(1197, 1204), word='ugo=rwX'),
  WordNode(pos=(1205, 1217), word='Gemfile.lock'),
  WordNode(pos=(1218, 1229), word='$GEM_HOME', parts=[
    ParameterNode(pos=(1219, 1228), value='GEM_HOME'),
  ]),
])


178) rm -rf ~redmine/.bundle

CommandNode(pos=(1232, 1255), parts=[
  WordNode(pos=(1232, 1234), word='rm'),
  WordNode(pos=(1235, 1238), word='-rf'),
  WordNode(pos=(1239, 1255), word='~redmine/.bundle', parts=[
    TildeNode(pos=(1239, 1247), value='~redmine'),
  ]),
])


179) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1259, 1289), parts=[
  WordNode(pos=(1259, 1267), word='apt-mark'),
  WordNode(pos=(1268, 1272), word='auto'),
  WordNode(pos=(1273, 1277), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1280, 1289), word='/dev/null'), pos=(1278, 1289), type='>'),
])


180) [ -z "$savedAptMark" ]

CommandNode(pos=(1292, 1314), parts=[
  WordNode(pos=(1292, 1293), word='['),
  WordNode(pos=(1294, 1296), word='-z'),
  WordNode(pos=(1297, 1312), word='$savedAptMark', parts=[
    ParameterNode(pos=(1298, 1311), value='savedAptMark'),
  ]),
  WordNode(pos=(1313, 1314), word=']'),
])


181) apt-mark manual $savedAptMark

CommandNode(pos=(1318, 1347), parts=[
  WordNode(pos=(1318, 1326), word='apt-mark'),
  WordNode(pos=(1327, 1333), word='manual'),
  WordNode(pos=(1334, 1347), word='$savedAptMark', parts=[
    ParameterNode(pos=(1334, 1347), value='savedAptMark'),
  ]),
])


182) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1350, 1404), parts=[
  WordNode(pos=(1350, 1354), word='find'),
  WordNode(pos=(1355, 1365), word='/usr/local'),
  WordNode(pos=(1366, 1371), word='-type'),
  WordNode(pos=(1372, 1373), word='f'),
  WordNode(pos=(1374, 1385), word='-executable'),
  WordNode(pos=(1386, 1391), word='-exec'),
  WordNode(pos=(1392, 1395), word='ldd'),
  WordNode(pos=(1396, 1400), word='{}'),
  WordNode(pos=(1401, 1404), word=';'),
])


183) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1409, 1437), parts=[
  WordNode(pos=(1409, 1412), word='awk'),
  WordNode(pos=(1413, 1437), word='/=>/ { print $(NF-1) }'),
])


184) sort -u

CommandNode(pos=(1442, 1449), parts=[
  WordNode(pos=(1442, 1446), word='sort'),
  WordNode(pos=(1447, 1449), word='-u'),
])


185) grep -v '^/usr/local/'

CommandNode(pos=(1454, 1476), parts=[
  WordNode(pos=(1454, 1458), word='grep'),
  WordNode(pos=(1459, 1461), word='-v'),
  WordNode(pos=(1462, 1476), word='^/usr/local/'),
])


186) xargs -r dpkg-query --search

CommandNode(pos=(1481, 1509), parts=[
  WordNode(pos=(1481, 1486), word='xargs'),
  WordNode(pos=(1487, 1489), word='-r'),
  WordNode(pos=(1490, 1500), word='dpkg-query'),
  WordNode(pos=(1501, 1509), word='--search'),
])


187) cut -d: -f1

CommandNode(pos=(1514, 1525), parts=[
  WordNode(pos=(1514, 1517), word='cut'),
  WordNode(pos=(1518, 1521), word='-d:'),
  WordNode(pos=(1522, 1525), word='-f1'),
])


188) sort -u

CommandNode(pos=(1530, 1537), parts=[
  WordNode(pos=(1530, 1534), word='sort'),
  WordNode(pos=(1535, 1537), word='-u'),
])


189) xargs -r apt-mark manual

CommandNode(pos=(1542, 1566), parts=[
  WordNode(pos=(1542, 1547), word='xargs'),
  WordNode(pos=(1548, 1550), word='-r'),
  WordNode(pos=(1551, 1559), word='apt-mark'),
  WordNode(pos=(1560, 1566), word='manual'),
])


190) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1571, 1647), parts=[
  WordNode(pos=(1571, 1578), word='apt-get'),
  WordNode(pos=(1579, 1584), word='purge'),
  WordNode(pos=(1585, 1587), word='-y'),
  WordNode(pos=(1588, 1601), word='--auto-remove'),
  WordNode(pos=(1602, 1604), word='-o'),
  WordNode(pos=(1605, 1647), word='APT::AutoRemove::RecommendsImportant=false'),
])


191) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


192) apt-get install -y --no-install-recommends   bzip2   gnupg dirmngr   libcurl4-openssl-dev   libfreetype6-dev   libicu-dev   libjpeg-dev   libldap2-dev   libmemcached-dev   libpng-dev   libpq-dev   libxml2-dev   unzip

CommandNode(pos=(18, 234), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 68), word='bzip2'),
  WordNode(pos=(71, 76), word='gnupg'),
  WordNode(pos=(77, 84), word='dirmngr'),
  WordNode(pos=(87, 107), word='libcurl4-openssl-dev'),
  WordNode(pos=(110, 126), word='libfreetype6-dev'),
  WordNode(pos=(129, 139), word='libicu-dev'),
  WordNode(pos=(142, 153), word='libjpeg-dev'),
  WordNode(pos=(156, 168), word='libldap2-dev'),
  WordNode(pos=(171, 187), word='libmemcached-dev'),
  WordNode(pos=(190, 200), word='libpng-dev'),
  WordNode(pos=(203, 212), word='libpq-dev'),
  WordNode(pos=(215, 226), word='libxml2-dev'),
  WordNode(pos=(229, 234), word='unzip'),
])


193) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(239, 266), parts=[
  WordNode(pos=(239, 241), word='rm'),
  WordNode(pos=(242, 245), word='-rf'),
  WordNode(pos=(246, 266), word='/var/lib/apt/lists/*'),
])


194) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


195) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(10, 78), parts=[
  WordNode(pos=(10, 34), word='docker-php-ext-configure'),
  WordNode(pos=(35, 37), word='gd'),
  WordNode(pos=(38, 57), word='--with-png-dir=/usr'),
  WordNode(pos=(58, 78), word='--with-jpeg-dir=/usr'),
])


196) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


197) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


198) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 331), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 285), word='opcache'),
  WordNode(pos=(288, 293), word='pcntl'),
  WordNode(pos=(296, 305), word='pdo_mysql'),
  WordNode(pos=(308, 317), word='pdo_pgsql'),
  WordNode(pos=(320, 325), word='pgsql'),
  WordNode(pos=(328, 331), word='zip'),
])


199) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


200) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


201) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


202) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


203) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


204) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


205) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


206) pecl install APCu-5.1.11

CommandNode(pos=(10, 34), parts=[
  WordNode(pos=(10, 14), word='pecl'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 34), word='APCu-5.1.11'),
])


207) pecl install memcached-3.0.4

CommandNode(pos=(37, 65), parts=[
  WordNode(pos=(37, 41), word='pecl'),
  WordNode(pos=(42, 49), word='install'),
  WordNode(pos=(50, 65), word='memcached-3.0.4'),
])


208) pecl install redis-3.1.6

CommandNode(pos=(68, 92), parts=[
  WordNode(pos=(68, 72), word='pecl'),
  WordNode(pos=(73, 80), word='install'),
  WordNode(pos=(81, 92), word='redis-3.1.6'),
])


209) docker-php-ext-enable   apcu   memcached   redis

CommandNode(pos=(95, 143), parts=[
  WordNode(pos=(95, 116), word='docker-php-ext-enable'),
  WordNode(pos=(119, 123), word='apcu'),
  WordNode(pos=(126, 135), word='memcached'),
  WordNode(pos=(138, 143), word='redis'),
])


210) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


211) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


212) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


213) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


214) sha256sum -c -

CommandNode(pos=(283, 297), parts=[
  WordNode(pos=(283, 292), word='sha256sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


215) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


216) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys E3036906AD9F30807351FAC32D5D5E97F6978A26

CommandNode(pos=(334, 437), parts=[
  WordNode(pos=(334, 337), word='gpg'),
  WordNode(pos=(338, 345), word='--batch'),
  WordNode(pos=(346, 357), word='--keyserver'),
  WordNode(pos=(358, 384), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(385, 396), word='--recv-keys'),
  WordNode(pos=(397, 437), word='E3036906AD9F30807351FAC32D5D5E97F6978A26'),
])


217) gpg --batch --verify owncloud.tar.bz2.asc owncloud.tar.bz2

CommandNode(pos=(440, 498), parts=[
  WordNode(pos=(440, 443), word='gpg'),
  WordNode(pos=(444, 451), word='--batch'),
  WordNode(pos=(452, 460), word='--verify'),
  WordNode(pos=(461, 481), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(482, 498), word='owncloud.tar.bz2'),
])


218) command -v gpgconf

CommandNode(pos=(501, 519), parts=[
  WordNode(pos=(501, 508), word='command'),
  WordNode(pos=(509, 511), word='-v'),
  WordNode(pos=(512, 519), word='gpgconf'),
])


219) gpgconf --kill all

CommandNode(pos=(523, 541), parts=[
  WordNode(pos=(523, 530), word='gpgconf'),
  WordNode(pos=(531, 537), word='--kill'),
  WordNode(pos=(538, 541), word='all'),
])


220) :

CommandNode(pos=(545, 546), parts=[
  WordNode(pos=(545, 546), word=':'),
])


221) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


222) tar -xjf owncloud.tar.bz2 -C /usr/src/

CommandNode(pos=(591, 629), parts=[
  WordNode(pos=(591, 594), word='tar'),
  WordNode(pos=(595, 599), word='-xjf'),
  WordNode(pos=(600, 616), word='owncloud.tar.bz2'),
  WordNode(pos=(617, 619), word='-C'),
  WordNode(pos=(620, 629), word='/usr/src/'),
])


223) rm owncloud.tar.bz2

CommandNode(pos=(632, 651), parts=[
  WordNode(pos=(632, 634), word='rm'),
  WordNode(pos=(635, 651), word='owncloud.tar.bz2'),
])


224) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


225) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


226) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


227) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


228) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


229) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


230) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


231) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


232) bundle config --global frozen 1

CommandNode(pos=(0, 31), parts=[
  WordNode(pos=(0, 6), word='bundle'),
  WordNode(pos=(7, 13), word='config'),
  WordNode(pos=(14, 22), word='--global'),
  WordNode(pos=(23, 29), word='frozen'),
  WordNode(pos=(30, 31), word='1'),
])


233) mkdir -p /usr/src/app

CommandNode(pos=(0, 21), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 21), word='/usr/src/app'),
])


234) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


235) apt-get install -y nodejs --no-install-recommends

CommandNode(pos=(18, 67), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 43), word='nodejs'),
  WordNode(pos=(44, 67), word='--no-install-recommends'),
])


236) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(71, 98), parts=[
  WordNode(pos=(71, 73), word='rm'),
  WordNode(pos=(74, 77), word='-rf'),
  WordNode(pos=(78, 98), word='/var/lib/apt/lists/*'),
])


237) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


238) apt-get install -y mysql-client postgresql-client sqlite3 --no-install-recommends

CommandNode(pos=(18, 99), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 49), word='mysql-client'),
  WordNode(pos=(50, 67), word='postgresql-client'),
  WordNode(pos=(68, 75), word='sqlite3'),
  WordNode(pos=(76, 99), word='--no-install-recommends'),
])


239) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(103, 130), parts=[
  WordNode(pos=(103, 105), word='rm'),
  WordNode(pos=(106, 109), word='-rf'),
  WordNode(pos=(110, 130), word='/var/lib/apt/lists/*'),
])


240) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


241) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


242) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


243) apt-get install -y --no-install-recommends   libjpeg-dev   libmagickwand-dev   libpng-dev

CommandNode(pos=(69, 158), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 125), word='libjpeg-dev'),
  WordNode(pos=(128, 145), word='libmagickwand-dev'),
  WordNode(pos=(148, 158), word='libpng-dev'),
])


244) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(164, 232), parts=[
  WordNode(pos=(164, 188), word='docker-php-ext-configure'),
  WordNode(pos=(189, 191), word='gd'),
  WordNode(pos=(192, 211), word='--with-png-dir=/usr'),
  WordNode(pos=(212, 232), word='--with-jpeg-dir=/usr'),
])


245) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(235, 303), parts=[
  WordNode(pos=(235, 257), word='docker-php-ext-install'),
  WordNode(pos=(260, 266), word='bcmath'),
  WordNode(pos=(269, 273), word='exif'),
  WordNode(pos=(276, 278), word='gd'),
  WordNode(pos=(281, 287), word='mysqli'),
  WordNode(pos=(290, 297), word='opcache'),
  WordNode(pos=(300, 303), word='zip'),
])


246) pecl install imagick-3.4.4

CommandNode(pos=(308, 334), parts=[
  WordNode(pos=(308, 312), word='pecl'),
  WordNode(pos=(313, 320), word='install'),
  WordNode(pos=(321, 334), word='imagick-3.4.4'),
])


247) docker-php-ext-enable imagick

CommandNode(pos=(337, 366), parts=[
  WordNode(pos=(337, 358), word='docker-php-ext-enable'),
  WordNode(pos=(359, 366), word='imagick'),
])


248) apt-mark auto '.*' > /dev/null

CommandNode(pos=(370, 400), parts=[
  WordNode(pos=(370, 378), word='apt-mark'),
  WordNode(pos=(379, 383), word='auto'),
  WordNode(pos=(384, 388), word='.*'),
  RedirectNode(output=
    WordNode(pos=(391, 400), word='/dev/null'), pos=(389, 400), type='>'),
])


249) apt-mark manual $savedAptMark

CommandNode(pos=(403, 432), parts=[
  WordNode(pos=(403, 411), word='apt-mark'),
  WordNode(pos=(412, 418), word='manual'),
  WordNode(pos=(419, 432), word='$savedAptMark', parts=[
    ParameterNode(pos=(419, 432), value='savedAptMark'),
  ]),
])


250) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(435, 488), parts=[
  WordNode(pos=(435, 438), word='ldd'),
  WordNode(pos=(439, 488), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(442, 481), parts=[
        WordNode(pos=(442, 445), word='php'),
        WordNode(pos=(446, 448), word='-r'),
        WordNode(pos=(449, 481), word='echo ini_get("extension_dir");'),
      ]), pos=(440, 482)),
  ]),
])


251) awk '/=>/ { print $3 }'

CommandNode(pos=(493, 516), parts=[
  WordNode(pos=(493, 496), word='awk'),
  WordNode(pos=(497, 516), word='/=>/ { print $3 }'),
])


252) sort -u

CommandNode(pos=(521, 528), parts=[
  WordNode(pos=(521, 525), word='sort'),
  WordNode(pos=(526, 528), word='-u'),
])


253) xargs -r dpkg-query -S

CommandNode(pos=(533, 555), parts=[
  WordNode(pos=(533, 538), word='xargs'),
  WordNode(pos=(539, 541), word='-r'),
  WordNode(pos=(542, 552), word='dpkg-query'),
  WordNode(pos=(553, 555), word='-S'),
])


254) cut -d: -f1

CommandNode(pos=(560, 571), parts=[
  WordNode(pos=(560, 563), word='cut'),
  WordNode(pos=(564, 567), word='-d:'),
  WordNode(pos=(568, 571), word='-f1'),
])


255) sort -u

CommandNode(pos=(576, 583), parts=[
  WordNode(pos=(576, 580), word='sort'),
  WordNode(pos=(581, 583), word='-u'),
])


256) xargs -rt apt-mark manual

CommandNode(pos=(588, 613), parts=[
  WordNode(pos=(588, 593), word='xargs'),
  WordNode(pos=(594, 597), word='-rt'),
  WordNode(pos=(598, 606), word='apt-mark'),
  WordNode(pos=(607, 613), word='manual'),
])


257) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(617, 693), parts=[
  WordNode(pos=(617, 624), word='apt-get'),
  WordNode(pos=(625, 630), word='purge'),
  WordNode(pos=(631, 633), word='-y'),
  WordNode(pos=(634, 647), word='--auto-remove'),
  WordNode(pos=(648, 650), word='-o'),
  WordNode(pos=(651, 693), word='APT::AutoRemove::RecommendsImportant=false'),
])


258) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(696, 723), parts=[
  WordNode(pos=(696, 698), word='rm'),
  WordNode(pos=(699, 702), word='-rf'),
  WordNode(pos=(703, 723), word='/var/lib/apt/lists/*'),
])


259) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


260) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


261) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


262) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


263) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


264) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


265) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


266) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


267) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


268) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


269) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


270) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


271) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


272) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


273) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


274) a2enmod rewrite expires

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 7), word='a2enmod'),
  WordNode(pos=(8, 15), word='rewrite'),
  WordNode(pos=(16, 23), word='expires'),
])


275) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


276) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


277) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


278) sha1sum -c -

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 154), word='sha1sum'),
  WordNode(pos=(155, 157), word='-c'),
  WordNode(pos=(158, 159), word='-'),
])


279) tar -xzf wordpress.tar.gz -C /usr/src/

CommandNode(pos=(162, 200), parts=[
  WordNode(pos=(162, 165), word='tar'),
  WordNode(pos=(166, 170), word='-xzf'),
  WordNode(pos=(171, 187), word='wordpress.tar.gz'),
  WordNode(pos=(188, 190), word='-C'),
  WordNode(pos=(191, 200), word='/usr/src/'),
])


280) rm wordpress.tar.gz

CommandNode(pos=(203, 222), parts=[
  WordNode(pos=(203, 205), word='rm'),
  WordNode(pos=(206, 222), word='wordpress.tar.gz'),
])


281) chown -R www-data:www-data /usr/src/wordpress

CommandNode(pos=(225, 270), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 233), word='-R'),
  WordNode(pos=(234, 251), word='www-data:www-data'),
  WordNode(pos=(252, 270), word='/usr/src/wordpress'),
])


282) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


283) apt-get install -y --no-install-recommends   bzip2   gnupg dirmngr   libcurl4-openssl-dev   libfreetype6-dev   libicu-dev   libjpeg-dev   libldap2-dev   libmcrypt-dev   libmemcached-dev   libpng-dev   libpq-dev   libxml2-dev   unzip

CommandNode(pos=(18, 250), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 68), word='bzip2'),
  WordNode(pos=(71, 76), word='gnupg'),
  WordNode(pos=(77, 84), word='dirmngr'),
  WordNode(pos=(87, 107), word='libcurl4-openssl-dev'),
  WordNode(pos=(110, 126), word='libfreetype6-dev'),
  WordNode(pos=(129, 139), word='libicu-dev'),
  WordNode(pos=(142, 153), word='libjpeg-dev'),
  WordNode(pos=(156, 168), word='libldap2-dev'),
  WordNode(pos=(171, 184), word='libmcrypt-dev'),
  WordNode(pos=(187, 203), word='libmemcached-dev'),
  WordNode(pos=(206, 216), word='libpng-dev'),
  WordNode(pos=(219, 228), word='libpq-dev'),
  WordNode(pos=(231, 242), word='libxml2-dev'),
  WordNode(pos=(245, 250), word='unzip'),
])


284) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(255, 282), parts=[
  WordNode(pos=(255, 257), word='rm'),
  WordNode(pos=(258, 261), word='-rf'),
  WordNode(pos=(262, 282), word='/var/lib/apt/lists/*'),
])


285) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


286) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(10, 78), parts=[
  WordNode(pos=(10, 34), word='docker-php-ext-configure'),
  WordNode(pos=(35, 37), word='gd'),
  WordNode(pos=(38, 57), word='--with-png-dir=/usr'),
  WordNode(pos=(58, 78), word='--with-jpeg-dir=/usr'),
])


287) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


288) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


289) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   mcrypt   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 340), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 284), word='mcrypt'),
  WordNode(pos=(287, 294), word='opcache'),
  WordNode(pos=(297, 302), word='pcntl'),
  WordNode(pos=(305, 314), word='pdo_mysql'),
  WordNode(pos=(317, 326), word='pdo_pgsql'),
  WordNode(pos=(329, 334), word='pgsql'),
  WordNode(pos=(337, 340), word='zip'),
])


290) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


291) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


292) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


293) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


294) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


295) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


296) a2enmod rewrite

CommandNode(pos=(0, 15), parts=[
  WordNode(pos=(0, 7), word='a2enmod'),
  WordNode(pos=(8, 15), word='rewrite'),
])


297) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


298) pecl install APCu-5.1.11

CommandNode(pos=(10, 34), parts=[
  WordNode(pos=(10, 14), word='pecl'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 34), word='APCu-5.1.11'),
])


299) pecl install memcached-3.0.4

CommandNode(pos=(37, 65), parts=[
  WordNode(pos=(37, 41), word='pecl'),
  WordNode(pos=(42, 49), word='install'),
  WordNode(pos=(50, 65), word='memcached-3.0.4'),
])


300) pecl install redis-3.1.6

CommandNode(pos=(68, 92), parts=[
  WordNode(pos=(68, 72), word='pecl'),
  WordNode(pos=(73, 80), word='install'),
  WordNode(pos=(81, 92), word='redis-3.1.6'),
])


301) docker-php-ext-enable   apcu   memcached   redis

CommandNode(pos=(95, 143), parts=[
  WordNode(pos=(95, 116), word='docker-php-ext-enable'),
  WordNode(pos=(119, 123), word='apcu'),
  WordNode(pos=(126, 135), word='memcached'),
  WordNode(pos=(138, 143), word='redis'),
])


302) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


303) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


304) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


305) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


306) sha256sum -c -

CommandNode(pos=(283, 297), parts=[
  WordNode(pos=(283, 292), word='sha256sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


307) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


308) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys E3036906AD9F30807351FAC32D5D5E97F6978A26

CommandNode(pos=(334, 437), parts=[
  WordNode(pos=(334, 337), word='gpg'),
  WordNode(pos=(338, 345), word='--batch'),
  WordNode(pos=(346, 357), word='--keyserver'),
  WordNode(pos=(358, 384), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(385, 396), word='--recv-keys'),
  WordNode(pos=(397, 437), word='E3036906AD9F30807351FAC32D5D5E97F6978A26'),
])


309) gpg --batch --verify owncloud.tar.bz2.asc owncloud.tar.bz2

CommandNode(pos=(440, 498), parts=[
  WordNode(pos=(440, 443), word='gpg'),
  WordNode(pos=(444, 451), word='--batch'),
  WordNode(pos=(452, 460), word='--verify'),
  WordNode(pos=(461, 481), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(482, 498), word='owncloud.tar.bz2'),
])


310) command -v gpgconf

CommandNode(pos=(501, 519), parts=[
  WordNode(pos=(501, 508), word='command'),
  WordNode(pos=(509, 511), word='-v'),
  WordNode(pos=(512, 519), word='gpgconf'),
])


311) gpgconf --kill all

CommandNode(pos=(523, 541), parts=[
  WordNode(pos=(523, 530), word='gpgconf'),
  WordNode(pos=(531, 537), word='--kill'),
  WordNode(pos=(538, 541), word='all'),
])


312) :

CommandNode(pos=(545, 546), parts=[
  WordNode(pos=(545, 546), word=':'),
])


313) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


314) tar -xjf owncloud.tar.bz2 -C /usr/src/

CommandNode(pos=(591, 629), parts=[
  WordNode(pos=(591, 594), word='tar'),
  WordNode(pos=(595, 599), word='-xjf'),
  WordNode(pos=(600, 616), word='owncloud.tar.bz2'),
  WordNode(pos=(617, 619), word='-C'),
  WordNode(pos=(620, 629), word='/usr/src/'),
])


315) rm owncloud.tar.bz2

CommandNode(pos=(632, 651), parts=[
  WordNode(pos=(632, 634), word='rm'),
  WordNode(pos=(635, 651), word='owncloud.tar.bz2'),
])


316) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


317) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


318) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


319) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


320) apt-get install -y --no-install-recommends   gcc   make

CommandNode(pos=(69, 124), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 117), word='gcc'),
  WordNode(pos=(120, 124), word='make'),
])


321) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(129, 156), parts=[
  WordNode(pos=(129, 131), word='rm'),
  WordNode(pos=(132, 135), word='-rf'),
  WordNode(pos=(136, 156), word='/var/lib/apt/lists/*'),
])


322) gem install passenger --version "$PASSENGER_VERSION"

CommandNode(pos=(160, 212), parts=[
  WordNode(pos=(160, 163), word='gem'),
  WordNode(pos=(164, 171), word='install'),
  WordNode(pos=(172, 181), word='passenger'),
  WordNode(pos=(182, 191), word='--version'),
  WordNode(pos=(192, 212), word='$PASSENGER_VERSION', parts=[
    ParameterNode(pos=(193, 211), value='PASSENGER_VERSION'),
  ]),
])


323) passenger-config build-native-support

CommandNode(pos=(215, 252), parts=[
  WordNode(pos=(215, 231), word='passenger-config'),
  WordNode(pos=(232, 252), word='build-native-support'),
])


324) [ -n "$(passenger-config build-native-support 2>&1)" ]

CommandNode(pos=(258, 312), parts=[
  WordNode(pos=(258, 259), word='['),
  WordNode(pos=(260, 262), word='-n'),
  WordNode(pos=(263, 310), word='$(passenger-config build-native-support 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(266, 308), parts=[
        WordNode(pos=(266, 282), word='passenger-config'),
        WordNode(pos=(283, 303), word='build-native-support'),
        RedirectNode(input=2, output=1, pos=(304, 308), type='>&'),
      ]), pos=(264, 309)),
  ]),
  WordNode(pos=(311, 312), word=']'),
])


325) cat /tmp/passenger_native_support-*.log

CommandNode(pos=(319, 358), parts=[
  WordNode(pos=(319, 322), word='cat'),
  WordNode(pos=(323, 358), word='/tmp/passenger_native_support-*.log'),
])


326) false

CommandNode(pos=(360, 365), parts=[
  WordNode(pos=(360, 365), word='false'),
])


327) apt-mark auto '.*' > /dev/null

CommandNode(pos=(373, 403), parts=[
  WordNode(pos=(373, 381), word='apt-mark'),
  WordNode(pos=(382, 386), word='auto'),
  WordNode(pos=(387, 391), word='.*'),
  RedirectNode(output=
    WordNode(pos=(394, 403), word='/dev/null'), pos=(392, 403), type='>'),
])


328) [ -z "$savedAptMark" ]

CommandNode(pos=(406, 428), parts=[
  WordNode(pos=(406, 407), word='['),
  WordNode(pos=(408, 410), word='-z'),
  WordNode(pos=(411, 426), word='$savedAptMark', parts=[
    ParameterNode(pos=(412, 425), value='savedAptMark'),
  ]),
  WordNode(pos=(427, 428), word=']'),
])


329) apt-mark manual $savedAptMark

CommandNode(pos=(432, 461), parts=[
  WordNode(pos=(432, 440), word='apt-mark'),
  WordNode(pos=(441, 447), word='manual'),
  WordNode(pos=(448, 461), word='$savedAptMark', parts=[
    ParameterNode(pos=(448, 461), value='savedAptMark'),
  ]),
])


330) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(464, 540), parts=[
  WordNode(pos=(464, 471), word='apt-get'),
  WordNode(pos=(472, 477), word='purge'),
  WordNode(pos=(478, 480), word='-y'),
  WordNode(pos=(481, 494), word='--auto-remove'),
  WordNode(pos=(495, 497), word='-o'),
  WordNode(pos=(498, 540), word='APT::AutoRemove::RecommendsImportant=false'),
])


331) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


332) passenger-config install-agent

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 27), word='passenger-config'),
  WordNode(pos=(28, 41), word='install-agent'),
])


333) passenger-config download-nginx-engine

CommandNode(pos=(44, 82), parts=[
  WordNode(pos=(44, 60), word='passenger-config'),
  WordNode(pos=(61, 82), word='download-nginx-engine'),
])


334) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


335) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


336) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


337) apt-get install -y --no-install-recommends   gcc   make

CommandNode(pos=(69, 124), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 117), word='gcc'),
  WordNode(pos=(120, 124), word='make'),
])


338) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(129, 156), parts=[
  WordNode(pos=(129, 131), word='rm'),
  WordNode(pos=(132, 135), word='-rf'),
  WordNode(pos=(136, 156), word='/var/lib/apt/lists/*'),
])


339) gem install passenger --version "$PASSENGER_VERSION"

CommandNode(pos=(160, 212), parts=[
  WordNode(pos=(160, 163), word='gem'),
  WordNode(pos=(164, 171), word='install'),
  WordNode(pos=(172, 181), word='passenger'),
  WordNode(pos=(182, 191), word='--version'),
  WordNode(pos=(192, 212), word='$PASSENGER_VERSION', parts=[
    ParameterNode(pos=(193, 211), value='PASSENGER_VERSION'),
  ]),
])


340) passenger-config build-native-support

CommandNode(pos=(215, 252), parts=[
  WordNode(pos=(215, 231), word='passenger-config'),
  WordNode(pos=(232, 252), word='build-native-support'),
])


341) [ -n "$(passenger-config build-native-support 2>&1)" ]

CommandNode(pos=(258, 312), parts=[
  WordNode(pos=(258, 259), word='['),
  WordNode(pos=(260, 262), word='-n'),
  WordNode(pos=(263, 310), word='$(passenger-config build-native-support 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(266, 308), parts=[
        WordNode(pos=(266, 282), word='passenger-config'),
        WordNode(pos=(283, 303), word='build-native-support'),
        RedirectNode(input=2, output=1, pos=(304, 308), type='>&'),
      ]), pos=(264, 309)),
  ]),
  WordNode(pos=(311, 312), word=']'),
])


342) cat /tmp/passenger_native_support-*.log

CommandNode(pos=(319, 358), parts=[
  WordNode(pos=(319, 322), word='cat'),
  WordNode(pos=(323, 358), word='/tmp/passenger_native_support-*.log'),
])


343) false

CommandNode(pos=(360, 365), parts=[
  WordNode(pos=(360, 365), word='false'),
])


344) apt-mark auto '.*' > /dev/null

CommandNode(pos=(373, 403), parts=[
  WordNode(pos=(373, 381), word='apt-mark'),
  WordNode(pos=(382, 386), word='auto'),
  WordNode(pos=(387, 391), word='.*'),
  RedirectNode(output=
    WordNode(pos=(394, 403), word='/dev/null'), pos=(392, 403), type='>'),
])


345) [ -z "$savedAptMark" ]

CommandNode(pos=(406, 428), parts=[
  WordNode(pos=(406, 407), word='['),
  WordNode(pos=(408, 410), word='-z'),
  WordNode(pos=(411, 426), word='$savedAptMark', parts=[
    ParameterNode(pos=(412, 425), value='savedAptMark'),
  ]),
  WordNode(pos=(427, 428), word=']'),
])


346) apt-mark manual $savedAptMark

CommandNode(pos=(432, 461), parts=[
  WordNode(pos=(432, 440), word='apt-mark'),
  WordNode(pos=(441, 447), word='manual'),
  WordNode(pos=(448, 461), word='$savedAptMark', parts=[
    ParameterNode(pos=(448, 461), value='savedAptMark'),
  ]),
])


347) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(464, 540), parts=[
  WordNode(pos=(464, 471), word='apt-get'),
  WordNode(pos=(472, 477), word='purge'),
  WordNode(pos=(478, 480), word='-y'),
  WordNode(pos=(481, 494), word='--auto-remove'),
  WordNode(pos=(495, 497), word='-o'),
  WordNode(pos=(498, 540), word='APT::AutoRemove::RecommendsImportant=false'),
])


348) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


349) passenger-config install-agent

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 27), word='passenger-config'),
  WordNode(pos=(28, 41), word='install-agent'),
])


350) passenger-config download-nginx-engine

CommandNode(pos=(44, 82), parts=[
  WordNode(pos=(44, 60), word='passenger-config'),
  WordNode(pos=(61, 82), word='download-nginx-engine'),
])


351) groupadd -r redis

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='redis'),
])


352) useradd -r -g redis redis

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='redis'),
  WordNode(pos=(41, 46), word='redis'),
])


353) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


354) fetchDeps="   ca-certificates   dirmngr   gnupg   wget  "

CommandNode(pos=(11, 68), parts=[
  AssignmentNode(pos=(11, 68), word='fetchDeps=   ca-certificates   dirmngr   gnupg   wget  '),
])


355) apt-get update

CommandNode(pos=(71, 85), parts=[
  WordNode(pos=(71, 78), word='apt-get'),
  WordNode(pos=(79, 85), word='update'),
])


356) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(88, 141), parts=[
  WordNode(pos=(88, 95), word='apt-get'),
  WordNode(pos=(96, 103), word='install'),
  WordNode(pos=(104, 106), word='-y'),
  WordNode(pos=(107, 130), word='--no-install-recommends'),
  WordNode(pos=(131, 141), word='$fetchDeps', parts=[
    ParameterNode(pos=(131, 141), value='fetchDeps'),
  ]),
])


357) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(144, 171), parts=[
  WordNode(pos=(144, 146), word='rm'),
  WordNode(pos=(147, 150), word='-rf'),
  WordNode(pos=(151, 171), word='/var/lib/apt/lists/*'),
])


358) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


359) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


360) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


361) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(471, 502), parts=[
  WordNode(pos=(471, 477), word='export'),
  WordNode(pos=(478, 502), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(491, 500), parts=[
        WordNode(pos=(491, 497), word='mktemp'),
        WordNode(pos=(498, 500), word='-d'),
      ]), pos=(489, 501)),
  ]),
])


362) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(505, 608), parts=[
  WordNode(pos=(505, 508), word='gpg'),
  WordNode(pos=(509, 516), word='--batch'),
  WordNode(pos=(517, 528), word='--keyserver'),
  WordNode(pos=(529, 555), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(556, 567), word='--recv-keys'),
  WordNode(pos=(568, 608), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


363) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(611, 675), parts=[
  WordNode(pos=(611, 614), word='gpg'),
  WordNode(pos=(615, 622), word='--batch'),
  WordNode(pos=(623, 631), word='--verify'),
  WordNode(pos=(632, 655), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(656, 675), word='/usr/local/bin/gosu'),
])


364) gpgconf --kill all

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 685), word='gpgconf'),
  WordNode(pos=(686, 692), word='--kill'),
  WordNode(pos=(693, 696), word='all'),
])


365) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(699, 741), parts=[
  WordNode(pos=(699, 701), word='rm'),
  WordNode(pos=(702, 704), word='-r'),
  WordNode(pos=(705, 717), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(706, 716), value='GNUPGHOME'),
  ]),
  WordNode(pos=(718, 741), word='/usr/local/bin/gosu.asc'),
])


366) chmod +x /usr/local/bin/gosu

CommandNode(pos=(744, 772), parts=[
  WordNode(pos=(744, 749), word='chmod'),
  WordNode(pos=(750, 752), word='+x'),
  WordNode(pos=(753, 772), word='/usr/local/bin/gosu'),
])


367) gosu nobody true

CommandNode(pos=(775, 791), parts=[
  WordNode(pos=(775, 779), word='gosu'),
  WordNode(pos=(780, 786), word='nobody'),
  WordNode(pos=(787, 791), word='true'),
])


368) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(795, 836), parts=[
  WordNode(pos=(795, 802), word='apt-get'),
  WordNode(pos=(803, 808), word='purge'),
  WordNode(pos=(809, 811), word='-y'),
  WordNode(pos=(812, 825), word='--auto-remove'),
  WordNode(pos=(826, 836), word='$fetchDeps', parts=[
    ParameterNode(pos=(826, 836), value='fetchDeps'),
  ]),
])


369) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


370) apt-get install -y --no-install-recommends   libc6-i386

CommandNode(pos=(18, 73), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 73), word='libc6-i386'),
])


371) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(78, 105), parts=[
  WordNode(pos=(78, 80), word='rm'),
  WordNode(pos=(81, 84), word='-rf'),
  WordNode(pos=(85, 105), word='/var/lib/apt/lists/*'),
])


372) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


373) buildDeps='   wget     gcc   gcc-multilib   libc6-dev-i386   make  '

CommandNode(pos=(11, 79), parts=[
  AssignmentNode(pos=(11, 79), word='buildDeps=   wget     gcc   gcc-multilib   libc6-dev-i386   make  '),
])


374) apt-get update

CommandNode(pos=(82, 96), parts=[
  WordNode(pos=(82, 89), word='apt-get'),
  WordNode(pos=(90, 96), word='update'),
])


375) apt-get install -y $buildDeps --no-install-recommends

CommandNode(pos=(99, 152), parts=[
  WordNode(pos=(99, 106), word='apt-get'),
  WordNode(pos=(107, 114), word='install'),
  WordNode(pos=(115, 117), word='-y'),
  WordNode(pos=(118, 128), word='$buildDeps', parts=[
    ParameterNode(pos=(118, 128), value='buildDeps'),
  ]),
  WordNode(pos=(129, 152), word='--no-install-recommends'),
])


376) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(155, 182), parts=[
  WordNode(pos=(155, 157), word='rm'),
  WordNode(pos=(158, 161), word='-rf'),
  WordNode(pos=(162, 182), word='/var/lib/apt/lists/*'),
])


377) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(186, 228), parts=[
  WordNode(pos=(186, 190), word='wget'),
  WordNode(pos=(191, 193), word='-O'),
  WordNode(pos=(194, 206), word='redis.tar.gz'),
  WordNode(pos=(207, 228), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(208, 227), value='REDIS_DOWNLOAD_URL'),
  ]),
])


378) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(231, 271), parts=[
  WordNode(pos=(231, 235), word='echo'),
  WordNode(pos=(236, 271), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(237, 256), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


379) sha256sum -c -

CommandNode(pos=(274, 288), parts=[
  WordNode(pos=(274, 283), word='sha256sum'),
  WordNode(pos=(284, 286), word='-c'),
  WordNode(pos=(287, 288), word='-'),
])


380) mkdir -p /usr/src/redis

CommandNode(pos=(291, 314), parts=[
  WordNode(pos=(291, 296), word='mkdir'),
  WordNode(pos=(297, 299), word='-p'),
  WordNode(pos=(300, 314), word='/usr/src/redis'),
])


381) tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1

CommandNode(pos=(317, 377), parts=[
  WordNode(pos=(317, 320), word='tar'),
  WordNode(pos=(321, 325), word='-xzf'),
  WordNode(pos=(326, 338), word='redis.tar.gz'),
  WordNode(pos=(339, 341), word='-C'),
  WordNode(pos=(342, 356), word='/usr/src/redis'),
  WordNode(pos=(357, 377), word='--strip-components=1'),
])


382) rm redis.tar.gz

CommandNode(pos=(380, 395), parts=[
  WordNode(pos=(380, 382), word='rm'),
  WordNode(pos=(383, 395), word='redis.tar.gz'),
])


383) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h

CommandNode(pos=(399, 478), parts=[
  WordNode(pos=(399, 403), word='grep'),
  WordNode(pos=(404, 406), word='-q'),
  WordNode(pos=(407, 450), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 1$'),
  WordNode(pos=(451, 478), word='/usr/src/redis/src/server.h'),
])


384) sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\1 0!' /usr/src/redis/src/server.h

CommandNode(pos=(481, 570), parts=[
  WordNode(pos=(481, 484), word='sed'),
  WordNode(pos=(485, 488), word='-ri'),
  WordNode(pos=(489, 542), word='s!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!'),
  WordNode(pos=(543, 570), word='/usr/src/redis/src/server.h'),
])


385) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h

CommandNode(pos=(573, 652), parts=[
  WordNode(pos=(573, 577), word='grep'),
  WordNode(pos=(578, 580), word='-q'),
  WordNode(pos=(581, 624), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 0$'),
  WordNode(pos=(625, 652), word='/usr/src/redis/src/server.h'),
])


386) make -C /usr/src/redis -j "$(nproc)" 32bit

CommandNode(pos=(656, 698), parts=[
  WordNode(pos=(656, 660), word='make'),
  WordNode(pos=(661, 663), word='-C'),
  WordNode(pos=(664, 678), word='/usr/src/redis'),
  WordNode(pos=(679, 681), word='-j'),
  WordNode(pos=(682, 692), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(685, 690), parts=[
        WordNode(pos=(685, 690), word='nproc'),
      ]), pos=(683, 691)),
  ]),
  WordNode(pos=(693, 698), word='32bit'),
])


387) make -C /usr/src/redis install

CommandNode(pos=(701, 731), parts=[
  WordNode(pos=(701, 705), word='make'),
  WordNode(pos=(706, 708), word='-C'),
  WordNode(pos=(709, 723), word='/usr/src/redis'),
  WordNode(pos=(724, 731), word='install'),
])


388) rm -r /usr/src/redis

CommandNode(pos=(735, 755), parts=[
  WordNode(pos=(735, 737), word='rm'),
  WordNode(pos=(738, 740), word='-r'),
  WordNode(pos=(741, 755), word='/usr/src/redis'),
])


389) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(759, 800), parts=[
  WordNode(pos=(759, 766), word='apt-get'),
  WordNode(pos=(767, 772), word='purge'),
  WordNode(pos=(773, 775), word='-y'),
  WordNode(pos=(776, 789), word='--auto-remove'),
  WordNode(pos=(790, 800), word='$buildDeps', parts=[
    ParameterNode(pos=(790, 800), value='buildDeps'),
  ]),
])


390) mkdir /data

CommandNode(pos=(0, 11), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 11), word='/data'),
])


391) chown redis:redis /data

CommandNode(pos=(15, 38), parts=[
  WordNode(pos=(15, 20), word='chown'),
  WordNode(pos=(21, 32), word='redis:redis'),
  WordNode(pos=(33, 38), word='/data'),
])


392) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


393) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


394) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


395) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


396) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


397) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


398) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


399) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


400) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


401) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


402) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


403) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


404) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


405) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


406) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


407) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


408) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


409) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


410) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


411) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


412) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


413) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


414) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


415) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


416) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


417) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


418) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


419) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


420) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


421) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


422) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


423) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


424) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


425) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


426) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


427) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


428) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


429) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


430) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


431) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


432) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


433) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


434) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


435) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


436) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


437) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


438) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


439) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


440) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


441) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


442) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


443) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


444) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


445) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


446) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


447) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


448) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


449) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


450) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


451) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


452) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


453) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


454) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


455) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


456) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


457) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


458) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


459) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


460) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


461) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


462) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


463) echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 14), word='echo'),
  WordNode(pos=(15, 33), word='/usr/local/lib64'),
  RedirectNode(output=
    WordNode(pos=(36, 70), word='/etc/ld.so.conf.d/local-lib64.conf'), pos=(34, 70), type='>'),
])


464) ldconfig -v

CommandNode(pos=(73, 84), parts=[
  WordNode(pos=(73, 81), word='ldconfig'),
  WordNode(pos=(82, 84), word='-v'),
])


465) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


466) dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 21), word='dpkg-divert'),
  WordNode(pos=(22, 30), word='--divert'),
  WordNode(pos=(31, 48), word='/usr/bin/gcc.orig'),
  WordNode(pos=(49, 57), word='--rename'),
  WordNode(pos=(58, 70), word='/usr/bin/gcc'),
])


467) dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++

CommandNode(pos=(73, 133), parts=[
  WordNode(pos=(73, 84), word='dpkg-divert'),
  WordNode(pos=(85, 93), word='--divert'),
  WordNode(pos=(94, 111), word='/usr/bin/g++.orig'),
  WordNode(pos=(112, 120), word='--rename'),
  WordNode(pos=(121, 133), word='/usr/bin/g++'),
])


468) dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran

CommandNode(pos=(136, 206), parts=[
  WordNode(pos=(136, 147), word='dpkg-divert'),
  WordNode(pos=(148, 156), word='--divert'),
  WordNode(pos=(157, 179), word='/usr/bin/gfortran.orig'),
  WordNode(pos=(180, 188), word='--rename'),
  WordNode(pos=(189, 206), word='/usr/bin/gfortran'),
])


469) update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999

CommandNode(pos=(209, 276), parts=[
  WordNode(pos=(209, 228), word='update-alternatives'),
  WordNode(pos=(229, 238), word='--install'),
  WordNode(pos=(239, 250), word='/usr/bin/cc'),
  WordNode(pos=(251, 253), word='cc'),
  WordNode(pos=(254, 272), word='/usr/local/bin/gcc'),
  WordNode(pos=(273, 276), word='999'),
])


470) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


471) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


472) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


473) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


474) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


475) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


476) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


477) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


478) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


479) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


480) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


481) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


482) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


483) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


484) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


485) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


486) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


487) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


488) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


489) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


490) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


491) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


492) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


493) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


494) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


495) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


496) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


497) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


498) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


499) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


500) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


501) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


502) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


503) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


504) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


505) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


506) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


507) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


508) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


509) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


510) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


511) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


512) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


513) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


514) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


515) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


516) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


517) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


518) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


519) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


520) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


521) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


522) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


523) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


524) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


525) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


526) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


527) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


528) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


529) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


530) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


531) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


532) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


533) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


534) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev

CommandNode(pos=(11, 130), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
  WordNode(pos=(120, 130), word='libzip-dev'),
])


535) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(136, 204), parts=[
  WordNode(pos=(136, 160), word='docker-php-ext-configure'),
  WordNode(pos=(161, 163), word='gd'),
  WordNode(pos=(164, 183), word='--with-png-dir=/usr'),
  WordNode(pos=(184, 204), word='--with-jpeg-dir=/usr'),
])


536) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(207, 275), parts=[
  WordNode(pos=(207, 229), word='docker-php-ext-install'),
  WordNode(pos=(232, 238), word='bcmath'),
  WordNode(pos=(241, 245), word='exif'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(253, 259), word='mysqli'),
  WordNode(pos=(262, 269), word='opcache'),
  WordNode(pos=(272, 275), word='zip'),
])


537) pecl install imagick-3.4.4

CommandNode(pos=(280, 306), parts=[
  WordNode(pos=(280, 284), word='pecl'),
  WordNode(pos=(285, 292), word='install'),
  WordNode(pos=(293, 306), word='imagick-3.4.4'),
])


538) docker-php-ext-enable imagick

CommandNode(pos=(309, 338), parts=[
  WordNode(pos=(309, 330), word='docker-php-ext-enable'),
  WordNode(pos=(331, 338), word='imagick'),
])


539) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(342, 558), parts=[
  AssignmentNode(pos=(342, 558), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(356, 554), parts=[
        CommandNode(pos=(356, 441), parts=[
          WordNode(pos=(356, 363), word='scanelf'),
          WordNode(pos=(364, 372), word='--needed'),
          WordNode(pos=(373, 383), word='--nobanner'),
          WordNode(pos=(384, 392), word='--format'),
          WordNode(pos=(393, 399), word='%n#p'),
          WordNode(pos=(400, 411), word='--recursive'),
          WordNode(pos=(412, 441), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(445, 446)),
        CommandNode(pos=(447, 458), parts=[
          WordNode(pos=(447, 449), word='tr'),
          WordNode(pos=(450, 453), word=','),
          WordNode(pos=(454, 458), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 471), parts=[
          WordNode(pos=(464, 468), word='sort'),
          WordNode(pos=(469, 471), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(475, 476)),
        CommandNode(pos=(477, 554), parts=[
          WordNode(pos=(477, 480), word='awk'),
          WordNode(pos=(481, 554), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(351, 555)),
  ]),
])


540) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(561, 614), parts=[
  WordNode(pos=(561, 564), word='apk'),
  WordNode(pos=(565, 568), word='add'),
  WordNode(pos=(569, 578), word='--virtual'),
  WordNode(pos=(579, 605), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(606, 614), word='$runDeps', parts=[
    ParameterNode(pos=(606, 614), value='runDeps'),
  ]),
])


541) apk del .build-deps

CommandNode(pos=(617, 636), parts=[
  WordNode(pos=(617, 620), word='apk'),
  WordNode(pos=(621, 624), word='del'),
  WordNode(pos=(625, 636), word='.build-deps'),
])


542) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


543) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


544) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


545) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


546) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


547) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


548) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


549) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


550) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


551) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


552) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


553) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


554) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


555) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


556) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


557) apk add --no-cache   bash   less   mysql-client

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='bash'),
  WordNode(pos=(28, 32), word='less'),
  WordNode(pos=(35, 47), word='mysql-client'),
])


558) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


559) mkdir -p /var/www/html

CommandNode(pos=(10, 32), parts=[
  WordNode(pos=(10, 15), word='mkdir'),
  WordNode(pos=(16, 18), word='-p'),
  WordNode(pos=(19, 32), word='/var/www/html'),
])


560) chown -R www-data:www-data /var/www/html

CommandNode(pos=(35, 75), parts=[
  WordNode(pos=(35, 40), word='chown'),
  WordNode(pos=(41, 43), word='-R'),
  WordNode(pos=(44, 61), word='www-data:www-data'),
  WordNode(pos=(62, 75), word='/var/www/html'),
])


561) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


562) apk add --no-cache --virtual .fetch-deps   gnupg

CommandNode(pos=(11, 59), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
])


563) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


564) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(223, 254), parts=[
  WordNode(pos=(223, 229), word='export'),
  WordNode(pos=(230, 254), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(243, 252), parts=[
        WordNode(pos=(243, 249), word='mktemp'),
        WordNode(pos=(250, 252), word='-d'),
      ]), pos=(241, 253)),
  ]),
])


565) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$WORDPRESS_CLI_GPG_KEY"

CommandNode(pos=(257, 344), parts=[
  WordNode(pos=(257, 260), word='gpg'),
  WordNode(pos=(261, 268), word='--batch'),
  WordNode(pos=(269, 280), word='--keyserver'),
  WordNode(pos=(281, 307), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(308, 319), word='--recv-keys'),
  WordNode(pos=(320, 344), word='$WORDPRESS_CLI_GPG_KEY', parts=[
    ParameterNode(pos=(321, 343), value='WORDPRESS_CLI_GPG_KEY'),
  ]),
])


566) gpg --batch --decrypt --output /usr/local/bin/wp /usr/local/bin/wp.gpg

CommandNode(pos=(347, 417), parts=[
  WordNode(pos=(347, 350), word='gpg'),
  WordNode(pos=(351, 358), word='--batch'),
  WordNode(pos=(359, 368), word='--decrypt'),
  WordNode(pos=(369, 377), word='--output'),
  WordNode(pos=(378, 395), word='/usr/local/bin/wp'),
  WordNode(pos=(396, 417), word='/usr/local/bin/wp.gpg'),
])


567) command -v gpgconf

CommandNode(pos=(420, 438), parts=[
  WordNode(pos=(420, 427), word='command'),
  WordNode(pos=(428, 430), word='-v'),
  WordNode(pos=(431, 438), word='gpgconf'),
])


568) gpgconf --kill all

CommandNode(pos=(442, 460), parts=[
  WordNode(pos=(442, 449), word='gpgconf'),
  WordNode(pos=(450, 456), word='--kill'),
  WordNode(pos=(457, 460), word='all'),
])


569) :

CommandNode(pos=(464, 465), parts=[
  WordNode(pos=(464, 465), word=':'),
])


570) rm -rf "$GNUPGHOME" /usr/local/bin/wp.gpg

CommandNode(pos=(468, 509), parts=[
  WordNode(pos=(468, 470), word='rm'),
  WordNode(pos=(471, 474), word='-rf'),
  WordNode(pos=(475, 487), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(476, 486), value='GNUPGHOME'),
  ]),
  WordNode(pos=(488, 509), word='/usr/local/bin/wp.gpg'),
])


571) echo "$WORDPRESS_CLI_SHA512 */usr/local/bin/wp"

CommandNode(pos=(513, 560), parts=[
  WordNode(pos=(513, 517), word='echo'),
  WordNode(pos=(518, 560), word='$WORDPRESS_CLI_SHA512 */usr/local/bin/wp', parts=[
    ParameterNode(pos=(519, 540), value='WORDPRESS_CLI_SHA512'),
  ]),
])


572) sha512sum -c -

CommandNode(pos=(563, 577), parts=[
  WordNode(pos=(563, 572), word='sha512sum'),
  WordNode(pos=(573, 575), word='-c'),
  WordNode(pos=(576, 577), word='-'),
])


573) chmod +x /usr/local/bin/wp

CommandNode(pos=(580, 606), parts=[
  WordNode(pos=(580, 585), word='chmod'),
  WordNode(pos=(586, 588), word='+x'),
  WordNode(pos=(589, 606), word='/usr/local/bin/wp'),
])


574) apk del .fetch-deps

CommandNode(pos=(610, 629), parts=[
  WordNode(pos=(610, 613), word='apk'),
  WordNode(pos=(614, 617), word='del'),
  WordNode(pos=(618, 629), word='.fetch-deps'),
])


575) wp --allow-root --version

CommandNode(pos=(633, 658), parts=[
  WordNode(pos=(633, 635), word='wp'),
  WordNode(pos=(636, 648), word='--allow-root'),
  WordNode(pos=(649, 658), word='--version'),
])


576) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


577) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


578) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


579) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


580) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


581) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


582) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


583) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


584) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


585) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


586) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


587) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


588) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


589) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


590) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


591) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


592) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


593) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


594) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


595) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


596) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


597) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


598) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


599) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


600) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


601) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


602) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


603) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


604) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


605) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


606) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


607) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


608) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


609) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


610) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


611) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


612) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


613) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


614) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


615) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


616) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


617) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


618) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


619) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


620) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


621) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


622) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


623) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


624) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


625) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


626) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


627) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


628) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


629) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


630) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


631) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


632) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


633) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


634) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


635) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


636) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


637) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


638) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


639) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


640) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


641) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


642) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


643) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


644) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


645) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


646) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


647) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


648) apt-get install -y   ca-certificates   curl

CommandNode(pos=(18, 61), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 54), word='ca-certificates'),
  WordNode(pos=(57, 61), word='curl'),
])


649) gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D

CommandNode(pos=(0, 92), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 15), word='--keyserver'),
  WordNode(pos=(16, 39), word='pool.sks-keyservers.net'),
  WordNode(pos=(40, 51), word='--recv-keys'),
  WordNode(pos=(52, 92), word='7937DFD2AB06298B2293C3187D33FF9D0246406D'),
])


650) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


651) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


652) gpg --verify SHASUMS256.txt.asc

CommandNode(pos=(164, 195), parts=[
  WordNode(pos=(164, 167), word='gpg'),
  WordNode(pos=(168, 176), word='--verify'),
  WordNode(pos=(177, 195), word='SHASUMS256.txt.asc'),
])


653) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


654) sha256sum -c -

CommandNode(pos=(268, 282), parts=[
  WordNode(pos=(268, 277), word='sha256sum'),
  WordNode(pos=(278, 280), word='-c'),
  WordNode(pos=(281, 282), word='-'),
])


655) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


656) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


657) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(439, 472), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 472), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(459, 471), value='NPM_VERSION'),
  ]),
])


658) npm cache clear

CommandNode(pos=(477, 492), parts=[
  WordNode(pos=(477, 480), word='npm'),
  WordNode(pos=(481, 486), word='cache'),
  WordNode(pos=(487, 492), word='clear'),
])


659) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


660) apt-get install -y --no-install-recommends   bzip2   ca-certificates   libffi-dev   libgdbm3   libgmp-dev   libssl-dev   libyaml-dev   procps   zlib1g-dev

CommandNode(pos=(19, 173), parts=[
  WordNode(pos=(19, 26), word='apt-get'),
  WordNode(pos=(27, 34), word='install'),
  WordNode(pos=(35, 37), word='-y'),
  WordNode(pos=(38, 61), word='--no-install-recommends'),
  WordNode(pos=(64, 69), word='bzip2'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(90, 100), word='libffi-dev'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 124), word='libgmp-dev'),
  WordNode(pos=(127, 137), word='libssl-dev'),
  WordNode(pos=(140, 151), word='libyaml-dev'),
  WordNode(pos=(154, 160), word='procps'),
  WordNode(pos=(163, 173), word='zlib1g-dev'),
])


661) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(178, 205), parts=[
  WordNode(pos=(178, 180), word='rm'),
  WordNode(pos=(181, 184), word='-rf'),
  WordNode(pos=(185, 205), word='/var/lib/apt/lists/*'),
])


662) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


663) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


664) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


665) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


666) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


667) apt-get update

CommandNode(pos=(55, 69), parts=[
  WordNode(pos=(55, 62), word='apt-get'),
  WordNode(pos=(63, 69), word='update'),
])


668) apt-get install -y --no-install-recommends   autoconf   bison   dpkg-dev   gcc   libbz2-dev   libgdbm-dev   libglib2.0-dev   libncurses-dev   libreadline-dev   libxml2-dev   libxslt-dev   make   ruby   wget   xz-utils

CommandNode(pos=(73, 290), parts=[
  WordNode(pos=(73, 80), word='apt-get'),
  WordNode(pos=(81, 88), word='install'),
  WordNode(pos=(89, 91), word='-y'),
  WordNode(pos=(92, 115), word='--no-install-recommends'),
  WordNode(pos=(118, 126), word='autoconf'),
  WordNode(pos=(129, 134), word='bison'),
  WordNode(pos=(137, 145), word='dpkg-dev'),
  WordNode(pos=(148, 151), word='gcc'),
  WordNode(pos=(154, 164), word='libbz2-dev'),
  WordNode(pos=(167, 178), word='libgdbm-dev'),
  WordNode(pos=(181, 195), word='libglib2.0-dev'),
  WordNode(pos=(198, 212), word='libncurses-dev'),
  WordNode(pos=(215, 230), word='libreadline-dev'),
  WordNode(pos=(233, 244), word='libxml2-dev'),
  WordNode(pos=(247, 258), word='libxslt-dev'),
  WordNode(pos=(261, 265), word='make'),
  WordNode(pos=(268, 272), word='ruby'),
  WordNode(pos=(275, 279), word='wget'),
  WordNode(pos=(282, 290), word='xz-utils'),
])


669) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(295, 322), parts=[
  WordNode(pos=(295, 297), word='rm'),
  WordNode(pos=(298, 301), word='-rf'),
  WordNode(pos=(302, 322), word='/var/lib/apt/lists/*'),
])


670) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


671) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


672) sha256sum -c -

CommandNode(pos=(479, 493), parts=[
  WordNode(pos=(479, 488), word='sha256sum'),
  WordNode(pos=(489, 491), word='-c'),
  WordNode(pos=(492, 493), word='-'),
])


673) mkdir -p /usr/src/ruby

CommandNode(pos=(499, 521), parts=[
  WordNode(pos=(499, 504), word='mkdir'),
  WordNode(pos=(505, 507), word='-p'),
  WordNode(pos=(508, 521), word='/usr/src/ruby'),
])


674) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(526, 584), parts=[
  WordNode(pos=(526, 529), word='tar'),
  WordNode(pos=(530, 534), word='-xJf'),
  WordNode(pos=(535, 546), word='ruby.tar.xz'),
  WordNode(pos=(547, 549), word='-C'),
  WordNode(pos=(550, 563), word='/usr/src/ruby'),
  WordNode(pos=(564, 584), word='--strip-components=1'),
])


675) rm ruby.tar.xz

CommandNode(pos=(589, 603), parts=[
  WordNode(pos=(589, 591), word='rm'),
  WordNode(pos=(592, 603), word='ruby.tar.xz'),
])


676) cd /usr/src/ruby

CommandNode(pos=(609, 625), parts=[
  WordNode(pos=(609, 611), word='cd'),
  WordNode(pos=(612, 625), word='/usr/src/ruby'),
])


677) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(635, 669), parts=[
  WordNode(pos=(635, 639), word='echo'),
  WordNode(pos=(640, 669), word='#define ENABLE_PATH_CHECK 0'),
])


678) echo

CommandNode(pos=(673, 677), parts=[
  WordNode(pos=(673, 677), word='echo'),
])


679) cat file.c

CommandNode(pos=(681, 691), parts=[
  WordNode(pos=(681, 684), word='cat'),
  WordNode(pos=(685, 691), word='file.c'),
])


680) mv file.c.new file.c

CommandNode(pos=(713, 733), parts=[
  WordNode(pos=(713, 715), word='mv'),
  WordNode(pos=(716, 726), word='file.c.new'),
  WordNode(pos=(727, 733), word='file.c'),
])


681) autoconf

CommandNode(pos=(739, 747), parts=[
  WordNode(pos=(739, 747), word='autoconf'),
])


682) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


683) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


684) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


685) make install

CommandNode(pos=(916, 928), parts=[
  WordNode(pos=(916, 920), word='make'),
  WordNode(pos=(921, 928), word='install'),
])


686) apt-mark auto '.*' > /dev/null

CommandNode(pos=(934, 964), parts=[
  WordNode(pos=(934, 942), word='apt-mark'),
  WordNode(pos=(943, 947), word='auto'),
  WordNode(pos=(948, 952), word='.*'),
  RedirectNode(output=
    WordNode(pos=(955, 964), word='/dev/null'), pos=(953, 964), type='>'),
])


687) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


688) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec ldd '{}' ';'

CommandNode(pos=(1003, 1086), parts=[
  WordNode(pos=(1003, 1007), word='find'),
  WordNode(pos=(1008, 1018), word='/usr/local'),
  WordNode(pos=(1019, 1024), word='-type'),
  WordNode(pos=(1025, 1026), word='f'),
  WordNode(pos=(1027, 1038), word='-executable'),
  WordNode(pos=(1039, 1043), word='-not'),
  WordNode(pos=(1044, 1046), word='('),
  WordNode(pos=(1047, 1052), word='-name'),
  WordNode(pos=(1053, 1064), word='*tkinter*'),
  WordNode(pos=(1065, 1067), word=')'),
  WordNode(pos=(1068, 1073), word='-exec'),
  WordNode(pos=(1074, 1077), word='ldd'),
  WordNode(pos=(1078, 1082), word='{}'),
  WordNode(pos=(1083, 1086), word=';'),
])


689) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1091, 1119), parts=[
  WordNode(pos=(1091, 1094), word='awk'),
  WordNode(pos=(1095, 1119), word='/=>/ { print $(NF-1) }'),
])


690) sort -u

CommandNode(pos=(1124, 1131), parts=[
  WordNode(pos=(1124, 1128), word='sort'),
  WordNode(pos=(1129, 1131), word='-u'),
])


691) xargs -r dpkg-query --search

CommandNode(pos=(1136, 1164), parts=[
  WordNode(pos=(1136, 1141), word='xargs'),
  WordNode(pos=(1142, 1144), word='-r'),
  WordNode(pos=(1145, 1155), word='dpkg-query'),
  WordNode(pos=(1156, 1164), word='--search'),
])


692) cut -d: -f1

CommandNode(pos=(1169, 1180), parts=[
  WordNode(pos=(1169, 1172), word='cut'),
  WordNode(pos=(1173, 1176), word='-d:'),
  WordNode(pos=(1177, 1180), word='-f1'),
])


693) sort -u

CommandNode(pos=(1185, 1192), parts=[
  WordNode(pos=(1185, 1189), word='sort'),
  WordNode(pos=(1190, 1192), word='-u'),
])


694) xargs -r apt-mark manual

CommandNode(pos=(1197, 1221), parts=[
  WordNode(pos=(1197, 1202), word='xargs'),
  WordNode(pos=(1203, 1205), word='-r'),
  WordNode(pos=(1206, 1214), word='apt-mark'),
  WordNode(pos=(1215, 1221), word='manual'),
])


695) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1226, 1302), parts=[
  WordNode(pos=(1226, 1233), word='apt-get'),
  WordNode(pos=(1234, 1239), word='purge'),
  WordNode(pos=(1240, 1242), word='-y'),
  WordNode(pos=(1243, 1256), word='--auto-remove'),
  WordNode(pos=(1257, 1259), word='-o'),
  WordNode(pos=(1260, 1302), word='APT::AutoRemove::RecommendsImportant=false'),
])


696) cd /

CommandNode(pos=(1308, 1312), parts=[
  WordNode(pos=(1308, 1310), word='cd'),
  WordNode(pos=(1311, 1312), word='/'),
])


697) rm -r /usr/src/ruby

CommandNode(pos=(1317, 1336), parts=[
  WordNode(pos=(1317, 1319), word='rm'),
  WordNode(pos=(1320, 1322), word='-r'),
  WordNode(pos=(1323, 1336), word='/usr/src/ruby'),
])


698) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(1341, 1437), parts=[
  WordNode(pos=(1341, 1345), word='ruby'),
  WordNode(pos=(1346, 1348), word='-e'),
  WordNode(pos=(1349, 1437), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


699) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1442, 1481), parts=[
  WordNode(pos=(1442, 1445), word='gem'),
  WordNode(pos=(1446, 1452), word='update'),
  WordNode(pos=(1453, 1461), word='--system'),
  WordNode(pos=(1462, 1481), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1463, 1480), value='RUBYGEMS_VERSION'),
  ]),
])


700) rm -r /root/.gem/

CommandNode(pos=(1485, 1502), parts=[
  WordNode(pos=(1485, 1487), word='rm'),
  WordNode(pos=(1488, 1490), word='-r'),
  WordNode(pos=(1491, 1502), word='/root/.gem/'),
])


701) ruby --version

CommandNode(pos=(1507, 1521), parts=[
  WordNode(pos=(1507, 1511), word='ruby'),
  WordNode(pos=(1512, 1521), word='--version'),
])


702) gem --version

CommandNode(pos=(1525, 1538), parts=[
  WordNode(pos=(1525, 1528), word='gem'),
  WordNode(pos=(1529, 1538), word='--version'),
])


703) bundle --version

CommandNode(pos=(1542, 1558), parts=[
  WordNode(pos=(1542, 1548), word='bundle'),
  WordNode(pos=(1549, 1558), word='--version'),
])


704) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


705) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


706) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


707) apk add --no-cache   btrfs-progs   e2fsprogs   e2fsprogs-extra   iptables   xfsprogs   xz   pigz

CommandNode(pos=(11, 107), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(32, 43), word='btrfs-progs'),
  WordNode(pos=(46, 55), word='e2fsprogs'),
  WordNode(pos=(58, 73), word='e2fsprogs-extra'),
  WordNode(pos=(76, 84), word='iptables'),
  WordNode(pos=(87, 95), word='xfsprogs'),
  WordNode(pos=(98, 100), word='xz'),
  WordNode(pos=(103, 107), word='pigz'),
])


708) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


709) [ -n "$zfs" ]

CommandNode(pos=(159, 172), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 163), word='-n'),
  WordNode(pos=(164, 170), word='$zfs', parts=[
    ParameterNode(pos=(165, 169), value='zfs'),
  ]),
  WordNode(pos=(171, 172), word=']'),
])


710) apk add --no-cache zfs

CommandNode(pos=(181, 203), parts=[
  WordNode(pos=(181, 184), word='apk'),
  WordNode(pos=(185, 188), word='add'),
  WordNode(pos=(189, 199), word='--no-cache'),
  WordNode(pos=(200, 203), word='zfs'),
])


711) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


712) addgroup -S dockremap

CommandNode(pos=(11, 32), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-S'),
  WordNode(pos=(23, 32), word='dockremap'),
])


713) adduser -S -G dockremap dockremap

CommandNode(pos=(37, 70), parts=[
  WordNode(pos=(37, 44), word='adduser'),
  WordNode(pos=(45, 47), word='-S'),
  WordNode(pos=(48, 50), word='-G'),
  WordNode(pos=(51, 60), word='dockremap'),
  WordNode(pos=(61, 70), word='dockremap'),
])


714) echo 'dockremap:165536:65536' >> /etc/subuid

CommandNode(pos=(75, 119), parts=[
  WordNode(pos=(75, 79), word='echo'),
  WordNode(pos=(80, 104), word='dockremap:165536:65536'),
  RedirectNode(output=
    WordNode(pos=(108, 119), word='/etc/subuid'), pos=(105, 119), type='>>'),
])


715) echo 'dockremap:165536:65536' >> /etc/subgid

CommandNode(pos=(124, 168), parts=[
  WordNode(pos=(124, 128), word='echo'),
  WordNode(pos=(129, 153), word='dockremap:165536:65536'),
  RedirectNode(output=
    WordNode(pos=(157, 168), word='/etc/subgid'), pos=(154, 168), type='>>'),
])


716) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


717) wget -O /usr/local/bin/dind "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"

CommandNode(pos=(11, 113), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/dind'),
  WordNode(pos=(39, 113), word='https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind', parts=[
    ParameterNode(pos=(88, 102), value='DIND_COMMIT'),
  ]),
])


718) chmod +x /usr/local/bin/dind

CommandNode(pos=(116, 144), parts=[
  WordNode(pos=(116, 121), word='chmod'),
  WordNode(pos=(122, 124), word='+x'),
  WordNode(pos=(125, 144), word='/usr/local/bin/dind'),
])


719) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


720) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev

CommandNode(pos=(11, 130), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
  WordNode(pos=(120, 130), word='libzip-dev'),
])


721) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(136, 204), parts=[
  WordNode(pos=(136, 160), word='docker-php-ext-configure'),
  WordNode(pos=(161, 163), word='gd'),
  WordNode(pos=(164, 183), word='--with-png-dir=/usr'),
  WordNode(pos=(184, 204), word='--with-jpeg-dir=/usr'),
])


722) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(207, 275), parts=[
  WordNode(pos=(207, 229), word='docker-php-ext-install'),
  WordNode(pos=(232, 238), word='bcmath'),
  WordNode(pos=(241, 245), word='exif'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(253, 259), word='mysqli'),
  WordNode(pos=(262, 269), word='opcache'),
  WordNode(pos=(272, 275), word='zip'),
])


723) pecl install imagick-3.4.4

CommandNode(pos=(280, 306), parts=[
  WordNode(pos=(280, 284), word='pecl'),
  WordNode(pos=(285, 292), word='install'),
  WordNode(pos=(293, 306), word='imagick-3.4.4'),
])


724) docker-php-ext-enable imagick

CommandNode(pos=(309, 338), parts=[
  WordNode(pos=(309, 330), word='docker-php-ext-enable'),
  WordNode(pos=(331, 338), word='imagick'),
])


725) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(342, 558), parts=[
  AssignmentNode(pos=(342, 558), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(356, 554), parts=[
        CommandNode(pos=(356, 441), parts=[
          WordNode(pos=(356, 363), word='scanelf'),
          WordNode(pos=(364, 372), word='--needed'),
          WordNode(pos=(373, 383), word='--nobanner'),
          WordNode(pos=(384, 392), word='--format'),
          WordNode(pos=(393, 399), word='%n#p'),
          WordNode(pos=(400, 411), word='--recursive'),
          WordNode(pos=(412, 441), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(445, 446)),
        CommandNode(pos=(447, 458), parts=[
          WordNode(pos=(447, 449), word='tr'),
          WordNode(pos=(450, 453), word=','),
          WordNode(pos=(454, 458), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 471), parts=[
          WordNode(pos=(464, 468), word='sort'),
          WordNode(pos=(469, 471), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(475, 476)),
        CommandNode(pos=(477, 554), parts=[
          WordNode(pos=(477, 480), word='awk'),
          WordNode(pos=(481, 554), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(351, 555)),
  ]),
])


726) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(561, 614), parts=[
  WordNode(pos=(561, 564), word='apk'),
  WordNode(pos=(565, 568), word='add'),
  WordNode(pos=(569, 578), word='--virtual'),
  WordNode(pos=(579, 605), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(606, 614), word='$runDeps', parts=[
    ParameterNode(pos=(606, 614), value='runDeps'),
  ]),
])


727) apk del .build-deps

CommandNode(pos=(617, 636), parts=[
  WordNode(pos=(617, 620), word='apk'),
  WordNode(pos=(621, 624), word='del'),
  WordNode(pos=(625, 636), word='.build-deps'),
])


728) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


729) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


730) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


731) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


732) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


733) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


734) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


735) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


736) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


737) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


738) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


739) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


740) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


741) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


742) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


743) apk add --no-cache   bash   less   mysql-client

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='bash'),
  WordNode(pos=(28, 32), word='less'),
  WordNode(pos=(35, 47), word='mysql-client'),
])


744) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


745) mkdir -p /var/www/html

CommandNode(pos=(10, 32), parts=[
  WordNode(pos=(10, 15), word='mkdir'),
  WordNode(pos=(16, 18), word='-p'),
  WordNode(pos=(19, 32), word='/var/www/html'),
])


746) chown -R www-data:www-data /var/www/html

CommandNode(pos=(35, 75), parts=[
  WordNode(pos=(35, 40), word='chown'),
  WordNode(pos=(41, 43), word='-R'),
  WordNode(pos=(44, 61), word='www-data:www-data'),
  WordNode(pos=(62, 75), word='/var/www/html'),
])


747) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


748) apk add --no-cache --virtual .fetch-deps   gnupg

CommandNode(pos=(11, 59), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
])


749) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


750) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(223, 254), parts=[
  WordNode(pos=(223, 229), word='export'),
  WordNode(pos=(230, 254), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(243, 252), parts=[
        WordNode(pos=(243, 249), word='mktemp'),
        WordNode(pos=(250, 252), word='-d'),
      ]), pos=(241, 253)),
  ]),
])


751) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$WORDPRESS_CLI_GPG_KEY"

CommandNode(pos=(257, 344), parts=[
  WordNode(pos=(257, 260), word='gpg'),
  WordNode(pos=(261, 268), word='--batch'),
  WordNode(pos=(269, 280), word='--keyserver'),
  WordNode(pos=(281, 307), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(308, 319), word='--recv-keys'),
  WordNode(pos=(320, 344), word='$WORDPRESS_CLI_GPG_KEY', parts=[
    ParameterNode(pos=(321, 343), value='WORDPRESS_CLI_GPG_KEY'),
  ]),
])


752) gpg --batch --decrypt --output /usr/local/bin/wp /usr/local/bin/wp.gpg

CommandNode(pos=(347, 417), parts=[
  WordNode(pos=(347, 350), word='gpg'),
  WordNode(pos=(351, 358), word='--batch'),
  WordNode(pos=(359, 368), word='--decrypt'),
  WordNode(pos=(369, 377), word='--output'),
  WordNode(pos=(378, 395), word='/usr/local/bin/wp'),
  WordNode(pos=(396, 417), word='/usr/local/bin/wp.gpg'),
])


753) command -v gpgconf

CommandNode(pos=(420, 438), parts=[
  WordNode(pos=(420, 427), word='command'),
  WordNode(pos=(428, 430), word='-v'),
  WordNode(pos=(431, 438), word='gpgconf'),
])


754) gpgconf --kill all

CommandNode(pos=(442, 460), parts=[
  WordNode(pos=(442, 449), word='gpgconf'),
  WordNode(pos=(450, 456), word='--kill'),
  WordNode(pos=(457, 460), word='all'),
])


755) :

CommandNode(pos=(464, 465), parts=[
  WordNode(pos=(464, 465), word=':'),
])


756) rm -rf "$GNUPGHOME" /usr/local/bin/wp.gpg

CommandNode(pos=(468, 509), parts=[
  WordNode(pos=(468, 470), word='rm'),
  WordNode(pos=(471, 474), word='-rf'),
  WordNode(pos=(475, 487), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(476, 486), value='GNUPGHOME'),
  ]),
  WordNode(pos=(488, 509), word='/usr/local/bin/wp.gpg'),
])


757) echo "$WORDPRESS_CLI_SHA512 */usr/local/bin/wp"

CommandNode(pos=(513, 560), parts=[
  WordNode(pos=(513, 517), word='echo'),
  WordNode(pos=(518, 560), word='$WORDPRESS_CLI_SHA512 */usr/local/bin/wp', parts=[
    ParameterNode(pos=(519, 540), value='WORDPRESS_CLI_SHA512'),
  ]),
])


758) sha512sum -c -

CommandNode(pos=(563, 577), parts=[
  WordNode(pos=(563, 572), word='sha512sum'),
  WordNode(pos=(573, 575), word='-c'),
  WordNode(pos=(576, 577), word='-'),
])


759) chmod +x /usr/local/bin/wp

CommandNode(pos=(580, 606), parts=[
  WordNode(pos=(580, 585), word='chmod'),
  WordNode(pos=(586, 588), word='+x'),
  WordNode(pos=(589, 606), word='/usr/local/bin/wp'),
])


760) apk del .fetch-deps

CommandNode(pos=(610, 629), parts=[
  WordNode(pos=(610, 613), word='apk'),
  WordNode(pos=(614, 617), word='del'),
  WordNode(pos=(618, 629), word='.fetch-deps'),
])


761) wp --allow-root --version

CommandNode(pos=(633, 658), parts=[
  WordNode(pos=(633, 635), word='wp'),
  WordNode(pos=(636, 648), word='--allow-root'),
  WordNode(pos=(649, 658), word='--version'),
])


762) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


763) apk add --no-cache --virtual .build-deps   ca-certificates   gcc   libc-dev   linux-headers   lua5.3-dev   make   openssl   openssl-dev   pcre2-dev   readline-dev   tar   zlib-dev

CommandNode(pos=(12, 191), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 76), word='gcc'),
  WordNode(pos=(79, 87), word='libc-dev'),
  WordNode(pos=(90, 103), word='linux-headers'),
  WordNode(pos=(106, 116), word='lua5.3-dev'),
  WordNode(pos=(119, 123), word='make'),
  WordNode(pos=(126, 133), word='openssl'),
  WordNode(pos=(136, 147), word='openssl-dev'),
  WordNode(pos=(150, 159), word='pcre2-dev'),
  WordNode(pos=(162, 174), word='readline-dev'),
  WordNode(pos=(177, 180), word='tar'),
  WordNode(pos=(183, 191), word='zlib-dev'),
])


764) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


765) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


766) sha256sum -c

CommandNode(pos=(280, 292), parts=[
  WordNode(pos=(280, 289), word='sha256sum'),
  WordNode(pos=(290, 292), word='-c'),
])


767) mkdir -p /usr/src/haproxy

CommandNode(pos=(297, 322), parts=[
  WordNode(pos=(297, 302), word='mkdir'),
  WordNode(pos=(303, 305), word='-p'),
  WordNode(pos=(306, 322), word='/usr/src/haproxy'),
])


768) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(327, 391), parts=[
  WordNode(pos=(327, 330), word='tar'),
  WordNode(pos=(331, 335), word='-xzf'),
  WordNode(pos=(336, 350), word='haproxy.tar.gz'),
  WordNode(pos=(351, 353), word='-C'),
  WordNode(pos=(354, 370), word='/usr/src/haproxy'),
  WordNode(pos=(371, 391), word='--strip-components=1'),
])


769) rm haproxy.tar.gz

CommandNode(pos=(396, 413), parts=[
  WordNode(pos=(396, 398), word='rm'),
  WordNode(pos=(399, 413), word='haproxy.tar.gz'),
])


770) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 594), parts=[
  AssignmentNode(pos=(419, 594), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


771) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


772) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(676, 722), parts=[
  WordNode(pos=(676, 680), word='make'),
  WordNode(pos=(681, 683), word='-C'),
  WordNode(pos=(684, 700), word='/usr/src/haproxy'),
  WordNode(pos=(701, 712), word='install-bin'),
  WordNode(pos=(713, 722), word='$makeOpts', parts=[
    ParameterNode(pos=(713, 722), value='makeOpts'),
  ]),
])


773) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(728, 759), parts=[
  WordNode(pos=(728, 733), word='mkdir'),
  WordNode(pos=(734, 736), word='-p'),
  WordNode(pos=(737, 759), word='/usr/local/etc/haproxy'),
])


774) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(764, 836), parts=[
  WordNode(pos=(764, 766), word='cp'),
  WordNode(pos=(767, 769), word='-R'),
  WordNode(pos=(770, 806), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(807, 836), word='/usr/local/etc/haproxy/errors'),
])


775) rm -rf /usr/src/haproxy

CommandNode(pos=(841, 864), parts=[
  WordNode(pos=(841, 843), word='rm'),
  WordNode(pos=(844, 847), word='-rf'),
  WordNode(pos=(848, 864), word='/usr/src/haproxy'),
])


776) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


777) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1072, 1115), parts=[
  WordNode(pos=(1072, 1075), word='apk'),
  WordNode(pos=(1076, 1079), word='add'),
  WordNode(pos=(1080, 1089), word='--virtual'),
  WordNode(pos=(1090, 1106), word='.haproxy-rundeps'),
  WordNode(pos=(1107, 1115), word='$runDeps', parts=[
    ParameterNode(pos=(1107, 1115), value='runDeps'),
  ]),
])


778) apk del .build-deps

CommandNode(pos=(1120, 1139), parts=[
  WordNode(pos=(1120, 1123), word='apk'),
  WordNode(pos=(1124, 1127), word='del'),
  WordNode(pos=(1128, 1139), word='.build-deps'),
])


779) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


780) apk add --no-cache --virtual .build-deps   ca-certificates   gcc   libc-dev   linux-headers   lua5.3-dev   make   openssl   openssl-dev   pcre2-dev   readline-dev   tar   zlib-dev

CommandNode(pos=(12, 191), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 76), word='gcc'),
  WordNode(pos=(79, 87), word='libc-dev'),
  WordNode(pos=(90, 103), word='linux-headers'),
  WordNode(pos=(106, 116), word='lua5.3-dev'),
  WordNode(pos=(119, 123), word='make'),
  WordNode(pos=(126, 133), word='openssl'),
  WordNode(pos=(136, 147), word='openssl-dev'),
  WordNode(pos=(150, 159), word='pcre2-dev'),
  WordNode(pos=(162, 174), word='readline-dev'),
  WordNode(pos=(177, 180), word='tar'),
  WordNode(pos=(183, 191), word='zlib-dev'),
])


781) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


782) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


783) sha256sum -c

CommandNode(pos=(280, 292), parts=[
  WordNode(pos=(280, 289), word='sha256sum'),
  WordNode(pos=(290, 292), word='-c'),
])


784) mkdir -p /usr/src/haproxy

CommandNode(pos=(297, 322), parts=[
  WordNode(pos=(297, 302), word='mkdir'),
  WordNode(pos=(303, 305), word='-p'),
  WordNode(pos=(306, 322), word='/usr/src/haproxy'),
])


785) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(327, 391), parts=[
  WordNode(pos=(327, 330), word='tar'),
  WordNode(pos=(331, 335), word='-xzf'),
  WordNode(pos=(336, 350), word='haproxy.tar.gz'),
  WordNode(pos=(351, 353), word='-C'),
  WordNode(pos=(354, 370), word='/usr/src/haproxy'),
  WordNode(pos=(371, 391), word='--strip-components=1'),
])


786) rm haproxy.tar.gz

CommandNode(pos=(396, 413), parts=[
  WordNode(pos=(396, 398), word='rm'),
  WordNode(pos=(399, 413), word='haproxy.tar.gz'),
])


787) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 594), parts=[
  AssignmentNode(pos=(419, 594), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


788) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


789) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(676, 722), parts=[
  WordNode(pos=(676, 680), word='make'),
  WordNode(pos=(681, 683), word='-C'),
  WordNode(pos=(684, 700), word='/usr/src/haproxy'),
  WordNode(pos=(701, 712), word='install-bin'),
  WordNode(pos=(713, 722), word='$makeOpts', parts=[
    ParameterNode(pos=(713, 722), value='makeOpts'),
  ]),
])


790) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(728, 759), parts=[
  WordNode(pos=(728, 733), word='mkdir'),
  WordNode(pos=(734, 736), word='-p'),
  WordNode(pos=(737, 759), word='/usr/local/etc/haproxy'),
])


791) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(764, 836), parts=[
  WordNode(pos=(764, 766), word='cp'),
  WordNode(pos=(767, 769), word='-R'),
  WordNode(pos=(770, 806), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(807, 836), word='/usr/local/etc/haproxy/errors'),
])


792) rm -rf /usr/src/haproxy

CommandNode(pos=(841, 864), parts=[
  WordNode(pos=(841, 843), word='rm'),
  WordNode(pos=(844, 847), word='-rf'),
  WordNode(pos=(848, 864), word='/usr/src/haproxy'),
])


793) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


794) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1072, 1115), parts=[
  WordNode(pos=(1072, 1075), word='apk'),
  WordNode(pos=(1076, 1079), word='add'),
  WordNode(pos=(1080, 1089), word='--virtual'),
  WordNode(pos=(1090, 1106), word='.haproxy-rundeps'),
  WordNode(pos=(1107, 1115), word='$runDeps', parts=[
    ParameterNode(pos=(1107, 1115), value='runDeps'),
  ]),
])


795) apk del .build-deps

CommandNode(pos=(1120, 1139), parts=[
  WordNode(pos=(1120, 1123), word='apk'),
  WordNode(pos=(1124, 1127), word='del'),
  WordNode(pos=(1128, 1139), word='.build-deps'),
])


796) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


797) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


798) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


799) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


800) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


801) apt-get update

CommandNode(pos=(72, 86), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 86), word='update'),
])


802) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


803) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(149, 176), parts=[
  WordNode(pos=(149, 151), word='rm'),
  WordNode(pos=(152, 155), word='-rf'),
  WordNode(pos=(156, 176), word='/var/lib/apt/lists/*'),
])


804) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


805) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


806) sha256sum -c -

CommandNode(pos=(333, 347), parts=[
  WordNode(pos=(333, 342), word='sha256sum'),
  WordNode(pos=(343, 345), word='-c'),
  WordNode(pos=(346, 347), word='-'),
])


807) mkdir -p /usr/src/ruby

CommandNode(pos=(353, 375), parts=[
  WordNode(pos=(353, 358), word='mkdir'),
  WordNode(pos=(359, 361), word='-p'),
  WordNode(pos=(362, 375), word='/usr/src/ruby'),
])


808) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(380, 438), parts=[
  WordNode(pos=(380, 383), word='tar'),
  WordNode(pos=(384, 388), word='-xJf'),
  WordNode(pos=(389, 400), word='ruby.tar.xz'),
  WordNode(pos=(401, 403), word='-C'),
  WordNode(pos=(404, 417), word='/usr/src/ruby'),
  WordNode(pos=(418, 438), word='--strip-components=1'),
])


809) rm ruby.tar.xz

CommandNode(pos=(443, 457), parts=[
  WordNode(pos=(443, 445), word='rm'),
  WordNode(pos=(446, 457), word='ruby.tar.xz'),
])


810) cd /usr/src/ruby

CommandNode(pos=(463, 479), parts=[
  WordNode(pos=(463, 465), word='cd'),
  WordNode(pos=(466, 479), word='/usr/src/ruby'),
])


811) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(489, 523), parts=[
  WordNode(pos=(489, 493), word='echo'),
  WordNode(pos=(494, 523), word='#define ENABLE_PATH_CHECK 0'),
])


812) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


813) cat file.c

CommandNode(pos=(535, 545), parts=[
  WordNode(pos=(535, 538), word='cat'),
  WordNode(pos=(539, 545), word='file.c'),
])


814) mv file.c.new file.c

CommandNode(pos=(567, 587), parts=[
  WordNode(pos=(567, 569), word='mv'),
  WordNode(pos=(570, 580), word='file.c.new'),
  WordNode(pos=(581, 587), word='file.c'),
])


815) autoconf

CommandNode(pos=(593, 601), parts=[
  WordNode(pos=(593, 601), word='autoconf'),
])


816) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


817) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


818) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


819) make install

CommandNode(pos=(770, 782), parts=[
  WordNode(pos=(770, 774), word='make'),
  WordNode(pos=(775, 782), word='install'),
])


820) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


821) cd /

CommandNode(pos=(834, 838), parts=[
  WordNode(pos=(834, 836), word='cd'),
  WordNode(pos=(837, 838), word='/'),
])


822) rm -r /usr/src/ruby

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 848), word='-r'),
  WordNode(pos=(849, 862), word='/usr/src/ruby'),
])


823) ruby --version

CommandNode(pos=(867, 881), parts=[
  WordNode(pos=(867, 871), word='ruby'),
  WordNode(pos=(872, 881), word='--version'),
])


824) gem --version

CommandNode(pos=(885, 898), parts=[
  WordNode(pos=(885, 888), word='gem'),
  WordNode(pos=(889, 898), word='--version'),
])


825) bundle --version

CommandNode(pos=(902, 918), parts=[
  WordNode(pos=(902, 908), word='bundle'),
  WordNode(pos=(909, 918), word='--version'),
])


826) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


827) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


828) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


829) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


830) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


831) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


832) groupadd -r mongodb

CommandNode(pos=(0, 19), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 19), word='mongodb'),
])


833) useradd -r -g mongodb mongodb

CommandNode(pos=(23, 52), parts=[
  WordNode(pos=(23, 30), word='useradd'),
  WordNode(pos=(31, 33), word='-r'),
  WordNode(pos=(34, 36), word='-g'),
  WordNode(pos=(37, 44), word='mongodb'),
  WordNode(pos=(45, 52), word='mongodb'),
])


834) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


835) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


836) apt-get install -y --no-install-recommends   ca-certificates   jq   numactl

CommandNode(pos=(28, 103), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 93), word='jq'),
  WordNode(pos=(96, 103), word='numactl'),
])


837) command -v ps > /dev/null

CommandNode(pos=(113, 138), parts=[
  WordNode(pos=(113, 120), word='command'),
  WordNode(pos=(121, 123), word='-v'),
  WordNode(pos=(124, 126), word='ps'),
  RedirectNode(output=
    WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
])


838) apt-get install -y --no-install-recommends procps

CommandNode(pos=(147, 196), parts=[
  WordNode(pos=(147, 154), word='apt-get'),
  WordNode(pos=(155, 162), word='install'),
  WordNode(pos=(163, 165), word='-y'),
  WordNode(pos=(166, 189), word='--no-install-recommends'),
  WordNode(pos=(190, 196), word='procps'),
])


839) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 206), word='rm'),
  WordNode(pos=(207, 210), word='-rf'),
  WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
])


840) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


841) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


842) apt-get install -y --no-install-recommends   wget

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='wget'),
])


843) command -v gpg > /dev/null

CommandNode(pos=(87, 113), parts=[
  WordNode(pos=(87, 94), word='command'),
  WordNode(pos=(95, 97), word='-v'),
  WordNode(pos=(98, 101), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
])


844) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(122, 178), parts=[
  WordNode(pos=(122, 129), word='apt-get'),
  WordNode(pos=(130, 137), word='install'),
  WordNode(pos=(138, 140), word='-y'),
  WordNode(pos=(141, 164), word='--no-install-recommends'),
  WordNode(pos=(165, 170), word='gnupg'),
  WordNode(pos=(171, 178), word='dirmngr'),
])


845) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(186, 213), parts=[
  WordNode(pos=(186, 188), word='rm'),
  WordNode(pos=(189, 192), word='-rf'),
  WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
])


846) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


847) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


848) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


849) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


850) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(547, 650), parts=[
  WordNode(pos=(547, 550), word='gpg'),
  WordNode(pos=(551, 558), word='--batch'),
  WordNode(pos=(559, 570), word='--keyserver'),
  WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(598, 609), word='--recv-keys'),
  WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


851) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(653, 717), parts=[
  WordNode(pos=(653, 656), word='gpg'),
  WordNode(pos=(657, 664), word='--batch'),
  WordNode(pos=(665, 673), word='--verify'),
  WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
])


852) command -v gpgconf

CommandNode(pos=(720, 738), parts=[
  WordNode(pos=(720, 727), word='command'),
  WordNode(pos=(728, 730), word='-v'),
  WordNode(pos=(731, 738), word='gpgconf'),
])


853) gpgconf --kill all

CommandNode(pos=(742, 760), parts=[
  WordNode(pos=(742, 749), word='gpgconf'),
  WordNode(pos=(750, 756), word='--kill'),
  WordNode(pos=(757, 760), word='all'),
])


854) :

CommandNode(pos=(764, 765), parts=[
  WordNode(pos=(764, 765), word=':'),
])


855) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


856) chmod +x /usr/local/bin/gosu

CommandNode(pos=(813, 841), parts=[
  WordNode(pos=(813, 818), word='chmod'),
  WordNode(pos=(819, 821), word='+x'),
  WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
])


857) gosu --version

CommandNode(pos=(844, 858), parts=[
  WordNode(pos=(844, 848), word='gosu'),
  WordNode(pos=(849, 858), word='--version'),
])


858) gosu nobody true

CommandNode(pos=(861, 877), parts=[
  WordNode(pos=(861, 865), word='gosu'),
  WordNode(pos=(866, 872), word='nobody'),
  WordNode(pos=(873, 877), word='true'),
])


859) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


860) apt-get purge -y --auto-remove wget

CommandNode(pos=(978, 1013), parts=[
  WordNode(pos=(978, 985), word='apt-get'),
  WordNode(pos=(986, 991), word='purge'),
  WordNode(pos=(992, 994), word='-y'),
  WordNode(pos=(995, 1008), word='--auto-remove'),
  WordNode(pos=(1009, 1013), word='wget'),
])


861) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


862) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


863) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


864) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


865) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


866) command -v gpgconf

CommandNode(pos=(220, 238), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
])


867) gpgconf --kill all

CommandNode(pos=(242, 260), parts=[
  WordNode(pos=(242, 249), word='gpgconf'),
  WordNode(pos=(250, 256), word='--kill'),
  WordNode(pos=(257, 260), word='all'),
])


868) :

CommandNode(pos=(264, 265), parts=[
  WordNode(pos=(264, 265), word=':'),
])


869) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


870) apt-key list

CommandNode(pos=(289, 301), parts=[
  WordNode(pos=(289, 296), word='apt-key'),
  WordNode(pos=(297, 301), word='list'),
])


871) echo "deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


872) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


873) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


874) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


875) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


876) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(249, 276), parts=[
  WordNode(pos=(249, 251), word='rm'),
  WordNode(pos=(252, 255), word='-rf'),
  WordNode(pos=(256, 276), word='/var/lib/apt/lists/*'),
])


877) rm -rf /var/lib/mongodb

CommandNode(pos=(281, 304), parts=[
  WordNode(pos=(281, 283), word='rm'),
  WordNode(pos=(284, 287), word='-rf'),
  WordNode(pos=(288, 304), word='/var/lib/mongodb'),
])


878) mv /etc/mongod.conf /etc/mongod.conf.orig

CommandNode(pos=(309, 350), parts=[
  WordNode(pos=(309, 311), word='mv'),
  WordNode(pos=(312, 328), word='/etc/mongod.conf'),
  WordNode(pos=(329, 350), word='/etc/mongod.conf.orig'),
])


879) mkdir -p /data/db /data/configdb

CommandNode(pos=(0, 32), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 17), word='/data/db'),
  WordNode(pos=(18, 32), word='/data/configdb'),
])


880) chown -R mongodb:mongodb /data/db /data/configdb

CommandNode(pos=(37, 85), parts=[
  WordNode(pos=(37, 42), word='chown'),
  WordNode(pos=(43, 45), word='-R'),
  WordNode(pos=(46, 61), word='mongodb:mongodb'),
  WordNode(pos=(62, 70), word='/data/db'),
  WordNode(pos=(71, 85), word='/data/configdb'),
])


881) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


882) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


883) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


884) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


885) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


886) apt-get update

CommandNode(pos=(72, 86), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 86), word='update'),
])


887) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


888) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(149, 176), parts=[
  WordNode(pos=(149, 151), word='rm'),
  WordNode(pos=(152, 155), word='-rf'),
  WordNode(pos=(156, 176), word='/var/lib/apt/lists/*'),
])


889) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


890) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


891) sha256sum -c -

CommandNode(pos=(333, 347), parts=[
  WordNode(pos=(333, 342), word='sha256sum'),
  WordNode(pos=(343, 345), word='-c'),
  WordNode(pos=(346, 347), word='-'),
])


892) mkdir -p /usr/src/ruby

CommandNode(pos=(353, 375), parts=[
  WordNode(pos=(353, 358), word='mkdir'),
  WordNode(pos=(359, 361), word='-p'),
  WordNode(pos=(362, 375), word='/usr/src/ruby'),
])


893) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(380, 438), parts=[
  WordNode(pos=(380, 383), word='tar'),
  WordNode(pos=(384, 388), word='-xJf'),
  WordNode(pos=(389, 400), word='ruby.tar.xz'),
  WordNode(pos=(401, 403), word='-C'),
  WordNode(pos=(404, 417), word='/usr/src/ruby'),
  WordNode(pos=(418, 438), word='--strip-components=1'),
])


894) rm ruby.tar.xz

CommandNode(pos=(443, 457), parts=[
  WordNode(pos=(443, 445), word='rm'),
  WordNode(pos=(446, 457), word='ruby.tar.xz'),
])


895) cd /usr/src/ruby

CommandNode(pos=(463, 479), parts=[
  WordNode(pos=(463, 465), word='cd'),
  WordNode(pos=(466, 479), word='/usr/src/ruby'),
])


896) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(489, 523), parts=[
  WordNode(pos=(489, 493), word='echo'),
  WordNode(pos=(494, 523), word='#define ENABLE_PATH_CHECK 0'),
])


897) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


898) cat file.c

CommandNode(pos=(535, 545), parts=[
  WordNode(pos=(535, 538), word='cat'),
  WordNode(pos=(539, 545), word='file.c'),
])


899) mv file.c.new file.c

CommandNode(pos=(567, 587), parts=[
  WordNode(pos=(567, 569), word='mv'),
  WordNode(pos=(570, 580), word='file.c.new'),
  WordNode(pos=(581, 587), word='file.c'),
])


900) autoconf

CommandNode(pos=(593, 601), parts=[
  WordNode(pos=(593, 601), word='autoconf'),
])


901) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


902) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


903) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


904) make install

CommandNode(pos=(770, 782), parts=[
  WordNode(pos=(770, 774), word='make'),
  WordNode(pos=(775, 782), word='install'),
])


905) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


906) cd /

CommandNode(pos=(834, 838), parts=[
  WordNode(pos=(834, 836), word='cd'),
  WordNode(pos=(837, 838), word='/'),
])


907) rm -r /usr/src/ruby

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 848), word='-r'),
  WordNode(pos=(849, 862), word='/usr/src/ruby'),
])


908) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(867, 963), parts=[
  WordNode(pos=(867, 871), word='ruby'),
  WordNode(pos=(872, 874), word='-e'),
  WordNode(pos=(875, 963), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


909) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(968, 1007), parts=[
  WordNode(pos=(968, 971), word='gem'),
  WordNode(pos=(972, 978), word='update'),
  WordNode(pos=(979, 987), word='--system'),
  WordNode(pos=(988, 1007), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(989, 1006), value='RUBYGEMS_VERSION'),
  ]),
])


910) rm -r /root/.gem/

CommandNode(pos=(1011, 1028), parts=[
  WordNode(pos=(1011, 1013), word='rm'),
  WordNode(pos=(1014, 1016), word='-r'),
  WordNode(pos=(1017, 1028), word='/root/.gem/'),
])


911) ruby --version

CommandNode(pos=(1033, 1047), parts=[
  WordNode(pos=(1033, 1037), word='ruby'),
  WordNode(pos=(1038, 1047), word='--version'),
])


912) gem --version

CommandNode(pos=(1051, 1064), parts=[
  WordNode(pos=(1051, 1054), word='gem'),
  WordNode(pos=(1055, 1064), word='--version'),
])


913) bundle --version

CommandNode(pos=(1068, 1084), parts=[
  WordNode(pos=(1068, 1074), word='bundle'),
  WordNode(pos=(1075, 1084), word='--version'),
])


914) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


915) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


916) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


917) apt-get install -y --no-install-recommends   ca-certificates   libexpat1   libffi6   libgdbm3   libsqlite3-0

CommandNode(pos=(18, 126), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 90), word='libexpat1'),
  WordNode(pos=(93, 100), word='libffi6'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 126), word='libsqlite3-0'),
])


918) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(131, 158), parts=[
  WordNode(pos=(131, 133), word='rm'),
  WordNode(pos=(134, 137), word='-rf'),
  WordNode(pos=(138, 158), word='/var/lib/apt/lists/*'),
])


919) apk add --no-cache   ca-certificates

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
])


920) [ ! -e /etc/nsswitch.conf ]

CommandNode(pos=(0, 27), parts=[
  WordNode(pos=(0, 1), word='['),
  WordNode(pos=(2, 3), word='!'),
  WordNode(pos=(4, 6), word='-e'),
  WordNode(pos=(7, 25), word='/etc/nsswitch.conf'),
  WordNode(pos=(26, 27), word=']'),
])


921) echo 'hosts: files dns' > /etc/nsswitch.conf

CommandNode(pos=(31, 75), parts=[
  WordNode(pos=(31, 35), word='echo'),
  WordNode(pos=(36, 54), word='hosts: files dns'),
  RedirectNode(output=
    WordNode(pos=(57, 75), word='/etc/nsswitch.conf'), pos=(55, 75), type='>'),
])


922) groupadd -r cassandra --gid=999

CommandNode(pos=(0, 31), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 21), word='cassandra'),
  WordNode(pos=(22, 31), word='--gid=999'),
])


923) useradd -r -g cassandra --uid=999 cassandra

CommandNode(pos=(35, 78), parts=[
  WordNode(pos=(35, 42), word='useradd'),
  WordNode(pos=(43, 45), word='-r'),
  WordNode(pos=(46, 48), word='-g'),
  WordNode(pos=(49, 58), word='cassandra'),
  WordNode(pos=(59, 68), word='--uid=999'),
  WordNode(pos=(69, 78), word='cassandra'),
])


924) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


925) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


926) apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2

CommandNode(pos=(27, 104), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 84), word='libjemalloc1'),
  WordNode(pos=(87, 93), word='procps'),
  WordNode(pos=(96, 104), word='iproute2'),
])


927) command -v gpg > /dev/null

CommandNode(pos=(114, 140), parts=[
  WordNode(pos=(114, 121), word='command'),
  WordNode(pos=(122, 124), word='-v'),
  WordNode(pos=(125, 128), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
])


928) apt-get install -y --no-install-recommends    dirmngr    gnupg

CommandNode(pos=(149, 211), parts=[
  WordNode(pos=(149, 156), word='apt-get'),
  WordNode(pos=(157, 164), word='install'),
  WordNode(pos=(165, 167), word='-y'),
  WordNode(pos=(168, 191), word='--no-install-recommends'),
  WordNode(pos=(195, 202), word='dirmngr'),
  WordNode(pos=(206, 211), word='gnupg'),
])


929) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(222, 249), parts=[
  WordNode(pos=(222, 224), word='rm'),
  WordNode(pos=(225, 228), word='-rf'),
  WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
])


930) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


931) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


932) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


933) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


934) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


935) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


936) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


937) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


938) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


939) command -v gpgconf

CommandNode(pos=(613, 631), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
])


940) gpgconf --kill all

CommandNode(pos=(635, 653), parts=[
  WordNode(pos=(635, 642), word='gpgconf'),
  WordNode(pos=(643, 649), word='--kill'),
  WordNode(pos=(650, 653), word='all'),
])


941) :

CommandNode(pos=(657, 658), parts=[
  WordNode(pos=(657, 658), word=':'),
])


942) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


943) chmod +x /usr/local/bin/gosu

CommandNode(pos=(714, 742), parts=[
  WordNode(pos=(714, 719), word='chmod'),
  WordNode(pos=(720, 722), word='+x'),
  WordNode(pos=(723, 742), word='/usr/local/bin/gosu'),
])


944) gosu nobody true

CommandNode(pos=(747, 763), parts=[
  WordNode(pos=(747, 751), word='gosu'),
  WordNode(pos=(752, 758), word='nobody'),
  WordNode(pos=(759, 763), word='true'),
])


945) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(768, 819), parts=[
  WordNode(pos=(768, 775), word='apt-get'),
  WordNode(pos=(776, 781), word='purge'),
  WordNode(pos=(782, 784), word='-y'),
  WordNode(pos=(785, 798), word='--auto-remove'),
  WordNode(pos=(799, 814), word='ca-certificates'),
  WordNode(pos=(815, 819), word='wget'),
])


946) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


947) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


948) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


949) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


950) command -v gpgconf

CommandNode(pos=(222, 240), parts=[
  WordNode(pos=(222, 229), word='command'),
  WordNode(pos=(230, 232), word='-v'),
  WordNode(pos=(233, 240), word='gpgconf'),
])


951) gpgconf --kill all

CommandNode(pos=(244, 262), parts=[
  WordNode(pos=(244, 251), word='gpgconf'),
  WordNode(pos=(252, 258), word='--kill'),
  WordNode(pos=(259, 262), word='all'),
])


952) :

CommandNode(pos=(266, 267), parts=[
  WordNode(pos=(266, 267), word=':'),
])


953) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


954) apt-key list

CommandNode(pos=(292, 304), parts=[
  WordNode(pos=(292, 299), word='apt-key'),
  WordNode(pos=(300, 304), word='list'),
])


955) ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh

CommandNode(pos=(0, 62), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 62), word='/docker-entrypoint.sh'),
])


956) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


957) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


958) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


959) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


960) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


961) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


962) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


963) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


964) apt-get update

CommandNode(pos=(72, 86), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 86), word='update'),
])


965) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


966) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(149, 176), parts=[
  WordNode(pos=(149, 151), word='rm'),
  WordNode(pos=(152, 155), word='-rf'),
  WordNode(pos=(156, 176), word='/var/lib/apt/lists/*'),
])


967) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


968) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


969) sha256sum -c -

CommandNode(pos=(333, 347), parts=[
  WordNode(pos=(333, 342), word='sha256sum'),
  WordNode(pos=(343, 345), word='-c'),
  WordNode(pos=(346, 347), word='-'),
])


970) mkdir -p /usr/src/ruby

CommandNode(pos=(353, 375), parts=[
  WordNode(pos=(353, 358), word='mkdir'),
  WordNode(pos=(359, 361), word='-p'),
  WordNode(pos=(362, 375), word='/usr/src/ruby'),
])


971) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(380, 438), parts=[
  WordNode(pos=(380, 383), word='tar'),
  WordNode(pos=(384, 388), word='-xJf'),
  WordNode(pos=(389, 400), word='ruby.tar.xz'),
  WordNode(pos=(401, 403), word='-C'),
  WordNode(pos=(404, 417), word='/usr/src/ruby'),
  WordNode(pos=(418, 438), word='--strip-components=1'),
])


972) rm ruby.tar.xz

CommandNode(pos=(443, 457), parts=[
  WordNode(pos=(443, 445), word='rm'),
  WordNode(pos=(446, 457), word='ruby.tar.xz'),
])


973) cd /usr/src/ruby

CommandNode(pos=(463, 479), parts=[
  WordNode(pos=(463, 465), word='cd'),
  WordNode(pos=(466, 479), word='/usr/src/ruby'),
])


974) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(489, 523), parts=[
  WordNode(pos=(489, 493), word='echo'),
  WordNode(pos=(494, 523), word='#define ENABLE_PATH_CHECK 0'),
])


975) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


976) cat file.c

CommandNode(pos=(535, 545), parts=[
  WordNode(pos=(535, 538), word='cat'),
  WordNode(pos=(539, 545), word='file.c'),
])


977) mv file.c.new file.c

CommandNode(pos=(567, 587), parts=[
  WordNode(pos=(567, 569), word='mv'),
  WordNode(pos=(570, 580), word='file.c.new'),
  WordNode(pos=(581, 587), word='file.c'),
])


978) autoconf

CommandNode(pos=(593, 601), parts=[
  WordNode(pos=(593, 601), word='autoconf'),
])


979) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


980) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


981) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


982) make install

CommandNode(pos=(770, 782), parts=[
  WordNode(pos=(770, 774), word='make'),
  WordNode(pos=(775, 782), word='install'),
])


983) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


984) cd /

CommandNode(pos=(834, 838), parts=[
  WordNode(pos=(834, 836), word='cd'),
  WordNode(pos=(837, 838), word='/'),
])


985) rm -r /usr/src/ruby

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 848), word='-r'),
  WordNode(pos=(849, 862), word='/usr/src/ruby'),
])


986) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(867, 963), parts=[
  WordNode(pos=(867, 871), word='ruby'),
  WordNode(pos=(872, 874), word='-e'),
  WordNode(pos=(875, 963), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


987) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(968, 1007), parts=[
  WordNode(pos=(968, 971), word='gem'),
  WordNode(pos=(972, 978), word='update'),
  WordNode(pos=(979, 987), word='--system'),
  WordNode(pos=(988, 1007), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(989, 1006), value='RUBYGEMS_VERSION'),
  ]),
])


988) rm -r /root/.gem/

CommandNode(pos=(1011, 1028), parts=[
  WordNode(pos=(1011, 1013), word='rm'),
  WordNode(pos=(1014, 1016), word='-r'),
  WordNode(pos=(1017, 1028), word='/root/.gem/'),
])


989) ruby --version

CommandNode(pos=(1033, 1047), parts=[
  WordNode(pos=(1033, 1037), word='ruby'),
  WordNode(pos=(1038, 1047), word='--version'),
])


990) gem --version

CommandNode(pos=(1051, 1064), parts=[
  WordNode(pos=(1051, 1054), word='gem'),
  WordNode(pos=(1055, 1064), word='--version'),
])


991) bundle --version

CommandNode(pos=(1068, 1084), parts=[
  WordNode(pos=(1068, 1074), word='bundle'),
  WordNode(pos=(1075, 1084), word='--version'),
])


992) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


993) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


994) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


995) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


996) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


997) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


998) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


999) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


1000) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


1001) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1002) apk add --no-cache --virtual .fetch-deps   ca-certificates   openssl   tar

CommandNode(pos=(13, 87), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 53), word='.fetch-deps'),
  WordNode(pos=(56, 71), word='ca-certificates'),
  WordNode(pos=(74, 81), word='openssl'),
  WordNode(pos=(84, 87), word='tar'),
])


1003) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


1004) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


1005) sha256sum -c -

CommandNode(pos=(248, 262), parts=[
  WordNode(pos=(248, 257), word='sha256sum'),
  WordNode(pos=(258, 260), word='-c'),
  WordNode(pos=(261, 262), word='-'),
])


1006) mkdir -p /usr/src/postgresql

CommandNode(pos=(267, 295), parts=[
  WordNode(pos=(267, 272), word='mkdir'),
  WordNode(pos=(273, 275), word='-p'),
  WordNode(pos=(276, 295), word='/usr/src/postgresql'),
])


1007) tar   --extract   --file postgresql.tar.bz2   --directory /usr/src/postgresql   --strip-components 1

CommandNode(pos=(300, 400), parts=[
  WordNode(pos=(300, 303), word='tar'),
  WordNode(pos=(306, 315), word='--extract'),
  WordNode(pos=(318, 324), word='--file'),
  WordNode(pos=(325, 343), word='postgresql.tar.bz2'),
  WordNode(pos=(346, 357), word='--directory'),
  WordNode(pos=(358, 377), word='/usr/src/postgresql'),
  WordNode(pos=(380, 398), word='--strip-components'),
  WordNode(pos=(399, 400), word='1'),
])


1008) rm postgresql.tar.bz2

CommandNode(pos=(405, 426), parts=[
  WordNode(pos=(405, 407), word='rm'),
  WordNode(pos=(408, 426), word='postgresql.tar.bz2'),
])


1009) apk add --no-cache --virtual .build-deps   bison   coreutils   dpkg-dev dpkg   flex   gcc   libc-dev   libedit-dev   libxml2-dev   libxslt-dev   linux-headers   make   openssl-dev   perl-utils   perl-ipc-run   util-linux-dev   zlib-dev

CommandNode(pos=(432, 667), parts=[
  WordNode(pos=(432, 435), word='apk'),
  WordNode(pos=(436, 439), word='add'),
  WordNode(pos=(440, 450), word='--no-cache'),
  WordNode(pos=(451, 460), word='--virtual'),
  WordNode(pos=(461, 472), word='.build-deps'),
  WordNode(pos=(475, 480), word='bison'),
  WordNode(pos=(483, 492), word='coreutils'),
  WordNode(pos=(495, 503), word='dpkg-dev'),
  WordNode(pos=(504, 508), word='dpkg'),
  WordNode(pos=(511, 515), word='flex'),
  WordNode(pos=(518, 521), word='gcc'),
  WordNode(pos=(524, 532), word='libc-dev'),
  WordNode(pos=(535, 546), word='libedit-dev'),
  WordNode(pos=(549, 560), word='libxml2-dev'),
  WordNode(pos=(563, 574), word='libxslt-dev'),
  WordNode(pos=(577, 590), word='linux-headers'),
  WordNode(pos=(593, 597), word='make'),
  WordNode(pos=(600, 611), word='openssl-dev'),
  WordNode(pos=(614, 624), word='perl-utils'),
  WordNode(pos=(627, 639), word='perl-ipc-run'),
  WordNode(pos=(642, 656), word='util-linux-dev'),
  WordNode(pos=(659, 667), word='zlib-dev'),
])


1010) cd /usr/src/postgresql

CommandNode(pos=(673, 695), parts=[
  WordNode(pos=(673, 675), word='cd'),
  WordNode(pos=(676, 695), word='/usr/src/postgresql'),
])


1011) awk '$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\"/tmp\"" { $3 = "\"/var/run/postgresql\""; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new

CommandNode(pos=(700, 899), parts=[
  WordNode(pos=(700, 703), word='awk'),
  WordNode(pos=(704, 831), word='$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\\"/tmp\\"" { $3 = "\\"/var/run/postgresql\\""; print; next } { print }'),
  WordNode(pos=(832, 862), word='src/include/pg_config_manual.h'),
  RedirectNode(output=
    WordNode(pos=(865, 899), word='src/include/pg_config_manual.h.new'), pos=(863, 899), type='>'),
])


1012) grep '/var/run/postgresql' src/include/pg_config_manual.h.new

CommandNode(pos=(904, 965), parts=[
  WordNode(pos=(904, 908), word='grep'),
  WordNode(pos=(909, 930), word='/var/run/postgresql'),
  WordNode(pos=(931, 965), word='src/include/pg_config_manual.h.new'),
])


1013) mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h

CommandNode(pos=(970, 1038), parts=[
  WordNode(pos=(970, 972), word='mv'),
  WordNode(pos=(973, 1007), word='src/include/pg_config_manual.h.new'),
  WordNode(pos=(1008, 1038), word='src/include/pg_config_manual.h'),
])


1014) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1043, 1100), parts=[
  AssignmentNode(pos=(1043, 1100), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1054, 1098), parts=[
        WordNode(pos=(1054, 1071), word='dpkg-architecture'),
        WordNode(pos=(1072, 1079), word='--query'),
        WordNode(pos=(1080, 1098), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1052, 1099)),
  ]),
])


1015) wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1105, 1242), parts=[
  WordNode(pos=(1105, 1109), word='wget'),
  WordNode(pos=(1110, 1112), word='-O'),
  WordNode(pos=(1113, 1132), word='config/config.guess'),
  WordNode(pos=(1133, 1242), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


1016) wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1247, 1380), parts=[
  WordNode(pos=(1247, 1251), word='wget'),
  WordNode(pos=(1252, 1254), word='-O'),
  WordNode(pos=(1255, 1272), word='config/config.sub'),
  WordNode(pos=(1273, 1380), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


1017) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt

CommandNode(pos=(1385, 1754), parts=[
  WordNode(pos=(1385, 1396), word='./configure'),
  WordNode(pos=(1399, 1417), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1408, 1416), value='gnuArch'),
  ]),
  WordNode(pos=(1420, 1446), word='--enable-integer-datetimes'),
  WordNode(pos=(1449, 1471), word='--enable-thread-safety'),
  WordNode(pos=(1474, 1492), word='--enable-tap-tests'),
  WordNode(pos=(1495, 1510), word='--disable-rpath'),
  WordNode(pos=(1513, 1529), word='--with-uuid=e2fs'),
  WordNode(pos=(1532, 1545), word='--with-gnu-ld'),
  WordNode(pos=(1548, 1566), word='--with-pgport=5432'),
  WordNode(pos=(1569, 1609), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1612, 1631), word='--prefix=/usr/local'),
  WordNode(pos=(1634, 1668), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1671, 1702), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1707, 1721), word='--with-openssl'),
  WordNode(pos=(1724, 1737), word='--with-libxml'),
  WordNode(pos=(1740, 1754), word='--with-libxslt'),
])


1018) make -j "$(nproc)" world

CommandNode(pos=(1759, 1783), parts=[
  WordNode(pos=(1759, 1763), word='make'),
  WordNode(pos=(1764, 1766), word='-j'),
  WordNode(pos=(1767, 1777), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1770, 1775), parts=[
        WordNode(pos=(1770, 1775), word='nproc'),
      ]), pos=(1768, 1776)),
  ]),
  WordNode(pos=(1778, 1783), word='world'),
])


1019) make install-world

CommandNode(pos=(1788, 1806), parts=[
  WordNode(pos=(1788, 1792), word='make'),
  WordNode(pos=(1793, 1806), word='install-world'),
])


1020) make -C contrib install

CommandNode(pos=(1811, 1834), parts=[
  WordNode(pos=(1811, 1815), word='make'),
  WordNode(pos=(1816, 1818), word='-C'),
  WordNode(pos=(1819, 1826), word='contrib'),
  WordNode(pos=(1827, 1834), word='install'),
])


1021) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1840, 2037), parts=[
  AssignmentNode(pos=(1840, 2037), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1854, 2033), parts=[
        CommandNode(pos=(1854, 1920), parts=[
          WordNode(pos=(1854, 1861), word='scanelf'),
          WordNode(pos=(1862, 1870), word='--needed'),
          WordNode(pos=(1871, 1881), word='--nobanner'),
          WordNode(pos=(1882, 1890), word='--format'),
          WordNode(pos=(1891, 1897), word='%n#p'),
          WordNode(pos=(1898, 1909), word='--recursive'),
          WordNode(pos=(1910, 1920), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1924, 1925)),
        CommandNode(pos=(1926, 1937), parts=[
          WordNode(pos=(1926, 1928), word='tr'),
          WordNode(pos=(1929, 1932), word=','),
          WordNode(pos=(1933, 1937), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1941, 1942)),
        CommandNode(pos=(1943, 1950), parts=[
          WordNode(pos=(1943, 1947), word='sort'),
          WordNode(pos=(1948, 1950), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1954, 1955)),
        CommandNode(pos=(1956, 2033), parts=[
          WordNode(pos=(1956, 1959), word='awk'),
          WordNode(pos=(1960, 2033), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1849, 2034)),
  ]),
])


1022) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2042, 2127), parts=[
  WordNode(pos=(2042, 2045), word='apk'),
  WordNode(pos=(2046, 2049), word='add'),
  WordNode(pos=(2050, 2060), word='--no-cache'),
  WordNode(pos=(2061, 2070), word='--virtual'),
  WordNode(pos=(2071, 2090), word='.postgresql-rundeps'),
  WordNode(pos=(2093, 2101), word='$runDeps', parts=[
    ParameterNode(pos=(2093, 2101), value='runDeps'),
  ]),
  WordNode(pos=(2104, 2108), word='bash'),
  WordNode(pos=(2111, 2118), word='su-exec'),
  WordNode(pos=(2121, 2127), word='tzdata'),
])


1023) apk del .fetch-deps .build-deps

CommandNode(pos=(2132, 2163), parts=[
  WordNode(pos=(2132, 2135), word='apk'),
  WordNode(pos=(2136, 2139), word='del'),
  WordNode(pos=(2140, 2151), word='.fetch-deps'),
  WordNode(pos=(2152, 2163), word='.build-deps'),
])


1024) cd /

CommandNode(pos=(2168, 2172), parts=[
  WordNode(pos=(2168, 2170), word='cd'),
  WordNode(pos=(2171, 2172), word='/'),
])


1025) rm -rf   /usr/src/postgresql   /usr/local/share/doc   /usr/local/share/man

CommandNode(pos=(2177, 2251), parts=[
  WordNode(pos=(2177, 2179), word='rm'),
  WordNode(pos=(2180, 2183), word='-rf'),
  WordNode(pos=(2186, 2205), word='/usr/src/postgresql'),
  WordNode(pos=(2208, 2228), word='/usr/local/share/doc'),
  WordNode(pos=(2231, 2251), word='/usr/local/share/man'),
])


1026) find /usr/local -name '*.a' -delete

CommandNode(pos=(2256, 2291), parts=[
  WordNode(pos=(2256, 2260), word='find'),
  WordNode(pos=(2261, 2271), word='/usr/local'),
  WordNode(pos=(2272, 2277), word='-name'),
  WordNode(pos=(2278, 2283), word='*.a'),
  WordNode(pos=(2284, 2291), word='-delete'),
])


1027) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample

CommandNode(pos=(0, 106), parts=[
  WordNode(pos=(0, 3), word='sed'),
  WordNode(pos=(4, 7), word='-ri'),
  WordNode(pos=(8, 55), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(56, 106), word='/usr/local/share/postgresql/postgresql.conf.sample'),
])


1028) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


1029) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


1030) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


1031) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


1032) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


1033) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


1034) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


1035) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


1036) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


1037) apt-get update

CommandNode(pos=(54, 68), parts=[
  WordNode(pos=(54, 61), word='apt-get'),
  WordNode(pos=(62, 68), word='update'),
])


1038) apt-get install -y --no-install-recommends   ca-certificates   gcc   libc6-dev   liblua5.3-dev   libpcre2-dev   libssl-dev   make   wget   zlib1g-dev

CommandNode(pos=(72, 221), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 87), word='install'),
  WordNode(pos=(88, 90), word='-y'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 138), word='gcc'),
  WordNode(pos=(141, 150), word='libc6-dev'),
  WordNode(pos=(153, 166), word='liblua5.3-dev'),
  WordNode(pos=(169, 181), word='libpcre2-dev'),
  WordNode(pos=(184, 194), word='libssl-dev'),
  WordNode(pos=(197, 201), word='make'),
  WordNode(pos=(204, 208), word='wget'),
  WordNode(pos=(211, 221), word='zlib1g-dev'),
])


1039) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(226, 253), parts=[
  WordNode(pos=(226, 228), word='rm'),
  WordNode(pos=(229, 232), word='-rf'),
  WordNode(pos=(233, 253), word='/var/lib/apt/lists/*'),
])


1040) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


1041) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


1042) sha256sum -c

CommandNode(pos=(342, 354), parts=[
  WordNode(pos=(342, 351), word='sha256sum'),
  WordNode(pos=(352, 354), word='-c'),
])


1043) mkdir -p /usr/src/haproxy

CommandNode(pos=(359, 384), parts=[
  WordNode(pos=(359, 364), word='mkdir'),
  WordNode(pos=(365, 367), word='-p'),
  WordNode(pos=(368, 384), word='/usr/src/haproxy'),
])


1044) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(389, 453), parts=[
  WordNode(pos=(389, 392), word='tar'),
  WordNode(pos=(393, 397), word='-xzf'),
  WordNode(pos=(398, 412), word='haproxy.tar.gz'),
  WordNode(pos=(413, 415), word='-C'),
  WordNode(pos=(416, 432), word='/usr/src/haproxy'),
  WordNode(pos=(433, 453), word='--strip-components=1'),
])


1045) rm haproxy.tar.gz

CommandNode(pos=(458, 475), parts=[
  WordNode(pos=(458, 460), word='rm'),
  WordNode(pos=(461, 475), word='haproxy.tar.gz'),
])


1046) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 632), parts=[
  AssignmentNode(pos=(481, 632), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


1047) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(637, 689), parts=[
  WordNode(pos=(637, 641), word='make'),
  WordNode(pos=(642, 644), word='-C'),
  WordNode(pos=(645, 661), word='/usr/src/haproxy'),
  WordNode(pos=(662, 664), word='-j'),
  WordNode(pos=(665, 675), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(668, 673), parts=[
        WordNode(pos=(668, 673), word='nproc'),
      ]), pos=(666, 674)),
  ]),
  WordNode(pos=(676, 679), word='all'),
  WordNode(pos=(680, 689), word='$makeOpts', parts=[
    ParameterNode(pos=(680, 689), value='makeOpts'),
  ]),
])


1048) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(694, 740), parts=[
  WordNode(pos=(694, 698), word='make'),
  WordNode(pos=(699, 701), word='-C'),
  WordNode(pos=(702, 718), word='/usr/src/haproxy'),
  WordNode(pos=(719, 730), word='install-bin'),
  WordNode(pos=(731, 740), word='$makeOpts', parts=[
    ParameterNode(pos=(731, 740), value='makeOpts'),
  ]),
])


1049) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(746, 777), parts=[
  WordNode(pos=(746, 751), word='mkdir'),
  WordNode(pos=(752, 754), word='-p'),
  WordNode(pos=(755, 777), word='/usr/local/etc/haproxy'),
])


1050) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(782, 854), parts=[
  WordNode(pos=(782, 784), word='cp'),
  WordNode(pos=(785, 787), word='-R'),
  WordNode(pos=(788, 824), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(825, 854), word='/usr/local/etc/haproxy/errors'),
])


1051) rm -rf /usr/src/haproxy

CommandNode(pos=(859, 882), parts=[
  WordNode(pos=(859, 861), word='rm'),
  WordNode(pos=(862, 865), word='-rf'),
  WordNode(pos=(866, 882), word='/usr/src/haproxy'),
])


1052) apt-mark auto '.*' > /dev/null

CommandNode(pos=(888, 918), parts=[
  WordNode(pos=(888, 896), word='apt-mark'),
  WordNode(pos=(897, 901), word='auto'),
  WordNode(pos=(902, 906), word='.*'),
  RedirectNode(output=
    WordNode(pos=(909, 918), word='/dev/null'), pos=(907, 918), type='>'),
])


1053) [ -z "$savedAptMark" ]

CommandNode(pos=(925, 947), parts=[
  WordNode(pos=(925, 926), word='['),
  WordNode(pos=(927, 929), word='-z'),
  WordNode(pos=(930, 945), word='$savedAptMark', parts=[
    ParameterNode(pos=(931, 944), value='savedAptMark'),
  ]),
  WordNode(pos=(946, 947), word=']'),
])


1054) apt-mark manual $savedAptMark

CommandNode(pos=(951, 980), parts=[
  WordNode(pos=(951, 959), word='apt-mark'),
  WordNode(pos=(960, 966), word='manual'),
  WordNode(pos=(967, 980), word='$savedAptMark', parts=[
    ParameterNode(pos=(967, 980), value='savedAptMark'),
  ]),
])


1055) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(988, 1042), parts=[
  WordNode(pos=(988, 992), word='find'),
  WordNode(pos=(993, 1003), word='/usr/local'),
  WordNode(pos=(1004, 1009), word='-type'),
  WordNode(pos=(1010, 1011), word='f'),
  WordNode(pos=(1012, 1023), word='-executable'),
  WordNode(pos=(1024, 1029), word='-exec'),
  WordNode(pos=(1030, 1033), word='ldd'),
  WordNode(pos=(1034, 1038), word='{}'),
  WordNode(pos=(1039, 1042), word=';'),
])


1056) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1047, 1075), parts=[
  WordNode(pos=(1047, 1050), word='awk'),
  WordNode(pos=(1051, 1075), word='/=>/ { print $(NF-1) }'),
])


1057) sort -u

CommandNode(pos=(1080, 1087), parts=[
  WordNode(pos=(1080, 1084), word='sort'),
  WordNode(pos=(1085, 1087), word='-u'),
])


1058) xargs -r dpkg-query --search

CommandNode(pos=(1092, 1120), parts=[
  WordNode(pos=(1092, 1097), word='xargs'),
  WordNode(pos=(1098, 1100), word='-r'),
  WordNode(pos=(1101, 1111), word='dpkg-query'),
  WordNode(pos=(1112, 1120), word='--search'),
])


1059) cut -d: -f1

CommandNode(pos=(1125, 1136), parts=[
  WordNode(pos=(1125, 1128), word='cut'),
  WordNode(pos=(1129, 1132), word='-d:'),
  WordNode(pos=(1133, 1136), word='-f1'),
])


1060) sort -u

CommandNode(pos=(1141, 1148), parts=[
  WordNode(pos=(1141, 1145), word='sort'),
  WordNode(pos=(1146, 1148), word='-u'),
])


1061) xargs -r apt-mark manual

CommandNode(pos=(1153, 1177), parts=[
  WordNode(pos=(1153, 1158), word='xargs'),
  WordNode(pos=(1159, 1161), word='-r'),
  WordNode(pos=(1162, 1170), word='apt-mark'),
  WordNode(pos=(1171, 1177), word='manual'),
])


1062) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1182, 1258), parts=[
  WordNode(pos=(1182, 1189), word='apt-get'),
  WordNode(pos=(1190, 1195), word='purge'),
  WordNode(pos=(1196, 1198), word='-y'),
  WordNode(pos=(1199, 1212), word='--auto-remove'),
  WordNode(pos=(1213, 1215), word='-o'),
  WordNode(pos=(1216, 1258), word='APT::AutoRemove::RecommendsImportant=false'),
])


1063) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1064) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


1065) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


1066) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1067) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


1068) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


1069) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


1070) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


1071) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


1072) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


1073) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


1074) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


1075) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


1076) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


1077) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


1078) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


1079) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


1080) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1081) apt-get install -y --no-install-recommends   bzr   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 125), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='bzr'),
  WordNode(pos=(69, 72), word='git'),
  WordNode(pos=(75, 84), word='mercurial'),
  WordNode(pos=(87, 101), word='openssh-client'),
  WordNode(pos=(104, 114), word='subversion'),
  WordNode(pos=(119, 125), word='procps'),
])


1082) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(130, 157), parts=[
  WordNode(pos=(130, 132), word='rm'),
  WordNode(pos=(133, 136), word='-rf'),
  WordNode(pos=(137, 157), word='/var/lib/apt/lists/*'),
])


1083) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1084) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


1085) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


1086) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


1087) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


1088) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


1089) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


1090) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1091) apk add --no-cache --virtual .fetch-deps   ca-certificates   openssl   tar

CommandNode(pos=(13, 87), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 53), word='.fetch-deps'),
  WordNode(pos=(56, 71), word='ca-certificates'),
  WordNode(pos=(74, 81), word='openssl'),
  WordNode(pos=(84, 87), word='tar'),
])


1092) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


1093) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


1094) sha256sum -c -

CommandNode(pos=(248, 262), parts=[
  WordNode(pos=(248, 257), word='sha256sum'),
  WordNode(pos=(258, 260), word='-c'),
  WordNode(pos=(261, 262), word='-'),
])


1095) mkdir -p /usr/src/postgresql

CommandNode(pos=(267, 295), parts=[
  WordNode(pos=(267, 272), word='mkdir'),
  WordNode(pos=(273, 275), word='-p'),
  WordNode(pos=(276, 295), word='/usr/src/postgresql'),
])


1096) tar   --extract   --file postgresql.tar.bz2   --directory /usr/src/postgresql   --strip-components 1

CommandNode(pos=(300, 400), parts=[
  WordNode(pos=(300, 303), word='tar'),
  WordNode(pos=(306, 315), word='--extract'),
  WordNode(pos=(318, 324), word='--file'),
  WordNode(pos=(325, 343), word='postgresql.tar.bz2'),
  WordNode(pos=(346, 357), word='--directory'),
  WordNode(pos=(358, 377), word='/usr/src/postgresql'),
  WordNode(pos=(380, 398), word='--strip-components'),
  WordNode(pos=(399, 400), word='1'),
])


1097) rm postgresql.tar.bz2

CommandNode(pos=(405, 426), parts=[
  WordNode(pos=(405, 407), word='rm'),
  WordNode(pos=(408, 426), word='postgresql.tar.bz2'),
])


1098) apk add --no-cache --virtual .build-deps   bison   coreutils   dpkg-dev dpkg   flex   gcc   libc-dev   libedit-dev   libxml2-dev   libxslt-dev   linux-headers   make   openssl-dev   perl-utils   perl-ipc-run   util-linux-dev   zlib-dev   icu-dev

CommandNode(pos=(432, 677), parts=[
  WordNode(pos=(432, 435), word='apk'),
  WordNode(pos=(436, 439), word='add'),
  WordNode(pos=(440, 450), word='--no-cache'),
  WordNode(pos=(451, 460), word='--virtual'),
  WordNode(pos=(461, 472), word='.build-deps'),
  WordNode(pos=(475, 480), word='bison'),
  WordNode(pos=(483, 492), word='coreutils'),
  WordNode(pos=(495, 503), word='dpkg-dev'),
  WordNode(pos=(504, 508), word='dpkg'),
  WordNode(pos=(511, 515), word='flex'),
  WordNode(pos=(518, 521), word='gcc'),
  WordNode(pos=(524, 532), word='libc-dev'),
  WordNode(pos=(535, 546), word='libedit-dev'),
  WordNode(pos=(549, 560), word='libxml2-dev'),
  WordNode(pos=(563, 574), word='libxslt-dev'),
  WordNode(pos=(577, 590), word='linux-headers'),
  WordNode(pos=(593, 597), word='make'),
  WordNode(pos=(600, 611), word='openssl-dev'),
  WordNode(pos=(614, 624), word='perl-utils'),
  WordNode(pos=(627, 639), word='perl-ipc-run'),
  WordNode(pos=(642, 656), word='util-linux-dev'),
  WordNode(pos=(659, 667), word='zlib-dev'),
  WordNode(pos=(670, 677), word='icu-dev'),
])


1099) cd /usr/src/postgresql

CommandNode(pos=(683, 705), parts=[
  WordNode(pos=(683, 685), word='cd'),
  WordNode(pos=(686, 705), word='/usr/src/postgresql'),
])


1100) awk '$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\"/tmp\"" { $3 = "\"/var/run/postgresql\""; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new

CommandNode(pos=(710, 909), parts=[
  WordNode(pos=(710, 713), word='awk'),
  WordNode(pos=(714, 841), word='$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\\"/tmp\\"" { $3 = "\\"/var/run/postgresql\\""; print; next } { print }'),
  WordNode(pos=(842, 872), word='src/include/pg_config_manual.h'),
  RedirectNode(output=
    WordNode(pos=(875, 909), word='src/include/pg_config_manual.h.new'), pos=(873, 909), type='>'),
])


1101) grep '/var/run/postgresql' src/include/pg_config_manual.h.new

CommandNode(pos=(914, 975), parts=[
  WordNode(pos=(914, 918), word='grep'),
  WordNode(pos=(919, 940), word='/var/run/postgresql'),
  WordNode(pos=(941, 975), word='src/include/pg_config_manual.h.new'),
])


1102) mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h

CommandNode(pos=(980, 1048), parts=[
  WordNode(pos=(980, 982), word='mv'),
  WordNode(pos=(983, 1017), word='src/include/pg_config_manual.h.new'),
  WordNode(pos=(1018, 1048), word='src/include/pg_config_manual.h'),
])


1103) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


1104) wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1115, 1252), parts=[
  WordNode(pos=(1115, 1119), word='wget'),
  WordNode(pos=(1120, 1122), word='-O'),
  WordNode(pos=(1123, 1142), word='config/config.guess'),
  WordNode(pos=(1143, 1252), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


1105) wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1257, 1390), parts=[
  WordNode(pos=(1257, 1261), word='wget'),
  WordNode(pos=(1262, 1264), word='-O'),
  WordNode(pos=(1265, 1282), word='config/config.sub'),
  WordNode(pos=(1283, 1390), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


1106) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt   --with-icu

CommandNode(pos=(1395, 1777), parts=[
  WordNode(pos=(1395, 1406), word='./configure'),
  WordNode(pos=(1409, 1427), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1418, 1426), value='gnuArch'),
  ]),
  WordNode(pos=(1430, 1456), word='--enable-integer-datetimes'),
  WordNode(pos=(1459, 1481), word='--enable-thread-safety'),
  WordNode(pos=(1484, 1502), word='--enable-tap-tests'),
  WordNode(pos=(1505, 1520), word='--disable-rpath'),
  WordNode(pos=(1523, 1539), word='--with-uuid=e2fs'),
  WordNode(pos=(1542, 1555), word='--with-gnu-ld'),
  WordNode(pos=(1558, 1576), word='--with-pgport=5432'),
  WordNode(pos=(1579, 1619), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1622, 1641), word='--prefix=/usr/local'),
  WordNode(pos=(1644, 1678), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1681, 1712), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1717, 1731), word='--with-openssl'),
  WordNode(pos=(1734, 1747), word='--with-libxml'),
  WordNode(pos=(1750, 1764), word='--with-libxslt'),
  WordNode(pos=(1767, 1777), word='--with-icu'),
])


1107) make -j "$(nproc)" world

CommandNode(pos=(1782, 1806), parts=[
  WordNode(pos=(1782, 1786), word='make'),
  WordNode(pos=(1787, 1789), word='-j'),
  WordNode(pos=(1790, 1800), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1793, 1798), parts=[
        WordNode(pos=(1793, 1798), word='nproc'),
      ]), pos=(1791, 1799)),
  ]),
  WordNode(pos=(1801, 1806), word='world'),
])


1108) make install-world

CommandNode(pos=(1811, 1829), parts=[
  WordNode(pos=(1811, 1815), word='make'),
  WordNode(pos=(1816, 1829), word='install-world'),
])


1109) make -C contrib install

CommandNode(pos=(1834, 1857), parts=[
  WordNode(pos=(1834, 1838), word='make'),
  WordNode(pos=(1839, 1841), word='-C'),
  WordNode(pos=(1842, 1849), word='contrib'),
  WordNode(pos=(1850, 1857), word='install'),
])


1110) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


1111) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2065, 2150), parts=[
  WordNode(pos=(2065, 2068), word='apk'),
  WordNode(pos=(2069, 2072), word='add'),
  WordNode(pos=(2073, 2083), word='--no-cache'),
  WordNode(pos=(2084, 2093), word='--virtual'),
  WordNode(pos=(2094, 2113), word='.postgresql-rundeps'),
  WordNode(pos=(2116, 2124), word='$runDeps', parts=[
    ParameterNode(pos=(2116, 2124), value='runDeps'),
  ]),
  WordNode(pos=(2127, 2131), word='bash'),
  WordNode(pos=(2134, 2141), word='su-exec'),
  WordNode(pos=(2144, 2150), word='tzdata'),
])


1112) apk del .fetch-deps .build-deps

CommandNode(pos=(2155, 2186), parts=[
  WordNode(pos=(2155, 2158), word='apk'),
  WordNode(pos=(2159, 2162), word='del'),
  WordNode(pos=(2163, 2174), word='.fetch-deps'),
  WordNode(pos=(2175, 2186), word='.build-deps'),
])


1113) cd /

CommandNode(pos=(2191, 2195), parts=[
  WordNode(pos=(2191, 2193), word='cd'),
  WordNode(pos=(2194, 2195), word='/'),
])


1114) rm -rf   /usr/src/postgresql   /usr/local/share/doc   /usr/local/share/man

CommandNode(pos=(2200, 2274), parts=[
  WordNode(pos=(2200, 2202), word='rm'),
  WordNode(pos=(2203, 2206), word='-rf'),
  WordNode(pos=(2209, 2228), word='/usr/src/postgresql'),
  WordNode(pos=(2231, 2251), word='/usr/local/share/doc'),
  WordNode(pos=(2254, 2274), word='/usr/local/share/man'),
])


1115) find /usr/local -name '*.a' -delete

CommandNode(pos=(2279, 2314), parts=[
  WordNode(pos=(2279, 2283), word='find'),
  WordNode(pos=(2284, 2294), word='/usr/local'),
  WordNode(pos=(2295, 2300), word='-name'),
  WordNode(pos=(2301, 2306), word='*.a'),
  WordNode(pos=(2307, 2314), word='-delete'),
])


1116) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample

CommandNode(pos=(0, 106), parts=[
  WordNode(pos=(0, 3), word='sed'),
  WordNode(pos=(4, 7), word='-ri'),
  WordNode(pos=(8, 55), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(56, 106), word='/usr/local/share/postgresql/postgresql.conf.sample'),
])


1117) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


1118) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


1119) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


1120) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


1121) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


1122) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


1123) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


1124) apk add --no-cache   ca-certificates

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
])


1125) [ ! -e /etc/nsswitch.conf ]

CommandNode(pos=(0, 27), parts=[
  WordNode(pos=(0, 1), word='['),
  WordNode(pos=(2, 3), word='!'),
  WordNode(pos=(4, 6), word='-e'),
  WordNode(pos=(7, 25), word='/etc/nsswitch.conf'),
  WordNode(pos=(26, 27), word=']'),
])


1126) echo 'hosts: files dns' > /etc/nsswitch.conf

CommandNode(pos=(31, 75), parts=[
  WordNode(pos=(31, 35), word='echo'),
  WordNode(pos=(36, 54), word='hosts: files dns'),
  RedirectNode(output=
    WordNode(pos=(57, 75), word='/etc/nsswitch.conf'), pos=(55, 75), type='>'),
])


1127) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


1128) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


1129) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


1130) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


1131) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


1132) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


1133) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1134) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1135) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


1136) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


1137) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


1138) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


1139) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


1140) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


1141) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


1142) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


1143) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


1144) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


1145) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


1146) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


1147) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


1148) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


1149) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


1150) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


1151) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


1152) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


1153) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


1154) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


1155) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


1156) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


1157) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


1158) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


1159) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


1160) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1161) cd /usr/local/etc

CommandNode(pos=(12, 29), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 29), word='/usr/local/etc'),
])


1162) [ -d php-fpm.d ]

CommandNode(pos=(37, 53), parts=[
  WordNode(pos=(37, 38), word='['),
  WordNode(pos=(39, 41), word='-d'),
  WordNode(pos=(42, 51), word='php-fpm.d'),
  WordNode(pos=(52, 53), word=']'),
])


1163) sed 's!=NONE/!=!g' php-fpm.conf.default

CommandNode(pos=(62, 101), parts=[
  WordNode(pos=(62, 65), word='sed'),
  WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
  WordNode(pos=(81, 101), word='php-fpm.conf.default'),
])


1164) tee php-fpm.conf > /dev/null

CommandNode(pos=(104, 132), parts=[
  WordNode(pos=(104, 107), word='tee'),
  WordNode(pos=(108, 120), word='php-fpm.conf'),
  RedirectNode(output=
    WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
])


1165) cp php-fpm.d/www.conf.default php-fpm.d/www.conf

CommandNode(pos=(136, 184), parts=[
  WordNode(pos=(136, 138), word='cp'),
  WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
  WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
])


1166) mkdir php-fpm.d

CommandNode(pos=(194, 209), parts=[
  WordNode(pos=(194, 199), word='mkdir'),
  WordNode(pos=(200, 209), word='php-fpm.d'),
])


1167) cp php-fpm.conf.default php-fpm.d/www.conf

CommandNode(pos=(213, 255), parts=[
  WordNode(pos=(213, 215), word='cp'),
  WordNode(pos=(216, 236), word='php-fpm.conf.default'),
  WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
])


1168) echo '[global]'

CommandNode(pos=(264, 279), parts=[
  WordNode(pos=(264, 268), word='echo'),
  WordNode(pos=(269, 279), word='[global]'),
])


1169) echo 'include=etc/php-fpm.d/*.conf'

CommandNode(pos=(284, 319), parts=[
  WordNode(pos=(284, 288), word='echo'),
  WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
])


1170) tee php-fpm.conf

CommandNode(pos=(327, 343), parts=[
  WordNode(pos=(327, 330), word='tee'),
  WordNode(pos=(331, 343), word='php-fpm.conf'),
])


1171) echo '[global]'

CommandNode(pos=(357, 372), parts=[
  WordNode(pos=(357, 361), word='echo'),
  WordNode(pos=(362, 372), word='[global]'),
])


1172) echo 'error_log = /proc/self/fd/2'

CommandNode(pos=(376, 410), parts=[
  WordNode(pos=(376, 380), word='echo'),
  WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
])


1173) echo

CommandNode(pos=(414, 418), parts=[
  WordNode(pos=(414, 418), word='echo'),
])


1174) echo '[www]'

CommandNode(pos=(422, 434), parts=[
  WordNode(pos=(422, 426), word='echo'),
  WordNode(pos=(427, 434), word='[www]'),
])


1175) echo '; if we send this to /proc/self/fd/1, it never appears'

CommandNode(pos=(438, 499), parts=[
  WordNode(pos=(438, 442), word='echo'),
  WordNode(pos=(443, 499), word='; if we send this to /proc/self/fd/1, it never appears'),
])


1176) echo 'access.log = /proc/self/fd/2'

CommandNode(pos=(503, 538), parts=[
  WordNode(pos=(503, 507), word='echo'),
  WordNode(pos=(508, 538), word='access.log = /proc/self/fd/2'),
])


1177) echo

CommandNode(pos=(542, 546), parts=[
  WordNode(pos=(542, 546), word='echo'),
])


1178) echo 'clear_env = no'

CommandNode(pos=(550, 571), parts=[
  WordNode(pos=(550, 554), word='echo'),
  WordNode(pos=(555, 571), word='clear_env = no'),
])


1179) echo

CommandNode(pos=(575, 579), parts=[
  WordNode(pos=(575, 579), word='echo'),
])


1180) echo '; Ensure worker stdout and stderr are sent to the main error log.'

CommandNode(pos=(583, 655), parts=[
  WordNode(pos=(583, 587), word='echo'),
  WordNode(pos=(588, 655), word='; Ensure worker stdout and stderr are sent to the main error log.'),
])


1181) echo 'catch_workers_output = yes'

CommandNode(pos=(659, 692), parts=[
  WordNode(pos=(659, 663), word='echo'),
  WordNode(pos=(664, 692), word='catch_workers_output = yes'),
])


1182) tee php-fpm.d/docker.conf

CommandNode(pos=(699, 724), parts=[
  WordNode(pos=(699, 702), word='tee'),
  WordNode(pos=(703, 724), word='php-fpm.d/docker.conf'),
])


1183) echo '[global]'

CommandNode(pos=(733, 748), parts=[
  WordNode(pos=(733, 737), word='echo'),
  WordNode(pos=(738, 748), word='[global]'),
])


1184) echo 'daemonize = no'

CommandNode(pos=(752, 773), parts=[
  WordNode(pos=(752, 756), word='echo'),
  WordNode(pos=(757, 773), word='daemonize = no'),
])


1185) echo

CommandNode(pos=(777, 781), parts=[
  WordNode(pos=(777, 781), word='echo'),
])


1186) echo '[www]'

CommandNode(pos=(785, 797), parts=[
  WordNode(pos=(785, 789), word='echo'),
  WordNode(pos=(790, 797), word='[www]'),
])


1187) echo 'listen = 9000'

CommandNode(pos=(801, 821), parts=[
  WordNode(pos=(801, 805), word='echo'),
  WordNode(pos=(806, 821), word='listen = 9000'),
])


1188) tee php-fpm.d/zz-docker.conf

CommandNode(pos=(828, 856), parts=[
  WordNode(pos=(828, 831), word='tee'),
  WordNode(pos=(832, 856), word='php-fpm.d/zz-docker.conf'),
])


1189) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1190) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


1191) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


1192) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1193) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


1194) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


1195) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


1196) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


1197) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


1198) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


1199) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


1200) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


1201) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


1202) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


1203) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


1204) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


1205) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


1206) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


1207) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


1208) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1209) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(18, 74), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(61, 66), word='gnupg'),
  WordNode(pos=(67, 74), word='dirmngr'),
])


1210) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(78, 105), parts=[
  WordNode(pos=(78, 80), word='rm'),
  WordNode(pos=(81, 84), word='-rf'),
  WordNode(pos=(85, 105), word='/var/lib/apt/lists/*'),
])


1211) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


1212) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


1213) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


1214) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


1215) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


1216) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


1217) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


1218) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


1219) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


1220) gpgconf --kill all

CommandNode(pos=(611, 629), parts=[
  WordNode(pos=(611, 618), word='gpgconf'),
  WordNode(pos=(619, 625), word='--kill'),
  WordNode(pos=(626, 629), word='all'),
])


1221) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(634, 677), parts=[
  WordNode(pos=(634, 636), word='rm'),
  WordNode(pos=(637, 640), word='-rf'),
  WordNode(pos=(641, 653), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(642, 652), value='GNUPGHOME'),
  ]),
  WordNode(pos=(654, 677), word='/usr/local/bin/gosu.asc'),
])


1222) chmod +x /usr/local/bin/gosu

CommandNode(pos=(682, 710), parts=[
  WordNode(pos=(682, 687), word='chmod'),
  WordNode(pos=(688, 690), word='+x'),
  WordNode(pos=(691, 710), word='/usr/local/bin/gosu'),
])


1223) gosu nobody true

CommandNode(pos=(715, 731), parts=[
  WordNode(pos=(715, 719), word='gosu'),
  WordNode(pos=(720, 726), word='nobody'),
  WordNode(pos=(727, 731), word='true'),
])


1224) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(736, 787), parts=[
  WordNode(pos=(736, 743), word='apt-get'),
  WordNode(pos=(744, 749), word='purge'),
  WordNode(pos=(750, 752), word='-y'),
  WordNode(pos=(753, 766), word='--auto-remove'),
  WordNode(pos=(767, 782), word='ca-certificates'),
  WordNode(pos=(783, 787), word='wget'),
])


1225) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


1226) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1227) apt-get install -y --no-install-recommends   pwgen   openssl   perl

CommandNode(pos=(18, 85), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 68), word='pwgen'),
  WordNode(pos=(71, 78), word='openssl'),
  WordNode(pos=(81, 85), word='perl'),
])


1228) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(90, 117), parts=[
  WordNode(pos=(90, 92), word='rm'),
  WordNode(pos=(93, 96), word='-rf'),
  WordNode(pos=(97, 117), word='/var/lib/apt/lists/*'),
])


1229) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1230) key='A4A9406876FCBD3C456770C88C718D3B5072E1F5'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=A4A9406876FCBD3C456770C88C718D3B5072E1F5'),
])


1231) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


1232) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


1233) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/mysql.gpg

CommandNode(pos=(165, 227), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 227), word='/etc/apt/trusted.gpg.d/mysql.gpg'), pos=(193, 227), type='>'),
])


1234) gpgconf --kill all

CommandNode(pos=(230, 248), parts=[
  WordNode(pos=(230, 237), word='gpgconf'),
  WordNode(pos=(238, 244), word='--kill'),
  WordNode(pos=(245, 248), word='all'),
])


1235) rm -rf "$GNUPGHOME"

CommandNode(pos=(251, 270), parts=[
  WordNode(pos=(251, 253), word='rm'),
  WordNode(pos=(254, 257), word='-rf'),
  WordNode(pos=(258, 270), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(259, 269), value='GNUPGHOME'),
  ]),
])


1236) apt-key list > /dev/null

CommandNode(pos=(273, 297), parts=[
  WordNode(pos=(273, 280), word='apt-key'),
  WordNode(pos=(281, 285), word='list'),
  RedirectNode(output=
    WordNode(pos=(288, 297), word='/dev/null'), pos=(286, 297), type='>'),
])


1237) echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list

CommandNode(pos=(0, 110), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 73), word='deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}', parts=[
    ParameterNode(pos=(58, 72), value='MYSQL_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(76, 110), word='/etc/apt/sources.list.d/mysql.list'), pos=(74, 110), type='>'),
])


1238) echo mysql-community-server mysql-community-server/data-dir select ''

CommandNode(pos=(4, 73), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 31), word='mysql-community-server'),
  WordNode(pos=(32, 63), word='mysql-community-server/data-dir'),
  WordNode(pos=(64, 70), word='select'),
  WordNode(pos=(71, 73)),
])


1239) echo mysql-community-server mysql-community-server/root-pass password ''

CommandNode(pos=(77, 149), parts=[
  WordNode(pos=(77, 81), word='echo'),
  WordNode(pos=(82, 104), word='mysql-community-server'),
  WordNode(pos=(105, 137), word='mysql-community-server/root-pass'),
  WordNode(pos=(138, 146), word='password'),
  WordNode(pos=(147, 149)),
])


1240) echo mysql-community-server mysql-community-server/re-root-pass password ''

CommandNode(pos=(153, 228), parts=[
  WordNode(pos=(153, 157), word='echo'),
  WordNode(pos=(158, 180), word='mysql-community-server'),
  WordNode(pos=(181, 216), word='mysql-community-server/re-root-pass'),
  WordNode(pos=(217, 225), word='password'),
  WordNode(pos=(226, 228)),
])


1241) echo mysql-community-server mysql-community-server/remove-test-db select false

CommandNode(pos=(232, 310), parts=[
  WordNode(pos=(232, 236), word='echo'),
  WordNode(pos=(237, 259), word='mysql-community-server'),
  WordNode(pos=(260, 297), word='mysql-community-server/remove-test-db'),
  WordNode(pos=(298, 304), word='select'),
  WordNode(pos=(305, 310), word='false'),
])


1242) debconf-set-selections

CommandNode(pos=(317, 339), parts=[
  WordNode(pos=(317, 339), word='debconf-set-selections'),
])


1243) apt-get update

CommandNode(pos=(344, 358), parts=[
  WordNode(pos=(344, 351), word='apt-get'),
  WordNode(pos=(352, 358), word='update'),
])


1244) apt-get install -y mysql-server="${MYSQL_VERSION}"

CommandNode(pos=(362, 412), parts=[
  WordNode(pos=(362, 369), word='apt-get'),
  WordNode(pos=(370, 377), word='install'),
  WordNode(pos=(378, 380), word='-y'),
  WordNode(pos=(381, 412), word='mysql-server=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(395, 411), value='MYSQL_VERSION'),
  ]),
])


1245) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 418), word='rm'),
  WordNode(pos=(419, 422), word='-rf'),
  WordNode(pos=(423, 443), word='/var/lib/apt/lists/*'),
])


1246) rm -rf /var/lib/mysql

CommandNode(pos=(448, 469), parts=[
  WordNode(pos=(448, 450), word='rm'),
  WordNode(pos=(451, 454), word='-rf'),
  WordNode(pos=(455, 469), word='/var/lib/mysql'),
])


1247) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(473, 512), parts=[
  WordNode(pos=(473, 478), word='mkdir'),
  WordNode(pos=(479, 481), word='-p'),
  WordNode(pos=(482, 496), word='/var/lib/mysql'),
  WordNode(pos=(497, 512), word='/var/run/mysqld'),
])


1248) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(517, 568), parts=[
  WordNode(pos=(517, 522), word='chown'),
  WordNode(pos=(523, 525), word='-R'),
  WordNode(pos=(526, 537), word='mysql:mysql'),
  WordNode(pos=(538, 552), word='/var/lib/mysql'),
  WordNode(pos=(553, 568), word='/var/run/mysqld'),
])


1249) chmod 777 /var/run/mysqld

CommandNode(pos=(573, 598), parts=[
  WordNode(pos=(573, 578), word='chmod'),
  WordNode(pos=(579, 582), word='777'),
  WordNode(pos=(583, 598), word='/var/run/mysqld'),
])


1250) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(603, 641), parts=[
  WordNode(pos=(603, 607), word='find'),
  WordNode(pos=(608, 619), word='/etc/mysql/'),
  WordNode(pos=(620, 625), word='-name'),
  WordNode(pos=(626, 633), word='*.cnf'),
  WordNode(pos=(634, 641), word='-print0'),
])


1251) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(646, 686), parts=[
  WordNode(pos=(646, 651), word='xargs'),
  WordNode(pos=(652, 654), word='-0'),
  WordNode(pos=(655, 659), word='grep'),
  WordNode(pos=(660, 664), word='-lZE'),
  WordNode(pos=(665, 686), word='^(bind-address|log)'),
])


1252) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(691, 739), parts=[
  WordNode(pos=(691, 696), word='xargs'),
  WordNode(pos=(697, 700), word='-rt'),
  WordNode(pos=(701, 703), word='-0'),
  WordNode(pos=(704, 707), word='sed'),
  WordNode(pos=(708, 711), word='-Ei'),
  WordNode(pos=(712, 739), word='s/^(bind-address|log)/#&/'),
])


1253) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(744, 826), parts=[
  WordNode(pos=(744, 748), word='echo'),
  WordNode(pos=(749, 795), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(798, 826), word='/etc/mysql/conf.d/docker.cnf'), pos=(796, 826), type='>'),
])


1254) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


1255) apk add --no-cache   git   openssh-client

CommandNode(pos=(0, 41), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 24), word='git'),
  WordNode(pos=(27, 41), word='openssh-client'),
])


1256) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1257) apt-get install -y nodejs --no-install-recommends

CommandNode(pos=(18, 67), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 43), word='nodejs'),
  WordNode(pos=(44, 67), word='--no-install-recommends'),
])


1258) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(71, 98), parts=[
  WordNode(pos=(71, 73), word='rm'),
  WordNode(pos=(74, 77), word='-rf'),
  WordNode(pos=(78, 98), word='/var/lib/apt/lists/*'),
])


1259) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1260) apt-get install -y mysql-client postgresql-client sqlite3 --no-install-recommends

CommandNode(pos=(18, 99), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 49), word='mysql-client'),
  WordNode(pos=(50, 67), word='postgresql-client'),
  WordNode(pos=(68, 75), word='sqlite3'),
  WordNode(pos=(76, 99), word='--no-install-recommends'),
])


1261) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(103, 130), parts=[
  WordNode(pos=(103, 105), word='rm'),
  WordNode(pos=(106, 109), word='-rf'),
  WordNode(pos=(110, 130), word='/var/lib/apt/lists/*'),
])


1262) gem install rails --version "$RAILS_VERSION"

CommandNode(pos=(0, 44), parts=[
  WordNode(pos=(0, 3), word='gem'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 17), word='rails'),
  WordNode(pos=(18, 27), word='--version'),
  WordNode(pos=(28, 44), word='$RAILS_VERSION', parts=[
    ParameterNode(pos=(29, 43), value='RAILS_VERSION'),
  ]),
])


1263) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


1264) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


1265) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


1266) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


1267) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1268) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1269) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


1270) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


1271) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


1272) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


1273) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


1274) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


1275) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


1276) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


1277) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


1278) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


1279) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


1280) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


1281) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


1282) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


1283) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


1284) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


1285) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


1286) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


1287) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


1288) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


1289) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


1290) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


1291) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


1292) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


1293) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


1294) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1295) cd /usr/local/etc

CommandNode(pos=(12, 29), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 29), word='/usr/local/etc'),
])


1296) [ -d php-fpm.d ]

CommandNode(pos=(37, 53), parts=[
  WordNode(pos=(37, 38), word='['),
  WordNode(pos=(39, 41), word='-d'),
  WordNode(pos=(42, 51), word='php-fpm.d'),
  WordNode(pos=(52, 53), word=']'),
])


1297) sed 's!=NONE/!=!g' php-fpm.conf.default

CommandNode(pos=(62, 101), parts=[
  WordNode(pos=(62, 65), word='sed'),
  WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
  WordNode(pos=(81, 101), word='php-fpm.conf.default'),
])


1298) tee php-fpm.conf > /dev/null

CommandNode(pos=(104, 132), parts=[
  WordNode(pos=(104, 107), word='tee'),
  WordNode(pos=(108, 120), word='php-fpm.conf'),
  RedirectNode(output=
    WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
])


1299) cp php-fpm.d/www.conf.default php-fpm.d/www.conf

CommandNode(pos=(136, 184), parts=[
  WordNode(pos=(136, 138), word='cp'),
  WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
  WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
])


1300) mkdir php-fpm.d

CommandNode(pos=(194, 209), parts=[
  WordNode(pos=(194, 199), word='mkdir'),
  WordNode(pos=(200, 209), word='php-fpm.d'),
])


1301) cp php-fpm.conf.default php-fpm.d/www.conf

CommandNode(pos=(213, 255), parts=[
  WordNode(pos=(213, 215), word='cp'),
  WordNode(pos=(216, 236), word='php-fpm.conf.default'),
  WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
])


1302) echo '[global]'

CommandNode(pos=(264, 279), parts=[
  WordNode(pos=(264, 268), word='echo'),
  WordNode(pos=(269, 279), word='[global]'),
])


1303) echo 'include=etc/php-fpm.d/*.conf'

CommandNode(pos=(284, 319), parts=[
  WordNode(pos=(284, 288), word='echo'),
  WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
])


1304) tee php-fpm.conf

CommandNode(pos=(327, 343), parts=[
  WordNode(pos=(327, 330), word='tee'),
  WordNode(pos=(331, 343), word='php-fpm.conf'),
])


1305) echo '[global]'

CommandNode(pos=(357, 372), parts=[
  WordNode(pos=(357, 361), word='echo'),
  WordNode(pos=(362, 372), word='[global]'),
])


1306) echo 'error_log = /proc/self/fd/2'

CommandNode(pos=(376, 410), parts=[
  WordNode(pos=(376, 380), word='echo'),
  WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
])


1307) echo

CommandNode(pos=(414, 418), parts=[
  WordNode(pos=(414, 418), word='echo'),
])


1308) echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'

CommandNode(pos=(420, 498), parts=[
  WordNode(pos=(420, 424), word='echo'),
  WordNode(pos=(425, 498), word='; https://github.com/docker-library/php/pull/725#issuecomment-443540114'),
])


1309) echo 'log_limit = 8192'

CommandNode(pos=(500, 523), parts=[
  WordNode(pos=(500, 504), word='echo'),
  WordNode(pos=(505, 523), word='log_limit = 8192'),
])


1310) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


1311) echo '[www]'

CommandNode(pos=(535, 547), parts=[
  WordNode(pos=(535, 539), word='echo'),
  WordNode(pos=(540, 547), word='[www]'),
])


1312) echo '; if we send this to /proc/self/fd/1, it never appears'

CommandNode(pos=(551, 612), parts=[
  WordNode(pos=(551, 555), word='echo'),
  WordNode(pos=(556, 612), word='; if we send this to /proc/self/fd/1, it never appears'),
])


1313) echo 'access.log = /proc/self/fd/2'

CommandNode(pos=(616, 651), parts=[
  WordNode(pos=(616, 620), word='echo'),
  WordNode(pos=(621, 651), word='access.log = /proc/self/fd/2'),
])


1314) echo

CommandNode(pos=(655, 659), parts=[
  WordNode(pos=(655, 659), word='echo'),
])


1315) echo 'clear_env = no'

CommandNode(pos=(663, 684), parts=[
  WordNode(pos=(663, 667), word='echo'),
  WordNode(pos=(668, 684), word='clear_env = no'),
])


1316) echo

CommandNode(pos=(688, 692), parts=[
  WordNode(pos=(688, 692), word='echo'),
])


1317) echo '; Ensure worker stdout and stderr are sent to the main error log.'

CommandNode(pos=(696, 768), parts=[
  WordNode(pos=(696, 700), word='echo'),
  WordNode(pos=(701, 768), word='; Ensure worker stdout and stderr are sent to the main error log.'),
])


1318) echo 'catch_workers_output = yes'

CommandNode(pos=(772, 805), parts=[
  WordNode(pos=(772, 776), word='echo'),
  WordNode(pos=(777, 805), word='catch_workers_output = yes'),
])


1319) echo 'decorate_workers_output = no'

CommandNode(pos=(809, 844), parts=[
  WordNode(pos=(809, 813), word='echo'),
  WordNode(pos=(814, 844), word='decorate_workers_output = no'),
])


1320) tee php-fpm.d/docker.conf

CommandNode(pos=(851, 876), parts=[
  WordNode(pos=(851, 854), word='tee'),
  WordNode(pos=(855, 876), word='php-fpm.d/docker.conf'),
])


1321) echo '[global]'

CommandNode(pos=(885, 900), parts=[
  WordNode(pos=(885, 889), word='echo'),
  WordNode(pos=(890, 900), word='[global]'),
])


1322) echo 'daemonize = no'

CommandNode(pos=(904, 925), parts=[
  WordNode(pos=(904, 908), word='echo'),
  WordNode(pos=(909, 925), word='daemonize = no'),
])


1323) echo

CommandNode(pos=(929, 933), parts=[
  WordNode(pos=(929, 933), word='echo'),
])


1324) echo '[www]'

CommandNode(pos=(937, 949), parts=[
  WordNode(pos=(937, 941), word='echo'),
  WordNode(pos=(942, 949), word='[www]'),
])


1325) echo 'listen = 9000'

CommandNode(pos=(953, 973), parts=[
  WordNode(pos=(953, 957), word='echo'),
  WordNode(pos=(958, 973), word='listen = 9000'),
])


1326) tee php-fpm.d/zz-docker.conf

CommandNode(pos=(980, 1008), parts=[
  WordNode(pos=(980, 983), word='tee'),
  WordNode(pos=(984, 1008), word='php-fpm.d/zz-docker.conf'),
])


1327) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1328) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


1329) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


1330) apt-get install -y --no-install-recommends   libjpeg-dev   libmagickwand-dev   libpng-dev

CommandNode(pos=(69, 158), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 125), word='libjpeg-dev'),
  WordNode(pos=(128, 145), word='libmagickwand-dev'),
  WordNode(pos=(148, 158), word='libpng-dev'),
])


1331) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(164, 232), parts=[
  WordNode(pos=(164, 188), word='docker-php-ext-configure'),
  WordNode(pos=(189, 191), word='gd'),
  WordNode(pos=(192, 211), word='--with-png-dir=/usr'),
  WordNode(pos=(212, 232), word='--with-jpeg-dir=/usr'),
])


1332) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(235, 303), parts=[
  WordNode(pos=(235, 257), word='docker-php-ext-install'),
  WordNode(pos=(260, 266), word='bcmath'),
  WordNode(pos=(269, 273), word='exif'),
  WordNode(pos=(276, 278), word='gd'),
  WordNode(pos=(281, 287), word='mysqli'),
  WordNode(pos=(290, 297), word='opcache'),
  WordNode(pos=(300, 303), word='zip'),
])


1333) pecl install imagick-3.4.4

CommandNode(pos=(308, 334), parts=[
  WordNode(pos=(308, 312), word='pecl'),
  WordNode(pos=(313, 320), word='install'),
  WordNode(pos=(321, 334), word='imagick-3.4.4'),
])


1334) docker-php-ext-enable imagick

CommandNode(pos=(337, 366), parts=[
  WordNode(pos=(337, 358), word='docker-php-ext-enable'),
  WordNode(pos=(359, 366), word='imagick'),
])


1335) apt-mark auto '.*' > /dev/null

CommandNode(pos=(370, 400), parts=[
  WordNode(pos=(370, 378), word='apt-mark'),
  WordNode(pos=(379, 383), word='auto'),
  WordNode(pos=(384, 388), word='.*'),
  RedirectNode(output=
    WordNode(pos=(391, 400), word='/dev/null'), pos=(389, 400), type='>'),
])


1336) apt-mark manual $savedAptMark

CommandNode(pos=(403, 432), parts=[
  WordNode(pos=(403, 411), word='apt-mark'),
  WordNode(pos=(412, 418), word='manual'),
  WordNode(pos=(419, 432), word='$savedAptMark', parts=[
    ParameterNode(pos=(419, 432), value='savedAptMark'),
  ]),
])


1337) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(435, 488), parts=[
  WordNode(pos=(435, 438), word='ldd'),
  WordNode(pos=(439, 488), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(442, 481), parts=[
        WordNode(pos=(442, 445), word='php'),
        WordNode(pos=(446, 448), word='-r'),
        WordNode(pos=(449, 481), word='echo ini_get("extension_dir");'),
      ]), pos=(440, 482)),
  ]),
])


1338) awk '/=>/ { print $3 }'

CommandNode(pos=(493, 516), parts=[
  WordNode(pos=(493, 496), word='awk'),
  WordNode(pos=(497, 516), word='/=>/ { print $3 }'),
])


1339) sort -u

CommandNode(pos=(521, 528), parts=[
  WordNode(pos=(521, 525), word='sort'),
  WordNode(pos=(526, 528), word='-u'),
])


1340) xargs -r dpkg-query -S

CommandNode(pos=(533, 555), parts=[
  WordNode(pos=(533, 538), word='xargs'),
  WordNode(pos=(539, 541), word='-r'),
  WordNode(pos=(542, 552), word='dpkg-query'),
  WordNode(pos=(553, 555), word='-S'),
])


1341) cut -d: -f1

CommandNode(pos=(560, 571), parts=[
  WordNode(pos=(560, 563), word='cut'),
  WordNode(pos=(564, 567), word='-d:'),
  WordNode(pos=(568, 571), word='-f1'),
])


1342) sort -u

CommandNode(pos=(576, 583), parts=[
  WordNode(pos=(576, 580), word='sort'),
  WordNode(pos=(581, 583), word='-u'),
])


1343) xargs -rt apt-mark manual

CommandNode(pos=(588, 613), parts=[
  WordNode(pos=(588, 593), word='xargs'),
  WordNode(pos=(594, 597), word='-rt'),
  WordNode(pos=(598, 606), word='apt-mark'),
  WordNode(pos=(607, 613), word='manual'),
])


1344) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(617, 693), parts=[
  WordNode(pos=(617, 624), word='apt-get'),
  WordNode(pos=(625, 630), word='purge'),
  WordNode(pos=(631, 633), word='-y'),
  WordNode(pos=(634, 647), word='--auto-remove'),
  WordNode(pos=(648, 650), word='-o'),
  WordNode(pos=(651, 693), word='APT::AutoRemove::RecommendsImportant=false'),
])


1345) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(696, 723), parts=[
  WordNode(pos=(696, 698), word='rm'),
  WordNode(pos=(699, 702), word='-rf'),
  WordNode(pos=(703, 723), word='/var/lib/apt/lists/*'),
])


1346) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


1347) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


1348) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


1349) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


1350) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


1351) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


1352) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


1353) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


1354) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


1355) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


1356) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


1357) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


1358) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


1359) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


1360) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


1361) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1362) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


1363) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


1364) sha1sum -c -

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 154), word='sha1sum'),
  WordNode(pos=(155, 157), word='-c'),
  WordNode(pos=(158, 159), word='-'),
])


1365) tar -xzf wordpress.tar.gz -C /usr/src/

CommandNode(pos=(162, 200), parts=[
  WordNode(pos=(162, 165), word='tar'),
  WordNode(pos=(166, 170), word='-xzf'),
  WordNode(pos=(171, 187), word='wordpress.tar.gz'),
  WordNode(pos=(188, 190), word='-C'),
  WordNode(pos=(191, 200), word='/usr/src/'),
])


1366) rm wordpress.tar.gz

CommandNode(pos=(203, 222), parts=[
  WordNode(pos=(203, 205), word='rm'),
  WordNode(pos=(206, 222), word='wordpress.tar.gz'),
])


1367) chown -R www-data:www-data /usr/src/wordpress

CommandNode(pos=(225, 270), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 233), word='-R'),
  WordNode(pos=(234, 251), word='www-data:www-data'),
  WordNode(pos=(252, 270), word='/usr/src/wordpress'),
])


1368) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1369) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


1370) apt-get install -y --no-install-recommends   ca-certificates   curl

CommandNode(pos=(28, 95), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 95), word='curl'),
])


1371) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(100, 127), parts=[
  WordNode(pos=(100, 102), word='rm'),
  WordNode(pos=(103, 106), word='-rf'),
  WordNode(pos=(107, 127), word='/var/lib/apt/lists/*'),
])


1372) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1373) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


1374) command -v gpg > /dev/null

CommandNode(pos=(57, 83), parts=[
  WordNode(pos=(57, 64), word='command'),
  WordNode(pos=(65, 67), word='-v'),
  WordNode(pos=(68, 71), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(74, 83), word='/dev/null'), pos=(72, 83), type='>'),
])


1375) apt-get update

CommandNode(pos=(92, 106), parts=[
  WordNode(pos=(92, 99), word='apt-get'),
  WordNode(pos=(100, 106), word='update'),
])


1376) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(110, 172), parts=[
  WordNode(pos=(110, 117), word='apt-get'),
  WordNode(pos=(118, 125), word='install'),
  WordNode(pos=(126, 128), word='-y'),
  WordNode(pos=(129, 152), word='--no-install-recommends'),
  WordNode(pos=(156, 161), word='gnupg'),
  WordNode(pos=(165, 172), word='dirmngr'),
])


1377) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(179, 206), parts=[
  WordNode(pos=(179, 181), word='rm'),
  WordNode(pos=(182, 185), word='-rf'),
  WordNode(pos=(186, 206), word='/var/lib/apt/lists/*'),
])


1378) %%ARCH-CASE%%

CommandNode(pos=(215, 228), parts=[
  WordNode(pos=(215, 228), word='%%ARCH-CASE%%'),
])


1379) folder="$(echo "$JULIA_VERSION" | cut -d. -f1-2)"

CommandNode(pos=(232, 281), parts=[
  AssignmentNode(pos=(232, 281), word='folder=$(echo "$JULIA_VERSION" | cut -d. -f1-2)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(242, 279), parts=[
        CommandNode(pos=(242, 263), parts=[
          WordNode(pos=(242, 246), word='echo'),
          WordNode(pos=(247, 263), word='$JULIA_VERSION', parts=[
            ParameterNode(pos=(248, 262), value='JULIA_VERSION'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(264, 265)),
        CommandNode(pos=(266, 279), parts=[
          WordNode(pos=(266, 269), word='cut'),
          WordNode(pos=(270, 273), word='-d.'),
          WordNode(pos=(274, 279), word='-f1-2'),
        ]),
      ]), pos=(240, 280)),
  ]),
])


1380) curl -fL -o julia.tar.gz.asc "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc"

CommandNode(pos=(284, 431), parts=[
  WordNode(pos=(284, 288), word='curl'),
  WordNode(pos=(289, 292), word='-fL'),
  WordNode(pos=(293, 295), word='-o'),
  WordNode(pos=(296, 312), word='julia.tar.gz.asc'),
  WordNode(pos=(313, 431), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc', parts=[
    ParameterNode(pos=(359, 369), value='dirArch'),
    ParameterNode(pos=(370, 379), value='folder'),
    ParameterNode(pos=(386, 402), value='JULIA_VERSION'),
    ParameterNode(pos=(409, 419), value='tarArch'),
  ]),
])


1381) curl -fL -o julia.tar.gz     "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz"

CommandNode(pos=(434, 577), parts=[
  WordNode(pos=(434, 438), word='curl'),
  WordNode(pos=(439, 442), word='-fL'),
  WordNode(pos=(443, 445), word='-o'),
  WordNode(pos=(446, 458), word='julia.tar.gz'),
  WordNode(pos=(463, 577), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz', parts=[
    ParameterNode(pos=(509, 519), value='dirArch'),
    ParameterNode(pos=(520, 529), value='folder'),
    ParameterNode(pos=(536, 552), value='JULIA_VERSION'),
    ParameterNode(pos=(559, 569), value='tarArch'),
  ]),
])


1382) echo "${sha256} *julia.tar.gz"

CommandNode(pos=(581, 611), parts=[
  WordNode(pos=(581, 585), word='echo'),
  WordNode(pos=(586, 611), word='${sha256} *julia.tar.gz', parts=[
    ParameterNode(pos=(587, 596), value='sha256'),
  ]),
])


1383) sha256sum -c -

CommandNode(pos=(614, 628), parts=[
  WordNode(pos=(614, 623), word='sha256sum'),
  WordNode(pos=(624, 626), word='-c'),
  WordNode(pos=(627, 628), word='-'),
])


1384) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(632, 663), parts=[
  WordNode(pos=(632, 638), word='export'),
  WordNode(pos=(639, 663), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(652, 661), parts=[
        WordNode(pos=(652, 658), word='mktemp'),
        WordNode(pos=(659, 661), word='-d'),
      ]), pos=(650, 662)),
  ]),
])


1385) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$JULIA_GPG"

CommandNode(pos=(666, 741), parts=[
  WordNode(pos=(666, 669), word='gpg'),
  WordNode(pos=(670, 677), word='--batch'),
  WordNode(pos=(678, 689), word='--keyserver'),
  WordNode(pos=(690, 716), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(717, 728), word='--recv-keys'),
  WordNode(pos=(729, 741), word='$JULIA_GPG', parts=[
    ParameterNode(pos=(730, 740), value='JULIA_GPG'),
  ]),
])


1386) gpg --batch --verify julia.tar.gz.asc julia.tar.gz

CommandNode(pos=(744, 794), parts=[
  WordNode(pos=(744, 747), word='gpg'),
  WordNode(pos=(748, 755), word='--batch'),
  WordNode(pos=(756, 764), word='--verify'),
  WordNode(pos=(765, 781), word='julia.tar.gz.asc'),
  WordNode(pos=(782, 794), word='julia.tar.gz'),
])


1387) command -v gpgconf > /dev/null

CommandNode(pos=(797, 827), parts=[
  WordNode(pos=(797, 804), word='command'),
  WordNode(pos=(805, 807), word='-v'),
  WordNode(pos=(808, 815), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(818, 827), word='/dev/null'), pos=(816, 827), type='>'),
])


1388) gpgconf --kill all

CommandNode(pos=(831, 849), parts=[
  WordNode(pos=(831, 838), word='gpgconf'),
  WordNode(pos=(839, 845), word='--kill'),
  WordNode(pos=(846, 849), word='all'),
])


1389) rm -rf "$GNUPGHOME" julia.tar.gz.asc

CommandNode(pos=(852, 888), parts=[
  WordNode(pos=(852, 854), word='rm'),
  WordNode(pos=(855, 858), word='-rf'),
  WordNode(pos=(859, 871), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(860, 870), value='GNUPGHOME'),
  ]),
  WordNode(pos=(872, 888), word='julia.tar.gz.asc'),
])


1390) mkdir "$JULIA_PATH"

CommandNode(pos=(892, 911), parts=[
  WordNode(pos=(892, 897), word='mkdir'),
  WordNode(pos=(898, 911), word='$JULIA_PATH', parts=[
    ParameterNode(pos=(899, 910), value='JULIA_PATH'),
  ]),
])


1391) tar -xzf julia.tar.gz -C "$JULIA_PATH" --strip-components 1

CommandNode(pos=(914, 973), parts=[
  WordNode(pos=(914, 917), word='tar'),
  WordNode(pos=(918, 922), word='-xzf'),
  WordNode(pos=(923, 935), word='julia.tar.gz'),
  WordNode(pos=(936, 938), word='-C'),
  WordNode(pos=(939, 952), word='$JULIA_PATH', parts=[
    ParameterNode(pos=(940, 951), value='JULIA_PATH'),
  ]),
  WordNode(pos=(953, 971), word='--strip-components'),
  WordNode(pos=(972, 973), word='1'),
])


1392) rm julia.tar.gz

CommandNode(pos=(976, 991), parts=[
  WordNode(pos=(976, 978), word='rm'),
  WordNode(pos=(979, 991), word='julia.tar.gz'),
])


1393) apt-mark auto '.*' > /dev/null

CommandNode(pos=(995, 1025), parts=[
  WordNode(pos=(995, 1003), word='apt-mark'),
  WordNode(pos=(1004, 1008), word='auto'),
  WordNode(pos=(1009, 1013), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1016, 1025), word='/dev/null'), pos=(1014, 1025), type='>'),
])


1394) [ -z "$savedAptMark" ]

CommandNode(pos=(1028, 1050), parts=[
  WordNode(pos=(1028, 1029), word='['),
  WordNode(pos=(1030, 1032), word='-z'),
  WordNode(pos=(1033, 1048), word='$savedAptMark', parts=[
    ParameterNode(pos=(1034, 1047), value='savedAptMark'),
  ]),
  WordNode(pos=(1049, 1050), word=']'),
])


1395) apt-mark manual $savedAptMark

CommandNode(pos=(1054, 1083), parts=[
  WordNode(pos=(1054, 1062), word='apt-mark'),
  WordNode(pos=(1063, 1069), word='manual'),
  WordNode(pos=(1070, 1083), word='$savedAptMark', parts=[
    ParameterNode(pos=(1070, 1083), value='savedAptMark'),
  ]),
])


1396) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1086, 1162), parts=[
  WordNode(pos=(1086, 1093), word='apt-get'),
  WordNode(pos=(1094, 1099), word='purge'),
  WordNode(pos=(1100, 1102), word='-y'),
  WordNode(pos=(1103, 1116), word='--auto-remove'),
  WordNode(pos=(1117, 1119), word='-o'),
  WordNode(pos=(1120, 1162), word='APT::AutoRemove::RecommendsImportant=false'),
])


1397) julia --version

CommandNode(pos=(1166, 1181), parts=[
  WordNode(pos=(1166, 1171), word='julia'),
  WordNode(pos=(1172, 1181), word='--version'),
])


1398) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


1399) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1400) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


1401) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1402) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1403) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


1404) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


1405) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


1406) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


1407) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


1408) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


1409) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


1410) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


1411) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


1412) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


1413) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   libressl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   util-linux-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1046), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 945), word='libressl-dev'),
  WordNode(pos=(948, 957), word='pax-utils'),
  WordNode(pos=(960, 972), word='readline-dev'),
  WordNode(pos=(975, 985), word='sqlite-dev'),
  WordNode(pos=(988, 995), word='tcl-dev'),
  WordNode(pos=(998, 1000), word='tk'),
  WordNode(pos=(1003, 1009), word='tk-dev'),
  WordNode(pos=(1012, 1026), word='util-linux-dev'),
  WordNode(pos=(1029, 1035), word='xz-dev'),
  WordNode(pos=(1038, 1046), word='zlib-dev'),
])


1414) apk del .fetch-deps

CommandNode(pos=(1051, 1070), parts=[
  WordNode(pos=(1051, 1054), word='apk'),
  WordNode(pos=(1055, 1058), word='del'),
  WordNode(pos=(1059, 1070), word='.fetch-deps'),
])


1415) cd /usr/src/python

CommandNode(pos=(1076, 1094), parts=[
  WordNode(pos=(1076, 1078), word='cd'),
  WordNode(pos=(1079, 1094), word='/usr/src/python'),
])


1416) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1099, 1156), parts=[
  AssignmentNode(pos=(1099, 1156), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1108, 1155)),
  ]),
])


1417) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1161, 1313), parts=[
  WordNode(pos=(1161, 1172), word='./configure'),
  WordNode(pos=(1175, 1193), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1184, 1192), value='gnuArch'),
  ]),
  WordNode(pos=(1196, 1231), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1234, 1249), word='--enable-shared'),
  WordNode(pos=(1252, 1271), word='--with-system-expat'),
  WordNode(pos=(1274, 1291), word='--with-system-ffi'),
  WordNode(pos=(1294, 1313), word='--without-ensurepip'),
])


1418) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1318, 1382), parts=[
  WordNode(pos=(1318, 1322), word='make'),
  WordNode(pos=(1323, 1325), word='-j'),
  WordNode(pos=(1326, 1336), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1329, 1334), parts=[
        WordNode(pos=(1329, 1334), word='nproc'),
      ]), pos=(1327, 1335)),
  ]),
  WordNode(pos=(1339, 1382), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


1419) make install

CommandNode(pos=(1387, 1399), parts=[
  WordNode(pos=(1387, 1391), word='make'),
  WordNode(pos=(1392, 1399), word='install'),
])


1420) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1405, 1528), parts=[
  WordNode(pos=(1405, 1409), word='find'),
  WordNode(pos=(1410, 1420), word='/usr/local'),
  WordNode(pos=(1421, 1426), word='-type'),
  WordNode(pos=(1427, 1428), word='f'),
  WordNode(pos=(1429, 1440), word='-executable'),
  WordNode(pos=(1441, 1445), word='-not'),
  WordNode(pos=(1446, 1448), word='('),
  WordNode(pos=(1449, 1454), word='-name'),
  WordNode(pos=(1455, 1466), word='*tkinter*'),
  WordNode(pos=(1467, 1469), word=')'),
  WordNode(pos=(1470, 1475), word='-exec'),
  WordNode(pos=(1476, 1483), word='scanelf'),
  WordNode(pos=(1484, 1492), word='--needed'),
  WordNode(pos=(1493, 1503), word='--nobanner'),
  WordNode(pos=(1504, 1512), word='--format'),
  WordNode(pos=(1513, 1519), word='%n#p'),
  WordNode(pos=(1520, 1524), word='{}'),
  WordNode(pos=(1525, 1528), word=';'),
])


1421) tr ',' '\n'

CommandNode(pos=(1533, 1544), parts=[
  WordNode(pos=(1533, 1535), word='tr'),
  WordNode(pos=(1536, 1539), word=','),
  WordNode(pos=(1540, 1544), word='\\n'),
])


1422) sort -u

CommandNode(pos=(1549, 1556), parts=[
  WordNode(pos=(1549, 1553), word='sort'),
  WordNode(pos=(1554, 1556), word='-u'),
])


1423) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1561, 1638), parts=[
  WordNode(pos=(1561, 1564), word='awk'),
  WordNode(pos=(1565, 1638), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


1424) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1643, 1697), parts=[
  WordNode(pos=(1643, 1648), word='xargs'),
  WordNode(pos=(1649, 1652), word='-rt'),
  WordNode(pos=(1653, 1656), word='apk'),
  WordNode(pos=(1657, 1660), word='add'),
  WordNode(pos=(1661, 1671), word='--no-cache'),
  WordNode(pos=(1672, 1681), word='--virtual'),
  WordNode(pos=(1682, 1697), word='.python-rundeps'),
])


1425) apk del .build-deps

CommandNode(pos=(1702, 1721), parts=[
  WordNode(pos=(1702, 1705), word='apk'),
  WordNode(pos=(1706, 1709), word='del'),
  WordNode(pos=(1710, 1721), word='.build-deps'),
])


1426) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1727, 1894), parts=[
  WordNode(pos=(1727, 1731), word='find'),
  WordNode(pos=(1732, 1742), word='/usr/local'),
  WordNode(pos=(1743, 1749), word='-depth'),
  WordNode(pos=(1752, 1754), word='('),
  WordNode(pos=(1758, 1760), word='('),
  WordNode(pos=(1761, 1766), word='-type'),
  WordNode(pos=(1767, 1768), word='d'),
  WordNode(pos=(1769, 1771), word='-a'),
  WordNode(pos=(1772, 1774), word='('),
  WordNode(pos=(1775, 1780), word='-name'),
  WordNode(pos=(1781, 1785), word='test'),
  WordNode(pos=(1786, 1788), word='-o'),
  WordNode(pos=(1789, 1794), word='-name'),
  WordNode(pos=(1795, 1800), word='tests'),
  WordNode(pos=(1801, 1803), word=')'),
  WordNode(pos=(1804, 1806), word=')'),
  WordNode(pos=(1810, 1812), word='-o'),
  WordNode(pos=(1816, 1818), word='('),
  WordNode(pos=(1819, 1824), word='-type'),
  WordNode(pos=(1825, 1826), word='f'),
  WordNode(pos=(1827, 1829), word='-a'),
  WordNode(pos=(1830, 1832), word='('),
  WordNode(pos=(1833, 1838), word='-name'),
  WordNode(pos=(1839, 1846), word='*.pyc'),
  WordNode(pos=(1847, 1849), word='-o'),
  WordNode(pos=(1850, 1855), word='-name'),
  WordNode(pos=(1856, 1863), word='*.pyo'),
  WordNode(pos=(1864, 1866), word=')'),
  WordNode(pos=(1867, 1869), word=')'),
  WordNode(pos=(1872, 1874), word=')'),
  WordNode(pos=(1875, 1880), word='-exec'),
  WordNode(pos=(1881, 1883), word='rm'),
  WordNode(pos=(1884, 1887), word='-rf'),
  WordNode(pos=(1888, 1892), word='{}'),
  WordNode(pos=(1893, 1894), word='+'),
])


1427) rm -rf /usr/src/python

CommandNode(pos=(1899, 1921), parts=[
  WordNode(pos=(1899, 1901), word='rm'),
  WordNode(pos=(1902, 1905), word='-rf'),
  WordNode(pos=(1906, 1921), word='/usr/src/python'),
])


1428) python3 --version

CommandNode(pos=(1927, 1944), parts=[
  WordNode(pos=(1927, 1934), word='python3'),
  WordNode(pos=(1935, 1944), word='--version'),
])


1429) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


1430) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


1431) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


1432) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


1433) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


1434) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1435) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


1436) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1437) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


1438) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


1439) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


1440) addgroup -S redis

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='addgroup'),
  WordNode(pos=(9, 11), word='-S'),
  WordNode(pos=(12, 17), word='redis'),
])


1441) adduser -S -G redis redis

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='adduser'),
  WordNode(pos=(29, 31), word='-S'),
  WordNode(pos=(32, 34), word='-G'),
  WordNode(pos=(35, 40), word='redis'),
  WordNode(pos=(41, 46), word='redis'),
])


1442) apk add --no-cache   'su-exec>=0.2'   tzdata

CommandNode(pos=(0, 44), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 35), word='su-exec>=0.2'),
  WordNode(pos=(38, 44), word='tzdata'),
])


1443) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1444) apk add --no-cache --virtual .build-deps   coreutils   gcc   linux-headers   make   musl-dev

CommandNode(pos=(11, 103), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 63), word='coreutils'),
  WordNode(pos=(66, 69), word='gcc'),
  WordNode(pos=(72, 85), word='linux-headers'),
  WordNode(pos=(88, 92), word='make'),
  WordNode(pos=(95, 103), word='musl-dev'),
])


1445) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(109, 151), parts=[
  WordNode(pos=(109, 113), word='wget'),
  WordNode(pos=(114, 116), word='-O'),
  WordNode(pos=(117, 129), word='redis.tar.gz'),
  WordNode(pos=(130, 151), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(131, 150), value='REDIS_DOWNLOAD_URL'),
  ]),
])


1446) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(154, 194), parts=[
  WordNode(pos=(154, 158), word='echo'),
  WordNode(pos=(159, 194), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(160, 179), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


1447) sha256sum -c -

CommandNode(pos=(197, 211), parts=[
  WordNode(pos=(197, 206), word='sha256sum'),
  WordNode(pos=(207, 209), word='-c'),
  WordNode(pos=(210, 211), word='-'),
])


1448) mkdir -p /usr/src/redis

CommandNode(pos=(214, 237), parts=[
  WordNode(pos=(214, 219), word='mkdir'),
  WordNode(pos=(220, 222), word='-p'),
  WordNode(pos=(223, 237), word='/usr/src/redis'),
])


1449) tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1

CommandNode(pos=(240, 300), parts=[
  WordNode(pos=(240, 243), word='tar'),
  WordNode(pos=(244, 248), word='-xzf'),
  WordNode(pos=(249, 261), word='redis.tar.gz'),
  WordNode(pos=(262, 264), word='-C'),
  WordNode(pos=(265, 279), word='/usr/src/redis'),
  WordNode(pos=(280, 300), word='--strip-components=1'),
])


1450) rm redis.tar.gz

CommandNode(pos=(303, 318), parts=[
  WordNode(pos=(303, 305), word='rm'),
  WordNode(pos=(306, 318), word='redis.tar.gz'),
])


1451) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h

CommandNode(pos=(322, 401), parts=[
  WordNode(pos=(322, 326), word='grep'),
  WordNode(pos=(327, 329), word='-q'),
  WordNode(pos=(330, 373), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 1$'),
  WordNode(pos=(374, 401), word='/usr/src/redis/src/server.h'),
])


1452) sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\1 0!' /usr/src/redis/src/server.h

CommandNode(pos=(404, 493), parts=[
  WordNode(pos=(404, 407), word='sed'),
  WordNode(pos=(408, 411), word='-ri'),
  WordNode(pos=(412, 465), word='s!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!'),
  WordNode(pos=(466, 493), word='/usr/src/redis/src/server.h'),
])


1453) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h

CommandNode(pos=(496, 575), parts=[
  WordNode(pos=(496, 500), word='grep'),
  WordNode(pos=(501, 503), word='-q'),
  WordNode(pos=(504, 547), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 0$'),
  WordNode(pos=(548, 575), word='/usr/src/redis/src/server.h'),
])


1454) make -C /usr/src/redis -j "$(nproc)"

CommandNode(pos=(579, 615), parts=[
  WordNode(pos=(579, 583), word='make'),
  WordNode(pos=(584, 586), word='-C'),
  WordNode(pos=(587, 601), word='/usr/src/redis'),
  WordNode(pos=(602, 604), word='-j'),
  WordNode(pos=(605, 615), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(608, 613), parts=[
        WordNode(pos=(608, 613), word='nproc'),
      ]), pos=(606, 614)),
  ]),
])


1455) make -C /usr/src/redis install

CommandNode(pos=(618, 648), parts=[
  WordNode(pos=(618, 622), word='make'),
  WordNode(pos=(623, 625), word='-C'),
  WordNode(pos=(626, 640), word='/usr/src/redis'),
  WordNode(pos=(641, 648), word='install'),
])


1456) rm -r /usr/src/redis

CommandNode(pos=(652, 672), parts=[
  WordNode(pos=(652, 654), word='rm'),
  WordNode(pos=(655, 657), word='-r'),
  WordNode(pos=(658, 672), word='/usr/src/redis'),
])


1457) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(676, 873), parts=[
  AssignmentNode(pos=(676, 873), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(690, 869), parts=[
        CommandNode(pos=(690, 756), parts=[
          WordNode(pos=(690, 697), word='scanelf'),
          WordNode(pos=(698, 706), word='--needed'),
          WordNode(pos=(707, 717), word='--nobanner'),
          WordNode(pos=(718, 726), word='--format'),
          WordNode(pos=(727, 733), word='%n#p'),
          WordNode(pos=(734, 745), word='--recursive'),
          WordNode(pos=(746, 756), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(760, 761)),
        CommandNode(pos=(762, 773), parts=[
          WordNode(pos=(762, 764), word='tr'),
          WordNode(pos=(765, 768), word=','),
          WordNode(pos=(769, 773), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(777, 778)),
        CommandNode(pos=(779, 786), parts=[
          WordNode(pos=(779, 783), word='sort'),
          WordNode(pos=(784, 786), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(790, 791)),
        CommandNode(pos=(792, 869), parts=[
          WordNode(pos=(792, 795), word='awk'),
          WordNode(pos=(796, 869), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(685, 870)),
  ]),
])


1458) apk add --virtual .redis-rundeps $runDeps

CommandNode(pos=(876, 917), parts=[
  WordNode(pos=(876, 879), word='apk'),
  WordNode(pos=(880, 883), word='add'),
  WordNode(pos=(884, 893), word='--virtual'),
  WordNode(pos=(894, 908), word='.redis-rundeps'),
  WordNode(pos=(909, 917), word='$runDeps', parts=[
    ParameterNode(pos=(909, 917), value='runDeps'),
  ]),
])


1459) apk del .build-deps

CommandNode(pos=(920, 939), parts=[
  WordNode(pos=(920, 923), word='apk'),
  WordNode(pos=(924, 927), word='del'),
  WordNode(pos=(928, 939), word='.build-deps'),
])


1460) redis-server --version

CommandNode(pos=(943, 965), parts=[
  WordNode(pos=(943, 955), word='redis-server'),
  WordNode(pos=(956, 965), word='--version'),
])


1461) mkdir /data

CommandNode(pos=(0, 11), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 11), word='/data'),
])


1462) chown redis:redis /data

CommandNode(pos=(15, 38), parts=[
  WordNode(pos=(15, 20), word='chown'),
  WordNode(pos=(21, 32), word='redis:redis'),
  WordNode(pos=(33, 38), word='/data'),
])


1463) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1464) apt-get install -y --no-install-recommends   bzip2   gnupg dirmngr   libcurl4-openssl-dev   libfreetype6-dev   libicu-dev   libjpeg-dev   libldap2-dev   libmemcached-dev   libpng-dev   libpq-dev   libxml2-dev   unzip

CommandNode(pos=(18, 234), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 68), word='bzip2'),
  WordNode(pos=(71, 76), word='gnupg'),
  WordNode(pos=(77, 84), word='dirmngr'),
  WordNode(pos=(87, 107), word='libcurl4-openssl-dev'),
  WordNode(pos=(110, 126), word='libfreetype6-dev'),
  WordNode(pos=(129, 139), word='libicu-dev'),
  WordNode(pos=(142, 153), word='libjpeg-dev'),
  WordNode(pos=(156, 168), word='libldap2-dev'),
  WordNode(pos=(171, 187), word='libmemcached-dev'),
  WordNode(pos=(190, 200), word='libpng-dev'),
  WordNode(pos=(203, 212), word='libpq-dev'),
  WordNode(pos=(215, 226), word='libxml2-dev'),
  WordNode(pos=(229, 234), word='unzip'),
])


1465) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(239, 266), parts=[
  WordNode(pos=(239, 241), word='rm'),
  WordNode(pos=(242, 245), word='-rf'),
  WordNode(pos=(246, 266), word='/var/lib/apt/lists/*'),
])


1466) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1467) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(10, 78), parts=[
  WordNode(pos=(10, 34), word='docker-php-ext-configure'),
  WordNode(pos=(35, 37), word='gd'),
  WordNode(pos=(38, 57), word='--with-png-dir=/usr'),
  WordNode(pos=(58, 78), word='--with-jpeg-dir=/usr'),
])


1468) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


1469) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


1470) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 331), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 285), word='opcache'),
  WordNode(pos=(288, 293), word='pcntl'),
  WordNode(pos=(296, 305), word='pdo_mysql'),
  WordNode(pos=(308, 317), word='pdo_pgsql'),
  WordNode(pos=(320, 325), word='pgsql'),
  WordNode(pos=(328, 331), word='zip'),
])


1471) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


1472) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


1473) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


1474) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


1475) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


1476) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


1477) a2enmod rewrite

CommandNode(pos=(0, 15), parts=[
  WordNode(pos=(0, 7), word='a2enmod'),
  WordNode(pos=(8, 15), word='rewrite'),
])


1478) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1479) pecl install APCu-5.1.11

CommandNode(pos=(10, 34), parts=[
  WordNode(pos=(10, 14), word='pecl'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 34), word='APCu-5.1.11'),
])


1480) pecl install memcached-3.0.4

CommandNode(pos=(37, 65), parts=[
  WordNode(pos=(37, 41), word='pecl'),
  WordNode(pos=(42, 49), word='install'),
  WordNode(pos=(50, 65), word='memcached-3.0.4'),
])


1481) pecl install redis-3.1.6

CommandNode(pos=(68, 92), parts=[
  WordNode(pos=(68, 72), word='pecl'),
  WordNode(pos=(73, 80), word='install'),
  WordNode(pos=(81, 92), word='redis-3.1.6'),
])


1482) docker-php-ext-enable   apcu   memcached   redis

CommandNode(pos=(95, 143), parts=[
  WordNode(pos=(95, 116), word='docker-php-ext-enable'),
  WordNode(pos=(119, 123), word='apcu'),
  WordNode(pos=(126, 135), word='memcached'),
  WordNode(pos=(138, 143), word='redis'),
])


1483) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1484) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


1485) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


1486) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


1487) sha256sum -c -

CommandNode(pos=(283, 297), parts=[
  WordNode(pos=(283, 292), word='sha256sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


1488) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


1489) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys E3036906AD9F30807351FAC32D5D5E97F6978A26

CommandNode(pos=(334, 437), parts=[
  WordNode(pos=(334, 337), word='gpg'),
  WordNode(pos=(338, 345), word='--batch'),
  WordNode(pos=(346, 357), word='--keyserver'),
  WordNode(pos=(358, 384), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(385, 396), word='--recv-keys'),
  WordNode(pos=(397, 437), word='E3036906AD9F30807351FAC32D5D5E97F6978A26'),
])


1490) gpg --batch --verify owncloud.tar.bz2.asc owncloud.tar.bz2

CommandNode(pos=(440, 498), parts=[
  WordNode(pos=(440, 443), word='gpg'),
  WordNode(pos=(444, 451), word='--batch'),
  WordNode(pos=(452, 460), word='--verify'),
  WordNode(pos=(461, 481), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(482, 498), word='owncloud.tar.bz2'),
])


1491) command -v gpgconf

CommandNode(pos=(501, 519), parts=[
  WordNode(pos=(501, 508), word='command'),
  WordNode(pos=(509, 511), word='-v'),
  WordNode(pos=(512, 519), word='gpgconf'),
])


1492) gpgconf --kill all

CommandNode(pos=(523, 541), parts=[
  WordNode(pos=(523, 530), word='gpgconf'),
  WordNode(pos=(531, 537), word='--kill'),
  WordNode(pos=(538, 541), word='all'),
])


1493) :

CommandNode(pos=(545, 546), parts=[
  WordNode(pos=(545, 546), word=':'),
])


1494) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


1495) tar -xjf owncloud.tar.bz2 -C /usr/src/

CommandNode(pos=(591, 629), parts=[
  WordNode(pos=(591, 594), word='tar'),
  WordNode(pos=(595, 599), word='-xjf'),
  WordNode(pos=(600, 616), word='owncloud.tar.bz2'),
  WordNode(pos=(617, 619), word='-C'),
  WordNode(pos=(620, 629), word='/usr/src/'),
])


1496) rm owncloud.tar.bz2

CommandNode(pos=(632, 651), parts=[
  WordNode(pos=(632, 634), word='rm'),
  WordNode(pos=(635, 651), word='owncloud.tar.bz2'),
])


1497) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1498) apk add --no-cache   btrfs-progs   e2fsprogs   e2fsprogs-extra   iptables   xfsprogs   xz   pigz

CommandNode(pos=(11, 107), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(32, 43), word='btrfs-progs'),
  WordNode(pos=(46, 55), word='e2fsprogs'),
  WordNode(pos=(58, 73), word='e2fsprogs-extra'),
  WordNode(pos=(76, 84), word='iptables'),
  WordNode(pos=(87, 95), word='xfsprogs'),
  WordNode(pos=(98, 100), word='xz'),
  WordNode(pos=(103, 107), word='pigz'),
])


1499) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


1500) [ -n "$zfs" ]

CommandNode(pos=(159, 172), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 163), word='-n'),
  WordNode(pos=(164, 170), word='$zfs', parts=[
    ParameterNode(pos=(165, 169), value='zfs'),
  ]),
  WordNode(pos=(171, 172), word=']'),
])


1501) apk add --no-cache zfs

CommandNode(pos=(181, 203), parts=[
  WordNode(pos=(181, 184), word='apk'),
  WordNode(pos=(185, 188), word='add'),
  WordNode(pos=(189, 199), word='--no-cache'),
  WordNode(pos=(200, 203), word='zfs'),
])


1502) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


1503) addgroup -S dockremap

CommandNode(pos=(11, 32), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-S'),
  WordNode(pos=(23, 32), word='dockremap'),
])


1504) adduser -S -G dockremap dockremap

CommandNode(pos=(37, 70), parts=[
  WordNode(pos=(37, 44), word='adduser'),
  WordNode(pos=(45, 47), word='-S'),
  WordNode(pos=(48, 50), word='-G'),
  WordNode(pos=(51, 60), word='dockremap'),
  WordNode(pos=(61, 70), word='dockremap'),
])


1505) echo 'dockremap:165536:65536' >> /etc/subuid

CommandNode(pos=(75, 119), parts=[
  WordNode(pos=(75, 79), word='echo'),
  WordNode(pos=(80, 104), word='dockremap:165536:65536'),
  RedirectNode(output=
    WordNode(pos=(108, 119), word='/etc/subuid'), pos=(105, 119), type='>>'),
])


1506) echo 'dockremap:165536:65536' >> /etc/subgid

CommandNode(pos=(124, 168), parts=[
  WordNode(pos=(124, 128), word='echo'),
  WordNode(pos=(129, 153), word='dockremap:165536:65536'),
  RedirectNode(output=
    WordNode(pos=(157, 168), word='/etc/subgid'), pos=(154, 168), type='>>'),
])


1507) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1508) wget -O /usr/local/bin/dind "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"

CommandNode(pos=(11, 113), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/dind'),
  WordNode(pos=(39, 113), word='https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind', parts=[
    ParameterNode(pos=(88, 102), value='DIND_COMMIT'),
  ]),
])


1509) chmod +x /usr/local/bin/dind

CommandNode(pos=(116, 144), parts=[
  WordNode(pos=(116, 121), word='chmod'),
  WordNode(pos=(122, 124), word='+x'),
  WordNode(pos=(125, 144), word='/usr/local/bin/dind'),
])


1510) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1511) apt-get install -y   ca-certificates   curl

CommandNode(pos=(18, 61), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 54), word='ca-certificates'),
  WordNode(pos=(57, 61), word='curl'),
])


1512) gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D

CommandNode(pos=(0, 92), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 15), word='--keyserver'),
  WordNode(pos=(16, 39), word='pool.sks-keyservers.net'),
  WordNode(pos=(40, 51), word='--recv-keys'),
  WordNode(pos=(52, 92), word='7937DFD2AB06298B2293C3187D33FF9D0246406D'),
])


1513) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


1514) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


1515) gpg --verify SHASUMS256.txt.asc

CommandNode(pos=(164, 195), parts=[
  WordNode(pos=(164, 167), word='gpg'),
  WordNode(pos=(168, 176), word='--verify'),
  WordNode(pos=(177, 195), word='SHASUMS256.txt.asc'),
])


1516) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


1517) sha256sum -c -

CommandNode(pos=(268, 282), parts=[
  WordNode(pos=(268, 277), word='sha256sum'),
  WordNode(pos=(278, 280), word='-c'),
  WordNode(pos=(281, 282), word='-'),
])


1518) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


1519) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


1520) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(439, 472), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 472), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(459, 471), value='NPM_VERSION'),
  ]),
])


1521) npm cache clear

CommandNode(pos=(477, 492), parts=[
  WordNode(pos=(477, 480), word='npm'),
  WordNode(pos=(481, 486), word='cache'),
  WordNode(pos=(487, 492), word='clear'),
])


1522) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


1523) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


1524) apt-get update

CommandNode(pos=(54, 68), parts=[
  WordNode(pos=(54, 61), word='apt-get'),
  WordNode(pos=(62, 68), word='update'),
])


1525) apt-get install -y --no-install-recommends   ca-certificates   gcc   libc6-dev   libpcre2-dev   libssl1.0-dev   make   wget   zlib1g-dev

CommandNode(pos=(72, 208), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 87), word='install'),
  WordNode(pos=(88, 90), word='-y'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 138), word='gcc'),
  WordNode(pos=(141, 150), word='libc6-dev'),
  WordNode(pos=(153, 165), word='libpcre2-dev'),
  WordNode(pos=(168, 181), word='libssl1.0-dev'),
  WordNode(pos=(184, 188), word='make'),
  WordNode(pos=(191, 195), word='wget'),
  WordNode(pos=(198, 208), word='zlib1g-dev'),
])


1526) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(213, 240), parts=[
  WordNode(pos=(213, 215), word='rm'),
  WordNode(pos=(216, 219), word='-rf'),
  WordNode(pos=(220, 240), word='/var/lib/apt/lists/*'),
])


1527) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(246, 283), parts=[
  WordNode(pos=(246, 250), word='wget'),
  WordNode(pos=(251, 253), word='-O'),
  WordNode(pos=(254, 268), word='haproxy.tar.gz'),
  WordNode(pos=(269, 283), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(270, 282), value='HAPROXY_URL'),
  ]),
])


1528) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(288, 326), parts=[
  WordNode(pos=(288, 292), word='echo'),
  WordNode(pos=(293, 326), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(294, 309), value='HAPROXY_SHA256'),
  ]),
])


1529) sha256sum -c

CommandNode(pos=(329, 341), parts=[
  WordNode(pos=(329, 338), word='sha256sum'),
  WordNode(pos=(339, 341), word='-c'),
])


1530) mkdir -p /usr/src/haproxy

CommandNode(pos=(346, 371), parts=[
  WordNode(pos=(346, 351), word='mkdir'),
  WordNode(pos=(352, 354), word='-p'),
  WordNode(pos=(355, 371), word='/usr/src/haproxy'),
])


1531) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(376, 440), parts=[
  WordNode(pos=(376, 379), word='tar'),
  WordNode(pos=(380, 384), word='-xzf'),
  WordNode(pos=(385, 399), word='haproxy.tar.gz'),
  WordNode(pos=(400, 402), word='-C'),
  WordNode(pos=(403, 419), word='/usr/src/haproxy'),
  WordNode(pos=(420, 440), word='--strip-components=1'),
])


1532) rm haproxy.tar.gz

CommandNode(pos=(445, 462), parts=[
  WordNode(pos=(445, 447), word='rm'),
  WordNode(pos=(448, 462), word='haproxy.tar.gz'),
])


1533) makeOpts='   TARGET=linux2628   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(468, 579), parts=[
  AssignmentNode(pos=(468, 579), word='makeOpts=   TARGET=linux2628   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


1534) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(584, 636), parts=[
  WordNode(pos=(584, 588), word='make'),
  WordNode(pos=(589, 591), word='-C'),
  WordNode(pos=(592, 608), word='/usr/src/haproxy'),
  WordNode(pos=(609, 611), word='-j'),
  WordNode(pos=(612, 622), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(615, 620), parts=[
        WordNode(pos=(615, 620), word='nproc'),
      ]), pos=(613, 621)),
  ]),
  WordNode(pos=(623, 626), word='all'),
  WordNode(pos=(627, 636), word='$makeOpts', parts=[
    ParameterNode(pos=(627, 636), value='makeOpts'),
  ]),
])


1535) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(641, 687), parts=[
  WordNode(pos=(641, 645), word='make'),
  WordNode(pos=(646, 648), word='-C'),
  WordNode(pos=(649, 665), word='/usr/src/haproxy'),
  WordNode(pos=(666, 677), word='install-bin'),
  WordNode(pos=(678, 687), word='$makeOpts', parts=[
    ParameterNode(pos=(678, 687), value='makeOpts'),
  ]),
])


1536) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(693, 724), parts=[
  WordNode(pos=(693, 698), word='mkdir'),
  WordNode(pos=(699, 701), word='-p'),
  WordNode(pos=(702, 724), word='/usr/local/etc/haproxy'),
])


1537) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(729, 801), parts=[
  WordNode(pos=(729, 731), word='cp'),
  WordNode(pos=(732, 734), word='-R'),
  WordNode(pos=(735, 771), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(772, 801), word='/usr/local/etc/haproxy/errors'),
])


1538) rm -rf /usr/src/haproxy

CommandNode(pos=(806, 829), parts=[
  WordNode(pos=(806, 808), word='rm'),
  WordNode(pos=(809, 812), word='-rf'),
  WordNode(pos=(813, 829), word='/usr/src/haproxy'),
])


1539) apt-mark auto '.*' > /dev/null

CommandNode(pos=(835, 865), parts=[
  WordNode(pos=(835, 843), word='apt-mark'),
  WordNode(pos=(844, 848), word='auto'),
  WordNode(pos=(849, 853), word='.*'),
  RedirectNode(output=
    WordNode(pos=(856, 865), word='/dev/null'), pos=(854, 865), type='>'),
])


1540) [ -z "$savedAptMark" ]

CommandNode(pos=(872, 894), parts=[
  WordNode(pos=(872, 873), word='['),
  WordNode(pos=(874, 876), word='-z'),
  WordNode(pos=(877, 892), word='$savedAptMark', parts=[
    ParameterNode(pos=(878, 891), value='savedAptMark'),
  ]),
  WordNode(pos=(893, 894), word=']'),
])


1541) apt-mark manual $savedAptMark

CommandNode(pos=(898, 927), parts=[
  WordNode(pos=(898, 906), word='apt-mark'),
  WordNode(pos=(907, 913), word='manual'),
  WordNode(pos=(914, 927), word='$savedAptMark', parts=[
    ParameterNode(pos=(914, 927), value='savedAptMark'),
  ]),
])


1542) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(935, 989), parts=[
  WordNode(pos=(935, 939), word='find'),
  WordNode(pos=(940, 950), word='/usr/local'),
  WordNode(pos=(951, 956), word='-type'),
  WordNode(pos=(957, 958), word='f'),
  WordNode(pos=(959, 970), word='-executable'),
  WordNode(pos=(971, 976), word='-exec'),
  WordNode(pos=(977, 980), word='ldd'),
  WordNode(pos=(981, 985), word='{}'),
  WordNode(pos=(986, 989), word=';'),
])


1543) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(994, 1022), parts=[
  WordNode(pos=(994, 997), word='awk'),
  WordNode(pos=(998, 1022), word='/=>/ { print $(NF-1) }'),
])


1544) sort -u

CommandNode(pos=(1027, 1034), parts=[
  WordNode(pos=(1027, 1031), word='sort'),
  WordNode(pos=(1032, 1034), word='-u'),
])


1545) xargs -r dpkg-query --search

CommandNode(pos=(1039, 1067), parts=[
  WordNode(pos=(1039, 1044), word='xargs'),
  WordNode(pos=(1045, 1047), word='-r'),
  WordNode(pos=(1048, 1058), word='dpkg-query'),
  WordNode(pos=(1059, 1067), word='--search'),
])


1546) cut -d: -f1

CommandNode(pos=(1072, 1083), parts=[
  WordNode(pos=(1072, 1075), word='cut'),
  WordNode(pos=(1076, 1079), word='-d:'),
  WordNode(pos=(1080, 1083), word='-f1'),
])


1547) sort -u

CommandNode(pos=(1088, 1095), parts=[
  WordNode(pos=(1088, 1092), word='sort'),
  WordNode(pos=(1093, 1095), word='-u'),
])


1548) xargs -r apt-mark manual

CommandNode(pos=(1100, 1124), parts=[
  WordNode(pos=(1100, 1105), word='xargs'),
  WordNode(pos=(1106, 1108), word='-r'),
  WordNode(pos=(1109, 1117), word='apt-mark'),
  WordNode(pos=(1118, 1124), word='manual'),
])


1549) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1129, 1205), parts=[
  WordNode(pos=(1129, 1136), word='apt-get'),
  WordNode(pos=(1137, 1142), word='purge'),
  WordNode(pos=(1143, 1145), word='-y'),
  WordNode(pos=(1146, 1159), word='--auto-remove'),
  WordNode(pos=(1160, 1162), word='-o'),
  WordNode(pos=(1163, 1205), word='APT::AutoRemove::RecommendsImportant=false'),
])


1550) groupadd user

CommandNode(pos=(0, 13), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 13), word='user'),
])


1551) useradd --create-home --home-dir /home/user -g user user

CommandNode(pos=(17, 73), parts=[
  WordNode(pos=(17, 24), word='useradd'),
  WordNode(pos=(25, 38), word='--create-home'),
  WordNode(pos=(39, 49), word='--home-dir'),
  WordNode(pos=(50, 60), word='/home/user'),
  WordNode(pos=(61, 63), word='-g'),
  WordNode(pos=(64, 68), word='user'),
  WordNode(pos=(69, 73), word='user'),
])


1552) pip install redis

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 17), word='redis'),
])


1553) pip install celery=="$CELERY_VERSION"

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 37), word='celery==$CELERY_VERSION', parts=[
    ParameterNode(pos=(21, 36), value='CELERY_VERSION'),
  ]),
])


1554) echo 'import os'

CommandNode(pos=(3, 19), parts=[
  WordNode(pos=(3, 7), word='echo'),
  WordNode(pos=(8, 19), word='import os'),
])


1555) echo "BROKER_URL = os.environ.get('CELERY_BROKER_URL', 'amqp://')"

CommandNode(pos=(22, 88), parts=[
  WordNode(pos=(22, 26), word='echo'),
  WordNode(pos=(27, 88), word="BROKER_URL = os.environ.get('CELERY_BROKER_URL', 'amqp://')"),
])


1556) apk add --no-cache   git   openssh-client

CommandNode(pos=(0, 41), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 24), word='git'),
  WordNode(pos=(27, 41), word='openssh-client'),
])


1557) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1558) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


1559) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


1560) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


1561) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1562) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


1563) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


1564) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1565) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1566) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


1567) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


1568) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


1569) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


1570) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


1571) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


1572) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


1573) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


1574) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


1575) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


1576) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


1577) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


1578) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


1579) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


1580) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


1581) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


1582) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


1583) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


1584) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


1585) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


1586) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


1587) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


1588) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


1589) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


1590) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


1591) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


1592) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


1593) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


1594) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


1595) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


1596) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


1597) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1598) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


1599) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1600) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1601) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


1602) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


1603) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


1604) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


1605) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


1606) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


1607) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


1608) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


1609) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


1610) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


1611) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   util-linux-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1045), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1025), word='util-linux-dev'),
  WordNode(pos=(1028, 1034), word='xz-dev'),
  WordNode(pos=(1037, 1045), word='zlib-dev'),
])


1612) apk del .fetch-deps

CommandNode(pos=(1050, 1069), parts=[
  WordNode(pos=(1050, 1053), word='apk'),
  WordNode(pos=(1054, 1057), word='del'),
  WordNode(pos=(1058, 1069), word='.fetch-deps'),
])


1613) cd /usr/src/python

CommandNode(pos=(1075, 1093), parts=[
  WordNode(pos=(1075, 1077), word='cd'),
  WordNode(pos=(1078, 1093), word='/usr/src/python'),
])


1614) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


1615) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


1616) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


1617) make install

CommandNode(pos=(1386, 1398), parts=[
  WordNode(pos=(1386, 1390), word='make'),
  WordNode(pos=(1391, 1398), word='install'),
])


1618) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1404, 1527), parts=[
  WordNode(pos=(1404, 1408), word='find'),
  WordNode(pos=(1409, 1419), word='/usr/local'),
  WordNode(pos=(1420, 1425), word='-type'),
  WordNode(pos=(1426, 1427), word='f'),
  WordNode(pos=(1428, 1439), word='-executable'),
  WordNode(pos=(1440, 1444), word='-not'),
  WordNode(pos=(1445, 1447), word='('),
  WordNode(pos=(1448, 1453), word='-name'),
  WordNode(pos=(1454, 1465), word='*tkinter*'),
  WordNode(pos=(1466, 1468), word=')'),
  WordNode(pos=(1469, 1474), word='-exec'),
  WordNode(pos=(1475, 1482), word='scanelf'),
  WordNode(pos=(1483, 1491), word='--needed'),
  WordNode(pos=(1492, 1502), word='--nobanner'),
  WordNode(pos=(1503, 1511), word='--format'),
  WordNode(pos=(1512, 1518), word='%n#p'),
  WordNode(pos=(1519, 1523), word='{}'),
  WordNode(pos=(1524, 1527), word=';'),
])


1619) tr ',' '\n'

CommandNode(pos=(1532, 1543), parts=[
  WordNode(pos=(1532, 1534), word='tr'),
  WordNode(pos=(1535, 1538), word=','),
  WordNode(pos=(1539, 1543), word='\\n'),
])


1620) sort -u

CommandNode(pos=(1548, 1555), parts=[
  WordNode(pos=(1548, 1552), word='sort'),
  WordNode(pos=(1553, 1555), word='-u'),
])


1621) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1560, 1637), parts=[
  WordNode(pos=(1560, 1563), word='awk'),
  WordNode(pos=(1564, 1637), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


1622) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1642, 1696), parts=[
  WordNode(pos=(1642, 1647), word='xargs'),
  WordNode(pos=(1648, 1651), word='-rt'),
  WordNode(pos=(1652, 1655), word='apk'),
  WordNode(pos=(1656, 1659), word='add'),
  WordNode(pos=(1660, 1670), word='--no-cache'),
  WordNode(pos=(1671, 1680), word='--virtual'),
  WordNode(pos=(1681, 1696), word='.python-rundeps'),
])


1623) apk del .build-deps

CommandNode(pos=(1701, 1720), parts=[
  WordNode(pos=(1701, 1704), word='apk'),
  WordNode(pos=(1705, 1708), word='del'),
  WordNode(pos=(1709, 1720), word='.build-deps'),
])


1624) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1726, 1893), parts=[
  WordNode(pos=(1726, 1730), word='find'),
  WordNode(pos=(1731, 1741), word='/usr/local'),
  WordNode(pos=(1742, 1748), word='-depth'),
  WordNode(pos=(1751, 1753), word='('),
  WordNode(pos=(1757, 1759), word='('),
  WordNode(pos=(1760, 1765), word='-type'),
  WordNode(pos=(1766, 1767), word='d'),
  WordNode(pos=(1768, 1770), word='-a'),
  WordNode(pos=(1771, 1773), word='('),
  WordNode(pos=(1774, 1779), word='-name'),
  WordNode(pos=(1780, 1784), word='test'),
  WordNode(pos=(1785, 1787), word='-o'),
  WordNode(pos=(1788, 1793), word='-name'),
  WordNode(pos=(1794, 1799), word='tests'),
  WordNode(pos=(1800, 1802), word=')'),
  WordNode(pos=(1803, 1805), word=')'),
  WordNode(pos=(1809, 1811), word='-o'),
  WordNode(pos=(1815, 1817), word='('),
  WordNode(pos=(1818, 1823), word='-type'),
  WordNode(pos=(1824, 1825), word='f'),
  WordNode(pos=(1826, 1828), word='-a'),
  WordNode(pos=(1829, 1831), word='('),
  WordNode(pos=(1832, 1837), word='-name'),
  WordNode(pos=(1838, 1845), word='*.pyc'),
  WordNode(pos=(1846, 1848), word='-o'),
  WordNode(pos=(1849, 1854), word='-name'),
  WordNode(pos=(1855, 1862), word='*.pyo'),
  WordNode(pos=(1863, 1865), word=')'),
  WordNode(pos=(1866, 1868), word=')'),
  WordNode(pos=(1871, 1873), word=')'),
  WordNode(pos=(1874, 1879), word='-exec'),
  WordNode(pos=(1880, 1882), word='rm'),
  WordNode(pos=(1883, 1886), word='-rf'),
  WordNode(pos=(1887, 1891), word='{}'),
  WordNode(pos=(1892, 1893), word='+'),
])


1625) rm -rf /usr/src/python

CommandNode(pos=(1898, 1920), parts=[
  WordNode(pos=(1898, 1900), word='rm'),
  WordNode(pos=(1901, 1904), word='-rf'),
  WordNode(pos=(1905, 1920), word='/usr/src/python'),
])


1626) python3 --version

CommandNode(pos=(1926, 1943), parts=[
  WordNode(pos=(1926, 1933), word='python3'),
  WordNode(pos=(1934, 1943), word='--version'),
])


1627) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


1628) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


1629) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


1630) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


1631) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


1632) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1633) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


1634) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1635) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


1636) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


1637) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


1638) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


1639) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


1640) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


1641) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


1642) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1643) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1644) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


1645) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


1646) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


1647) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


1648) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


1649) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


1650) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


1651) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


1652) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


1653) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


1654) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


1655) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


1656) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


1657) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


1658) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


1659) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


1660) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


1661) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


1662) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


1663) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


1664) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


1665) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


1666) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


1667) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


1668) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


1669) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1670) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


1671) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


1672) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1673) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


1674) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


1675) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


1676) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


1677) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


1678) apk add --no-cache --virtual .build-deps   ca-certificates   gcc   libc-dev   linux-headers   lua5.3-dev   make   openssl   openssl-dev   pcre2-dev   readline-dev   tar   zlib-dev

CommandNode(pos=(12, 191), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 76), word='gcc'),
  WordNode(pos=(79, 87), word='libc-dev'),
  WordNode(pos=(90, 103), word='linux-headers'),
  WordNode(pos=(106, 116), word='lua5.3-dev'),
  WordNode(pos=(119, 123), word='make'),
  WordNode(pos=(126, 133), word='openssl'),
  WordNode(pos=(136, 147), word='openssl-dev'),
  WordNode(pos=(150, 159), word='pcre2-dev'),
  WordNode(pos=(162, 174), word='readline-dev'),
  WordNode(pos=(177, 180), word='tar'),
  WordNode(pos=(183, 191), word='zlib-dev'),
])


1679) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


1680) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


1681) sha256sum -c

CommandNode(pos=(280, 292), parts=[
  WordNode(pos=(280, 289), word='sha256sum'),
  WordNode(pos=(290, 292), word='-c'),
])


1682) mkdir -p /usr/src/haproxy

CommandNode(pos=(297, 322), parts=[
  WordNode(pos=(297, 302), word='mkdir'),
  WordNode(pos=(303, 305), word='-p'),
  WordNode(pos=(306, 322), word='/usr/src/haproxy'),
])


1683) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(327, 391), parts=[
  WordNode(pos=(327, 330), word='tar'),
  WordNode(pos=(331, 335), word='-xzf'),
  WordNode(pos=(336, 350), word='haproxy.tar.gz'),
  WordNode(pos=(351, 353), word='-C'),
  WordNode(pos=(354, 370), word='/usr/src/haproxy'),
  WordNode(pos=(371, 391), word='--strip-components=1'),
])


1684) rm haproxy.tar.gz

CommandNode(pos=(396, 413), parts=[
  WordNode(pos=(396, 398), word='rm'),
  WordNode(pos=(399, 413), word='haproxy.tar.gz'),
])


1685) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 594), parts=[
  AssignmentNode(pos=(419, 594), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


1686) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


1687) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(676, 722), parts=[
  WordNode(pos=(676, 680), word='make'),
  WordNode(pos=(681, 683), word='-C'),
  WordNode(pos=(684, 700), word='/usr/src/haproxy'),
  WordNode(pos=(701, 712), word='install-bin'),
  WordNode(pos=(713, 722), word='$makeOpts', parts=[
    ParameterNode(pos=(713, 722), value='makeOpts'),
  ]),
])


1688) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(728, 759), parts=[
  WordNode(pos=(728, 733), word='mkdir'),
  WordNode(pos=(734, 736), word='-p'),
  WordNode(pos=(737, 759), word='/usr/local/etc/haproxy'),
])


1689) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(764, 836), parts=[
  WordNode(pos=(764, 766), word='cp'),
  WordNode(pos=(767, 769), word='-R'),
  WordNode(pos=(770, 806), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(807, 836), word='/usr/local/etc/haproxy/errors'),
])


1690) rm -rf /usr/src/haproxy

CommandNode(pos=(841, 864), parts=[
  WordNode(pos=(841, 843), word='rm'),
  WordNode(pos=(844, 847), word='-rf'),
  WordNode(pos=(848, 864), word='/usr/src/haproxy'),
])


1691) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


1692) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1072, 1115), parts=[
  WordNode(pos=(1072, 1075), word='apk'),
  WordNode(pos=(1076, 1079), word='add'),
  WordNode(pos=(1080, 1089), word='--virtual'),
  WordNode(pos=(1090, 1106), word='.haproxy-rundeps'),
  WordNode(pos=(1107, 1115), word='$runDeps', parts=[
    ParameterNode(pos=(1107, 1115), value='runDeps'),
  ]),
])


1693) apk del .build-deps

CommandNode(pos=(1120, 1139), parts=[
  WordNode(pos=(1120, 1123), word='apk'),
  WordNode(pos=(1124, 1127), word='del'),
  WordNode(pos=(1128, 1139), word='.build-deps'),
])


1694) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1695) apt-get install -y   gcc   gettext   mysql-client libmysqlclient-dev   postgresql-client libpq-dev   sqlite3  --no-install-recommends

CommandNode(pos=(18, 151), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 42), word='gcc'),
  WordNode(pos=(45, 52), word='gettext'),
  WordNode(pos=(55, 67), word='mysql-client'),
  WordNode(pos=(68, 86), word='libmysqlclient-dev'),
  WordNode(pos=(89, 106), word='postgresql-client'),
  WordNode(pos=(107, 116), word='libpq-dev'),
  WordNode(pos=(119, 126), word='sqlite3'),
  WordNode(pos=(128, 151), word='--no-install-recommends'),
])


1696) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(155, 182), parts=[
  WordNode(pos=(155, 157), word='rm'),
  WordNode(pos=(158, 161), word='-rf'),
  WordNode(pos=(162, 182), word='/var/lib/apt/lists/*'),
])


1697) pip install mysqlclient psycopg2 django=="$DJANGO_VERSION"

CommandNode(pos=(0, 58), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 23), word='mysqlclient'),
  WordNode(pos=(24, 32), word='psycopg2'),
  WordNode(pos=(33, 58), word='django==$DJANGO_VERSION', parts=[
    ParameterNode(pos=(42, 57), value='DJANGO_VERSION'),
  ]),
])


1698) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1699) apt-get install -y   gcc   gettext   mysql-client libmysqlclient-dev   postgresql-client libpq-dev   sqlite3  --no-install-recommends

CommandNode(pos=(18, 151), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 42), word='gcc'),
  WordNode(pos=(45, 52), word='gettext'),
  WordNode(pos=(55, 67), word='mysql-client'),
  WordNode(pos=(68, 86), word='libmysqlclient-dev'),
  WordNode(pos=(89, 106), word='postgresql-client'),
  WordNode(pos=(107, 116), word='libpq-dev'),
  WordNode(pos=(119, 126), word='sqlite3'),
  WordNode(pos=(128, 151), word='--no-install-recommends'),
])


1700) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(155, 182), parts=[
  WordNode(pos=(155, 157), word='rm'),
  WordNode(pos=(158, 161), word='-rf'),
  WordNode(pos=(162, 182), word='/var/lib/apt/lists/*'),
])


1701) pip install mysqlclient psycopg2 django=="$DJANGO_VERSION"

CommandNode(pos=(0, 58), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 23), word='mysqlclient'),
  WordNode(pos=(24, 32), word='psycopg2'),
  WordNode(pos=(33, 58), word='django==$DJANGO_VERSION', parts=[
    ParameterNode(pos=(42, 57), value='DJANGO_VERSION'),
  ]),
])


1702) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1703) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


1704) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


1705) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


1706) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1707) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


1708) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


1709) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1710) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1711) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


1712) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


1713) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


1714) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


1715) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1716) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


1717) apt-get install -y --no-install-recommends apache2

CommandNode(pos=(28, 78), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 78), word='apache2'),
])


1718) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(81, 108), parts=[
  WordNode(pos=(81, 83), word='rm'),
  WordNode(pos=(84, 87), word='-rf'),
  WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
])


1719) sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"

CommandNode(pos=(112, 187), parts=[
  WordNode(pos=(112, 115), word='sed'),
  WordNode(pos=(116, 119), word='-ri'),
  WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
  WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
  ]),
])


1720) . "$APACHE_ENVVARS"

CommandNode(pos=(191, 210), parts=[
  WordNode(pos=(191, 192), word='.'),
  WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
  ]),
])


1721) rm -rvf "$dir"

CommandNode(pos=(293, 307), parts=[
  WordNode(pos=(293, 295), word='rm'),
  WordNode(pos=(296, 300), word='-rvf'),
  WordNode(pos=(301, 307), word='$dir', parts=[
    ParameterNode(pos=(302, 306), value='dir'),
  ]),
])


1722) mkdir -p "$dir"

CommandNode(pos=(311, 326), parts=[
  WordNode(pos=(311, 316), word='mkdir'),
  WordNode(pos=(317, 319), word='-p'),
  WordNode(pos=(320, 326), word='$dir', parts=[
    ParameterNode(pos=(321, 325), value='dir'),
  ]),
])


1723) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


1724) chmod 777 "$dir"

CommandNode(pos=(383, 399), parts=[
  WordNode(pos=(383, 388), word='chmod'),
  WordNode(pos=(389, 392), word='777'),
  WordNode(pos=(393, 399), word='$dir', parts=[
    ParameterNode(pos=(394, 398), value='dir'),
  ]),
])


1725) rm -rvf /var/www/html/*

CommandNode(pos=(410, 433), parts=[
  WordNode(pos=(410, 412), word='rm'),
  WordNode(pos=(413, 417), word='-rvf'),
  WordNode(pos=(418, 433), word='/var/www/html/*'),
])


1726) ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"

CommandNode(pos=(437, 484), parts=[
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 444), word='-sfT'),
  WordNode(pos=(445, 456), word='/dev/stderr'),
  WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
    ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
  ]),
])


1727) ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"

CommandNode(pos=(487, 535), parts=[
  WordNode(pos=(487, 489), word='ln'),
  WordNode(pos=(490, 494), word='-sfT'),
  WordNode(pos=(495, 506), word='/dev/stdout'),
  WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
    ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
  ]),
])


1728) ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

CommandNode(pos=(538, 599), parts=[
  WordNode(pos=(538, 540), word='ln'),
  WordNode(pos=(541, 545), word='-sfT'),
  WordNode(pos=(546, 557), word='/dev/stdout'),
  WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
    ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
  ]),
])


1729) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


1730) a2dismod mpm_event

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 8), word='a2dismod'),
  WordNode(pos=(9, 18), word='mpm_event'),
])


1731) a2enmod mpm_prefork

CommandNode(pos=(22, 41), parts=[
  WordNode(pos=(22, 29), word='a2enmod'),
  WordNode(pos=(30, 41), word='mpm_prefork'),
])


1732) echo '<FilesMatch \.php$>'

CommandNode(pos=(4, 30), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 30), word='<FilesMatch \\.php$>'),
])


1733) echo '\tSetHandler application/x-httpd-php'

CommandNode(pos=(34, 77), parts=[
  WordNode(pos=(34, 38), word='echo'),
  WordNode(pos=(39, 77), word='\\tSetHandler application/x-httpd-php'),
])


1734) echo '</FilesMatch>'

CommandNode(pos=(81, 101), parts=[
  WordNode(pos=(81, 85), word='echo'),
  WordNode(pos=(86, 101), word='</FilesMatch>'),
])


1735) echo

CommandNode(pos=(105, 109), parts=[
  WordNode(pos=(105, 109), word='echo'),
])


1736) echo 'DirectoryIndex disabled'

CommandNode(pos=(113, 143), parts=[
  WordNode(pos=(113, 117), word='echo'),
  WordNode(pos=(118, 143), word='DirectoryIndex disabled'),
])


1737) echo 'DirectoryIndex index.php index.html'

CommandNode(pos=(147, 189), parts=[
  WordNode(pos=(147, 151), word='echo'),
  WordNode(pos=(152, 189), word='DirectoryIndex index.php index.html'),
])


1738) echo

CommandNode(pos=(193, 197), parts=[
  WordNode(pos=(193, 197), word='echo'),
])


1739) echo '<Directory /var/www/>'

CommandNode(pos=(201, 229), parts=[
  WordNode(pos=(201, 205), word='echo'),
  WordNode(pos=(206, 229), word='<Directory /var/www/>'),
])


1740) echo '\tOptions -Indexes'

CommandNode(pos=(233, 258), parts=[
  WordNode(pos=(233, 237), word='echo'),
  WordNode(pos=(238, 258), word='\\tOptions -Indexes'),
])


1741) echo '\tAllowOverride All'

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 266), word='echo'),
  WordNode(pos=(267, 288), word='\\tAllowOverride All'),
])


1742) echo '</Directory>'

CommandNode(pos=(292, 311), parts=[
  WordNode(pos=(292, 296), word='echo'),
  WordNode(pos=(297, 311), word='</Directory>'),
])


1743) tee "$APACHE_CONFDIR/conf-available/docker-php.conf"

CommandNode(pos=(318, 370), parts=[
  WordNode(pos=(318, 321), word='tee'),
  WordNode(pos=(322, 370), word='$APACHE_CONFDIR/conf-available/docker-php.conf', parts=[
    ParameterNode(pos=(323, 338), value='APACHE_CONFDIR'),
  ]),
])


1744) a2enconf docker-php

CommandNode(pos=(375, 394), parts=[
  WordNode(pos=(375, 383), word='a2enconf'),
  WordNode(pos=(384, 394), word='docker-php'),
])


1745) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


1746) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


1747) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


1748) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


1749) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


1750) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


1751) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


1752) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


1753) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


1754) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


1755) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


1756) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


1757) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


1758) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


1759) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


1760) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


1761) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


1762) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


1763) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


1764) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


1765) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


1766) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


1767) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


1768) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


1769) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


1770) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1771) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


1772) apt-get install -y --no-install-recommends   ca-certificates p11-kit

CommandNode(pos=(28, 96), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(89, 96), word='p11-kit'),
])


1773) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(101, 128), parts=[
  WordNode(pos=(101, 103), word='rm'),
  WordNode(pos=(104, 107), word='-rf'),
  WordNode(pos=(108, 128), word='/var/lib/apt/lists/*'),
])


1774) echo '#/bin/sh'

CommandNode(pos=(2, 17), parts=[
  WordNode(pos=(2, 6), word='echo'),
  WordNode(pos=(7, 17), word='#/bin/sh'),
])


1775) echo 'echo "$JAVA_HOME"'

CommandNode(pos=(19, 43), parts=[
  WordNode(pos=(19, 23), word='echo'),
  WordNode(pos=(24, 43), word='echo "$JAVA_HOME"'),
])


1776) chmod +x /usr/local/bin/docker-java-home

CommandNode(pos=(84, 124), parts=[
  WordNode(pos=(84, 89), word='chmod'),
  WordNode(pos=(90, 92), word='+x'),
  WordNode(pos=(93, 124), word='/usr/local/bin/docker-java-home'),
])


1777) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


1778) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1779) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


1780) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


1781) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


1782) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


1783) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1784) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


1785) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1786) echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 14), word='echo'),
  WordNode(pos=(15, 33), word='/usr/local/lib64'),
  RedirectNode(output=
    WordNode(pos=(36, 70), word='/etc/ld.so.conf.d/local-lib64.conf'), pos=(34, 70), type='>'),
])


1787) ldconfig -v

CommandNode(pos=(73, 84), parts=[
  WordNode(pos=(73, 81), word='ldconfig'),
  WordNode(pos=(82, 84), word='-v'),
])


1788) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1789) dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 21), word='dpkg-divert'),
  WordNode(pos=(22, 30), word='--divert'),
  WordNode(pos=(31, 48), word='/usr/bin/gcc.orig'),
  WordNode(pos=(49, 57), word='--rename'),
  WordNode(pos=(58, 70), word='/usr/bin/gcc'),
])


1790) dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++

CommandNode(pos=(73, 133), parts=[
  WordNode(pos=(73, 84), word='dpkg-divert'),
  WordNode(pos=(85, 93), word='--divert'),
  WordNode(pos=(94, 111), word='/usr/bin/g++.orig'),
  WordNode(pos=(112, 120), word='--rename'),
  WordNode(pos=(121, 133), word='/usr/bin/g++'),
])


1791) dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran

CommandNode(pos=(136, 206), parts=[
  WordNode(pos=(136, 147), word='dpkg-divert'),
  WordNode(pos=(148, 156), word='--divert'),
  WordNode(pos=(157, 179), word='/usr/bin/gfortran.orig'),
  WordNode(pos=(180, 188), word='--rename'),
  WordNode(pos=(189, 206), word='/usr/bin/gfortran'),
])


1792) update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999

CommandNode(pos=(209, 276), parts=[
  WordNode(pos=(209, 228), word='update-alternatives'),
  WordNode(pos=(229, 238), word='--install'),
  WordNode(pos=(239, 250), word='/usr/bin/cc'),
  WordNode(pos=(251, 253), word='cc'),
  WordNode(pos=(254, 272), word='/usr/local/bin/gcc'),
  WordNode(pos=(273, 276), word='999'),
])


1793) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1794) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


1795) apt-get install -y --no-install-recommends   bzip2   unzip   xz-utils     ca-certificates p11-kit     fontconfig libfreetype6

CommandNode(pos=(28, 153), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 78), word='bzip2'),
  WordNode(pos=(81, 86), word='unzip'),
  WordNode(pos=(89, 97), word='xz-utils'),
  WordNode(pos=(102, 117), word='ca-certificates'),
  WordNode(pos=(118, 125), word='p11-kit'),
  WordNode(pos=(130, 140), word='fontconfig'),
  WordNode(pos=(141, 153), word='libfreetype6'),
])


1796) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(158, 185), parts=[
  WordNode(pos=(158, 160), word='rm'),
  WordNode(pos=(161, 164), word='-rf'),
  WordNode(pos=(165, 185), word='/var/lib/apt/lists/*'),
])


1797) echo '#/bin/sh'

CommandNode(pos=(2, 17), parts=[
  WordNode(pos=(2, 6), word='echo'),
  WordNode(pos=(7, 17), word='#/bin/sh'),
])


1798) echo 'echo "$JAVA_HOME"'

CommandNode(pos=(19, 43), parts=[
  WordNode(pos=(19, 23), word='echo'),
  WordNode(pos=(24, 43), word='echo "$JAVA_HOME"'),
])


1799) chmod +x /usr/local/bin/docker-java-home

CommandNode(pos=(84, 124), parts=[
  WordNode(pos=(84, 89), word='chmod'),
  WordNode(pos=(90, 92), word='+x'),
  WordNode(pos=(93, 124), word='/usr/local/bin/docker-java-home'),
])


1800) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


1801) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


1802) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1803) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


1804) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1805) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1806) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


1807) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


1808) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


1809) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


1810) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


1811) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


1812) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


1813) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


1814) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


1815) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


1816) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   util-linux-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1045), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1025), word='util-linux-dev'),
  WordNode(pos=(1028, 1034), word='xz-dev'),
  WordNode(pos=(1037, 1045), word='zlib-dev'),
])


1817) apk del .fetch-deps

CommandNode(pos=(1050, 1069), parts=[
  WordNode(pos=(1050, 1053), word='apk'),
  WordNode(pos=(1054, 1057), word='del'),
  WordNode(pos=(1058, 1069), word='.fetch-deps'),
])


1818) cd /usr/src/python

CommandNode(pos=(1075, 1093), parts=[
  WordNode(pos=(1075, 1077), word='cd'),
  WordNode(pos=(1078, 1093), word='/usr/src/python'),
])


1819) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


1820) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


1821) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


1822) make install

CommandNode(pos=(1386, 1398), parts=[
  WordNode(pos=(1386, 1390), word='make'),
  WordNode(pos=(1391, 1398), word='install'),
])


1823) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1404, 1527), parts=[
  WordNode(pos=(1404, 1408), word='find'),
  WordNode(pos=(1409, 1419), word='/usr/local'),
  WordNode(pos=(1420, 1425), word='-type'),
  WordNode(pos=(1426, 1427), word='f'),
  WordNode(pos=(1428, 1439), word='-executable'),
  WordNode(pos=(1440, 1444), word='-not'),
  WordNode(pos=(1445, 1447), word='('),
  WordNode(pos=(1448, 1453), word='-name'),
  WordNode(pos=(1454, 1465), word='*tkinter*'),
  WordNode(pos=(1466, 1468), word=')'),
  WordNode(pos=(1469, 1474), word='-exec'),
  WordNode(pos=(1475, 1482), word='scanelf'),
  WordNode(pos=(1483, 1491), word='--needed'),
  WordNode(pos=(1492, 1502), word='--nobanner'),
  WordNode(pos=(1503, 1511), word='--format'),
  WordNode(pos=(1512, 1518), word='%n#p'),
  WordNode(pos=(1519, 1523), word='{}'),
  WordNode(pos=(1524, 1527), word=';'),
])


1824) tr ',' '\n'

CommandNode(pos=(1532, 1543), parts=[
  WordNode(pos=(1532, 1534), word='tr'),
  WordNode(pos=(1535, 1538), word=','),
  WordNode(pos=(1539, 1543), word='\\n'),
])


1825) sort -u

CommandNode(pos=(1548, 1555), parts=[
  WordNode(pos=(1548, 1552), word='sort'),
  WordNode(pos=(1553, 1555), word='-u'),
])


1826) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1560, 1637), parts=[
  WordNode(pos=(1560, 1563), word='awk'),
  WordNode(pos=(1564, 1637), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


1827) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1642, 1696), parts=[
  WordNode(pos=(1642, 1647), word='xargs'),
  WordNode(pos=(1648, 1651), word='-rt'),
  WordNode(pos=(1652, 1655), word='apk'),
  WordNode(pos=(1656, 1659), word='add'),
  WordNode(pos=(1660, 1670), word='--no-cache'),
  WordNode(pos=(1671, 1680), word='--virtual'),
  WordNode(pos=(1681, 1696), word='.python-rundeps'),
])


1828) apk del .build-deps

CommandNode(pos=(1701, 1720), parts=[
  WordNode(pos=(1701, 1704), word='apk'),
  WordNode(pos=(1705, 1708), word='del'),
  WordNode(pos=(1709, 1720), word='.build-deps'),
])


1829) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1726, 1893), parts=[
  WordNode(pos=(1726, 1730), word='find'),
  WordNode(pos=(1731, 1741), word='/usr/local'),
  WordNode(pos=(1742, 1748), word='-depth'),
  WordNode(pos=(1751, 1753), word='('),
  WordNode(pos=(1757, 1759), word='('),
  WordNode(pos=(1760, 1765), word='-type'),
  WordNode(pos=(1766, 1767), word='d'),
  WordNode(pos=(1768, 1770), word='-a'),
  WordNode(pos=(1771, 1773), word='('),
  WordNode(pos=(1774, 1779), word='-name'),
  WordNode(pos=(1780, 1784), word='test'),
  WordNode(pos=(1785, 1787), word='-o'),
  WordNode(pos=(1788, 1793), word='-name'),
  WordNode(pos=(1794, 1799), word='tests'),
  WordNode(pos=(1800, 1802), word=')'),
  WordNode(pos=(1803, 1805), word=')'),
  WordNode(pos=(1809, 1811), word='-o'),
  WordNode(pos=(1815, 1817), word='('),
  WordNode(pos=(1818, 1823), word='-type'),
  WordNode(pos=(1824, 1825), word='f'),
  WordNode(pos=(1826, 1828), word='-a'),
  WordNode(pos=(1829, 1831), word='('),
  WordNode(pos=(1832, 1837), word='-name'),
  WordNode(pos=(1838, 1845), word='*.pyc'),
  WordNode(pos=(1846, 1848), word='-o'),
  WordNode(pos=(1849, 1854), word='-name'),
  WordNode(pos=(1855, 1862), word='*.pyo'),
  WordNode(pos=(1863, 1865), word=')'),
  WordNode(pos=(1866, 1868), word=')'),
  WordNode(pos=(1871, 1873), word=')'),
  WordNode(pos=(1874, 1879), word='-exec'),
  WordNode(pos=(1880, 1882), word='rm'),
  WordNode(pos=(1883, 1886), word='-rf'),
  WordNode(pos=(1887, 1891), word='{}'),
  WordNode(pos=(1892, 1893), word='+'),
])


1830) rm -rf /usr/src/python

CommandNode(pos=(1898, 1920), parts=[
  WordNode(pos=(1898, 1900), word='rm'),
  WordNode(pos=(1901, 1904), word='-rf'),
  WordNode(pos=(1905, 1920), word='/usr/src/python'),
])


1831) python3 --version

CommandNode(pos=(1926, 1943), parts=[
  WordNode(pos=(1926, 1933), word='python3'),
  WordNode(pos=(1934, 1943), word='--version'),
])


1832) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


1833) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


1834) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


1835) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


1836) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


1837) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1838) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


1839) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1840) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


1841) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


1842) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


1843) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1844) apt-get install -y --no-install-recommends   bzr   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 125), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='bzr'),
  WordNode(pos=(69, 72), word='git'),
  WordNode(pos=(75, 84), word='mercurial'),
  WordNode(pos=(87, 101), word='openssh-client'),
  WordNode(pos=(104, 114), word='subversion'),
  WordNode(pos=(119, 125), word='procps'),
])


1845) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(130, 157), parts=[
  WordNode(pos=(130, 132), word='rm'),
  WordNode(pos=(133, 136), word='-rf'),
  WordNode(pos=(137, 157), word='/var/lib/apt/lists/*'),
])


1846) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1847) apt-get install -y --no-install-recommends   tcl   tk

CommandNode(pos=(18, 71), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='tcl'),
  WordNode(pos=(69, 71), word='tk'),
])


1848) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(76, 103), parts=[
  WordNode(pos=(76, 78), word='rm'),
  WordNode(pos=(79, 82), word='-rf'),
  WordNode(pos=(83, 103), word='/var/lib/apt/lists/*'),
])


1849) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1850) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


1851) pypy get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 163), parts=[
  WordNode(pos=(72, 76), word='pypy'),
  WordNode(pos=(77, 87), word='get-pip.py'),
  WordNode(pos=(90, 117), word='--disable-pip-version-check'),
  WordNode(pos=(120, 134), word='--no-cache-dir'),
  WordNode(pos=(137, 163), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(143, 162), value='PYTHON_PIP_VERSION'),
  ]),
])


1852) pip --version

CommandNode(pos=(168, 181), parts=[
  WordNode(pos=(168, 171), word='pip'),
  WordNode(pos=(172, 181), word='--version'),
])


1853) rm -f get-pip.py

CommandNode(pos=(185, 201), parts=[
  WordNode(pos=(185, 187), word='rm'),
  WordNode(pos=(188, 190), word='-f'),
  WordNode(pos=(191, 201), word='get-pip.py'),
])


1854) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1855) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


1856) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


1857) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


1858) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


1859) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


1860) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


1861) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1862) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1863) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


1864) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


1865) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


1866) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


1867) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


1868) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


1869) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


1870) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


1871) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


1872) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


1873) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


1874) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


1875) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


1876) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


1877) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


1878) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


1879) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


1880) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


1881) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


1882) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


1883) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


1884) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


1885) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


1886) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


1887) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


1888) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


1889) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


1890) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


1891) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


1892) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


1893) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


1894) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


1895) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


1896) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


1897) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


1898) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


1899) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


1900) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


1901) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


1902) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


1903) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


1904) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


1905) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


1906) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


1907) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


1908) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


1909) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


1910) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


1911) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


1912) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


1913) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


1914) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


1915) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


1916) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


1917) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


1918) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


1919) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


1920) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


1921) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


1922) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


1923) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


1924) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


1925) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


1926) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


1927) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


1928) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1929) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


1930) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


1931) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


1932) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


1933) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


1934) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


1935) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


1936) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


1937) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


1938) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


1939) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


1940) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


1941) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


1942) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


1943) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


1944) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


1945) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


1946) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


1947) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


1948) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


1949) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


1950) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


1951) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


1952) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


1953) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


1954) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


1955) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


1956) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1957) command -v a2enmod

CommandNode(pos=(14, 32), parts=[
  WordNode(pos=(14, 21), word='command'),
  WordNode(pos=(22, 24), word='-v'),
  WordNode(pos=(25, 32), word='a2enmod'),
])


1958) a2enmod rewrite

CommandNode(pos=(41, 56), parts=[
  WordNode(pos=(41, 48), word='a2enmod'),
  WordNode(pos=(49, 56), word='rewrite'),
])


1959) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


1960) apt-get update

CommandNode(pos=(106, 120), parts=[
  WordNode(pos=(106, 113), word='apt-get'),
  WordNode(pos=(114, 120), word='update'),
])


1961) apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev

CommandNode(pos=(123, 217), parts=[
  WordNode(pos=(123, 130), word='apt-get'),
  WordNode(pos=(131, 138), word='install'),
  WordNode(pos=(139, 141), word='-y'),
  WordNode(pos=(142, 165), word='--no-install-recommends'),
  WordNode(pos=(168, 179), word='libjpeg-dev'),
  WordNode(pos=(182, 192), word='libpng-dev'),
  WordNode(pos=(195, 204), word='libpq-dev'),
  WordNode(pos=(207, 217), word='libzip-dev'),
])


1962) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(223, 291), parts=[
  WordNode(pos=(223, 247), word='docker-php-ext-configure'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
  WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
])


1963) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


1964) apt-mark auto '.*' > /dev/null

CommandNode(pos=(381, 411), parts=[
  WordNode(pos=(381, 389), word='apt-mark'),
  WordNode(pos=(390, 394), word='auto'),
  WordNode(pos=(395, 399), word='.*'),
  RedirectNode(output=
    WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
])


1965) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


1966) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


1967) awk '/=>/ { print $3 }'

CommandNode(pos=(504, 527), parts=[
  WordNode(pos=(504, 507), word='awk'),
  WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
])


1968) sort -u

CommandNode(pos=(532, 539), parts=[
  WordNode(pos=(532, 536), word='sort'),
  WordNode(pos=(537, 539), word='-u'),
])


1969) xargs -r dpkg-query -S

CommandNode(pos=(544, 566), parts=[
  WordNode(pos=(544, 549), word='xargs'),
  WordNode(pos=(550, 552), word='-r'),
  WordNode(pos=(553, 563), word='dpkg-query'),
  WordNode(pos=(564, 566), word='-S'),
])


1970) cut -d: -f1

CommandNode(pos=(571, 582), parts=[
  WordNode(pos=(571, 574), word='cut'),
  WordNode(pos=(575, 578), word='-d:'),
  WordNode(pos=(579, 582), word='-f1'),
])


1971) sort -u

CommandNode(pos=(587, 594), parts=[
  WordNode(pos=(587, 591), word='sort'),
  WordNode(pos=(592, 594), word='-u'),
])


1972) xargs -rt apt-mark manual

CommandNode(pos=(599, 624), parts=[
  WordNode(pos=(599, 604), word='xargs'),
  WordNode(pos=(605, 608), word='-rt'),
  WordNode(pos=(609, 617), word='apt-mark'),
  WordNode(pos=(618, 624), word='manual'),
])


1973) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(628, 704), parts=[
  WordNode(pos=(628, 635), word='apt-get'),
  WordNode(pos=(636, 641), word='purge'),
  WordNode(pos=(642, 644), word='-y'),
  WordNode(pos=(645, 658), word='--auto-remove'),
  WordNode(pos=(659, 661), word='-o'),
  WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
])


1974) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(707, 734), parts=[
  WordNode(pos=(707, 709), word='rm'),
  WordNode(pos=(710, 713), word='-rf'),
  WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
])


1975) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


1976) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


1977) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


1978) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


1979) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


1980) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


1981) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


1982) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


1983) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


1984) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


1985) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


1986) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


1987) apk add --no-cache bash

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 23), word='bash'),
])


1988) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


1989) apk add --no-cache --virtual .build-deps   coreutils   freetype-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev   postgresql-dev

CommandNode(pos=(12, 142), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 64), word='coreutils'),
  WordNode(pos=(67, 79), word='freetype-dev'),
  WordNode(pos=(82, 99), word='libjpeg-turbo-dev'),
  WordNode(pos=(102, 112), word='libpng-dev'),
  WordNode(pos=(115, 125), word='libzip-dev'),
  WordNode(pos=(128, 142), word='postgresql-dev'),
])


1990) docker-php-ext-configure gd   --with-freetype-dir=/usr/include/   --with-jpeg-dir=/usr/include/   --with-png-dir=/usr/include/

CommandNode(pos=(147, 273), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 174), word='gd'),
  WordNode(pos=(177, 210), word='--with-freetype-dir=/usr/include/'),
  WordNode(pos=(213, 242), word='--with-jpeg-dir=/usr/include/'),
  WordNode(pos=(245, 273), word='--with-png-dir=/usr/include/'),
])


1991) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(278, 359), parts=[
  WordNode(pos=(278, 300), word='docker-php-ext-install'),
  WordNode(pos=(301, 303), word='-j'),
  WordNode(pos=(304, 314), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(307, 312), parts=[
        WordNode(pos=(307, 312), word='nproc'),
      ]), pos=(305, 313)),
  ]),
  WordNode(pos=(317, 319), word='gd'),
  WordNode(pos=(322, 329), word='opcache'),
  WordNode(pos=(332, 341), word='pdo_mysql'),
  WordNode(pos=(344, 353), word='pdo_pgsql'),
  WordNode(pos=(356, 359), word='zip'),
])


1992) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


1993) apk add --virtual .drupal-phpexts-rundeps $runDeps

CommandNode(pos=(566, 616), parts=[
  WordNode(pos=(566, 569), word='apk'),
  WordNode(pos=(570, 573), word='add'),
  WordNode(pos=(574, 583), word='--virtual'),
  WordNode(pos=(584, 607), word='.drupal-phpexts-rundeps'),
  WordNode(pos=(608, 616), word='$runDeps', parts=[
    ParameterNode(pos=(608, 616), value='runDeps'),
  ]),
])


1994) apk del .build-deps

CommandNode(pos=(621, 640), parts=[
  WordNode(pos=(621, 624), word='apk'),
  WordNode(pos=(625, 628), word='del'),
  WordNode(pos=(629, 640), word='.build-deps'),
])


1995) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


1996) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


1997) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


1998) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


1999) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


2000) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


2001) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


2002) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


2003) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


2004) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


2005) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


2006) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


2007) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2008) apk add --no-cache --virtual .build-deps   coreutils   freetype-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev   postgresql-dev

CommandNode(pos=(12, 142), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 64), word='coreutils'),
  WordNode(pos=(67, 79), word='freetype-dev'),
  WordNode(pos=(82, 99), word='libjpeg-turbo-dev'),
  WordNode(pos=(102, 112), word='libpng-dev'),
  WordNode(pos=(115, 125), word='libzip-dev'),
  WordNode(pos=(128, 142), word='postgresql-dev'),
])


2009) docker-php-ext-configure gd   --with-freetype-dir=/usr/include/   --with-jpeg-dir=/usr/include/   --with-png-dir=/usr/include/

CommandNode(pos=(147, 273), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 174), word='gd'),
  WordNode(pos=(177, 210), word='--with-freetype-dir=/usr/include/'),
  WordNode(pos=(213, 242), word='--with-jpeg-dir=/usr/include/'),
  WordNode(pos=(245, 273), word='--with-png-dir=/usr/include/'),
])


2010) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(278, 359), parts=[
  WordNode(pos=(278, 300), word='docker-php-ext-install'),
  WordNode(pos=(301, 303), word='-j'),
  WordNode(pos=(304, 314), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(307, 312), parts=[
        WordNode(pos=(307, 312), word='nproc'),
      ]), pos=(305, 313)),
  ]),
  WordNode(pos=(317, 319), word='gd'),
  WordNode(pos=(322, 329), word='opcache'),
  WordNode(pos=(332, 341), word='pdo_mysql'),
  WordNode(pos=(344, 353), word='pdo_pgsql'),
  WordNode(pos=(356, 359), word='zip'),
])


2011) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


2012) apk add --virtual .drupal-phpexts-rundeps $runDeps

CommandNode(pos=(566, 616), parts=[
  WordNode(pos=(566, 569), word='apk'),
  WordNode(pos=(570, 573), word='add'),
  WordNode(pos=(574, 583), word='--virtual'),
  WordNode(pos=(584, 607), word='.drupal-phpexts-rundeps'),
  WordNode(pos=(608, 616), word='$runDeps', parts=[
    ParameterNode(pos=(608, 616), value='runDeps'),
  ]),
])


2013) apk del .build-deps

CommandNode(pos=(621, 640), parts=[
  WordNode(pos=(621, 624), word='apk'),
  WordNode(pos=(625, 628), word='del'),
  WordNode(pos=(629, 640), word='.build-deps'),
])


2014) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


2015) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


2016) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


2017) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


2018) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


2019) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


2020) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


2021) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


2022) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


2023) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


2024) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


2025) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


2026) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2027) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2028) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


2029) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


2030) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


2031) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


2032) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2033) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


2034) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


2035) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2036) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


2037) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


2038) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2039) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2040) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


2041) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


2042) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2043) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


2044) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


2045) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2046) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


2047) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


2048) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


2049) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


2050) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


2051) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


2052) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


2053) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2054) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


2055) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2056) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


2057) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2058) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2059) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


2060) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


2061) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2062) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


2063) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


2064) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2065) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


2066) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


2067) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2068) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2069) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2070) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


2071) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


2072) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


2073) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


2074) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


2075) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


2076) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


2077) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


2078) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


2079) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


2080) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


2081) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


2082) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


2083) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


2084) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


2085) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2086) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


2087) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2088) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


2089) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2090) wget -O /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 44), parts=[
  WordNode(pos=(12, 16), word='wget'),
  WordNode(pos=(17, 19), word='-O'),
  WordNode(pos=(20, 32), word='/openjdk.tgz'),
  WordNode(pos=(33, 44), word='$JAVA_URL', parts=[
    ParameterNode(pos=(34, 43), value='JAVA_URL'),
  ]),
])


2091) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(47, 80), parts=[
  WordNode(pos=(47, 51), word='echo'),
  WordNode(pos=(52, 80), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(53, 65), value='JAVA_SHA256'),
  ]),
])


2092) sha256sum -c -

CommandNode(pos=(83, 97), parts=[
  WordNode(pos=(83, 92), word='sha256sum'),
  WordNode(pos=(93, 95), word='-c'),
  WordNode(pos=(96, 97), word='-'),
])


2093) mkdir -p "$JAVA_HOME"

CommandNode(pos=(100, 121), parts=[
  WordNode(pos=(100, 105), word='mkdir'),
  WordNode(pos=(106, 108), word='-p'),
  WordNode(pos=(109, 121), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(110, 120), value='JAVA_HOME'),
  ]),
])


2094) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(124, 203), parts=[
  WordNode(pos=(124, 127), word='tar'),
  WordNode(pos=(128, 137), word='--extract'),
  WordNode(pos=(138, 144), word='--file'),
  WordNode(pos=(145, 157), word='/openjdk.tgz'),
  WordNode(pos=(158, 169), word='--directory'),
  WordNode(pos=(170, 182), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(171, 181), value='JAVA_HOME'),
  ]),
  WordNode(pos=(183, 201), word='--strip-components'),
  WordNode(pos=(202, 203), word='1'),
])


2095) rm /openjdk.tgz

CommandNode(pos=(206, 221), parts=[
  WordNode(pos=(206, 208), word='rm'),
  WordNode(pos=(209, 221), word='/openjdk.tgz'),
])


2096) java -Xshare:dump

CommandNode(pos=(225, 242), parts=[
  WordNode(pos=(225, 229), word='java'),
  WordNode(pos=(230, 242), word='-Xshare:dump'),
])


2097) java --version

CommandNode(pos=(246, 260), parts=[
  WordNode(pos=(246, 250), word='java'),
  WordNode(pos=(251, 260), word='--version'),
])


2098) javac --version

CommandNode(pos=(263, 278), parts=[
  WordNode(pos=(263, 268), word='javac'),
  WordNode(pos=(269, 278), word='--version'),
])


2099) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


2100) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


2101) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


2102) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


2103) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2104) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2105) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


2106) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


2107) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


2108) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


2109) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


2110) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


2111) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


2112) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


2113) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


2114) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


2115) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


2116) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


2117) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


2118) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


2119) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


2120) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


2121) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


2122) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


2123) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


2124) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


2125) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


2126) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


2127) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


2128) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


2129) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


2130) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2131) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


2132) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


2133) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


2134) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


2135) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


2136) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


2137) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2138) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2139) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


2140) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


2141) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


2142) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


2143) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


2144) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


2145) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


2146) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


2147) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


2148) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


2149) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


2150) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


2151) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


2152) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


2153) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


2154) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


2155) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


2156) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


2157) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


2158) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


2159) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


2160) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


2161) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


2162) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


2163) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


2164) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


2165) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


2166) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


2167) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


2168) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


2169) mkdir -p /usr/src/app

CommandNode(pos=(0, 21), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 21), word='/usr/src/app'),
])


2170) groupadd --system --gid 11211 memcache

CommandNode(pos=(0, 38), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 17), word='--system'),
  WordNode(pos=(18, 23), word='--gid'),
  WordNode(pos=(24, 29), word='11211'),
  WordNode(pos=(30, 38), word='memcache'),
])


2171) useradd --system --gid memcache --uid 11211 memcache

CommandNode(pos=(42, 94), parts=[
  WordNode(pos=(42, 49), word='useradd'),
  WordNode(pos=(50, 58), word='--system'),
  WordNode(pos=(59, 64), word='--gid'),
  WordNode(pos=(65, 73), word='memcache'),
  WordNode(pos=(74, 79), word='--uid'),
  WordNode(pos=(80, 85), word='11211'),
  WordNode(pos=(86, 94), word='memcache'),
])


2172) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2173) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


2174) apt-get install -y --no-install-recommends   libsasl2-modules

CommandNode(pos=(28, 89), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 89), word='libsasl2-modules'),
])


2175) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(94, 121), parts=[
  WordNode(pos=(94, 96), word='rm'),
  WordNode(pos=(97, 100), word='-rf'),
  WordNode(pos=(101, 121), word='/var/lib/apt/lists/*'),
])


2176) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


2177) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


2178) apt-get install -y --no-install-recommends   tk-dev

CommandNode(pos=(18, 69), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 69), word='tk-dev'),
])


2179) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(74, 101), parts=[
  WordNode(pos=(74, 76), word='rm'),
  WordNode(pos=(77, 80), word='-rf'),
  WordNode(pos=(81, 101), word='/var/lib/apt/lists/*'),
])


2180) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2181) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


2182) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


2183) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


2184) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


2185) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


2186) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


2187) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


2188) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


2189) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


2190) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


2191) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


2192) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


2193) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


2194) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


2195) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4

CommandNode(pos=(740, 814), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 790), word='--enable-shared'),
  WordNode(pos=(793, 814), word='--enable-unicode=ucs4'),
])


2196) make -j "$(nproc)"

CommandNode(pos=(819, 837), parts=[
  WordNode(pos=(819, 823), word='make'),
  WordNode(pos=(824, 826), word='-j'),
  WordNode(pos=(827, 837), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(830, 835), parts=[
        WordNode(pos=(830, 835), word='nproc'),
      ]), pos=(828, 836)),
  ]),
])


2197) make install

CommandNode(pos=(842, 854), parts=[
  WordNode(pos=(842, 846), word='make'),
  WordNode(pos=(847, 854), word='install'),
])


2198) ldconfig

CommandNode(pos=(859, 867), parts=[
  WordNode(pos=(859, 867), word='ldconfig'),
])


2199) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(873, 1040), parts=[
  WordNode(pos=(873, 877), word='find'),
  WordNode(pos=(878, 888), word='/usr/local'),
  WordNode(pos=(889, 895), word='-depth'),
  WordNode(pos=(898, 900), word='('),
  WordNode(pos=(904, 906), word='('),
  WordNode(pos=(907, 912), word='-type'),
  WordNode(pos=(913, 914), word='d'),
  WordNode(pos=(915, 917), word='-a'),
  WordNode(pos=(918, 920), word='('),
  WordNode(pos=(921, 926), word='-name'),
  WordNode(pos=(927, 931), word='test'),
  WordNode(pos=(932, 934), word='-o'),
  WordNode(pos=(935, 940), word='-name'),
  WordNode(pos=(941, 946), word='tests'),
  WordNode(pos=(947, 949), word=')'),
  WordNode(pos=(950, 952), word=')'),
  WordNode(pos=(956, 958), word='-o'),
  WordNode(pos=(962, 964), word='('),
  WordNode(pos=(965, 970), word='-type'),
  WordNode(pos=(971, 972), word='f'),
  WordNode(pos=(973, 975), word='-a'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(979, 984), word='-name'),
  WordNode(pos=(985, 992), word='*.pyc'),
  WordNode(pos=(993, 995), word='-o'),
  WordNode(pos=(996, 1001), word='-name'),
  WordNode(pos=(1002, 1009), word='*.pyo'),
  WordNode(pos=(1010, 1012), word=')'),
  WordNode(pos=(1013, 1015), word=')'),
  WordNode(pos=(1018, 1020), word=')'),
  WordNode(pos=(1021, 1026), word='-exec'),
  WordNode(pos=(1027, 1029), word='rm'),
  WordNode(pos=(1030, 1033), word='-rf'),
  WordNode(pos=(1034, 1038), word='{}'),
  WordNode(pos=(1039, 1040), word='+'),
])


2200) rm -rf /usr/src/python

CommandNode(pos=(1045, 1067), parts=[
  WordNode(pos=(1045, 1047), word='rm'),
  WordNode(pos=(1048, 1051), word='-rf'),
  WordNode(pos=(1052, 1067), word='/usr/src/python'),
])


2201) python2 --version

CommandNode(pos=(1073, 1090), parts=[
  WordNode(pos=(1073, 1080), word='python2'),
  WordNode(pos=(1081, 1090), word='--version'),
])


2202) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2203) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


2204) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


2205) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


2206) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


2207) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


2208) pip install --no-cache-dir virtualenv

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 26), word='--no-cache-dir'),
  WordNode(pos=(27, 37), word='virtualenv'),
])


2209) apk add --no-cache bash

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 23), word='bash'),
])


2210) apk add --no-cache   bash   sed

CommandNode(pos=(0, 31), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='bash'),
  WordNode(pos=(28, 31), word='sed'),
])


2211) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2212) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev

CommandNode(pos=(11, 130), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
  WordNode(pos=(120, 130), word='libzip-dev'),
])


2213) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(136, 204), parts=[
  WordNode(pos=(136, 160), word='docker-php-ext-configure'),
  WordNode(pos=(161, 163), word='gd'),
  WordNode(pos=(164, 183), word='--with-png-dir=/usr'),
  WordNode(pos=(184, 204), word='--with-jpeg-dir=/usr'),
])


2214) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(207, 275), parts=[
  WordNode(pos=(207, 229), word='docker-php-ext-install'),
  WordNode(pos=(232, 238), word='bcmath'),
  WordNode(pos=(241, 245), word='exif'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(253, 259), word='mysqli'),
  WordNode(pos=(262, 269), word='opcache'),
  WordNode(pos=(272, 275), word='zip'),
])


2215) pecl install imagick-3.4.4

CommandNode(pos=(280, 306), parts=[
  WordNode(pos=(280, 284), word='pecl'),
  WordNode(pos=(285, 292), word='install'),
  WordNode(pos=(293, 306), word='imagick-3.4.4'),
])


2216) docker-php-ext-enable imagick

CommandNode(pos=(309, 338), parts=[
  WordNode(pos=(309, 330), word='docker-php-ext-enable'),
  WordNode(pos=(331, 338), word='imagick'),
])


2217) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(342, 558), parts=[
  AssignmentNode(pos=(342, 558), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(356, 554), parts=[
        CommandNode(pos=(356, 441), parts=[
          WordNode(pos=(356, 363), word='scanelf'),
          WordNode(pos=(364, 372), word='--needed'),
          WordNode(pos=(373, 383), word='--nobanner'),
          WordNode(pos=(384, 392), word='--format'),
          WordNode(pos=(393, 399), word='%n#p'),
          WordNode(pos=(400, 411), word='--recursive'),
          WordNode(pos=(412, 441), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(445, 446)),
        CommandNode(pos=(447, 458), parts=[
          WordNode(pos=(447, 449), word='tr'),
          WordNode(pos=(450, 453), word=','),
          WordNode(pos=(454, 458), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 471), parts=[
          WordNode(pos=(464, 468), word='sort'),
          WordNode(pos=(469, 471), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(475, 476)),
        CommandNode(pos=(477, 554), parts=[
          WordNode(pos=(477, 480), word='awk'),
          WordNode(pos=(481, 554), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(351, 555)),
  ]),
])


2218) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(561, 614), parts=[
  WordNode(pos=(561, 564), word='apk'),
  WordNode(pos=(565, 568), word='add'),
  WordNode(pos=(569, 578), word='--virtual'),
  WordNode(pos=(579, 605), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(606, 614), word='$runDeps', parts=[
    ParameterNode(pos=(606, 614), value='runDeps'),
  ]),
])


2219) apk del .build-deps

CommandNode(pos=(617, 636), parts=[
  WordNode(pos=(617, 620), word='apk'),
  WordNode(pos=(621, 624), word='del'),
  WordNode(pos=(625, 636), word='.build-deps'),
])


2220) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


2221) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


2222) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


2223) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


2224) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


2225) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


2226) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


2227) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


2228) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


2229) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


2230) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


2231) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


2232) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


2233) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


2234) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


2235) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2236) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


2237) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


2238) sha1sum -c -

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 154), word='sha1sum'),
  WordNode(pos=(155, 157), word='-c'),
  WordNode(pos=(158, 159), word='-'),
])


2239) tar -xzf wordpress.tar.gz -C /usr/src/

CommandNode(pos=(162, 200), parts=[
  WordNode(pos=(162, 165), word='tar'),
  WordNode(pos=(166, 170), word='-xzf'),
  WordNode(pos=(171, 187), word='wordpress.tar.gz'),
  WordNode(pos=(188, 190), word='-C'),
  WordNode(pos=(191, 200), word='/usr/src/'),
])


2240) rm wordpress.tar.gz

CommandNode(pos=(203, 222), parts=[
  WordNode(pos=(203, 205), word='rm'),
  WordNode(pos=(206, 222), word='wordpress.tar.gz'),
])


2241) chown -R www-data:www-data /usr/src/wordpress

CommandNode(pos=(225, 270), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 233), word='-R'),
  WordNode(pos=(234, 251), word='www-data:www-data'),
  WordNode(pos=(252, 270), word='/usr/src/wordpress'),
])


2242) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2243) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


2244) apt-get install -y --no-install-recommends   bzip2   unzip   xz-utils     ca-certificates p11-kit     fontconfig libfreetype6

CommandNode(pos=(28, 153), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 78), word='bzip2'),
  WordNode(pos=(81, 86), word='unzip'),
  WordNode(pos=(89, 97), word='xz-utils'),
  WordNode(pos=(102, 117), word='ca-certificates'),
  WordNode(pos=(118, 125), word='p11-kit'),
  WordNode(pos=(130, 140), word='fontconfig'),
  WordNode(pos=(141, 153), word='libfreetype6'),
])


2245) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(158, 185), parts=[
  WordNode(pos=(158, 160), word='rm'),
  WordNode(pos=(161, 164), word='-rf'),
  WordNode(pos=(165, 185), word='/var/lib/apt/lists/*'),
])


2246) echo '#/bin/sh'

CommandNode(pos=(2, 17), parts=[
  WordNode(pos=(2, 6), word='echo'),
  WordNode(pos=(7, 17), word='#/bin/sh'),
])


2247) echo 'echo "$JAVA_HOME"'

CommandNode(pos=(19, 43), parts=[
  WordNode(pos=(19, 23), word='echo'),
  WordNode(pos=(24, 43), word='echo "$JAVA_HOME"'),
])


2248) chmod +x /usr/local/bin/docker-java-home

CommandNode(pos=(84, 124), parts=[
  WordNode(pos=(84, 89), word='chmod'),
  WordNode(pos=(90, 92), word='+x'),
  WordNode(pos=(93, 124), word='/usr/local/bin/docker-java-home'),
])


2249) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


2250) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


2251) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2252) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


2253) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


2254) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


2255) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


2256) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


2257) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


2258) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


2259) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


2260) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


2261) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


2262) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


2263) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


2264) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


2265) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1028), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1017), word='xz-dev'),
  WordNode(pos=(1020, 1028), word='zlib-dev'),
])


2266) apk del .fetch-deps

CommandNode(pos=(1033, 1052), parts=[
  WordNode(pos=(1033, 1036), word='apk'),
  WordNode(pos=(1037, 1040), word='del'),
  WordNode(pos=(1041, 1052), word='.fetch-deps'),
])


2267) cd /usr/src/python

CommandNode(pos=(1058, 1076), parts=[
  WordNode(pos=(1058, 1060), word='cd'),
  WordNode(pos=(1061, 1076), word='/usr/src/python'),
])


2268) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1081, 1138), parts=[
  AssignmentNode(pos=(1081, 1138), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1092, 1136), parts=[
        WordNode(pos=(1092, 1109), word='dpkg-architecture'),
        WordNode(pos=(1110, 1117), word='--query'),
        WordNode(pos=(1118, 1136), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1090, 1137)),
  ]),
])


2269) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1143, 1295), parts=[
  WordNode(pos=(1143, 1154), word='./configure'),
  WordNode(pos=(1157, 1175), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1166, 1174), value='gnuArch'),
  ]),
  WordNode(pos=(1178, 1213), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1216, 1231), word='--enable-shared'),
  WordNode(pos=(1234, 1253), word='--with-system-expat'),
  WordNode(pos=(1256, 1273), word='--with-system-ffi'),
  WordNode(pos=(1276, 1295), word='--without-ensurepip'),
])


2270) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1300, 1364), parts=[
  WordNode(pos=(1300, 1304), word='make'),
  WordNode(pos=(1305, 1307), word='-j'),
  WordNode(pos=(1308, 1318), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1311, 1316), parts=[
        WordNode(pos=(1311, 1316), word='nproc'),
      ]), pos=(1309, 1317)),
  ]),
  WordNode(pos=(1321, 1364), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


2271) make install

CommandNode(pos=(1369, 1381), parts=[
  WordNode(pos=(1369, 1373), word='make'),
  WordNode(pos=(1374, 1381), word='install'),
])


2272) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1387, 1510), parts=[
  WordNode(pos=(1387, 1391), word='find'),
  WordNode(pos=(1392, 1402), word='/usr/local'),
  WordNode(pos=(1403, 1408), word='-type'),
  WordNode(pos=(1409, 1410), word='f'),
  WordNode(pos=(1411, 1422), word='-executable'),
  WordNode(pos=(1423, 1427), word='-not'),
  WordNode(pos=(1428, 1430), word='('),
  WordNode(pos=(1431, 1436), word='-name'),
  WordNode(pos=(1437, 1448), word='*tkinter*'),
  WordNode(pos=(1449, 1451), word=')'),
  WordNode(pos=(1452, 1457), word='-exec'),
  WordNode(pos=(1458, 1465), word='scanelf'),
  WordNode(pos=(1466, 1474), word='--needed'),
  WordNode(pos=(1475, 1485), word='--nobanner'),
  WordNode(pos=(1486, 1494), word='--format'),
  WordNode(pos=(1495, 1501), word='%n#p'),
  WordNode(pos=(1502, 1506), word='{}'),
  WordNode(pos=(1507, 1510), word=';'),
])


2273) tr ',' '\n'

CommandNode(pos=(1515, 1526), parts=[
  WordNode(pos=(1515, 1517), word='tr'),
  WordNode(pos=(1518, 1521), word=','),
  WordNode(pos=(1522, 1526), word='\\n'),
])


2274) sort -u

CommandNode(pos=(1531, 1538), parts=[
  WordNode(pos=(1531, 1535), word='sort'),
  WordNode(pos=(1536, 1538), word='-u'),
])


2275) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1543, 1620), parts=[
  WordNode(pos=(1543, 1546), word='awk'),
  WordNode(pos=(1547, 1620), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


2276) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1625, 1679), parts=[
  WordNode(pos=(1625, 1630), word='xargs'),
  WordNode(pos=(1631, 1634), word='-rt'),
  WordNode(pos=(1635, 1638), word='apk'),
  WordNode(pos=(1639, 1642), word='add'),
  WordNode(pos=(1643, 1653), word='--no-cache'),
  WordNode(pos=(1654, 1663), word='--virtual'),
  WordNode(pos=(1664, 1679), word='.python-rundeps'),
])


2277) apk del .build-deps

CommandNode(pos=(1684, 1703), parts=[
  WordNode(pos=(1684, 1687), word='apk'),
  WordNode(pos=(1688, 1691), word='del'),
  WordNode(pos=(1692, 1703), word='.build-deps'),
])


2278) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1709, 1876), parts=[
  WordNode(pos=(1709, 1713), word='find'),
  WordNode(pos=(1714, 1724), word='/usr/local'),
  WordNode(pos=(1725, 1731), word='-depth'),
  WordNode(pos=(1734, 1736), word='('),
  WordNode(pos=(1740, 1742), word='('),
  WordNode(pos=(1743, 1748), word='-type'),
  WordNode(pos=(1749, 1750), word='d'),
  WordNode(pos=(1751, 1753), word='-a'),
  WordNode(pos=(1754, 1756), word='('),
  WordNode(pos=(1757, 1762), word='-name'),
  WordNode(pos=(1763, 1767), word='test'),
  WordNode(pos=(1768, 1770), word='-o'),
  WordNode(pos=(1771, 1776), word='-name'),
  WordNode(pos=(1777, 1782), word='tests'),
  WordNode(pos=(1783, 1785), word=')'),
  WordNode(pos=(1786, 1788), word=')'),
  WordNode(pos=(1792, 1794), word='-o'),
  WordNode(pos=(1798, 1800), word='('),
  WordNode(pos=(1801, 1806), word='-type'),
  WordNode(pos=(1807, 1808), word='f'),
  WordNode(pos=(1809, 1811), word='-a'),
  WordNode(pos=(1812, 1814), word='('),
  WordNode(pos=(1815, 1820), word='-name'),
  WordNode(pos=(1821, 1828), word='*.pyc'),
  WordNode(pos=(1829, 1831), word='-o'),
  WordNode(pos=(1832, 1837), word='-name'),
  WordNode(pos=(1838, 1845), word='*.pyo'),
  WordNode(pos=(1846, 1848), word=')'),
  WordNode(pos=(1849, 1851), word=')'),
  WordNode(pos=(1854, 1856), word=')'),
  WordNode(pos=(1857, 1862), word='-exec'),
  WordNode(pos=(1863, 1865), word='rm'),
  WordNode(pos=(1866, 1869), word='-rf'),
  WordNode(pos=(1870, 1874), word='{}'),
  WordNode(pos=(1875, 1876), word='+'),
])


2279) rm -rf /usr/src/python

CommandNode(pos=(1881, 1903), parts=[
  WordNode(pos=(1881, 1883), word='rm'),
  WordNode(pos=(1884, 1887), word='-rf'),
  WordNode(pos=(1888, 1903), word='/usr/src/python'),
])


2280) python3 --version

CommandNode(pos=(1909, 1926), parts=[
  WordNode(pos=(1909, 1916), word='python3'),
  WordNode(pos=(1917, 1926), word='--version'),
])


2281) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


2282) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


2283) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


2284) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


2285) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


2286) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2287) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


2288) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


2289) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


2290) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


2291) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


2292) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2293) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2294) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


2295) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


2296) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


2297) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


2298) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2299) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


2300) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


2301) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2302) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


2303) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


2304) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2305) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2306) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


2307) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


2308) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2309) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


2310) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


2311) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2312) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


2313) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


2314) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


2315) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


2316) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


2317) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


2318) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


2319) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2320) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


2321) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2322) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


2323) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2324) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2325) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


2326) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


2327) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2328) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


2329) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


2330) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2331) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


2332) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


2333) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2334) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2335) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2336) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


2337) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


2338) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


2339) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


2340) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


2341) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


2342) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


2343) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


2344) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


2345) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


2346) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


2347) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


2348) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


2349) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


2350) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


2351) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2352) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


2353) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2354) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


2355) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


2356) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


2357) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2358) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


2359) which gpg

CommandNode(pos=(32, 41), parts=[
  WordNode(pos=(32, 37), word='which'),
  WordNode(pos=(38, 41), word='gpg'),
])


2360) apt-get install -y --no-install-recommends gnupg

CommandNode(pos=(50, 98), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 65), word='install'),
  WordNode(pos=(66, 68), word='-y'),
  WordNode(pos=(69, 92), word='--no-install-recommends'),
  WordNode(pos=(93, 98), word='gnupg'),
])


2361) gpg --version

CommandNode(pos=(111, 124), parts=[
  WordNode(pos=(111, 114), word='gpg'),
  WordNode(pos=(115, 124), word='--version'),
])


2362) grep -q '^gpg (GnuPG) 1\.'

CommandNode(pos=(127, 153), parts=[
  WordNode(pos=(127, 131), word='grep'),
  WordNode(pos=(132, 134), word='-q'),
  WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
])


2363) apt-get install -y --no-install-recommends dirmngr

CommandNode(pos=(163, 213), parts=[
  WordNode(pos=(163, 170), word='apt-get'),
  WordNode(pos=(171, 178), word='install'),
  WordNode(pos=(179, 181), word='-y'),
  WordNode(pos=(182, 205), word='--no-install-recommends'),
  WordNode(pos=(206, 213), word='dirmngr'),
])


2364) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(221, 248), parts=[
  WordNode(pos=(221, 223), word='rm'),
  WordNode(pos=(224, 227), word='-rf'),
  WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
])


2365) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2366) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


2367) apt-get update

CommandNode(pos=(53, 67), parts=[
  WordNode(pos=(53, 60), word='apt-get'),
  WordNode(pos=(61, 67), word='update'),
])


2368) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


2369) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


2370) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


2371) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


2372) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


2373) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


2374) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(488, 591), parts=[
  WordNode(pos=(488, 491), word='gpg'),
  WordNode(pos=(492, 499), word='--batch'),
  WordNode(pos=(500, 511), word='--keyserver'),
  WordNode(pos=(512, 538), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(539, 550), word='--recv-keys'),
  WordNode(pos=(551, 591), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


2375) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(594, 658), parts=[
  WordNode(pos=(594, 597), word='gpg'),
  WordNode(pos=(598, 605), word='--batch'),
  WordNode(pos=(606, 614), word='--verify'),
  WordNode(pos=(615, 638), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(639, 658), word='/usr/local/bin/gosu'),
])


2376) command -v gpgconf > /dev/null

CommandNode(pos=(661, 691), parts=[
  WordNode(pos=(661, 668), word='command'),
  WordNode(pos=(669, 671), word='-v'),
  WordNode(pos=(672, 679), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(682, 691), word='/dev/null'), pos=(680, 691), type='>'),
])


2377) gpgconf --kill all

CommandNode(pos=(695, 713), parts=[
  WordNode(pos=(695, 702), word='gpgconf'),
  WordNode(pos=(703, 709), word='--kill'),
  WordNode(pos=(710, 713), word='all'),
])


2378) :

CommandNode(pos=(717, 718), parts=[
  WordNode(pos=(717, 718), word=':'),
])


2379) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


2380) chmod +x /usr/local/bin/gosu

CommandNode(pos=(767, 795), parts=[
  WordNode(pos=(767, 772), word='chmod'),
  WordNode(pos=(773, 775), word='+x'),
  WordNode(pos=(776, 795), word='/usr/local/bin/gosu'),
])


2381) gosu nobody true

CommandNode(pos=(798, 814), parts=[
  WordNode(pos=(798, 802), word='gosu'),
  WordNode(pos=(803, 809), word='nobody'),
  WordNode(pos=(810, 814), word='true'),
])


2382) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


2383) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


2384) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


2385) apt-get install -y --no-install-recommends   apt-transport-https ca-certificates   pwgen

CommandNode(pos=(18, 106), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 82), word='apt-transport-https'),
  WordNode(pos=(83, 98), word='ca-certificates'),
  WordNode(pos=(101, 106), word='pwgen'),
])


2386) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(111, 138), parts=[
  WordNode(pos=(111, 113), word='rm'),
  WordNode(pos=(114, 117), word='-rf'),
  WordNode(pos=(118, 138), word='/var/lib/apt/lists/*'),
])


2387) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2388) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


2389) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


2390) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
])


2391) command -v gpgconf > /dev/null

CommandNode(pos=(220, 250), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
])


2392) gpgconf --kill all

CommandNode(pos=(254, 272), parts=[
  WordNode(pos=(254, 261), word='gpgconf'),
  WordNode(pos=(262, 268), word='--kill'),
  WordNode(pos=(269, 272), word='all'),
])


2393) :

CommandNode(pos=(276, 277), parts=[
  WordNode(pos=(276, 277), word=':'),
])


2394) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


2395) apt-key list

CommandNode(pos=(301, 313), parts=[
  WordNode(pos=(301, 308), word='apt-key'),
  WordNode(pos=(309, 313), word='list'),
])


2396) echo 'deb https://repo.percona.com/apt stretch main' > /etc/apt/sources.list.d/percona.list

CommandNode(pos=(0, 91), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 52), word='deb https://repo.percona.com/apt stretch main'),
  RedirectNode(output=
    WordNode(pos=(55, 91), word='/etc/apt/sources.list.d/percona.list'), pos=(53, 91), type='>'),
])


2397) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2398) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


2399) debconf-set-selections

CommandNode(pos=(309, 331), parts=[
  WordNode(pos=(309, 331), word='debconf-set-selections'),
])


2400) apt-get update

CommandNode(pos=(334, 348), parts=[
  WordNode(pos=(334, 341), word='apt-get'),
  WordNode(pos=(342, 348), word='update'),
])


2401) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


2402) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(430, 457), parts=[
  WordNode(pos=(430, 432), word='rm'),
  WordNode(pos=(433, 436), word='-rf'),
  WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
])


2403) sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 463), word='sed'),
  WordNode(pos=(464, 467), word='-ri'),
  WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
  WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
])


2404) rm -rf /var/lib/mysql

CommandNode(pos=(504, 525), parts=[
  WordNode(pos=(504, 506), word='rm'),
  WordNode(pos=(507, 510), word='-rf'),
  WordNode(pos=(511, 525), word='/var/lib/mysql'),
])


2405) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(528, 567), parts=[
  WordNode(pos=(528, 533), word='mkdir'),
  WordNode(pos=(534, 536), word='-p'),
  WordNode(pos=(537, 551), word='/var/lib/mysql'),
  WordNode(pos=(552, 567), word='/var/run/mysqld'),
])


2406) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(570, 621), parts=[
  WordNode(pos=(570, 575), word='chown'),
  WordNode(pos=(576, 578), word='-R'),
  WordNode(pos=(579, 590), word='mysql:mysql'),
  WordNode(pos=(591, 605), word='/var/lib/mysql'),
  WordNode(pos=(606, 621), word='/var/run/mysqld'),
])


2407) chmod 777 /var/run/mysqld

CommandNode(pos=(624, 649), parts=[
  WordNode(pos=(624, 629), word='chmod'),
  WordNode(pos=(630, 633), word='777'),
  WordNode(pos=(634, 649), word='/var/run/mysqld'),
])


2408) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(652, 690), parts=[
  WordNode(pos=(652, 656), word='find'),
  WordNode(pos=(657, 668), word='/etc/mysql/'),
  WordNode(pos=(669, 674), word='-name'),
  WordNode(pos=(675, 682), word='*.cnf'),
  WordNode(pos=(683, 690), word='-print0'),
])


2409) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(695, 735), parts=[
  WordNode(pos=(695, 700), word='xargs'),
  WordNode(pos=(701, 703), word='-0'),
  WordNode(pos=(704, 708), word='grep'),
  WordNode(pos=(709, 713), word='-lZE'),
  WordNode(pos=(714, 735), word='^(bind-address|log)'),
])


2410) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(740, 788), parts=[
  WordNode(pos=(740, 745), word='xargs'),
  WordNode(pos=(746, 749), word='-rt'),
  WordNode(pos=(750, 752), word='-0'),
  WordNode(pos=(753, 756), word='sed'),
  WordNode(pos=(757, 760), word='-Ei'),
  WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
])


2411) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(791, 873), parts=[
  WordNode(pos=(791, 795), word='echo'),
  WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
])


2412) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


2413) groupadd user

CommandNode(pos=(0, 13), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 13), word='user'),
])


2414) useradd --create-home --home-dir /home/user -g user user

CommandNode(pos=(17, 73), parts=[
  WordNode(pos=(17, 24), word='useradd'),
  WordNode(pos=(25, 38), word='--create-home'),
  WordNode(pos=(39, 49), word='--home-dir'),
  WordNode(pos=(50, 60), word='/home/user'),
  WordNode(pos=(61, 63), word='-g'),
  WordNode(pos=(64, 68), word='user'),
  WordNode(pos=(69, 73), word='user'),
])


2415) pip install redis

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 17), word='redis'),
])


2416) pip install celery=="$CELERY_VERSION"

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 37), word='celery==$CELERY_VERSION', parts=[
    ParameterNode(pos=(21, 36), value='CELERY_VERSION'),
  ]),
])


2417) echo 'import os'

CommandNode(pos=(3, 19), parts=[
  WordNode(pos=(3, 7), word='echo'),
  WordNode(pos=(8, 19), word='import os'),
])


2418) echo "BROKER_URL = os.environ.get('CELERY_BROKER_URL', 'amqp://')"

CommandNode(pos=(22, 88), parts=[
  WordNode(pos=(22, 26), word='echo'),
  WordNode(pos=(27, 88), word="BROKER_URL = os.environ.get('CELERY_BROKER_URL', 'amqp://')"),
])


2419) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2420) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


2421) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


2422) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


2423) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


2424) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


2425) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


2426) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2427) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2428) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


2429) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


2430) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


2431) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


2432) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2433) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


2434) apt-get install -y --no-install-recommends apache2

CommandNode(pos=(28, 78), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 78), word='apache2'),
])


2435) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(81, 108), parts=[
  WordNode(pos=(81, 83), word='rm'),
  WordNode(pos=(84, 87), word='-rf'),
  WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
])


2436) sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"

CommandNode(pos=(112, 187), parts=[
  WordNode(pos=(112, 115), word='sed'),
  WordNode(pos=(116, 119), word='-ri'),
  WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
  WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
  ]),
])


2437) . "$APACHE_ENVVARS"

CommandNode(pos=(191, 210), parts=[
  WordNode(pos=(191, 192), word='.'),
  WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
  ]),
])


2438) rm -rvf "$dir"

CommandNode(pos=(293, 307), parts=[
  WordNode(pos=(293, 295), word='rm'),
  WordNode(pos=(296, 300), word='-rvf'),
  WordNode(pos=(301, 307), word='$dir', parts=[
    ParameterNode(pos=(302, 306), value='dir'),
  ]),
])


2439) mkdir -p "$dir"

CommandNode(pos=(311, 326), parts=[
  WordNode(pos=(311, 316), word='mkdir'),
  WordNode(pos=(317, 319), word='-p'),
  WordNode(pos=(320, 326), word='$dir', parts=[
    ParameterNode(pos=(321, 325), value='dir'),
  ]),
])


2440) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


2441) chmod 777 "$dir"

CommandNode(pos=(383, 399), parts=[
  WordNode(pos=(383, 388), word='chmod'),
  WordNode(pos=(389, 392), word='777'),
  WordNode(pos=(393, 399), word='$dir', parts=[
    ParameterNode(pos=(394, 398), value='dir'),
  ]),
])


2442) rm -rvf /var/www/html/*

CommandNode(pos=(410, 433), parts=[
  WordNode(pos=(410, 412), word='rm'),
  WordNode(pos=(413, 417), word='-rvf'),
  WordNode(pos=(418, 433), word='/var/www/html/*'),
])


2443) ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"

CommandNode(pos=(437, 484), parts=[
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 444), word='-sfT'),
  WordNode(pos=(445, 456), word='/dev/stderr'),
  WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
    ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
  ]),
])


2444) ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"

CommandNode(pos=(487, 535), parts=[
  WordNode(pos=(487, 489), word='ln'),
  WordNode(pos=(490, 494), word='-sfT'),
  WordNode(pos=(495, 506), word='/dev/stdout'),
  WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
    ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
  ]),
])


2445) ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

CommandNode(pos=(538, 599), parts=[
  WordNode(pos=(538, 540), word='ln'),
  WordNode(pos=(541, 545), word='-sfT'),
  WordNode(pos=(546, 557), word='/dev/stdout'),
  WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
    ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
  ]),
])


2446) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


2447) a2dismod mpm_event

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 8), word='a2dismod'),
  WordNode(pos=(9, 18), word='mpm_event'),
])


2448) a2enmod mpm_prefork

CommandNode(pos=(22, 41), parts=[
  WordNode(pos=(22, 29), word='a2enmod'),
  WordNode(pos=(30, 41), word='mpm_prefork'),
])


2449) echo '<FilesMatch \.php$>'

CommandNode(pos=(4, 30), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 30), word='<FilesMatch \\.php$>'),
])


2450) echo '\tSetHandler application/x-httpd-php'

CommandNode(pos=(34, 77), parts=[
  WordNode(pos=(34, 38), word='echo'),
  WordNode(pos=(39, 77), word='\\tSetHandler application/x-httpd-php'),
])


2451) echo '</FilesMatch>'

CommandNode(pos=(81, 101), parts=[
  WordNode(pos=(81, 85), word='echo'),
  WordNode(pos=(86, 101), word='</FilesMatch>'),
])


2452) echo

CommandNode(pos=(105, 109), parts=[
  WordNode(pos=(105, 109), word='echo'),
])


2453) echo 'DirectoryIndex disabled'

CommandNode(pos=(113, 143), parts=[
  WordNode(pos=(113, 117), word='echo'),
  WordNode(pos=(118, 143), word='DirectoryIndex disabled'),
])


2454) echo 'DirectoryIndex index.php index.html'

CommandNode(pos=(147, 189), parts=[
  WordNode(pos=(147, 151), word='echo'),
  WordNode(pos=(152, 189), word='DirectoryIndex index.php index.html'),
])


2455) echo

CommandNode(pos=(193, 197), parts=[
  WordNode(pos=(193, 197), word='echo'),
])


2456) echo '<Directory /var/www/>'

CommandNode(pos=(201, 229), parts=[
  WordNode(pos=(201, 205), word='echo'),
  WordNode(pos=(206, 229), word='<Directory /var/www/>'),
])


2457) echo '\tOptions -Indexes'

CommandNode(pos=(233, 258), parts=[
  WordNode(pos=(233, 237), word='echo'),
  WordNode(pos=(238, 258), word='\\tOptions -Indexes'),
])


2458) echo '\tAllowOverride All'

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 266), word='echo'),
  WordNode(pos=(267, 288), word='\\tAllowOverride All'),
])


2459) echo '</Directory>'

CommandNode(pos=(292, 311), parts=[
  WordNode(pos=(292, 296), word='echo'),
  WordNode(pos=(297, 311), word='</Directory>'),
])


2460) tee "$APACHE_CONFDIR/conf-available/docker-php.conf"

CommandNode(pos=(318, 370), parts=[
  WordNode(pos=(318, 321), word='tee'),
  WordNode(pos=(322, 370), word='$APACHE_CONFDIR/conf-available/docker-php.conf', parts=[
    ParameterNode(pos=(323, 338), value='APACHE_CONFDIR'),
  ]),
])


2461) a2enconf docker-php

CommandNode(pos=(375, 394), parts=[
  WordNode(pos=(375, 383), word='a2enconf'),
  WordNode(pos=(384, 394), word='docker-php'),
])


2462) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


2463) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


2464) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


2465) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


2466) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


2467) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


2468) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


2469) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


2470) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


2471) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


2472) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


2473) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


2474) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


2475) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


2476) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


2477) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


2478) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


2479) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


2480) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


2481) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


2482) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


2483) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


2484) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


2485) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


2486) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


2487) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


2488) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


2489) apk add --no-cache --virtual .build-deps   ca-certificates   gcc   libc-dev   linux-headers   lua5.3-dev   make   openssl   openssl-dev   pcre2-dev   readline-dev   tar   zlib-dev

CommandNode(pos=(12, 191), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 76), word='gcc'),
  WordNode(pos=(79, 87), word='libc-dev'),
  WordNode(pos=(90, 103), word='linux-headers'),
  WordNode(pos=(106, 116), word='lua5.3-dev'),
  WordNode(pos=(119, 123), word='make'),
  WordNode(pos=(126, 133), word='openssl'),
  WordNode(pos=(136, 147), word='openssl-dev'),
  WordNode(pos=(150, 159), word='pcre2-dev'),
  WordNode(pos=(162, 174), word='readline-dev'),
  WordNode(pos=(177, 180), word='tar'),
  WordNode(pos=(183, 191), word='zlib-dev'),
])


2490) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


2491) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


2492) sha256sum -c

CommandNode(pos=(280, 292), parts=[
  WordNode(pos=(280, 289), word='sha256sum'),
  WordNode(pos=(290, 292), word='-c'),
])


2493) mkdir -p /usr/src/haproxy

CommandNode(pos=(297, 322), parts=[
  WordNode(pos=(297, 302), word='mkdir'),
  WordNode(pos=(303, 305), word='-p'),
  WordNode(pos=(306, 322), word='/usr/src/haproxy'),
])


2494) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(327, 391), parts=[
  WordNode(pos=(327, 330), word='tar'),
  WordNode(pos=(331, 335), word='-xzf'),
  WordNode(pos=(336, 350), word='haproxy.tar.gz'),
  WordNode(pos=(351, 353), word='-C'),
  WordNode(pos=(354, 370), word='/usr/src/haproxy'),
  WordNode(pos=(371, 391), word='--strip-components=1'),
])


2495) rm haproxy.tar.gz

CommandNode(pos=(396, 413), parts=[
  WordNode(pos=(396, 398), word='rm'),
  WordNode(pos=(399, 413), word='haproxy.tar.gz'),
])


2496) makeOpts='   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 596), parts=[
  AssignmentNode(pos=(419, 596), word='makeOpts=   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


2497) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(601, 673), parts=[
  WordNode(pos=(601, 605), word='make'),
  WordNode(pos=(606, 608), word='-C'),
  WordNode(pos=(609, 625), word='/usr/src/haproxy'),
  WordNode(pos=(626, 628), word='-j'),
  WordNode(pos=(629, 659), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(632, 657), parts=[
        WordNode(pos=(632, 639), word='getconf'),
        WordNode(pos=(640, 657), word='_NPROCESSORS_ONLN'),
      ]), pos=(630, 658)),
  ]),
  WordNode(pos=(660, 663), word='all'),
  WordNode(pos=(664, 673), word='$makeOpts', parts=[
    ParameterNode(pos=(664, 673), value='makeOpts'),
  ]),
])


2498) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(678, 724), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-C'),
  WordNode(pos=(686, 702), word='/usr/src/haproxy'),
  WordNode(pos=(703, 714), word='install-bin'),
  WordNode(pos=(715, 724), word='$makeOpts', parts=[
    ParameterNode(pos=(715, 724), value='makeOpts'),
  ]),
])


2499) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(730, 761), parts=[
  WordNode(pos=(730, 735), word='mkdir'),
  WordNode(pos=(736, 738), word='-p'),
  WordNode(pos=(739, 761), word='/usr/local/etc/haproxy'),
])


2500) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(766, 838), parts=[
  WordNode(pos=(766, 768), word='cp'),
  WordNode(pos=(769, 771), word='-R'),
  WordNode(pos=(772, 808), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(809, 838), word='/usr/local/etc/haproxy/errors'),
])


2501) rm -rf /usr/src/haproxy

CommandNode(pos=(843, 866), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 866), word='/usr/src/haproxy'),
])


2502) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(872, 1069), parts=[
  AssignmentNode(pos=(872, 1069), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(886, 1065), parts=[
        CommandNode(pos=(886, 952), parts=[
          WordNode(pos=(886, 893), word='scanelf'),
          WordNode(pos=(894, 902), word='--needed'),
          WordNode(pos=(903, 913), word='--nobanner'),
          WordNode(pos=(914, 922), word='--format'),
          WordNode(pos=(923, 929), word='%n#p'),
          WordNode(pos=(930, 941), word='--recursive'),
          WordNode(pos=(942, 952), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(956, 957)),
        CommandNode(pos=(958, 969), parts=[
          WordNode(pos=(958, 960), word='tr'),
          WordNode(pos=(961, 964), word=','),
          WordNode(pos=(965, 969), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(973, 974)),
        CommandNode(pos=(975, 982), parts=[
          WordNode(pos=(975, 979), word='sort'),
          WordNode(pos=(980, 982), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(986, 987)),
        CommandNode(pos=(988, 1065), parts=[
          WordNode(pos=(988, 991), word='awk'),
          WordNode(pos=(992, 1065), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(881, 1066)),
  ]),
])


2503) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1074, 1117), parts=[
  WordNode(pos=(1074, 1077), word='apk'),
  WordNode(pos=(1078, 1081), word='add'),
  WordNode(pos=(1082, 1091), word='--virtual'),
  WordNode(pos=(1092, 1108), word='.haproxy-rundeps'),
  WordNode(pos=(1109, 1117), word='$runDeps', parts=[
    ParameterNode(pos=(1109, 1117), value='runDeps'),
  ]),
])


2504) apk del .build-deps

CommandNode(pos=(1122, 1141), parts=[
  WordNode(pos=(1122, 1125), word='apk'),
  WordNode(pos=(1126, 1129), word='del'),
  WordNode(pos=(1130, 1141), word='.build-deps'),
])


2505) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2506) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


2507) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


2508) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


2509) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


2510) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


2511) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


2512) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2513) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2514) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


2515) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


2516) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


2517) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


2518) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2519) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


2520) apt-get install -y --no-install-recommends apache2

CommandNode(pos=(28, 78), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 78), word='apache2'),
])


2521) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(81, 108), parts=[
  WordNode(pos=(81, 83), word='rm'),
  WordNode(pos=(84, 87), word='-rf'),
  WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
])


2522) sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"

CommandNode(pos=(112, 187), parts=[
  WordNode(pos=(112, 115), word='sed'),
  WordNode(pos=(116, 119), word='-ri'),
  WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
  WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
  ]),
])


2523) . "$APACHE_ENVVARS"

CommandNode(pos=(191, 210), parts=[
  WordNode(pos=(191, 192), word='.'),
  WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
  ]),
])


2524) rm -rvf "$dir"

CommandNode(pos=(293, 307), parts=[
  WordNode(pos=(293, 295), word='rm'),
  WordNode(pos=(296, 300), word='-rvf'),
  WordNode(pos=(301, 307), word='$dir', parts=[
    ParameterNode(pos=(302, 306), value='dir'),
  ]),
])


2525) mkdir -p "$dir"

CommandNode(pos=(311, 326), parts=[
  WordNode(pos=(311, 316), word='mkdir'),
  WordNode(pos=(317, 319), word='-p'),
  WordNode(pos=(320, 326), word='$dir', parts=[
    ParameterNode(pos=(321, 325), value='dir'),
  ]),
])


2526) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


2527) chmod 777 "$dir"

CommandNode(pos=(383, 399), parts=[
  WordNode(pos=(383, 388), word='chmod'),
  WordNode(pos=(389, 392), word='777'),
  WordNode(pos=(393, 399), word='$dir', parts=[
    ParameterNode(pos=(394, 398), value='dir'),
  ]),
])


2528) rm -rvf /var/www/html/*

CommandNode(pos=(410, 433), parts=[
  WordNode(pos=(410, 412), word='rm'),
  WordNode(pos=(413, 417), word='-rvf'),
  WordNode(pos=(418, 433), word='/var/www/html/*'),
])


2529) ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"

CommandNode(pos=(437, 484), parts=[
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 444), word='-sfT'),
  WordNode(pos=(445, 456), word='/dev/stderr'),
  WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
    ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
  ]),
])


2530) ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"

CommandNode(pos=(487, 535), parts=[
  WordNode(pos=(487, 489), word='ln'),
  WordNode(pos=(490, 494), word='-sfT'),
  WordNode(pos=(495, 506), word='/dev/stdout'),
  WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
    ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
  ]),
])


2531) ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

CommandNode(pos=(538, 599), parts=[
  WordNode(pos=(538, 540), word='ln'),
  WordNode(pos=(541, 545), word='-sfT'),
  WordNode(pos=(546, 557), word='/dev/stdout'),
  WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
    ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
  ]),
])


2532) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


2533) a2dismod mpm_event

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 8), word='a2dismod'),
  WordNode(pos=(9, 18), word='mpm_event'),
])


2534) a2enmod mpm_prefork

CommandNode(pos=(22, 41), parts=[
  WordNode(pos=(22, 29), word='a2enmod'),
  WordNode(pos=(30, 41), word='mpm_prefork'),
])


2535) echo '<FilesMatch \.php$>'

CommandNode(pos=(4, 30), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 30), word='<FilesMatch \\.php$>'),
])


2536) echo '\tSetHandler application/x-httpd-php'

CommandNode(pos=(34, 77), parts=[
  WordNode(pos=(34, 38), word='echo'),
  WordNode(pos=(39, 77), word='\\tSetHandler application/x-httpd-php'),
])


2537) echo '</FilesMatch>'

CommandNode(pos=(81, 101), parts=[
  WordNode(pos=(81, 85), word='echo'),
  WordNode(pos=(86, 101), word='</FilesMatch>'),
])


2538) echo

CommandNode(pos=(105, 109), parts=[
  WordNode(pos=(105, 109), word='echo'),
])


2539) echo 'DirectoryIndex disabled'

CommandNode(pos=(113, 143), parts=[
  WordNode(pos=(113, 117), word='echo'),
  WordNode(pos=(118, 143), word='DirectoryIndex disabled'),
])


2540) echo 'DirectoryIndex index.php index.html'

CommandNode(pos=(147, 189), parts=[
  WordNode(pos=(147, 151), word='echo'),
  WordNode(pos=(152, 189), word='DirectoryIndex index.php index.html'),
])


2541) echo

CommandNode(pos=(193, 197), parts=[
  WordNode(pos=(193, 197), word='echo'),
])


2542) echo '<Directory /var/www/>'

CommandNode(pos=(201, 229), parts=[
  WordNode(pos=(201, 205), word='echo'),
  WordNode(pos=(206, 229), word='<Directory /var/www/>'),
])


2543) echo '\tOptions -Indexes'

CommandNode(pos=(233, 258), parts=[
  WordNode(pos=(233, 237), word='echo'),
  WordNode(pos=(238, 258), word='\\tOptions -Indexes'),
])


2544) echo '\tAllowOverride All'

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 266), word='echo'),
  WordNode(pos=(267, 288), word='\\tAllowOverride All'),
])


2545) echo '</Directory>'

CommandNode(pos=(292, 311), parts=[
  WordNode(pos=(292, 296), word='echo'),
  WordNode(pos=(297, 311), word='</Directory>'),
])


2546) tee "$APACHE_CONFDIR/conf-available/docker-php.conf"

CommandNode(pos=(318, 370), parts=[
  WordNode(pos=(318, 321), word='tee'),
  WordNode(pos=(322, 370), word='$APACHE_CONFDIR/conf-available/docker-php.conf', parts=[
    ParameterNode(pos=(323, 338), value='APACHE_CONFDIR'),
  ]),
])


2547) a2enconf docker-php

CommandNode(pos=(375, 394), parts=[
  WordNode(pos=(375, 383), word='a2enconf'),
  WordNode(pos=(384, 394), word='docker-php'),
])


2548) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


2549) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


2550) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


2551) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


2552) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


2553) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


2554) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


2555) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


2556) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


2557) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


2558) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


2559) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


2560) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


2561) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


2562) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


2563) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


2564) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


2565) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


2566) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


2567) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


2568) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


2569) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


2570) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


2571) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


2572) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


2573) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


2574) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


2575) apt-get install -y   bzip2   curl   gcc   gnupg dirmngr   make     bc   cpio   dpkg-dev   g++   patch   perl   python   rsync   unzip   wget

CommandNode(pos=(18, 158), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 44), word='bzip2'),
  WordNode(pos=(47, 51), word='curl'),
  WordNode(pos=(54, 57), word='gcc'),
  WordNode(pos=(60, 65), word='gnupg'),
  WordNode(pos=(66, 73), word='dirmngr'),
  WordNode(pos=(76, 80), word='make'),
  WordNode(pos=(85, 87), word='bc'),
  WordNode(pos=(90, 94), word='cpio'),
  WordNode(pos=(97, 105), word='dpkg-dev'),
  WordNode(pos=(108, 111), word='g++'),
  WordNode(pos=(114, 119), word='patch'),
  WordNode(pos=(122, 126), word='perl'),
  WordNode(pos=(129, 135), word='python'),
  WordNode(pos=(138, 143), word='rsync'),
  WordNode(pos=(146, 151), word='unzip'),
  WordNode(pos=(154, 158), word='wget'),
])


2576) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(163, 190), parts=[
  WordNode(pos=(163, 165), word='rm'),
  WordNode(pos=(166, 169), word='-rf'),
  WordNode(pos=(170, 190), word='/var/lib/apt/lists/*'),
])


2577) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys AB07D806D2CE741FB886EE50B025BA8B59C36319

CommandNode(pos=(0, 103), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 11), word='--batch'),
  WordNode(pos=(12, 23), word='--keyserver'),
  WordNode(pos=(24, 50), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(51, 62), word='--recv-keys'),
  WordNode(pos=(63, 103), word='AB07D806D2CE741FB886EE50B025BA8B59C36319'),
])


2578) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2579) tarball="buildroot-${BUILDROOT_VERSION}.tar.bz2"

CommandNode(pos=(10, 58), parts=[
  AssignmentNode(pos=(10, 58), word='tarball=buildroot-${BUILDROOT_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(29, 49), value='BUILDROOT_VERSION'),
  ]),
])


2580) curl -fL -o buildroot.tar.bz2 "https://buildroot.org/downloads/$tarball"

CommandNode(pos=(61, 133), parts=[
  WordNode(pos=(61, 65), word='curl'),
  WordNode(pos=(66, 69), word='-fL'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 90), word='buildroot.tar.bz2'),
  WordNode(pos=(91, 133), word='https://buildroot.org/downloads/$tarball', parts=[
    ParameterNode(pos=(124, 132), value='tarball'),
  ]),
])


2581) curl -fL -o buildroot.tar.bz2.sign "https://buildroot.org/downloads/$tarball.sign"

CommandNode(pos=(136, 218), parts=[
  WordNode(pos=(136, 140), word='curl'),
  WordNode(pos=(141, 144), word='-fL'),
  WordNode(pos=(145, 147), word='-o'),
  WordNode(pos=(148, 170), word='buildroot.tar.bz2.sign'),
  WordNode(pos=(171, 218), word='https://buildroot.org/downloads/$tarball.sign', parts=[
    ParameterNode(pos=(204, 212), value='tarball'),
  ]),
])


2582) gpg --batch --decrypt --output buildroot.tar.bz2.txt buildroot.tar.bz2.sign

CommandNode(pos=(221, 296), parts=[
  WordNode(pos=(221, 224), word='gpg'),
  WordNode(pos=(225, 232), word='--batch'),
  WordNode(pos=(233, 242), word='--decrypt'),
  WordNode(pos=(243, 251), word='--output'),
  WordNode(pos=(252, 273), word='buildroot.tar.bz2.txt'),
  WordNode(pos=(274, 296), word='buildroot.tar.bz2.sign'),
])


2583) awk '$1 == "SHA1:" && $2 ~ /^[0-9a-f]+$/ && $3 == "'"$tarball"'" { print $2, "*buildroot.tar.bz2" }' buildroot.tar.bz2.txt > buildroot.tar.bz2.sha1

CommandNode(pos=(299, 446), parts=[
  WordNode(pos=(299, 302), word='awk'),
  WordNode(pos=(303, 399), word='$1 == "SHA1:" && $2 ~ /^[0-9a-f]+$/ && $3 == "\'"$tarball"\'" { print $2, "*buildroot.tar.bz2" }'),
  WordNode(pos=(400, 421), word='buildroot.tar.bz2.txt'),
  RedirectNode(output=
    WordNode(pos=(424, 446), word='buildroot.tar.bz2.sha1'), pos=(422, 446), type='>'),
])


2584) test -s buildroot.tar.bz2.sha1

CommandNode(pos=(449, 479), parts=[
  WordNode(pos=(449, 453), word='test'),
  WordNode(pos=(454, 456), word='-s'),
  WordNode(pos=(457, 479), word='buildroot.tar.bz2.sha1'),
])


2585) sha1sum -c buildroot.tar.bz2.sha1

CommandNode(pos=(482, 515), parts=[
  WordNode(pos=(482, 489), word='sha1sum'),
  WordNode(pos=(490, 492), word='-c'),
  WordNode(pos=(493, 515), word='buildroot.tar.bz2.sha1'),
])


2586) mkdir -p /usr/src/buildroot

CommandNode(pos=(518, 545), parts=[
  WordNode(pos=(518, 523), word='mkdir'),
  WordNode(pos=(524, 526), word='-p'),
  WordNode(pos=(527, 545), word='/usr/src/buildroot'),
])


2587) tar -xf buildroot.tar.bz2 -C /usr/src/buildroot --strip-components 1

CommandNode(pos=(548, 616), parts=[
  WordNode(pos=(548, 551), word='tar'),
  WordNode(pos=(552, 555), word='-xf'),
  WordNode(pos=(556, 573), word='buildroot.tar.bz2'),
  WordNode(pos=(574, 576), word='-C'),
  WordNode(pos=(577, 595), word='/usr/src/buildroot'),
  WordNode(pos=(596, 614), word='--strip-components'),
  WordNode(pos=(615, 616), word='1'),
])


2588) rm buildroot.tar.bz2*

CommandNode(pos=(619, 640), parts=[
  WordNode(pos=(619, 621), word='rm'),
  WordNode(pos=(622, 640), word='buildroot.tar.bz2*'),
])


2589) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2590) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(10, 67), parts=[
  AssignmentNode(pos=(10, 67), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(21, 65), parts=[
        WordNode(pos=(21, 38), word='dpkg-architecture'),
        WordNode(pos=(39, 46), word='--query'),
        WordNode(pos=(47, 65), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(19, 66)),
  ]),
])


2591) make -C /usr/src/buildroot HOST_GMP_CONF_OPTS="--build='"$gnuArch"'" -j "$(nproc)" toolchain

CommandNode(pos=(70, 162), parts=[
  WordNode(pos=(70, 74), word='make'),
  WordNode(pos=(75, 77), word='-C'),
  WordNode(pos=(78, 96), word='/usr/src/buildroot'),
  WordNode(pos=(97, 138), word='HOST_GMP_CONF_OPTS=--build=$gnuArch', parts=[
    ParameterNode(pos=(127, 135), value='gnuArch'),
  ]),
  WordNode(pos=(139, 141), word='-j'),
  WordNode(pos=(142, 152), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(145, 150), parts=[
        WordNode(pos=(145, 150), word='nproc'),
      ]), pos=(143, 151)),
  ]),
  WordNode(pos=(153, 162), word='toolchain'),
])


2592) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C9E9416F76E610DBD09D040F47B70C55ACC9965B

CommandNode(pos=(0, 103), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 11), word='--batch'),
  WordNode(pos=(12, 23), word='--keyserver'),
  WordNode(pos=(24, 50), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(51, 62), word='--recv-keys'),
  WordNode(pos=(63, 103), word='C9E9416F76E610DBD09D040F47B70C55ACC9965B'),
])


2593) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2594) tarball="busybox-${BUSYBOX_VERSION}.tar.bz2"

CommandNode(pos=(10, 54), parts=[
  AssignmentNode(pos=(10, 54), word='tarball=busybox-${BUSYBOX_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(27, 45), value='BUSYBOX_VERSION'),
  ]),
])


2595) curl -fL -o busybox.tar.bz2 "https://busybox.net/downloads/$tarball"

CommandNode(pos=(57, 125), parts=[
  WordNode(pos=(57, 61), word='curl'),
  WordNode(pos=(62, 65), word='-fL'),
  WordNode(pos=(66, 68), word='-o'),
  WordNode(pos=(69, 84), word='busybox.tar.bz2'),
  WordNode(pos=(85, 125), word='https://busybox.net/downloads/$tarball', parts=[
    ParameterNode(pos=(116, 124), value='tarball'),
  ]),
])


2596) curl -fL -o busybox.tar.bz2.sig "https://busybox.net/downloads/$tarball.sig"

CommandNode(pos=(128, 204), parts=[
  WordNode(pos=(128, 132), word='curl'),
  WordNode(pos=(133, 136), word='-fL'),
  WordNode(pos=(137, 139), word='-o'),
  WordNode(pos=(140, 159), word='busybox.tar.bz2.sig'),
  WordNode(pos=(160, 204), word='https://busybox.net/downloads/$tarball.sig', parts=[
    ParameterNode(pos=(191, 199), value='tarball'),
  ]),
])


2597) gpg --batch --verify busybox.tar.bz2.sig busybox.tar.bz2

CommandNode(pos=(207, 263), parts=[
  WordNode(pos=(207, 210), word='gpg'),
  WordNode(pos=(211, 218), word='--batch'),
  WordNode(pos=(219, 227), word='--verify'),
  WordNode(pos=(228, 247), word='busybox.tar.bz2.sig'),
  WordNode(pos=(248, 263), word='busybox.tar.bz2'),
])


2598) mkdir -p /usr/src/busybox

CommandNode(pos=(266, 291), parts=[
  WordNode(pos=(266, 271), word='mkdir'),
  WordNode(pos=(272, 274), word='-p'),
  WordNode(pos=(275, 291), word='/usr/src/busybox'),
])


2599) tar -xf busybox.tar.bz2 -C /usr/src/busybox --strip-components 1

CommandNode(pos=(294, 358), parts=[
  WordNode(pos=(294, 297), word='tar'),
  WordNode(pos=(298, 301), word='-xf'),
  WordNode(pos=(302, 317), word='busybox.tar.bz2'),
  WordNode(pos=(318, 320), word='-C'),
  WordNode(pos=(321, 337), word='/usr/src/busybox'),
  WordNode(pos=(338, 356), word='--strip-components'),
  WordNode(pos=(357, 358), word='1'),
])


2600) rm busybox.tar.bz2*

CommandNode(pos=(361, 380), parts=[
  WordNode(pos=(361, 363), word='rm'),
  WordNode(pos=(364, 380), word='busybox.tar.bz2*'),
])


2601) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2602) setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '

CommandNode(pos=(11, 154), parts=[
  AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
])


2603) unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  '

CommandNode(pos=(158, 201), parts=[
  AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
])


2604) make defconfig

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 209), word='make'),
  WordNode(pos=(210, 219), word='defconfig'),
])


2605) sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config

CommandNode(pos=(253, 312), parts=[
  WordNode(pos=(253, 256), word='sed'),
  WordNode(pos=(257, 259), word='-i'),
  WordNode(pos=(263, 265), word='-e'),
  WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
    ParameterNode(pos=(270, 275), value='conf'),
    ParameterNode(pos=(283, 288), value='conf'),
  ]),
  WordNode(pos=(305, 312), word='.config'),
])


2606) conf="${confV%=*}"

CommandNode(pos=(352, 370), parts=[
  AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
    ParameterNode(pos=(358, 369), value='confV%=*'),
  ]),
])


2607) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(374, 461), parts=[
  WordNode(pos=(374, 377), word='sed'),
  WordNode(pos=(378, 380), word='-i'),
  WordNode(pos=(384, 386), word='-e'),
  WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(391, 396), value='conf'),
    ParameterNode(pos=(402, 408), value='confV'),
  ]),
  WordNode(pos=(414, 416), word='-e'),
  WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(423, 428), value='conf'),
    ParameterNode(pos=(442, 448), value='confV'),
  ]),
  WordNode(pos=(454, 461), word='.config'),
])


2608) grep -q "^$confV\$" .config

CommandNode(pos=(470, 497), parts=[
  WordNode(pos=(470, 474), word='grep'),
  WordNode(pos=(475, 477), word='-q'),
  WordNode(pos=(478, 489), word='^$confV$', parts=[
    ParameterNode(pos=(480, 486), value='confV'),
  ]),
  WordNode(pos=(490, 497), word='.config'),
])


2609) echo "$confV" >> .config

CommandNode(pos=(507, 531), parts=[
  WordNode(pos=(507, 511), word='echo'),
  WordNode(pos=(512, 520), word='$confV', parts=[
    ParameterNode(pos=(513, 519), value='confV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
])


2610) make oldconfig

CommandNode(pos=(548, 562), parts=[
  WordNode(pos=(548, 552), word='make'),
  WordNode(pos=(553, 562), word='oldconfig'),
])


2611) grep -q "^$conf=" .config

CommandNode(pos=(598, 623), parts=[
  WordNode(pos=(598, 602), word='grep'),
  WordNode(pos=(603, 605), word='-q'),
  WordNode(pos=(606, 615), word='^$conf=', parts=[
    ParameterNode(pos=(608, 613), value='conf'),
  ]),
  WordNode(pos=(616, 623), word='.config'),
])


2612) grep -q "^$confV\$" .config

CommandNode(pos=(662, 689), parts=[
  WordNode(pos=(662, 666), word='grep'),
  WordNode(pos=(667, 669), word='-q'),
  WordNode(pos=(670, 681), word='^$confV$', parts=[
    ParameterNode(pos=(672, 678), value='confV'),
  ]),
  WordNode(pos=(682, 689), word='.config'),
])


2613) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2614) make -j "$(nproc)"   CROSS_COMPILE="$(basename /usr/src/buildroot/output/host/usr/*-buildroot-linux-uclibc*)-"   busybox

CommandNode(pos=(12, 132), parts=[
  WordNode(pos=(12, 16), word='make'),
  WordNode(pos=(17, 19), word='-j'),
  WordNode(pos=(20, 30), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(23, 28), parts=[
        WordNode(pos=(23, 28), word='nproc'),
      ]), pos=(21, 29)),
  ]),
  WordNode(pos=(33, 122), word='CROSS_COMPILE=$(basename /usr/src/buildroot/output/host/usr/*-buildroot-linux-uclibc*)-', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(50, 119), parts=[
        WordNode(pos=(50, 58), word='basename'),
        WordNode(pos=(59, 119), word='/usr/src/buildroot/output/host/usr/*-buildroot-linux-uclibc*'),
      ]), pos=(48, 120)),
  ]),
  WordNode(pos=(125, 132), word='busybox'),
])


2615) ./busybox --help

CommandNode(pos=(137, 153), parts=[
  WordNode(pos=(137, 146), word='./busybox'),
  WordNode(pos=(147, 153), word='--help'),
])


2616) mkdir -p rootfs/bin

CommandNode(pos=(158, 177), parts=[
  WordNode(pos=(158, 163), word='mkdir'),
  WordNode(pos=(164, 166), word='-p'),
  WordNode(pos=(167, 177), word='rootfs/bin'),
])


2617) ln -vL busybox rootfs/bin/

CommandNode(pos=(182, 208), parts=[
  WordNode(pos=(182, 184), word='ln'),
  WordNode(pos=(185, 188), word='-vL'),
  WordNode(pos=(189, 196), word='busybox'),
  WordNode(pos=(197, 208), word='rootfs/bin/'),
])


2618) ln -vL ../buildroot/output/target/usr/bin/getconf rootfs/bin/

CommandNode(pos=(214, 275), parts=[
  WordNode(pos=(214, 216), word='ln'),
  WordNode(pos=(217, 220), word='-vL'),
  WordNode(pos=(221, 263), word='../buildroot/output/target/usr/bin/getconf'),
  WordNode(pos=(264, 275), word='rootfs/bin/'),
])


2619) chroot rootfs /bin/getconf _NPROCESSORS_ONLN

CommandNode(pos=(281, 325), parts=[
  WordNode(pos=(281, 287), word='chroot'),
  WordNode(pos=(288, 294), word='rootfs'),
  WordNode(pos=(295, 307), word='/bin/getconf'),
  WordNode(pos=(308, 325), word='_NPROCESSORS_ONLN'),
])


2620) chroot rootfs /bin/busybox --install /bin

CommandNode(pos=(331, 372), parts=[
  WordNode(pos=(331, 337), word='chroot'),
  WordNode(pos=(338, 344), word='rootfs'),
  WordNode(pos=(345, 357), word='/bin/busybox'),
  WordNode(pos=(358, 367), word='--install'),
  WordNode(pos=(368, 372), word='/bin'),
])


2621) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2622) mkdir -p rootfs/etc

CommandNode(pos=(10, 29), parts=[
  WordNode(pos=(10, 15), word='mkdir'),
  WordNode(pos=(16, 18), word='-p'),
  WordNode(pos=(19, 29), word='rootfs/etc'),
])


2623) ln -vL    "../buildroot/system/skeleton/etc/$f"    "rootfs/etc/$f"

CommandNode(pos=(67, 133), parts=[
  WordNode(pos=(67, 69), word='ln'),
  WordNode(pos=(70, 73), word='-vL'),
  WordNode(pos=(77, 114), word='../buildroot/system/skeleton/etc/$f', parts=[
    ParameterNode(pos=(111, 113), value='f'),
  ]),
  WordNode(pos=(118, 133), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(130, 132), value='f'),
  ]),
])


2624) grep -E '^root::' rootfs/etc/shadow

CommandNode(pos=(143, 178), parts=[
  WordNode(pos=(143, 147), word='grep'),
  WordNode(pos=(148, 150), word='-E'),
  WordNode(pos=(151, 160), word='^root::'),
  WordNode(pos=(161, 178), word='rootfs/etc/shadow'),
])


2625) sed -ri -e 's/^root::/root:*:/' rootfs/etc/shadow

CommandNode(pos=(181, 230), parts=[
  WordNode(pos=(181, 184), word='sed'),
  WordNode(pos=(185, 188), word='-ri'),
  WordNode(pos=(189, 191), word='-e'),
  WordNode(pos=(192, 212), word='s/^root::/root:*:/'),
  WordNode(pos=(213, 230), word='rootfs/etc/shadow'),
])


2626) grep -E '^root:[*]:' rootfs/etc/shadow

CommandNode(pos=(233, 271), parts=[
  WordNode(pos=(233, 237), word='grep'),
  WordNode(pos=(238, 240), word='-E'),
  WordNode(pos=(241, 253), word='^root:[*]:'),
  WordNode(pos=(254, 271), word='rootfs/etc/shadow'),
])


2627) awk '   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \"%s\" encountered in line %d: %s\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\n", $1;    }    printf "chmod %s %s\n", $3, $1;   }  ' ../buildroot/system/device_table.txt

CommandNode(pos=(274, 604), parts=[
  WordNode(pos=(274, 277), word='awk'),
  WordNode(pos=(278, 567), word='   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \\"%s\\" encountered in line %d: %s\\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\\n", $1;    }    printf "chmod %s %s\\n", $3, $1;   }  '),
  WordNode(pos=(568, 604), word='../buildroot/system/device_table.txt'),
])


2628) bash -Eeuo pipefail -x

CommandNode(pos=(607, 629), parts=[
  WordNode(pos=(607, 611), word='bash'),
  WordNode(pos=(612, 617), word='-Eeuo'),
  WordNode(pos=(618, 626), word='pipefail'),
  WordNode(pos=(627, 629), word='-x'),
])


2629) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2630) cd rootfs

CommandNode(pos=(12, 21), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 21), word='rootfs'),
])


2631) user="${userHome%%=*}"

CommandNode(pos=(102, 124), parts=[
  AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
    ParameterNode(pos=(108, 123), value='userHome%%=*'),
  ]),
])


2632) home="${userHome#*=}"

CommandNode(pos=(128, 149), parts=[
  AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
    ParameterNode(pos=(134, 148), value='userHome#*='),
  ]),
])


2633) home="./${home#/}"

CommandNode(pos=(153, 171), parts=[
  AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
    ParameterNode(pos=(161, 170), value='home#/'),
  ]),
])


2634) [ ! -d "$home" ]

CommandNode(pos=(178, 194), parts=[
  WordNode(pos=(178, 179), word='['),
  WordNode(pos=(180, 181), word='!'),
  WordNode(pos=(182, 184), word='-d'),
  WordNode(pos=(185, 192), word='$home', parts=[
    ParameterNode(pos=(186, 191), value='home'),
  ]),
  WordNode(pos=(193, 194), word=']'),
])


2635) mkdir -p "$home"

CommandNode(pos=(204, 220), parts=[
  WordNode(pos=(204, 209), word='mkdir'),
  WordNode(pos=(210, 212), word='-p'),
  WordNode(pos=(213, 220), word='$home', parts=[
    ParameterNode(pos=(214, 219), value='home'),
  ]),
])


2636) chown "$user" "$home"

CommandNode(pos=(225, 246), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 238), word='$user', parts=[
    ParameterNode(pos=(232, 237), value='user'),
  ]),
  WordNode(pos=(239, 246), word='$home', parts=[
    ParameterNode(pos=(240, 245), value='home'),
  ]),
])


2637) chmod 755 "$home"

CommandNode(pos=(251, 268), parts=[
  WordNode(pos=(251, 256), word='chmod'),
  WordNode(pos=(257, 260), word='755'),
  WordNode(pos=(261, 268), word='$home', parts=[
    ParameterNode(pos=(262, 267), value='home'),
  ]),
])


2638) chroot rootfs /bin/sh -xec 'true'

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 6), word='chroot'),
  WordNode(pos=(7, 13), word='rootfs'),
  WordNode(pos=(14, 21), word='/bin/sh'),
  WordNode(pos=(22, 26), word='-xec'),
  WordNode(pos=(27, 33), word='true'),
])


2639) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2640) ln -vL /usr/share/zoneinfo/UTC rootfs/etc/localtime

CommandNode(pos=(10, 61), parts=[
  WordNode(pos=(10, 12), word='ln'),
  WordNode(pos=(13, 16), word='-vL'),
  WordNode(pos=(17, 40), word='/usr/share/zoneinfo/UTC'),
  WordNode(pos=(41, 61), word='rootfs/etc/localtime'),
])


2641) [ "$(chroot rootfs date +%Z)" = 'UTC' ]

CommandNode(pos=(64, 103), parts=[
  WordNode(pos=(64, 65), word='['),
  WordNode(pos=(66, 93), word='$(chroot rootfs date +%Z)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(69, 91), parts=[
        WordNode(pos=(69, 75), word='chroot'),
        WordNode(pos=(76, 82), word='rootfs'),
        WordNode(pos=(83, 87), word='date'),
        WordNode(pos=(88, 91), word='+%Z'),
      ]), pos=(67, 92)),
  ]),
  WordNode(pos=(94, 95), word='='),
  WordNode(pos=(96, 101), word='UTC'),
  WordNode(pos=(102, 103), word=']'),
])


2642) cp -L /etc/resolv.conf rootfs/etc/

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 2), word='cp'),
  WordNode(pos=(3, 5), word='-L'),
  WordNode(pos=(6, 22), word='/etc/resolv.conf'),
  WordNode(pos=(23, 34), word='rootfs/etc/'),
])


2643) chroot rootfs /bin/sh -xec 'nslookup google.com'

CommandNode(pos=(39, 87), parts=[
  WordNode(pos=(39, 45), word='chroot'),
  WordNode(pos=(46, 52), word='rootfs'),
  WordNode(pos=(53, 60), word='/bin/sh'),
  WordNode(pos=(61, 65), word='-xec'),
  WordNode(pos=(66, 87), word='nslookup google.com'),
])


2644) rm rootfs/etc/resolv.conf

CommandNode(pos=(92, 117), parts=[
  WordNode(pos=(92, 94), word='rm'),
  WordNode(pos=(95, 117), word='rootfs/etc/resolv.conf'),
])


2645) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2646) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


2647) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


2648) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


2649) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


2650) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2651) groupadd -r postgres --gid=999

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 22), word='-r'),
  WordNode(pos=(23, 31), word='postgres'),
  WordNode(pos=(32, 41), word='--gid=999'),
])


2652) useradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres

CommandNode(pos=(44, 134), parts=[
  WordNode(pos=(44, 51), word='useradd'),
  WordNode(pos=(52, 54), word='-r'),
  WordNode(pos=(55, 57), word='-g'),
  WordNode(pos=(58, 66), word='postgres'),
  WordNode(pos=(67, 76), word='--uid=999'),
  WordNode(pos=(77, 107), word='--home-dir=/var/lib/postgresql'),
  WordNode(pos=(108, 125), word='--shell=/bin/bash'),
  WordNode(pos=(126, 134), word='postgres'),
])


2653) mkdir -p /var/lib/postgresql

CommandNode(pos=(137, 165), parts=[
  WordNode(pos=(137, 142), word='mkdir'),
  WordNode(pos=(143, 145), word='-p'),
  WordNode(pos=(146, 165), word='/var/lib/postgresql'),
])


2654) chown -R postgres:postgres /var/lib/postgresql

CommandNode(pos=(168, 214), parts=[
  WordNode(pos=(168, 173), word='chown'),
  WordNode(pos=(174, 176), word='-R'),
  WordNode(pos=(177, 194), word='postgres:postgres'),
  WordNode(pos=(195, 214), word='/var/lib/postgresql'),
])


2655) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


2656) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


2657) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


2658) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


2659) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


2660) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


2661) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


2662) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


2663) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


2664) command -v gpgconf > /dev/null

CommandNode(pos=(613, 643), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(634, 643), word='/dev/null'), pos=(632, 643), type='>'),
])


2665) gpgconf --kill all

CommandNode(pos=(647, 665), parts=[
  WordNode(pos=(647, 654), word='gpgconf'),
  WordNode(pos=(655, 661), word='--kill'),
  WordNode(pos=(662, 665), word='all'),
])


2666) :

CommandNode(pos=(669, 670), parts=[
  WordNode(pos=(669, 670), word=':'),
])


2667) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


2668) chmod +x /usr/local/bin/gosu

CommandNode(pos=(726, 754), parts=[
  WordNode(pos=(726, 731), word='chmod'),
  WordNode(pos=(732, 734), word='+x'),
  WordNode(pos=(735, 754), word='/usr/local/bin/gosu'),
])


2669) gosu nobody true

CommandNode(pos=(759, 775), parts=[
  WordNode(pos=(759, 763), word='gosu'),
  WordNode(pos=(764, 770), word='nobody'),
  WordNode(pos=(771, 775), word='true'),
])


2670) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(780, 831), parts=[
  WordNode(pos=(780, 787), word='apt-get'),
  WordNode(pos=(788, 793), word='purge'),
  WordNode(pos=(794, 796), word='-y'),
  WordNode(pos=(797, 810), word='--auto-remove'),
  WordNode(pos=(811, 826), word='ca-certificates'),
  WordNode(pos=(827, 831), word='wget'),
])


2671) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2672) [ -f /etc/dpkg/dpkg.cfg.d/docker ]

CommandNode(pos=(14, 48), parts=[
  WordNode(pos=(14, 15), word='['),
  WordNode(pos=(16, 18), word='-f'),
  WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
  WordNode(pos=(47, 48), word=']'),
])


2673) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(57, 112), parts=[
  WordNode(pos=(57, 61), word='grep'),
  WordNode(pos=(62, 64), word='-q'),
  WordNode(pos=(65, 84), word='/usr/share/locale'),
  WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


2674) sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(116, 177), parts=[
  WordNode(pos=(116, 119), word='sed'),
  WordNode(pos=(120, 123), word='-ri'),
  WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
  WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


2675) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(183, 238), parts=[
  WordNode(pos=(183, 187), word='grep'),
  WordNode(pos=(188, 190), word='-q'),
  WordNode(pos=(191, 210), word='/usr/share/locale'),
  WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


2676) apt-get update

CommandNode(pos=(246, 260), parts=[
  WordNode(pos=(246, 253), word='apt-get'),
  WordNode(pos=(254, 260), word='update'),
])


2677) apt-get install -y locales

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 269), word='apt-get'),
  WordNode(pos=(270, 277), word='install'),
  WordNode(pos=(278, 280), word='-y'),
  WordNode(pos=(281, 288), word='locales'),
])


2678) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(290, 317), parts=[
  WordNode(pos=(290, 292), word='rm'),
  WordNode(pos=(293, 296), word='-rf'),
  WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
])


2679) localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

CommandNode(pos=(320, 396), parts=[
  WordNode(pos=(320, 329), word='localedef'),
  WordNode(pos=(330, 332), word='-i'),
  WordNode(pos=(333, 338), word='en_US'),
  WordNode(pos=(339, 341), word='-c'),
  WordNode(pos=(342, 344), word='-f'),
  WordNode(pos=(345, 350), word='UTF-8'),
  WordNode(pos=(351, 353), word='-A'),
  WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
  WordNode(pos=(385, 396), word='en_US.UTF-8'),
])


2680) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2681) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


2682) apt-get install -y --no-install-recommends libnss-wrapper

CommandNode(pos=(28, 85), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 85), word='libnss-wrapper'),
])


2683) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(88, 115), parts=[
  WordNode(pos=(88, 90), word='rm'),
  WordNode(pos=(91, 94), word='-rf'),
  WordNode(pos=(95, 115), word='/var/lib/apt/lists/*'),
])


2684) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


2685) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2686) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


2687) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


2688) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


2689) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


2690) command -v gpgconf > /dev/null

CommandNode(pos=(233, 263), parts=[
  WordNode(pos=(233, 240), word='command'),
  WordNode(pos=(241, 243), word='-v'),
  WordNode(pos=(244, 251), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(254, 263), word='/dev/null'), pos=(252, 263), type='>'),
])


2691) gpgconf --kill all

CommandNode(pos=(267, 285), parts=[
  WordNode(pos=(267, 274), word='gpgconf'),
  WordNode(pos=(275, 281), word='--kill'),
  WordNode(pos=(282, 285), word='all'),
])


2692) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


2693) apt-key list

CommandNode(pos=(310, 322), parts=[
  WordNode(pos=(310, 317), word='apt-key'),
  WordNode(pos=(318, 322), word='list'),
])


2694) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2695) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


2696) cp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(158, 258), parts=[
  WordNode(pos=(158, 160), word='cp'),
  WordNode(pos=(161, 163), word='-v'),
  WordNode(pos=(164, 213), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(214, 258), word='/usr/share/postgresql/postgresql.conf.sample'),
])


2697) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


2698) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(331, 431), parts=[
  WordNode(pos=(331, 334), word='sed'),
  WordNode(pos=(335, 338), word='-ri'),
  WordNode(pos=(339, 386), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(387, 431), word='/usr/share/postgresql/postgresql.conf.sample'),
])


2699) grep -F "listen_addresses = '*'" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(434, 511), parts=[
  WordNode(pos=(434, 438), word='grep'),
  WordNode(pos=(439, 441), word='-F'),
  WordNode(pos=(442, 466), word="listen_addresses = '*'"),
  WordNode(pos=(467, 511), word='/usr/share/postgresql/postgresql.conf.sample'),
])


2700) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


2701) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


2702) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


2703) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


2704) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


2705) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


2706) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


2707) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


2708) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


2709) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


2710) mkdir -p "$HTTPD_PREFIX"

CommandNode(pos=(0, 24), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 24), word='$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(10, 23), value='HTTPD_PREFIX'),
  ]),
])


2711) chown www-data:www-data "$HTTPD_PREFIX"

CommandNode(pos=(29, 68), parts=[
  WordNode(pos=(29, 34), word='chown'),
  WordNode(pos=(35, 52), word='www-data:www-data'),
  WordNode(pos=(53, 68), word='$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(54, 67), value='HTTPD_PREFIX'),
  ]),
])


2712) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2713) runDeps='   apr-dev   apr-util-dev   apr-util-ldap   perl  '

CommandNode(pos=(12, 72), parts=[
  AssignmentNode(pos=(12, 72), word='runDeps=   apr-dev   apr-util-dev   apr-util-ldap   perl  '),
])


2714) apk add --no-cache --virtual .build-deps   $runDeps   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gnupg   libc-dev   curl-dev   jansson-dev   libxml2-dev   lua-dev   make   nghttp2-dev   openssl   openssl-dev   pcre-dev   tar   zlib-dev

CommandNode(pos=(75, 319), parts=[
  WordNode(pos=(75, 78), word='apk'),
  WordNode(pos=(79, 82), word='add'),
  WordNode(pos=(83, 93), word='--no-cache'),
  WordNode(pos=(94, 103), word='--virtual'),
  WordNode(pos=(104, 115), word='.build-deps'),
  WordNode(pos=(118, 126), word='$runDeps', parts=[
    ParameterNode(pos=(118, 126), value='runDeps'),
  ]),
  WordNode(pos=(129, 144), word='ca-certificates'),
  WordNode(pos=(147, 156), word='coreutils'),
  WordNode(pos=(159, 167), word='dpkg-dev'),
  WordNode(pos=(168, 172), word='dpkg'),
  WordNode(pos=(175, 178), word='gcc'),
  WordNode(pos=(181, 186), word='gnupg'),
  WordNode(pos=(189, 197), word='libc-dev'),
  WordNode(pos=(200, 208), word='curl-dev'),
  WordNode(pos=(211, 222), word='jansson-dev'),
  WordNode(pos=(225, 236), word='libxml2-dev'),
  WordNode(pos=(239, 246), word='lua-dev'),
  WordNode(pos=(249, 253), word='make'),
  WordNode(pos=(256, 267), word='nghttp2-dev'),
  WordNode(pos=(270, 277), word='openssl'),
  WordNode(pos=(280, 291), word='openssl-dev'),
  WordNode(pos=(294, 302), word='pcre-dev'),
  WordNode(pos=(305, 308), word='tar'),
  WordNode(pos=(311, 319), word='zlib-dev'),
])


2715) local f="$1"

CommandNode(pos=(337, 349), parts=[
  WordNode(pos=(337, 342), word='local'),
  WordNode(pos=(343, 349), word='f=$1', parts=[
    ParameterNode(pos=(346, 348), value='1'),
  ]),
])


2716) shift

CommandNode(pos=(351, 356), parts=[
  WordNode(pos=(351, 356), word='shift'),
])


2717) local distFile="$1"

CommandNode(pos=(360, 379), parts=[
  WordNode(pos=(360, 365), word='local'),
  WordNode(pos=(366, 379), word='distFile=$1', parts=[
    ParameterNode(pos=(376, 378), value='1'),
  ]),
])


2718) shift

CommandNode(pos=(381, 386), parts=[
  WordNode(pos=(381, 386), word='shift'),
])


2719) local success=

CommandNode(pos=(390, 404), parts=[
  WordNode(pos=(390, 395), word='local'),
  WordNode(pos=(396, 404), word='success='),
])


2720) local distUrl=

CommandNode(pos=(408, 422), parts=[
  WordNode(pos=(408, 413), word='local'),
  WordNode(pos=(414, 422), word='distUrl='),
])


2721) wget -O "$f" "$distUrl$distFile"

CommandNode(pos=(469, 501), parts=[
  WordNode(pos=(469, 473), word='wget'),
  WordNode(pos=(474, 476), word='-O'),
  WordNode(pos=(477, 481), word='$f', parts=[
    ParameterNode(pos=(478, 480), value='f'),
  ]),
  WordNode(pos=(482, 501), word='$distUrl$distFile', parts=[
    ParameterNode(pos=(483, 491), value='distUrl'),
    ParameterNode(pos=(491, 500), value='distFile'),
  ]),
])


2722) [ -s "$f" ]

CommandNode(pos=(505, 516), parts=[
  WordNode(pos=(505, 506), word='['),
  WordNode(pos=(507, 509), word='-s'),
  WordNode(pos=(510, 514), word='$f', parts=[
    ParameterNode(pos=(511, 513), value='f'),
  ]),
  WordNode(pos=(515, 516), word=']'),
])


2723) success=1

CommandNode(pos=(527, 536), parts=[
  AssignmentNode(pos=(527, 536), word='success=1'),
])


2724) break

CommandNode(pos=(542, 547), parts=[
  WordNode(pos=(542, 547), word='break'),
])


2725) [ -n "$success" ]

CommandNode(pos=(566, 583), parts=[
  WordNode(pos=(566, 567), word='['),
  WordNode(pos=(568, 570), word='-n'),
  WordNode(pos=(571, 581), word='$success', parts=[
    ParameterNode(pos=(572, 580), value='success'),
  ]),
  WordNode(pos=(582, 583), word=']'),
])


2726) ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2"

CommandNode(pos=(591, 649), parts=[
  WordNode(pos=(591, 596), word='ddist'),
  WordNode(pos=(597, 612), word='httpd.tar.bz2'),
  WordNode(pos=(613, 649), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(626, 640), value='HTTPD_VERSION'),
  ]),
])


2727) echo "$HTTPD_SHA256 *httpd.tar.bz2"

CommandNode(pos=(652, 687), parts=[
  WordNode(pos=(652, 656), word='echo'),
  WordNode(pos=(657, 687), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
    ParameterNode(pos=(658, 671), value='HTTPD_SHA256'),
  ]),
])


2728) sha256sum -c -

CommandNode(pos=(690, 704), parts=[
  WordNode(pos=(690, 699), word='sha256sum'),
  WordNode(pos=(700, 702), word='-c'),
  WordNode(pos=(703, 704), word='-'),
])


2729) ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc"

CommandNode(pos=(708, 774), parts=[
  WordNode(pos=(708, 713), word='ddist'),
  WordNode(pos=(714, 733), word='httpd.tar.bz2.asc'),
  WordNode(pos=(734, 774), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
    ParameterNode(pos=(747, 761), value='HTTPD_VERSION'),
  ]),
])


2730) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(777, 808), parts=[
  WordNode(pos=(777, 783), word='export'),
  WordNode(pos=(784, 808), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(797, 806), parts=[
        WordNode(pos=(797, 803), word='mktemp'),
        WordNode(pos=(804, 806), word='-d'),
      ]), pos=(795, 807)),
  ]),
])


2731) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(916, 985), parts=[
  WordNode(pos=(916, 919), word='gpg'),
  WordNode(pos=(920, 927), word='--batch'),
  WordNode(pos=(928, 939), word='--keyserver'),
  WordNode(pos=(940, 966), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(967, 978), word='--recv-keys'),
  WordNode(pos=(979, 985), word='$key', parts=[
    ParameterNode(pos=(980, 984), value='key'),
  ]),
])


2732) gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2

CommandNode(pos=(995, 1047), parts=[
  WordNode(pos=(995, 998), word='gpg'),
  WordNode(pos=(999, 1006), word='--batch'),
  WordNode(pos=(1007, 1015), word='--verify'),
  WordNode(pos=(1016, 1033), word='httpd.tar.bz2.asc'),
  WordNode(pos=(1034, 1047), word='httpd.tar.bz2'),
])


2733) command -v gpgconf

CommandNode(pos=(1050, 1068), parts=[
  WordNode(pos=(1050, 1057), word='command'),
  WordNode(pos=(1058, 1060), word='-v'),
  WordNode(pos=(1061, 1068), word='gpgconf'),
])


2734) gpgconf --kill all

CommandNode(pos=(1072, 1090), parts=[
  WordNode(pos=(1072, 1079), word='gpgconf'),
  WordNode(pos=(1080, 1086), word='--kill'),
  WordNode(pos=(1087, 1090), word='all'),
])


2735) :

CommandNode(pos=(1094, 1095), parts=[
  WordNode(pos=(1094, 1095), word=':'),
])


2736) rm -rf "$GNUPGHOME" httpd.tar.bz2.asc

CommandNode(pos=(1098, 1135), parts=[
  WordNode(pos=(1098, 1100), word='rm'),
  WordNode(pos=(1101, 1104), word='-rf'),
  WordNode(pos=(1105, 1117), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1106, 1116), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1118, 1135), word='httpd.tar.bz2.asc'),
])


2737) mkdir -p src

CommandNode(pos=(1139, 1151), parts=[
  WordNode(pos=(1139, 1144), word='mkdir'),
  WordNode(pos=(1145, 1147), word='-p'),
  WordNode(pos=(1148, 1151), word='src'),
])


2738) tar -xf httpd.tar.bz2 -C src --strip-components=1

CommandNode(pos=(1154, 1203), parts=[
  WordNode(pos=(1154, 1157), word='tar'),
  WordNode(pos=(1158, 1161), word='-xf'),
  WordNode(pos=(1162, 1175), word='httpd.tar.bz2'),
  WordNode(pos=(1176, 1178), word='-C'),
  WordNode(pos=(1179, 1182), word='src'),
  WordNode(pos=(1183, 1203), word='--strip-components=1'),
])


2739) rm httpd.tar.bz2

CommandNode(pos=(1206, 1222), parts=[
  WordNode(pos=(1206, 1208), word='rm'),
  WordNode(pos=(1209, 1222), word='httpd.tar.bz2'),
])


2740) cd src

CommandNode(pos=(1225, 1231), parts=[
  WordNode(pos=(1225, 1227), word='cd'),
  WordNode(pos=(1228, 1231), word='src'),
])


2741) [ "$#" -gt 0 ]

CommandNode(pos=(1255, 1269), parts=[
  WordNode(pos=(1255, 1256), word='['),
  WordNode(pos=(1257, 1261), word='$#', parts=[
    ParameterNode(pos=(1258, 1260), value='#'),
  ]),
  WordNode(pos=(1262, 1265), word='-gt'),
  WordNode(pos=(1266, 1267), word='0'),
  WordNode(pos=(1268, 1269), word=']'),
])


2742) local patchFile="$1"

CommandNode(pos=(1277, 1297), parts=[
  WordNode(pos=(1277, 1282), word='local'),
  WordNode(pos=(1283, 1297), word='patchFile=$1', parts=[
    ParameterNode(pos=(1294, 1296), value='1'),
  ]),
])


2743) shift

CommandNode(pos=(1299, 1304), parts=[
  WordNode(pos=(1299, 1304), word='shift'),
])


2744) local patchSha256="$1"

CommandNode(pos=(1309, 1331), parts=[
  WordNode(pos=(1309, 1314), word='local'),
  WordNode(pos=(1315, 1331), word='patchSha256=$1', parts=[
    ParameterNode(pos=(1328, 1330), value='1'),
  ]),
])


2745) shift

CommandNode(pos=(1333, 1338), parts=[
  WordNode(pos=(1333, 1338), word='shift'),
])


2746) ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile"

CommandNode(pos=(1343, 1412), parts=[
  WordNode(pos=(1343, 1348), word='ddist'),
  WordNode(pos=(1349, 1361), word='$patchFile', parts=[
    ParameterNode(pos=(1350, 1360), value='patchFile'),
  ]),
  WordNode(pos=(1362, 1412), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
    ParameterNode(pos=(1386, 1400), value='HTTPD_VERSION'),
    ParameterNode(pos=(1401, 1411), value='patchFile'),
  ]),
])


2747) echo "$patchSha256 *$patchFile"

CommandNode(pos=(1417, 1448), parts=[
  WordNode(pos=(1417, 1421), word='echo'),
  WordNode(pos=(1422, 1448), word='$patchSha256 *$patchFile', parts=[
    ParameterNode(pos=(1423, 1435), value='patchSha256'),
    ParameterNode(pos=(1437, 1447), value='patchFile'),
  ]),
])


2748) sha256sum -c -

CommandNode(pos=(1451, 1465), parts=[
  WordNode(pos=(1451, 1460), word='sha256sum'),
  WordNode(pos=(1461, 1463), word='-c'),
  WordNode(pos=(1464, 1465), word='-'),
])


2749) patch -p0 < "$patchFile"

CommandNode(pos=(1470, 1494), parts=[
  WordNode(pos=(1470, 1475), word='patch'),
  WordNode(pos=(1476, 1479), word='-p0'),
  RedirectNode(output=
    WordNode(pos=(1482, 1494), word='$patchFile', parts=[
      ParameterNode(pos=(1483, 1493), value='patchFile'),
    ]), pos=(1480, 1494), type='<'),
])


2750) rm -f "$patchFile"

CommandNode(pos=(1499, 1517), parts=[
  WordNode(pos=(1499, 1501), word='rm'),
  WordNode(pos=(1502, 1504), word='-f'),
  WordNode(pos=(1505, 1517), word='$patchFile', parts=[
    ParameterNode(pos=(1506, 1516), value='patchFile'),
  ]),
])


2751) patches $HTTPD_PATCHES

CommandNode(pos=(1532, 1554), parts=[
  WordNode(pos=(1532, 1539), word='patches'),
  WordNode(pos=(1540, 1554), word='$HTTPD_PATCHES', parts=[
    ParameterNode(pos=(1540, 1554), value='HTTPD_PATCHES'),
  ]),
])


2752) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1558, 1615), parts=[
  AssignmentNode(pos=(1558, 1615), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1569, 1613), parts=[
        WordNode(pos=(1569, 1586), word='dpkg-architecture'),
        WordNode(pos=(1587, 1594), word='--query'),
        WordNode(pos=(1595, 1613), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1567, 1614)),
  ]),
])


2753) ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all

CommandNode(pos=(1618, 1737), parts=[
  WordNode(pos=(1618, 1629), word='./configure'),
  WordNode(pos=(1632, 1650), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1641, 1649), value='gnuArch'),
  ]),
  WordNode(pos=(1653, 1677), word='--prefix=$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(1663, 1676), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(1680, 1710), word='--enable-mods-shared=reallyall'),
  WordNode(pos=(1713, 1737), word='--enable-mpms-shared=all'),
])


2754) make -j "$(nproc)"

CommandNode(pos=(1742, 1760), parts=[
  WordNode(pos=(1742, 1746), word='make'),
  WordNode(pos=(1747, 1749), word='-j'),
  WordNode(pos=(1750, 1760), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1753, 1758), parts=[
        WordNode(pos=(1753, 1758), word='nproc'),
      ]), pos=(1751, 1759)),
  ]),
])


2755) make install

CommandNode(pos=(1763, 1775), parts=[
  WordNode(pos=(1763, 1767), word='make'),
  WordNode(pos=(1768, 1775), word='install'),
])


2756) cd ..

CommandNode(pos=(1779, 1784), parts=[
  WordNode(pos=(1779, 1781), word='cd'),
  WordNode(pos=(1782, 1784), word='..'),
])


2757) rm -r src man manual

CommandNode(pos=(1787, 1807), parts=[
  WordNode(pos=(1787, 1789), word='rm'),
  WordNode(pos=(1790, 1792), word='-r'),
  WordNode(pos=(1793, 1796), word='src'),
  WordNode(pos=(1797, 1800), word='man'),
  WordNode(pos=(1801, 1807), word='manual'),
])


2758) sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"

CommandNode(pos=(1811, 2053), parts=[
  WordNode(pos=(1811, 1814), word='sed'),
  WordNode(pos=(1815, 1818), word='-ri'),
  WordNode(pos=(1821, 1823), word='-e'),
  WordNode(pos=(1824, 1870), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(1873, 1875), word='-e'),
  WordNode(pos=(1876, 1921), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
  WordNode(pos=(1924, 1926), word='-e'),
  WordNode(pos=(1927, 1975), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(1978, 2009), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
    ParameterNode(pos=(1979, 1992), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(2012, 2053), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
    ParameterNode(pos=(2013, 2026), value='HTTPD_PREFIX'),
  ]),
])


2759) runDeps="$runDeps $(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2059, 2265), parts=[
  AssignmentNode(pos=(2059, 2265), word='runDeps=$runDeps $(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    ParameterNode(pos=(2068, 2076), value='runDeps'),
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2082, 2261), parts=[
        CommandNode(pos=(2082, 2148), parts=[
          WordNode(pos=(2082, 2089), word='scanelf'),
          WordNode(pos=(2090, 2098), word='--needed'),
          WordNode(pos=(2099, 2109), word='--nobanner'),
          WordNode(pos=(2110, 2118), word='--format'),
          WordNode(pos=(2119, 2125), word='%n#p'),
          WordNode(pos=(2126, 2137), word='--recursive'),
          WordNode(pos=(2138, 2148), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(2152, 2153)),
        CommandNode(pos=(2154, 2165), parts=[
          WordNode(pos=(2154, 2156), word='tr'),
          WordNode(pos=(2157, 2160), word=','),
          WordNode(pos=(2161, 2165), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(2169, 2170)),
        CommandNode(pos=(2171, 2178), parts=[
          WordNode(pos=(2171, 2175), word='sort'),
          WordNode(pos=(2176, 2178), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(2182, 2183)),
        CommandNode(pos=(2184, 2261), parts=[
          WordNode(pos=(2184, 2187), word='awk'),
          WordNode(pos=(2188, 2261), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2077, 2262)),
  ]),
])


2760) apk add --virtual .httpd-rundeps $runDeps

CommandNode(pos=(2268, 2309), parts=[
  WordNode(pos=(2268, 2271), word='apk'),
  WordNode(pos=(2272, 2275), word='add'),
  WordNode(pos=(2276, 2285), word='--virtual'),
  WordNode(pos=(2286, 2300), word='.httpd-rundeps'),
  WordNode(pos=(2301, 2309), word='$runDeps', parts=[
    ParameterNode(pos=(2301, 2309), value='runDeps'),
  ]),
])


2761) apk del .build-deps

CommandNode(pos=(2312, 2331), parts=[
  WordNode(pos=(2312, 2315), word='apk'),
  WordNode(pos=(2316, 2319), word='del'),
  WordNode(pos=(2320, 2331), word='.build-deps'),
])


2762) httpd -v

CommandNode(pos=(2335, 2343), parts=[
  WordNode(pos=(2335, 2340), word='httpd'),
  WordNode(pos=(2341, 2343), word='-v'),
])


2763) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


2764) apt-get install -y   ca-certificates   curl

CommandNode(pos=(18, 61), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 54), word='ca-certificates'),
  WordNode(pos=(57, 61), word='curl'),
])


2765) gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D

CommandNode(pos=(0, 92), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 15), word='--keyserver'),
  WordNode(pos=(16, 39), word='pool.sks-keyservers.net'),
  WordNode(pos=(40, 51), word='--recv-keys'),
  WordNode(pos=(52, 92), word='7937DFD2AB06298B2293C3187D33FF9D0246406D'),
])


2766) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


2767) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


2768) gpg --verify SHASUMS256.txt.asc

CommandNode(pos=(164, 195), parts=[
  WordNode(pos=(164, 167), word='gpg'),
  WordNode(pos=(168, 176), word='--verify'),
  WordNode(pos=(177, 195), word='SHASUMS256.txt.asc'),
])


2769) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


2770) sha256sum -c -

CommandNode(pos=(268, 282), parts=[
  WordNode(pos=(268, 277), word='sha256sum'),
  WordNode(pos=(278, 280), word='-c'),
  WordNode(pos=(281, 282), word='-'),
])


2771) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


2772) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


2773) npm install -g npm@1.4.28

CommandNode(pos=(439, 464), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 464), word='npm@1.4.28'),
])


2774) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(469, 502), parts=[
  WordNode(pos=(469, 472), word='npm'),
  WordNode(pos=(473, 480), word='install'),
  WordNode(pos=(481, 483), word='-g'),
  WordNode(pos=(484, 502), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(489, 501), value='NPM_VERSION'),
  ]),
])


2775) npm cache clear

CommandNode(pos=(507, 522), parts=[
  WordNode(pos=(507, 510), word='npm'),
  WordNode(pos=(511, 516), word='cache'),
  WordNode(pos=(517, 522), word='clear'),
])


2776) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2777) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


2778) apt-get install -y --no-install-recommends   gosu

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='gosu'),
])


2779) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(82, 109), parts=[
  WordNode(pos=(82, 84), word='rm'),
  WordNode(pos=(85, 88), word='-rf'),
  WordNode(pos=(89, 109), word='/var/lib/apt/lists/*'),
])


2780) gosu nobody true

CommandNode(pos=(112, 128), parts=[
  WordNode(pos=(112, 116), word='gosu'),
  WordNode(pos=(117, 123), word='nobody'),
  WordNode(pos=(124, 128), word='true'),
])


2781) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2782) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


2783) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


2784) apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget

CommandNode(pos=(69, 200), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 90), word='--yes'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 125), word='autoconf'),
  WordNode(pos=(128, 143), word='ca-certificates'),
  WordNode(pos=(146, 154), word='dpkg-dev'),
  WordNode(pos=(157, 160), word='gcc'),
  WordNode(pos=(163, 168), word='gnupg'),
  WordNode(pos=(171, 186), word='libncurses5-dev'),
  WordNode(pos=(189, 193), word='make'),
  WordNode(pos=(196, 200), word='wget'),
])


2785) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 207), word='rm'),
  WordNode(pos=(208, 211), word='-rf'),
  WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
])


2786) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


2787) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


2788) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(379, 416), parts=[
  AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


2789) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


2790) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


2791) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(608, 639), parts=[
  WordNode(pos=(608, 614), word='export'),
  WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(628, 637), parts=[
        WordNode(pos=(628, 634), word='mktemp'),
        WordNode(pos=(635, 637), word='-d'),
      ]), pos=(626, 638)),
  ]),
])


2792) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


2793) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


2794) gpgconf --kill all

CommandNode(pos=(822, 840), parts=[
  WordNode(pos=(822, 829), word='gpgconf'),
  WordNode(pos=(830, 836), word='--kill'),
  WordNode(pos=(837, 840), word='all'),
])


2795) rm -rf "$GNUPGHOME"

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(851, 861), value='GNUPGHOME'),
  ]),
])


2796) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


2797) sha256sum --check --strict -

CommandNode(pos=(919, 947), parts=[
  WordNode(pos=(919, 928), word='sha256sum'),
  WordNode(pos=(929, 936), word='--check'),
  WordNode(pos=(937, 945), word='--strict'),
  WordNode(pos=(946, 947), word='-'),
])


2798) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(950, 974), parts=[
  WordNode(pos=(950, 955), word='mkdir'),
  WordNode(pos=(956, 958), word='-p'),
  WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
  ]),
])


2799) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


2800) cd "$OPENSSL_PATH"

CommandNode(pos=(1073, 1091), parts=[
  WordNode(pos=(1073, 1075), word='cd'),
  WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
  ]),
])


2801) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


2802) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


2803) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1340, 1378), parts=[
  WordNode(pos=(1340, 1344), word='make'),
  WordNode(pos=(1345, 1347), word='-j'),
  WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1351, 1376), parts=[
        WordNode(pos=(1351, 1358), word='getconf'),
        WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
      ]), pos=(1349, 1377)),
  ]),
])


2804) make install_sw install_ssldirs

CommandNode(pos=(1381, 1412), parts=[
  WordNode(pos=(1381, 1385), word='make'),
  WordNode(pos=(1386, 1396), word='install_sw'),
  WordNode(pos=(1397, 1412), word='install_ssldirs'),
])


2805) cd ..

CommandNode(pos=(1415, 1420), parts=[
  WordNode(pos=(1415, 1417), word='cd'),
  WordNode(pos=(1418, 1420), word='..'),
])


2806) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1423, 1446), parts=[
  WordNode(pos=(1423, 1425), word='rm'),
  WordNode(pos=(1426, 1429), word='-rf'),
  WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
  ]),
])


2807) echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf

CommandNode(pos=(1449, 1512), parts=[
  WordNode(pos=(1449, 1453), word='echo'),
  WordNode(pos=(1454, 1470), word='/usr/local/lib'),
  RedirectNode(output=
    WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
])


2808) ldconfig

CommandNode(pos=(1515, 1523), parts=[
  WordNode(pos=(1515, 1523), word='ldconfig'),
])


2809) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2810) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1592, 1652), parts=[
  WordNode(pos=(1592, 1594), word='ln'),
  WordNode(pos=(1595, 1598), word='-sf'),
  WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
  WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
  WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2811) openssl version

CommandNode(pos=(1655, 1670), parts=[
  WordNode(pos=(1655, 1662), word='openssl'),
  WordNode(pos=(1663, 1670), word='version'),
])


2812) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


2813) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


2814) mkdir -p "$OTP_PATH"

CommandNode(pos=(1801, 1821), parts=[
  WordNode(pos=(1801, 1806), word='mkdir'),
  WordNode(pos=(1807, 1809), word='-p'),
  WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
  ]),
])


2815) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


2816) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


2817) sha256sum --check --strict -

CommandNode(pos=(1952, 1980), parts=[
  WordNode(pos=(1952, 1961), word='sha256sum'),
  WordNode(pos=(1962, 1969), word='--check'),
  WordNode(pos=(1970, 1978), word='--strict'),
  WordNode(pos=(1979, 1980), word='-'),
])


2818) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


2819) cd "$OTP_PATH"

CommandNode(pos=(2071, 2085), parts=[
  WordNode(pos=(2071, 2073), word='cd'),
  WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
  ]),
])


2820) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(2088, 2114), parts=[
  WordNode(pos=(2088, 2094), word='export'),
  WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
  ]),
])


2821) ./otp_build autoconf

CommandNode(pos=(2117, 2137), parts=[
  WordNode(pos=(2117, 2128), word='./otp_build'),
  WordNode(pos=(2129, 2137), word='autoconf'),
])


2822) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


2823) export CFLAGS

CommandNode(pos=(2182, 2195), parts=[
  WordNode(pos=(2182, 2188), word='export'),
  WordNode(pos=(2189, 2195), word='CFLAGS'),
])


2824) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


2825) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


2826) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


2827) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


2828) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


2829) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(3077, 3155), parts=[
  WordNode(pos=(3077, 3081), word='make'),
  WordNode(pos=(3082, 3084), word='-j'),
  WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(3088, 3113), parts=[
        WordNode(pos=(3088, 3095), word='getconf'),
        WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
      ]), pos=(3086, 3114)),
  ]),
  WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


2830) make install

CommandNode(pos=(3158, 3170), parts=[
  WordNode(pos=(3158, 3162), word='make'),
  WordNode(pos=(3163, 3170), word='install'),
])


2831) cd ..

CommandNode(pos=(3173, 3178), parts=[
  WordNode(pos=(3173, 3175), word='cd'),
  WordNode(pos=(3176, 3178), word='..'),
])


2832) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(3181, 3275), parts=[
  WordNode(pos=(3181, 3183), word='rm'),
  WordNode(pos=(3184, 3187), word='-rf'),
  WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
  ]),
  WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
])


2833) apt-mark auto '.*' > /dev/null

CommandNode(pos=(3281, 3311), parts=[
  WordNode(pos=(3281, 3289), word='apt-mark'),
  WordNode(pos=(3290, 3294), word='auto'),
  WordNode(pos=(3295, 3299), word='.*'),
  RedirectNode(output=
    WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
])


2834) [ -z "$savedAptMark" ]

CommandNode(pos=(3314, 3336), parts=[
  WordNode(pos=(3314, 3315), word='['),
  WordNode(pos=(3316, 3318), word='-z'),
  WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
    ParameterNode(pos=(3320, 3333), value='savedAptMark'),
  ]),
  WordNode(pos=(3335, 3336), word=']'),
])


2835) apt-mark manual $savedAptMark

CommandNode(pos=(3340, 3369), parts=[
  WordNode(pos=(3340, 3348), word='apt-mark'),
  WordNode(pos=(3349, 3355), word='manual'),
  WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
    ParameterNode(pos=(3356, 3369), value='savedAptMark'),
  ]),
])


2836) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(3372, 3426), parts=[
  WordNode(pos=(3372, 3376), word='find'),
  WordNode(pos=(3377, 3387), word='/usr/local'),
  WordNode(pos=(3388, 3393), word='-type'),
  WordNode(pos=(3394, 3395), word='f'),
  WordNode(pos=(3396, 3407), word='-executable'),
  WordNode(pos=(3408, 3413), word='-exec'),
  WordNode(pos=(3414, 3417), word='ldd'),
  WordNode(pos=(3418, 3422), word='{}'),
  WordNode(pos=(3423, 3426), word=';'),
])


2837) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(3431, 3459), parts=[
  WordNode(pos=(3431, 3434), word='awk'),
  WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
])


2838) sort -u

CommandNode(pos=(3464, 3471), parts=[
  WordNode(pos=(3464, 3468), word='sort'),
  WordNode(pos=(3469, 3471), word='-u'),
])


2839) xargs -r dpkg-query --search

CommandNode(pos=(3476, 3504), parts=[
  WordNode(pos=(3476, 3481), word='xargs'),
  WordNode(pos=(3482, 3484), word='-r'),
  WordNode(pos=(3485, 3495), word='dpkg-query'),
  WordNode(pos=(3496, 3504), word='--search'),
])


2840) cut -d: -f1

CommandNode(pos=(3509, 3520), parts=[
  WordNode(pos=(3509, 3512), word='cut'),
  WordNode(pos=(3513, 3516), word='-d:'),
  WordNode(pos=(3517, 3520), word='-f1'),
])


2841) sort -u

CommandNode(pos=(3525, 3532), parts=[
  WordNode(pos=(3525, 3529), word='sort'),
  WordNode(pos=(3530, 3532), word='-u'),
])


2842) xargs -r apt-mark manual

CommandNode(pos=(3537, 3561), parts=[
  WordNode(pos=(3537, 3542), word='xargs'),
  WordNode(pos=(3543, 3545), word='-r'),
  WordNode(pos=(3546, 3554), word='apt-mark'),
  WordNode(pos=(3555, 3561), word='manual'),
])


2843) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(3566, 3642), parts=[
  WordNode(pos=(3566, 3573), word='apt-get'),
  WordNode(pos=(3574, 3579), word='purge'),
  WordNode(pos=(3580, 3582), word='-y'),
  WordNode(pos=(3583, 3596), word='--auto-remove'),
  WordNode(pos=(3597, 3599), word='-o'),
  WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
])


2844) openssl version

CommandNode(pos=(3646, 3661), parts=[
  WordNode(pos=(3646, 3653), word='openssl'),
  WordNode(pos=(3654, 3661), word='version'),
])


2845) erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

CommandNode(pos=(3664, 3761), parts=[
  WordNode(pos=(3664, 3667), word='erl'),
  WordNode(pos=(3668, 3676), word='-noshell'),
  WordNode(pos=(3677, 3682), word='-eval'),
  WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
])


2846) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2847) groupadd --gid 999 --system rabbitmq

CommandNode(pos=(11, 47), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 25), word='--gid'),
  WordNode(pos=(26, 29), word='999'),
  WordNode(pos=(30, 38), word='--system'),
  WordNode(pos=(39, 47), word='rabbitmq'),
])


2848) useradd --uid 999 --system --home-dir "$RABBITMQ_DATA_DIR" --gid rabbitmq rabbitmq

CommandNode(pos=(50, 132), parts=[
  WordNode(pos=(50, 57), word='useradd'),
  WordNode(pos=(58, 63), word='--uid'),
  WordNode(pos=(64, 67), word='999'),
  WordNode(pos=(68, 76), word='--system'),
  WordNode(pos=(77, 87), word='--home-dir'),
  WordNode(pos=(88, 108), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(89, 107), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(109, 114), word='--gid'),
  WordNode(pos=(115, 123), word='rabbitmq'),
  WordNode(pos=(124, 132), word='rabbitmq'),
])


2849) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(135, 214), parts=[
  WordNode(pos=(135, 140), word='mkdir'),
  WordNode(pos=(141, 143), word='-p'),
  WordNode(pos=(144, 164), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(145, 163), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(165, 178), word='/etc/rabbitmq'),
  WordNode(pos=(179, 196), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(197, 214), word='/var/log/rabbitmq'),
])


2850) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(217, 315), parts=[
  WordNode(pos=(217, 222), word='chown'),
  WordNode(pos=(223, 226), word='-fR'),
  WordNode(pos=(227, 244), word='rabbitmq:rabbitmq'),
  WordNode(pos=(245, 265), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(246, 264), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(266, 279), word='/etc/rabbitmq'),
  WordNode(pos=(280, 297), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(298, 315), word='/var/log/rabbitmq'),
])


2851) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(318, 398), parts=[
  WordNode(pos=(318, 323), word='chmod'),
  WordNode(pos=(324, 327), word='777'),
  WordNode(pos=(328, 348), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(329, 347), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(349, 362), word='/etc/rabbitmq'),
  WordNode(pos=(363, 380), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(381, 398), word='/var/log/rabbitmq'),
])


2852) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(401, 464), parts=[
  WordNode(pos=(401, 403), word='ln'),
  WordNode(pos=(404, 407), word='-sf'),
  WordNode(pos=(408, 443), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(409, 427), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(444, 464), word='/root/.erlang.cookie'),
])


2853) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2854) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


2855) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


2856) apt-get install --yes --no-install-recommends   ca-certificates   gnupg   wget   xz-utils

CommandNode(pos=(69, 158), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 90), word='--yes'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 140), word='gnupg'),
  WordNode(pos=(143, 147), word='wget'),
  WordNode(pos=(150, 158), word='xz-utils'),
])


2857) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(163, 190), parts=[
  WordNode(pos=(163, 165), word='rm'),
  WordNode(pos=(166, 169), word='-rf'),
  WordNode(pos=(170, 190), word='/var/lib/apt/lists/*'),
])


2858) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


2859) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


2860) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2861) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2862) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(607, 638), parts=[
  WordNode(pos=(607, 613), word='export'),
  WordNode(pos=(614, 638), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(627, 636), parts=[
        WordNode(pos=(627, 633), word='mktemp'),
        WordNode(pos=(634, 636), word='-d'),
      ]), pos=(625, 637)),
  ]),
])


2863) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


2864) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


2865) gpgconf --kill all

CommandNode(pos=(794, 812), parts=[
  WordNode(pos=(794, 801), word='gpgconf'),
  WordNode(pos=(802, 808), word='--kill'),
  WordNode(pos=(809, 812), word='all'),
])


2866) rm -rf "$GNUPGHOME"

CommandNode(pos=(815, 834), parts=[
  WordNode(pos=(815, 817), word='rm'),
  WordNode(pos=(818, 821), word='-rf'),
  WordNode(pos=(822, 834), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(823, 833), value='GNUPGHOME'),
  ]),
])


2867) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(838, 863), parts=[
  WordNode(pos=(838, 843), word='mkdir'),
  WordNode(pos=(844, 846), word='-p'),
  WordNode(pos=(847, 863), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(848, 862), value='RABBITMQ_HOME'),
  ]),
])


2868) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


2869) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(963, 987), parts=[
  WordNode(pos=(963, 965), word='rm'),
  WordNode(pos=(966, 969), word='-rf'),
  WordNode(pos=(970, 987), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(971, 985), value='RABBITMQ_PATH'),
  ]),
])


2870) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(990, 1073), parts=[
  WordNode(pos=(990, 994), word='grep'),
  WordNode(pos=(995, 998), word='-qE'),
  WordNode(pos=(999, 1033), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(1034, 1073), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1035, 1049), value='RABBITMQ_HOME'),
  ]),
])


2871) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1076, 1155), parts=[
  WordNode(pos=(1076, 1079), word='sed'),
  WordNode(pos=(1080, 1082), word='-i'),
  WordNode(pos=(1083, 1115), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(1116, 1155), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1117, 1131), value='RABBITMQ_HOME'),
  ]),
])


2872) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1158, 1222), parts=[
  WordNode(pos=(1158, 1162), word='grep'),
  WordNode(pos=(1163, 1166), word='-qE'),
  WordNode(pos=(1167, 1182), word='^SYS_PREFIX=$'),
  WordNode(pos=(1183, 1222), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1184, 1198), value='RABBITMQ_HOME'),
  ]),
])


2873) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1225, 1268), parts=[
  WordNode(pos=(1225, 1230), word='chown'),
  WordNode(pos=(1231, 1233), word='-R'),
  WordNode(pos=(1234, 1251), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1252, 1268), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1253, 1267), value='RABBITMQ_HOME'),
  ]),
])


2874) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1272, 1302), parts=[
  WordNode(pos=(1272, 1280), word='apt-mark'),
  WordNode(pos=(1281, 1285), word='auto'),
  WordNode(pos=(1286, 1290), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1293, 1302), word='/dev/null'), pos=(1291, 1302), type='>'),
])


2875) apt-mark manual $savedAptMark

CommandNode(pos=(1305, 1334), parts=[
  WordNode(pos=(1305, 1313), word='apt-mark'),
  WordNode(pos=(1314, 1320), word='manual'),
  WordNode(pos=(1321, 1334), word='$savedAptMark', parts=[
    ParameterNode(pos=(1321, 1334), value='savedAptMark'),
  ]),
])


2876) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1337, 1413), parts=[
  WordNode(pos=(1337, 1344), word='apt-get'),
  WordNode(pos=(1345, 1350), word='purge'),
  WordNode(pos=(1351, 1353), word='-y'),
  WordNode(pos=(1354, 1367), word='--auto-remove'),
  WordNode(pos=(1368, 1370), word='-o'),
  WordNode(pos=(1371, 1413), word='APT::AutoRemove::RecommendsImportant=false'),
])


2877) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1417, 1461), parts=[
  WordNode(pos=(1417, 1418), word='['),
  WordNode(pos=(1419, 1420), word='!'),
  WordNode(pos=(1421, 1423), word='-e'),
  WordNode(pos=(1424, 1459), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1425, 1443), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1460, 1461), word=']'),
])


2878) gosu rabbitmq rabbitmqctl help

CommandNode(pos=(1464, 1494), parts=[
  WordNode(pos=(1464, 1468), word='gosu'),
  WordNode(pos=(1469, 1477), word='rabbitmq'),
  WordNode(pos=(1478, 1489), word='rabbitmqctl'),
  WordNode(pos=(1490, 1494), word='help'),
])


2879) gosu rabbitmq rabbitmqctl list_ciphers

CommandNode(pos=(1497, 1535), parts=[
  WordNode(pos=(1497, 1501), word='gosu'),
  WordNode(pos=(1502, 1510), word='rabbitmq'),
  WordNode(pos=(1511, 1522), word='rabbitmqctl'),
  WordNode(pos=(1523, 1535), word='list_ciphers'),
])


2880) gosu rabbitmq rabbitmq-plugins list

CommandNode(pos=(1538, 1573), parts=[
  WordNode(pos=(1538, 1542), word='gosu'),
  WordNode(pos=(1543, 1551), word='rabbitmq'),
  WordNode(pos=(1552, 1568), word='rabbitmq-plugins'),
  WordNode(pos=(1569, 1573), word='list'),
])


2881) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1576, 1614), parts=[
  WordNode(pos=(1576, 1578), word='rm'),
  WordNode(pos=(1579, 1614), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1580, 1598), value='RABBITMQ_DATA_DIR'),
  ]),
])


2882) ln -sf /opt/rabbitmq/plugins /plugins

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 6), word='-sf'),
  WordNode(pos=(7, 28), word='/opt/rabbitmq/plugins'),
  WordNode(pos=(29, 37), word='/plugins'),
])


2883) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2884) wget -O /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 44), parts=[
  WordNode(pos=(12, 16), word='wget'),
  WordNode(pos=(17, 19), word='-O'),
  WordNode(pos=(20, 32), word='/openjdk.tgz'),
  WordNode(pos=(33, 44), word='$JAVA_URL', parts=[
    ParameterNode(pos=(34, 43), value='JAVA_URL'),
  ]),
])


2885) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(47, 80), parts=[
  WordNode(pos=(47, 51), word='echo'),
  WordNode(pos=(52, 80), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(53, 65), value='JAVA_SHA256'),
  ]),
])


2886) sha256sum -c -

CommandNode(pos=(83, 97), parts=[
  WordNode(pos=(83, 92), word='sha256sum'),
  WordNode(pos=(93, 95), word='-c'),
  WordNode(pos=(96, 97), word='-'),
])


2887) mkdir -p "$JAVA_HOME"

CommandNode(pos=(100, 121), parts=[
  WordNode(pos=(100, 105), word='mkdir'),
  WordNode(pos=(106, 108), word='-p'),
  WordNode(pos=(109, 121), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(110, 120), value='JAVA_HOME'),
  ]),
])


2888) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(124, 203), parts=[
  WordNode(pos=(124, 127), word='tar'),
  WordNode(pos=(128, 137), word='--extract'),
  WordNode(pos=(138, 144), word='--file'),
  WordNode(pos=(145, 157), word='/openjdk.tgz'),
  WordNode(pos=(158, 169), word='--directory'),
  WordNode(pos=(170, 182), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(171, 181), value='JAVA_HOME'),
  ]),
  WordNode(pos=(183, 201), word='--strip-components'),
  WordNode(pos=(202, 203), word='1'),
])


2889) rm /openjdk.tgz

CommandNode(pos=(206, 221), parts=[
  WordNode(pos=(206, 208), word='rm'),
  WordNode(pos=(209, 221), word='/openjdk.tgz'),
])


2890) java -Xshare:dump

CommandNode(pos=(225, 242), parts=[
  WordNode(pos=(225, 229), word='java'),
  WordNode(pos=(230, 242), word='-Xshare:dump'),
])


2891) java --version

CommandNode(pos=(246, 260), parts=[
  WordNode(pos=(246, 250), word='java'),
  WordNode(pos=(251, 260), word='--version'),
])


2892) javac --version

CommandNode(pos=(263, 278), parts=[
  WordNode(pos=(263, 268), word='javac'),
  WordNode(pos=(269, 278), word='--version'),
])


2893) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


2894) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


2895) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


2896) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


2897) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2898) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2899) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


2900) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


2901) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


2902) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


2903) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


2904) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


2905) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


2906) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


2907) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


2908) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


2909) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


2910) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


2911) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


2912) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


2913) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


2914) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


2915) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


2916) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


2917) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


2918) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


2919) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


2920) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


2921) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


2922) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


2923) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


2924) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2925) cd /usr/local/etc

CommandNode(pos=(12, 29), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 29), word='/usr/local/etc'),
])


2926) [ -d php-fpm.d ]

CommandNode(pos=(37, 53), parts=[
  WordNode(pos=(37, 38), word='['),
  WordNode(pos=(39, 41), word='-d'),
  WordNode(pos=(42, 51), word='php-fpm.d'),
  WordNode(pos=(52, 53), word=']'),
])


2927) sed 's!=NONE/!=!g' php-fpm.conf.default

CommandNode(pos=(62, 101), parts=[
  WordNode(pos=(62, 65), word='sed'),
  WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
  WordNode(pos=(81, 101), word='php-fpm.conf.default'),
])


2928) tee php-fpm.conf > /dev/null

CommandNode(pos=(104, 132), parts=[
  WordNode(pos=(104, 107), word='tee'),
  WordNode(pos=(108, 120), word='php-fpm.conf'),
  RedirectNode(output=
    WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
])


2929) cp php-fpm.d/www.conf.default php-fpm.d/www.conf

CommandNode(pos=(136, 184), parts=[
  WordNode(pos=(136, 138), word='cp'),
  WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
  WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
])


2930) mkdir php-fpm.d

CommandNode(pos=(194, 209), parts=[
  WordNode(pos=(194, 199), word='mkdir'),
  WordNode(pos=(200, 209), word='php-fpm.d'),
])


2931) cp php-fpm.conf.default php-fpm.d/www.conf

CommandNode(pos=(213, 255), parts=[
  WordNode(pos=(213, 215), word='cp'),
  WordNode(pos=(216, 236), word='php-fpm.conf.default'),
  WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
])


2932) echo '[global]'

CommandNode(pos=(264, 279), parts=[
  WordNode(pos=(264, 268), word='echo'),
  WordNode(pos=(269, 279), word='[global]'),
])


2933) echo 'include=etc/php-fpm.d/*.conf'

CommandNode(pos=(284, 319), parts=[
  WordNode(pos=(284, 288), word='echo'),
  WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
])


2934) tee php-fpm.conf

CommandNode(pos=(327, 343), parts=[
  WordNode(pos=(327, 330), word='tee'),
  WordNode(pos=(331, 343), word='php-fpm.conf'),
])


2935) echo '[global]'

CommandNode(pos=(357, 372), parts=[
  WordNode(pos=(357, 361), word='echo'),
  WordNode(pos=(362, 372), word='[global]'),
])


2936) echo 'error_log = /proc/self/fd/2'

CommandNode(pos=(376, 410), parts=[
  WordNode(pos=(376, 380), word='echo'),
  WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
])


2937) echo

CommandNode(pos=(414, 418), parts=[
  WordNode(pos=(414, 418), word='echo'),
])


2938) echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'

CommandNode(pos=(420, 498), parts=[
  WordNode(pos=(420, 424), word='echo'),
  WordNode(pos=(425, 498), word='; https://github.com/docker-library/php/pull/725#issuecomment-443540114'),
])


2939) echo 'log_limit = 8192'

CommandNode(pos=(500, 523), parts=[
  WordNode(pos=(500, 504), word='echo'),
  WordNode(pos=(505, 523), word='log_limit = 8192'),
])


2940) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


2941) echo '[www]'

CommandNode(pos=(535, 547), parts=[
  WordNode(pos=(535, 539), word='echo'),
  WordNode(pos=(540, 547), word='[www]'),
])


2942) echo '; if we send this to /proc/self/fd/1, it never appears'

CommandNode(pos=(551, 612), parts=[
  WordNode(pos=(551, 555), word='echo'),
  WordNode(pos=(556, 612), word='; if we send this to /proc/self/fd/1, it never appears'),
])


2943) echo 'access.log = /proc/self/fd/2'

CommandNode(pos=(616, 651), parts=[
  WordNode(pos=(616, 620), word='echo'),
  WordNode(pos=(621, 651), word='access.log = /proc/self/fd/2'),
])


2944) echo

CommandNode(pos=(655, 659), parts=[
  WordNode(pos=(655, 659), word='echo'),
])


2945) echo 'clear_env = no'

CommandNode(pos=(663, 684), parts=[
  WordNode(pos=(663, 667), word='echo'),
  WordNode(pos=(668, 684), word='clear_env = no'),
])


2946) echo

CommandNode(pos=(688, 692), parts=[
  WordNode(pos=(688, 692), word='echo'),
])


2947) echo '; Ensure worker stdout and stderr are sent to the main error log.'

CommandNode(pos=(696, 768), parts=[
  WordNode(pos=(696, 700), word='echo'),
  WordNode(pos=(701, 768), word='; Ensure worker stdout and stderr are sent to the main error log.'),
])


2948) echo 'catch_workers_output = yes'

CommandNode(pos=(772, 805), parts=[
  WordNode(pos=(772, 776), word='echo'),
  WordNode(pos=(777, 805), word='catch_workers_output = yes'),
])


2949) echo 'decorate_workers_output = no'

CommandNode(pos=(809, 844), parts=[
  WordNode(pos=(809, 813), word='echo'),
  WordNode(pos=(814, 844), word='decorate_workers_output = no'),
])


2950) tee php-fpm.d/docker.conf

CommandNode(pos=(851, 876), parts=[
  WordNode(pos=(851, 854), word='tee'),
  WordNode(pos=(855, 876), word='php-fpm.d/docker.conf'),
])


2951) echo '[global]'

CommandNode(pos=(885, 900), parts=[
  WordNode(pos=(885, 889), word='echo'),
  WordNode(pos=(890, 900), word='[global]'),
])


2952) echo 'daemonize = no'

CommandNode(pos=(904, 925), parts=[
  WordNode(pos=(904, 908), word='echo'),
  WordNode(pos=(909, 925), word='daemonize = no'),
])


2953) echo

CommandNode(pos=(929, 933), parts=[
  WordNode(pos=(929, 933), word='echo'),
])


2954) echo '[www]'

CommandNode(pos=(937, 949), parts=[
  WordNode(pos=(937, 941), word='echo'),
  WordNode(pos=(942, 949), word='[www]'),
])


2955) echo 'listen = 9000'

CommandNode(pos=(953, 973), parts=[
  WordNode(pos=(953, 957), word='echo'),
  WordNode(pos=(958, 973), word='listen = 9000'),
])


2956) tee php-fpm.d/zz-docker.conf

CommandNode(pos=(980, 1008), parts=[
  WordNode(pos=(980, 983), word='tee'),
  WordNode(pos=(984, 1008), word='php-fpm.d/zz-docker.conf'),
])


2957) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2958) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


2959) apt-get install -y --no-install-recommends   ca-certificates   wget   apt-transport-https   rpm   yum-utils

CommandNode(pos=(28, 135), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 95), word='wget'),
  WordNode(pos=(98, 117), word='apt-transport-https'),
  WordNode(pos=(120, 123), word='rpm'),
  WordNode(pos=(126, 135), word='yum-utils'),
])


2960) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(140, 167), parts=[
  WordNode(pos=(140, 142), word='rm'),
  WordNode(pos=(143, 146), word='-rf'),
  WordNode(pos=(147, 167), word='/var/lib/apt/lists/*'),
])


2961) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


2962) apkStaticDist='v3.9'

CommandNode(pos=(11, 31), parts=[
  AssignmentNode(pos=(11, 31), word='apkStaticDist=v3.9'),
])


2963) apkStaticVersion='2.10.3-r1'

CommandNode(pos=(34, 62), parts=[
  AssignmentNode(pos=(34, 62), word='apkStaticVersion=2.10.3-r1'),
])


2964) apkStaticArch='x86_64'

CommandNode(pos=(65, 87), parts=[
  AssignmentNode(pos=(65, 87), word='apkStaticArch=x86_64'),
])


2965) apkStaticUrl="http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk"

CommandNode(pos=(90, 215), parts=[
  AssignmentNode(pos=(90, 215), word='apkStaticUrl=http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk', parts=[
    ParameterNode(pos=(141, 155), value='apkStaticDist'),
    ParameterNode(pos=(161, 175), value='apkStaticArch'),
    ParameterNode(pos=(193, 210), value='apkStaticVersion'),
  ]),
])


2966) wget -O /tmp/apk-tools-static.apk "$apkStaticUrl"

CommandNode(pos=(218, 267), parts=[
  WordNode(pos=(218, 222), word='wget'),
  WordNode(pos=(223, 225), word='-O'),
  WordNode(pos=(226, 251), word='/tmp/apk-tools-static.apk'),
  WordNode(pos=(252, 267), word='$apkStaticUrl', parts=[
    ParameterNode(pos=(253, 266), value='apkStaticUrl'),
  ]),
])


2967) tar -xzvf /tmp/apk-tools-static.apk -C /usr/local/ --wildcards '*bin/apk.static'

CommandNode(pos=(270, 350), parts=[
  WordNode(pos=(270, 273), word='tar'),
  WordNode(pos=(274, 279), word='-xzvf'),
  WordNode(pos=(280, 305), word='/tmp/apk-tools-static.apk'),
  WordNode(pos=(306, 308), word='-C'),
  WordNode(pos=(309, 320), word='/usr/local/'),
  WordNode(pos=(321, 332), word='--wildcards'),
  WordNode(pos=(333, 350), word='*bin/apk.static'),
])


2968) mv /usr/local/*bin/apk.static /usr/local/bin/apk

CommandNode(pos=(353, 401), parts=[
  WordNode(pos=(353, 355), word='mv'),
  WordNode(pos=(356, 382), word='/usr/local/*bin/apk.static'),
  WordNode(pos=(383, 401), word='/usr/local/bin/apk'),
])


2969) rm /tmp/apk-tools-static.apk

CommandNode(pos=(404, 432), parts=[
  WordNode(pos=(404, 406), word='rm'),
  WordNode(pos=(407, 432), word='/tmp/apk-tools-static.apk'),
])


2970) apk --version

CommandNode(pos=(435, 448), parts=[
  WordNode(pos=(435, 438), word='apk'),
  WordNode(pos=(439, 448), word='--version'),
])


2971) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


2972) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


2973) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2974) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


2975) which gpg

CommandNode(pos=(32, 41), parts=[
  WordNode(pos=(32, 37), word='which'),
  WordNode(pos=(38, 41), word='gpg'),
])


2976) apt-get install -y --no-install-recommends gnupg

CommandNode(pos=(50, 98), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 65), word='install'),
  WordNode(pos=(66, 68), word='-y'),
  WordNode(pos=(69, 92), word='--no-install-recommends'),
  WordNode(pos=(93, 98), word='gnupg'),
])


2977) gpg --version

CommandNode(pos=(111, 124), parts=[
  WordNode(pos=(111, 114), word='gpg'),
  WordNode(pos=(115, 124), word='--version'),
])


2978) grep -q '^gpg (GnuPG) 1\.'

CommandNode(pos=(127, 153), parts=[
  WordNode(pos=(127, 131), word='grep'),
  WordNode(pos=(132, 134), word='-q'),
  WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
])


2979) apt-get install -y --no-install-recommends dirmngr

CommandNode(pos=(163, 213), parts=[
  WordNode(pos=(163, 170), word='apt-get'),
  WordNode(pos=(171, 178), word='install'),
  WordNode(pos=(179, 181), word='-y'),
  WordNode(pos=(182, 205), word='--no-install-recommends'),
  WordNode(pos=(206, 213), word='dirmngr'),
])


2980) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(221, 248), parts=[
  WordNode(pos=(221, 223), word='rm'),
  WordNode(pos=(224, 227), word='-rf'),
  WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
])


2981) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


2982) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


2983) apt-get update

CommandNode(pos=(53, 67), parts=[
  WordNode(pos=(53, 60), word='apt-get'),
  WordNode(pos=(61, 67), word='update'),
])


2984) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


2985) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


2986) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


2987) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


2988) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


2989) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


2990) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(488, 591), parts=[
  WordNode(pos=(488, 491), word='gpg'),
  WordNode(pos=(492, 499), word='--batch'),
  WordNode(pos=(500, 511), word='--keyserver'),
  WordNode(pos=(512, 538), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(539, 550), word='--recv-keys'),
  WordNode(pos=(551, 591), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


2991) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(594, 658), parts=[
  WordNode(pos=(594, 597), word='gpg'),
  WordNode(pos=(598, 605), word='--batch'),
  WordNode(pos=(606, 614), word='--verify'),
  WordNode(pos=(615, 638), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(639, 658), word='/usr/local/bin/gosu'),
])


2992) command -v gpgconf > /dev/null

CommandNode(pos=(661, 691), parts=[
  WordNode(pos=(661, 668), word='command'),
  WordNode(pos=(669, 671), word='-v'),
  WordNode(pos=(672, 679), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(682, 691), word='/dev/null'), pos=(680, 691), type='>'),
])


2993) gpgconf --kill all

CommandNode(pos=(695, 713), parts=[
  WordNode(pos=(695, 702), word='gpgconf'),
  WordNode(pos=(703, 709), word='--kill'),
  WordNode(pos=(710, 713), word='all'),
])


2994) :

CommandNode(pos=(717, 718), parts=[
  WordNode(pos=(717, 718), word=':'),
])


2995) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


2996) chmod +x /usr/local/bin/gosu

CommandNode(pos=(767, 795), parts=[
  WordNode(pos=(767, 772), word='chmod'),
  WordNode(pos=(773, 775), word='+x'),
  WordNode(pos=(776, 795), word='/usr/local/bin/gosu'),
])


2997) gosu nobody true

CommandNode(pos=(798, 814), parts=[
  WordNode(pos=(798, 802), word='gosu'),
  WordNode(pos=(803, 809), word='nobody'),
  WordNode(pos=(810, 814), word='true'),
])


2998) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


2999) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


3000) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3001) apt-get install -y --no-install-recommends   apt-transport-https ca-certificates   pwgen   tzdata

CommandNode(pos=(18, 115), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 82), word='apt-transport-https'),
  WordNode(pos=(83, 98), word='ca-certificates'),
  WordNode(pos=(101, 106), word='pwgen'),
  WordNode(pos=(109, 115), word='tzdata'),
])


3002) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(120, 147), parts=[
  WordNode(pos=(120, 122), word='rm'),
  WordNode(pos=(123, 126), word='-rf'),
  WordNode(pos=(127, 147), word='/var/lib/apt/lists/*'),
])


3003) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3004) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


3005) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


3006) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


3007) command -v gpgconf > /dev/null

CommandNode(pos=(220, 250), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
])


3008) gpgconf --kill all

CommandNode(pos=(254, 272), parts=[
  WordNode(pos=(254, 261), word='gpgconf'),
  WordNode(pos=(262, 268), word='--kill'),
  WordNode(pos=(269, 272), word='all'),
])


3009) :

CommandNode(pos=(276, 277), parts=[
  WordNode(pos=(276, 277), word=':'),
])


3010) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


3011) apt-key list

CommandNode(pos=(301, 313), parts=[
  WordNode(pos=(301, 308), word='apt-key'),
  WordNode(pos=(309, 313), word='list'),
])


3012) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


3013) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 130), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 91), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(94, 130), word='/etc/apt/sources.list.d/mariadb.list'), pos=(92, 130), type='>'),
])


3014) echo 'Package: *'

CommandNode(pos=(137, 154), parts=[
  WordNode(pos=(137, 141), word='echo'),
  WordNode(pos=(142, 154), word='Package: *'),
])


3015) echo 'Pin: release o=MariaDB'

CommandNode(pos=(158, 187), parts=[
  WordNode(pos=(158, 162), word='echo'),
  WordNode(pos=(163, 187), word='Pin: release o=MariaDB'),
])


3016) echo 'Pin-Priority: 999'

CommandNode(pos=(191, 215), parts=[
  WordNode(pos=(191, 195), word='echo'),
  WordNode(pos=(196, 215), word='Pin-Priority: 999'),
])


3017) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3018) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


3019) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


3020) debconf-set-selections

CommandNode(pos=(193, 215), parts=[
  WordNode(pos=(193, 215), word='debconf-set-selections'),
])


3021) apt-get update

CommandNode(pos=(218, 232), parts=[
  WordNode(pos=(218, 225), word='apt-get'),
  WordNode(pos=(226, 232), word='update'),
])


3022) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   mariadb-backup   socat

CommandNode(pos=(235, 314), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 306), word='mariadb-backup'),
  WordNode(pos=(309, 314), word='socat'),
])


3023) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(319, 346), parts=[
  WordNode(pos=(319, 321), word='rm'),
  WordNode(pos=(322, 325), word='-rf'),
  WordNode(pos=(326, 346), word='/var/lib/apt/lists/*'),
])


3024) sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*

CommandNode(pos=(349, 410), parts=[
  WordNode(pos=(349, 352), word='sed'),
  WordNode(pos=(353, 356), word='-ri'),
  WordNode(pos=(357, 372), word='s/^user\\s/#&/'),
  WordNode(pos=(373, 390), word='/etc/mysql/my.cnf'),
  WordNode(pos=(391, 410), word='/etc/mysql/conf.d/*'),
])


3025) rm -rf /var/lib/mysql

CommandNode(pos=(413, 434), parts=[
  WordNode(pos=(413, 415), word='rm'),
  WordNode(pos=(416, 419), word='-rf'),
  WordNode(pos=(420, 434), word='/var/lib/mysql'),
])


3026) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(437, 476), parts=[
  WordNode(pos=(437, 442), word='mkdir'),
  WordNode(pos=(443, 445), word='-p'),
  WordNode(pos=(446, 460), word='/var/lib/mysql'),
  WordNode(pos=(461, 476), word='/var/run/mysqld'),
])


3027) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(479, 530), parts=[
  WordNode(pos=(479, 484), word='chown'),
  WordNode(pos=(485, 487), word='-R'),
  WordNode(pos=(488, 499), word='mysql:mysql'),
  WordNode(pos=(500, 514), word='/var/lib/mysql'),
  WordNode(pos=(515, 530), word='/var/run/mysqld'),
])


3028) chmod 777 /var/run/mysqld

CommandNode(pos=(533, 558), parts=[
  WordNode(pos=(533, 538), word='chmod'),
  WordNode(pos=(539, 542), word='777'),
  WordNode(pos=(543, 558), word='/var/run/mysqld'),
])


3029) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(561, 599), parts=[
  WordNode(pos=(561, 565), word='find'),
  WordNode(pos=(566, 577), word='/etc/mysql/'),
  WordNode(pos=(578, 583), word='-name'),
  WordNode(pos=(584, 591), word='*.cnf'),
  WordNode(pos=(592, 599), word='-print0'),
])


3030) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(604, 644), parts=[
  WordNode(pos=(604, 609), word='xargs'),
  WordNode(pos=(610, 612), word='-0'),
  WordNode(pos=(613, 617), word='grep'),
  WordNode(pos=(618, 622), word='-lZE'),
  WordNode(pos=(623, 644), word='^(bind-address|log)'),
])


3031) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(649, 697), parts=[
  WordNode(pos=(649, 654), word='xargs'),
  WordNode(pos=(655, 658), word='-rt'),
  WordNode(pos=(659, 661), word='-0'),
  WordNode(pos=(662, 665), word='sed'),
  WordNode(pos=(666, 669), word='-Ei'),
  WordNode(pos=(670, 697), word='s/^(bind-address|log)/#&/'),
])


3032) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(700, 782), parts=[
  WordNode(pos=(700, 704), word='echo'),
  WordNode(pos=(705, 751), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(754, 782), word='/etc/mysql/conf.d/docker.cnf'), pos=(752, 782), type='>'),
])


3033) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


3034) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3035) apt-get install -y --no-install-recommends   tk-dev

CommandNode(pos=(18, 69), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 69), word='tk-dev'),
])


3036) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(74, 101), parts=[
  WordNode(pos=(74, 76), word='rm'),
  WordNode(pos=(77, 80), word='-rf'),
  WordNode(pos=(81, 101), word='/var/lib/apt/lists/*'),
])


3037) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3038) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


3039) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


3040) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


3041) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


3042) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


3043) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


3044) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


3045) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


3046) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


3047) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


3048) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


3049) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


3050) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


3051) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


3052) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


3053) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


3054) make install

CommandNode(pos=(920, 932), parts=[
  WordNode(pos=(920, 924), word='make'),
  WordNode(pos=(925, 932), word='install'),
])


3055) ldconfig

CommandNode(pos=(937, 945), parts=[
  WordNode(pos=(937, 945), word='ldconfig'),
])


3056) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(951, 1118), parts=[
  WordNode(pos=(951, 955), word='find'),
  WordNode(pos=(956, 966), word='/usr/local'),
  WordNode(pos=(967, 973), word='-depth'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(982, 984), word='('),
  WordNode(pos=(985, 990), word='-type'),
  WordNode(pos=(991, 992), word='d'),
  WordNode(pos=(993, 995), word='-a'),
  WordNode(pos=(996, 998), word='('),
  WordNode(pos=(999, 1004), word='-name'),
  WordNode(pos=(1005, 1009), word='test'),
  WordNode(pos=(1010, 1012), word='-o'),
  WordNode(pos=(1013, 1018), word='-name'),
  WordNode(pos=(1019, 1024), word='tests'),
  WordNode(pos=(1025, 1027), word=')'),
  WordNode(pos=(1028, 1030), word=')'),
  WordNode(pos=(1034, 1036), word='-o'),
  WordNode(pos=(1040, 1042), word='('),
  WordNode(pos=(1043, 1048), word='-type'),
  WordNode(pos=(1049, 1050), word='f'),
  WordNode(pos=(1051, 1053), word='-a'),
  WordNode(pos=(1054, 1056), word='('),
  WordNode(pos=(1057, 1062), word='-name'),
  WordNode(pos=(1063, 1070), word='*.pyc'),
  WordNode(pos=(1071, 1073), word='-o'),
  WordNode(pos=(1074, 1079), word='-name'),
  WordNode(pos=(1080, 1087), word='*.pyo'),
  WordNode(pos=(1088, 1090), word=')'),
  WordNode(pos=(1091, 1093), word=')'),
  WordNode(pos=(1096, 1098), word=')'),
  WordNode(pos=(1099, 1104), word='-exec'),
  WordNode(pos=(1105, 1107), word='rm'),
  WordNode(pos=(1108, 1111), word='-rf'),
  WordNode(pos=(1112, 1116), word='{}'),
  WordNode(pos=(1117, 1118), word='+'),
])


3057) rm -rf /usr/src/python

CommandNode(pos=(1123, 1145), parts=[
  WordNode(pos=(1123, 1125), word='rm'),
  WordNode(pos=(1126, 1129), word='-rf'),
  WordNode(pos=(1130, 1145), word='/usr/src/python'),
])


3058) python3 --version

CommandNode(pos=(1151, 1168), parts=[
  WordNode(pos=(1151, 1158), word='python3'),
  WordNode(pos=(1159, 1168), word='--version'),
])


3059) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


3060) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


3061) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


3062) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


3063) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


3064) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3065) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


3066) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


3067) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


3068) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


3069) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


3070) apk add --no-cache   bzip2   coreutils   curl   gcc   gnupg   linux-headers   make   musl-dev   tzdata

CommandNode(pos=(0, 102), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 26), word='bzip2'),
  WordNode(pos=(29, 38), word='coreutils'),
  WordNode(pos=(41, 45), word='curl'),
  WordNode(pos=(48, 51), word='gcc'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 75), word='linux-headers'),
  WordNode(pos=(78, 82), word='make'),
  WordNode(pos=(85, 93), word='musl-dev'),
  WordNode(pos=(96, 102), word='tzdata'),
])


3071) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C9E9416F76E610DBD09D040F47B70C55ACC9965B

CommandNode(pos=(0, 103), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 11), word='--batch'),
  WordNode(pos=(12, 23), word='--keyserver'),
  WordNode(pos=(24, 50), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(51, 62), word='--recv-keys'),
  WordNode(pos=(63, 103), word='C9E9416F76E610DBD09D040F47B70C55ACC9965B'),
])


3072) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3073) tarball="busybox-${BUSYBOX_VERSION}.tar.bz2"

CommandNode(pos=(10, 54), parts=[
  AssignmentNode(pos=(10, 54), word='tarball=busybox-${BUSYBOX_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(27, 45), value='BUSYBOX_VERSION'),
  ]),
])


3074) curl -fL -o busybox.tar.bz2 "https://busybox.net/downloads/$tarball"

CommandNode(pos=(57, 125), parts=[
  WordNode(pos=(57, 61), word='curl'),
  WordNode(pos=(62, 65), word='-fL'),
  WordNode(pos=(66, 68), word='-o'),
  WordNode(pos=(69, 84), word='busybox.tar.bz2'),
  WordNode(pos=(85, 125), word='https://busybox.net/downloads/$tarball', parts=[
    ParameterNode(pos=(116, 124), value='tarball'),
  ]),
])


3075) curl -fL -o busybox.tar.bz2.sig "https://busybox.net/downloads/$tarball.sig"

CommandNode(pos=(128, 204), parts=[
  WordNode(pos=(128, 132), word='curl'),
  WordNode(pos=(133, 136), word='-fL'),
  WordNode(pos=(137, 139), word='-o'),
  WordNode(pos=(140, 159), word='busybox.tar.bz2.sig'),
  WordNode(pos=(160, 204), word='https://busybox.net/downloads/$tarball.sig', parts=[
    ParameterNode(pos=(191, 199), value='tarball'),
  ]),
])


3076) gpg --batch --verify busybox.tar.bz2.sig busybox.tar.bz2

CommandNode(pos=(207, 263), parts=[
  WordNode(pos=(207, 210), word='gpg'),
  WordNode(pos=(211, 218), word='--batch'),
  WordNode(pos=(219, 227), word='--verify'),
  WordNode(pos=(228, 247), word='busybox.tar.bz2.sig'),
  WordNode(pos=(248, 263), word='busybox.tar.bz2'),
])


3077) mkdir -p /usr/src/busybox

CommandNode(pos=(266, 291), parts=[
  WordNode(pos=(266, 271), word='mkdir'),
  WordNode(pos=(272, 274), word='-p'),
  WordNode(pos=(275, 291), word='/usr/src/busybox'),
])


3078) tar -xf busybox.tar.bz2 -C /usr/src/busybox --strip-components 1

CommandNode(pos=(294, 358), parts=[
  WordNode(pos=(294, 297), word='tar'),
  WordNode(pos=(298, 301), word='-xf'),
  WordNode(pos=(302, 317), word='busybox.tar.bz2'),
  WordNode(pos=(318, 320), word='-C'),
  WordNode(pos=(321, 337), word='/usr/src/busybox'),
  WordNode(pos=(338, 356), word='--strip-components'),
  WordNode(pos=(357, 358), word='1'),
])


3079) rm busybox.tar.bz2*

CommandNode(pos=(361, 380), parts=[
  WordNode(pos=(361, 363), word='rm'),
  WordNode(pos=(364, 380), word='busybox.tar.bz2*'),
])


3080) sed -i 's/^struct kconf_id \*$/static &/g' scripts/kconfig/zconf.hash.c_shipped

CommandNode(pos=(0, 79), parts=[
  WordNode(pos=(0, 3), word='sed'),
  WordNode(pos=(4, 6), word='-i'),
  WordNode(pos=(7, 42), word='s/^struct kconf_id \\*$/static &/g'),
  WordNode(pos=(43, 79), word='scripts/kconfig/zconf.hash.c_shipped'),
])


3081) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3082) setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '

CommandNode(pos=(11, 154), parts=[
  AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
])


3083) unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '

CommandNode(pos=(158, 300), parts=[
  AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
])


3084) make defconfig

CommandNode(pos=(304, 318), parts=[
  WordNode(pos=(304, 308), word='make'),
  WordNode(pos=(309, 318), word='defconfig'),
])


3085) sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config

CommandNode(pos=(352, 411), parts=[
  WordNode(pos=(352, 355), word='sed'),
  WordNode(pos=(356, 358), word='-i'),
  WordNode(pos=(362, 364), word='-e'),
  WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
    ParameterNode(pos=(369, 374), value='conf'),
    ParameterNode(pos=(382, 387), value='conf'),
  ]),
  WordNode(pos=(404, 411), word='.config'),
])


3086) conf="${confV%=*}"

CommandNode(pos=(451, 469), parts=[
  AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
    ParameterNode(pos=(457, 468), value='confV%=*'),
  ]),
])


3087) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(473, 560), parts=[
  WordNode(pos=(473, 476), word='sed'),
  WordNode(pos=(477, 479), word='-i'),
  WordNode(pos=(483, 485), word='-e'),
  WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(490, 495), value='conf'),
    ParameterNode(pos=(501, 507), value='confV'),
  ]),
  WordNode(pos=(513, 515), word='-e'),
  WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(522, 527), value='conf'),
    ParameterNode(pos=(541, 547), value='confV'),
  ]),
  WordNode(pos=(553, 560), word='.config'),
])


3088) grep -q "^$confV\$" .config

CommandNode(pos=(569, 596), parts=[
  WordNode(pos=(569, 573), word='grep'),
  WordNode(pos=(574, 576), word='-q'),
  WordNode(pos=(577, 588), word='^$confV$', parts=[
    ParameterNode(pos=(579, 585), value='confV'),
  ]),
  WordNode(pos=(589, 596), word='.config'),
])


3089) echo "$confV" >> .config

CommandNode(pos=(606, 630), parts=[
  WordNode(pos=(606, 610), word='echo'),
  WordNode(pos=(611, 619), word='$confV', parts=[
    ParameterNode(pos=(612, 618), value='confV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
])


3090) make oldconfig

CommandNode(pos=(647, 661), parts=[
  WordNode(pos=(647, 651), word='make'),
  WordNode(pos=(652, 661), word='oldconfig'),
])


3091) grep -q "^$conf=" .config

CommandNode(pos=(697, 722), parts=[
  WordNode(pos=(697, 701), word='grep'),
  WordNode(pos=(702, 704), word='-q'),
  WordNode(pos=(705, 714), word='^$conf=', parts=[
    ParameterNode(pos=(707, 712), value='conf'),
  ]),
  WordNode(pos=(715, 722), word='.config'),
])


3092) grep -q "^$confV\$" .config

CommandNode(pos=(761, 788), parts=[
  WordNode(pos=(761, 765), word='grep'),
  WordNode(pos=(766, 768), word='-q'),
  WordNode(pos=(769, 780), word='^$confV$', parts=[
    ParameterNode(pos=(771, 777), value='confV'),
  ]),
  WordNode(pos=(781, 788), word='.config'),
])


3093) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3094) make -j "$(nproc)"   busybox

CommandNode(pos=(12, 40), parts=[
  WordNode(pos=(12, 16), word='make'),
  WordNode(pos=(17, 19), word='-j'),
  WordNode(pos=(20, 30), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(23, 28), parts=[
        WordNode(pos=(23, 28), word='nproc'),
      ]), pos=(21, 29)),
  ]),
  WordNode(pos=(33, 40), word='busybox'),
])


3095) ./busybox --help

CommandNode(pos=(45, 61), parts=[
  WordNode(pos=(45, 54), word='./busybox'),
  WordNode(pos=(55, 61), word='--help'),
])


3096) mkdir -p rootfs/bin

CommandNode(pos=(66, 85), parts=[
  WordNode(pos=(66, 71), word='mkdir'),
  WordNode(pos=(72, 74), word='-p'),
  WordNode(pos=(75, 85), word='rootfs/bin'),
])


3097) ln -vL busybox rootfs/bin/

CommandNode(pos=(90, 116), parts=[
  WordNode(pos=(90, 92), word='ln'),
  WordNode(pos=(93, 96), word='-vL'),
  WordNode(pos=(97, 104), word='busybox'),
  WordNode(pos=(105, 116), word='rootfs/bin/'),
])


3098) chroot rootfs /bin/busybox --install /bin

CommandNode(pos=(121, 162), parts=[
  WordNode(pos=(121, 127), word='chroot'),
  WordNode(pos=(128, 134), word='rootfs'),
  WordNode(pos=(135, 147), word='/bin/busybox'),
  WordNode(pos=(148, 157), word='--install'),
  WordNode(pos=(158, 162), word='/bin'),
])


3099) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


3100) aportsVersion="v$(cat /etc/alpine-release)"

CommandNode(pos=(11, 54), parts=[
  AssignmentNode(pos=(11, 54), word='aportsVersion=v$(cat /etc/alpine-release)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 52), parts=[
        WordNode(pos=(29, 32), word='cat'),
        WordNode(pos=(33, 52), word='/etc/alpine-release'),
      ]), pos=(27, 53)),
  ]),
])


3101) curl -fsSL   "https://git.alpinelinux.org/cgit/aports/plain/main/musl/getconf.c?h=${aportsVersion}"   -o /usr/src/getconf.c

CommandNode(pos=(59, 182), parts=[
  WordNode(pos=(59, 63), word='curl'),
  WordNode(pos=(64, 69), word='-fsSL'),
  WordNode(pos=(72, 158), word='https://git.alpinelinux.org/cgit/aports/plain/main/musl/getconf.c?h=${aportsVersion}', parts=[
    ParameterNode(pos=(141, 157), value='aportsVersion'),
  ]),
  WordNode(pos=(161, 163), word='-o'),
  WordNode(pos=(164, 182), word='/usr/src/getconf.c'),
])


3102) gcc -o rootfs/bin/getconf -static -Os /usr/src/getconf.c

CommandNode(pos=(187, 243), parts=[
  WordNode(pos=(187, 190), word='gcc'),
  WordNode(pos=(191, 193), word='-o'),
  WordNode(pos=(194, 212), word='rootfs/bin/getconf'),
  WordNode(pos=(213, 220), word='-static'),
  WordNode(pos=(221, 224), word='-Os'),
  WordNode(pos=(225, 243), word='/usr/src/getconf.c'),
])


3103) chroot rootfs /bin/getconf _NPROCESSORS_ONLN

CommandNode(pos=(248, 292), parts=[
  WordNode(pos=(248, 254), word='chroot'),
  WordNode(pos=(255, 261), word='rootfs'),
  WordNode(pos=(262, 274), word='/bin/getconf'),
  WordNode(pos=(275, 292), word='_NPROCESSORS_ONLN'),
])


3104) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3105) buildrootVersion='2019.05'

CommandNode(pos=(10, 36), parts=[
  AssignmentNode(pos=(10, 36), word='buildrootVersion=2019.05'),
])


3106) mkdir -p rootfs/etc

CommandNode(pos=(39, 58), parts=[
  WordNode(pos=(39, 44), word='mkdir'),
  WordNode(pos=(45, 47), word='-p'),
  WordNode(pos=(48, 58), word='rootfs/etc'),
])


3107) curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion"

CommandNode(pos=(96, 209), parts=[
  WordNode(pos=(96, 100), word='curl'),
  WordNode(pos=(101, 104), word='-fL'),
  WordNode(pos=(105, 107), word='-o'),
  WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(120, 122), value='f'),
  ]),
  WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
    ParameterNode(pos=(185, 187), value='f'),
    ParameterNode(pos=(191, 208), value='buildrootVersion'),
  ]),
])


3108) grep -E '^root::' rootfs/etc/shadow

CommandNode(pos=(219, 254), parts=[
  WordNode(pos=(219, 223), word='grep'),
  WordNode(pos=(224, 226), word='-E'),
  WordNode(pos=(227, 236), word='^root::'),
  WordNode(pos=(237, 254), word='rootfs/etc/shadow'),
])


3109) sed -ri -e 's/^root::/root:*:/' rootfs/etc/shadow

CommandNode(pos=(257, 306), parts=[
  WordNode(pos=(257, 260), word='sed'),
  WordNode(pos=(261, 264), word='-ri'),
  WordNode(pos=(265, 267), word='-e'),
  WordNode(pos=(268, 288), word='s/^root::/root:*:/'),
  WordNode(pos=(289, 306), word='rootfs/etc/shadow'),
])


3110) grep -E '^root:[*]:' rootfs/etc/shadow

CommandNode(pos=(309, 347), parts=[
  WordNode(pos=(309, 313), word='grep'),
  WordNode(pos=(314, 316), word='-E'),
  WordNode(pos=(317, 329), word='^root:[*]:'),
  WordNode(pos=(330, 347), word='rootfs/etc/shadow'),
])


3111) curl -fL -o buildroot-device-table.txt "https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion"

CommandNode(pos=(350, 475), parts=[
  WordNode(pos=(350, 354), word='curl'),
  WordNode(pos=(355, 358), word='-fL'),
  WordNode(pos=(359, 361), word='-o'),
  WordNode(pos=(362, 388), word='buildroot-device-table.txt'),
  WordNode(pos=(389, 475), word='https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion', parts=[
    ParameterNode(pos=(457, 474), value='buildrootVersion'),
  ]),
])


3112) awk '   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \"%s\" encountered in line %d: %s\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\n", $1;    }    printf "chmod %s %s\n", $3, $1;   }  ' buildroot-device-table.txt

CommandNode(pos=(478, 798), parts=[
  WordNode(pos=(478, 481), word='awk'),
  WordNode(pos=(482, 771), word='   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \\"%s\\" encountered in line %d: %s\\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\\n", $1;    }    printf "chmod %s %s\\n", $3, $1;   }  '),
  WordNode(pos=(772, 798), word='buildroot-device-table.txt'),
])


3113) sh -eux

CommandNode(pos=(801, 808), parts=[
  WordNode(pos=(801, 803), word='sh'),
  WordNode(pos=(804, 808), word='-eux'),
])


3114) rm buildroot-device-table.txt

CommandNode(pos=(811, 840), parts=[
  WordNode(pos=(811, 813), word='rm'),
  WordNode(pos=(814, 840), word='buildroot-device-table.txt'),
])


3115) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3116) cd rootfs

CommandNode(pos=(12, 21), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 21), word='rootfs'),
])


3117) user="${userHome%%=*}"

CommandNode(pos=(102, 124), parts=[
  AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
    ParameterNode(pos=(108, 123), value='userHome%%=*'),
  ]),
])


3118) home="${userHome#*=}"

CommandNode(pos=(128, 149), parts=[
  AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
    ParameterNode(pos=(134, 148), value='userHome#*='),
  ]),
])


3119) home="./${home#/}"

CommandNode(pos=(153, 171), parts=[
  AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
    ParameterNode(pos=(161, 170), value='home#/'),
  ]),
])


3120) [ ! -d "$home" ]

CommandNode(pos=(178, 194), parts=[
  WordNode(pos=(178, 179), word='['),
  WordNode(pos=(180, 181), word='!'),
  WordNode(pos=(182, 184), word='-d'),
  WordNode(pos=(185, 192), word='$home', parts=[
    ParameterNode(pos=(186, 191), value='home'),
  ]),
  WordNode(pos=(193, 194), word=']'),
])


3121) mkdir -p "$home"

CommandNode(pos=(204, 220), parts=[
  WordNode(pos=(204, 209), word='mkdir'),
  WordNode(pos=(210, 212), word='-p'),
  WordNode(pos=(213, 220), word='$home', parts=[
    ParameterNode(pos=(214, 219), value='home'),
  ]),
])


3122) chown "$user" "$home"

CommandNode(pos=(225, 246), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 238), word='$user', parts=[
    ParameterNode(pos=(232, 237), value='user'),
  ]),
  WordNode(pos=(239, 246), word='$home', parts=[
    ParameterNode(pos=(240, 245), value='home'),
  ]),
])


3123) chmod 755 "$home"

CommandNode(pos=(251, 268), parts=[
  WordNode(pos=(251, 256), word='chmod'),
  WordNode(pos=(257, 260), word='755'),
  WordNode(pos=(261, 268), word='$home', parts=[
    ParameterNode(pos=(262, 267), value='home'),
  ]),
])


3124) chroot rootfs /bin/sh -xec 'true'

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 6), word='chroot'),
  WordNode(pos=(7, 13), word='rootfs'),
  WordNode(pos=(14, 21), word='/bin/sh'),
  WordNode(pos=(22, 26), word='-xec'),
  WordNode(pos=(27, 33), word='true'),
])


3125) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3126) ln -vL /usr/share/zoneinfo/UTC rootfs/etc/localtime

CommandNode(pos=(10, 61), parts=[
  WordNode(pos=(10, 12), word='ln'),
  WordNode(pos=(13, 16), word='-vL'),
  WordNode(pos=(17, 40), word='/usr/share/zoneinfo/UTC'),
  WordNode(pos=(41, 61), word='rootfs/etc/localtime'),
])


3127) [ "$(chroot rootfs date +%Z)" = 'UTC' ]

CommandNode(pos=(64, 103), parts=[
  WordNode(pos=(64, 65), word='['),
  WordNode(pos=(66, 93), word='$(chroot rootfs date +%Z)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(69, 91), parts=[
        WordNode(pos=(69, 75), word='chroot'),
        WordNode(pos=(76, 82), word='rootfs'),
        WordNode(pos=(83, 87), word='date'),
        WordNode(pos=(88, 91), word='+%Z'),
      ]), pos=(67, 92)),
  ]),
  WordNode(pos=(94, 95), word='='),
  WordNode(pos=(96, 101), word='UTC'),
  WordNode(pos=(102, 103), word=']'),
])


3128) cp -L /etc/resolv.conf rootfs/etc/

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 2), word='cp'),
  WordNode(pos=(3, 5), word='-L'),
  WordNode(pos=(6, 22), word='/etc/resolv.conf'),
  WordNode(pos=(23, 34), word='rootfs/etc/'),
])


3129) chroot rootfs /bin/sh -xec 'nslookup google.com'

CommandNode(pos=(39, 87), parts=[
  WordNode(pos=(39, 45), word='chroot'),
  WordNode(pos=(46, 52), word='rootfs'),
  WordNode(pos=(53, 60), word='/bin/sh'),
  WordNode(pos=(61, 65), word='-xec'),
  WordNode(pos=(66, 87), word='nslookup google.com'),
])


3130) rm rootfs/etc/resolv.conf

CommandNode(pos=(92, 117), parts=[
  WordNode(pos=(92, 94), word='rm'),
  WordNode(pos=(95, 117), word='rootfs/etc/resolv.conf'),
])


3131) apk add --no-cache   ca-certificates

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
])


3132) [ ! -e /etc/nsswitch.conf ]

CommandNode(pos=(0, 27), parts=[
  WordNode(pos=(0, 1), word='['),
  WordNode(pos=(2, 3), word='!'),
  WordNode(pos=(4, 6), word='-e'),
  WordNode(pos=(7, 25), word='/etc/nsswitch.conf'),
  WordNode(pos=(26, 27), word=']'),
])


3133) echo 'hosts: files dns' > /etc/nsswitch.conf

CommandNode(pos=(31, 75), parts=[
  WordNode(pos=(31, 35), word='echo'),
  WordNode(pos=(36, 54), word='hosts: files dns'),
  RedirectNode(output=
    WordNode(pos=(57, 75), word='/etc/nsswitch.conf'), pos=(55, 75), type='>'),
])


3134) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


3135) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


3136) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


3137) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


3138) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


3139) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


3140) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3141) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


3142) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


3143) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


3144) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


3145) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


3146) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


3147) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


3148) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


3149) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


3150) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


3151) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


3152) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


3153) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


3154) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


3155) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


3156) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


3157) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


3158) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


3159) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


3160) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


3161) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


3162) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


3163) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


3164) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


3165) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


3166) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


3167) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3168) apt-get install -y --no-install-recommends   g++   gcc   libc6-dev   make   pkg-config

CommandNode(pos=(18, 104), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='g++'),
  WordNode(pos=(69, 72), word='gcc'),
  WordNode(pos=(75, 84), word='libc6-dev'),
  WordNode(pos=(87, 91), word='make'),
  WordNode(pos=(94, 104), word='pkg-config'),
])


3169) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(109, 136), parts=[
  WordNode(pos=(109, 111), word='rm'),
  WordNode(pos=(112, 115), word='-rf'),
  WordNode(pos=(116, 136), word='/var/lib/apt/lists/*'),
])


3170) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


3171) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


3172) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3173) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


3174) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


3175) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


3176) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


3177) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


3178) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


3179) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3180) apk add --no-cache --virtual .fetch-deps   ca-certificates   openssl   tar

CommandNode(pos=(13, 87), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 53), word='.fetch-deps'),
  WordNode(pos=(56, 71), word='ca-certificates'),
  WordNode(pos=(74, 81), word='openssl'),
  WordNode(pos=(84, 87), word='tar'),
])


3181) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


3182) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


3183) sha256sum -c -

CommandNode(pos=(248, 262), parts=[
  WordNode(pos=(248, 257), word='sha256sum'),
  WordNode(pos=(258, 260), word='-c'),
  WordNode(pos=(261, 262), word='-'),
])


3184) mkdir -p /usr/src/postgresql

CommandNode(pos=(267, 295), parts=[
  WordNode(pos=(267, 272), word='mkdir'),
  WordNode(pos=(273, 275), word='-p'),
  WordNode(pos=(276, 295), word='/usr/src/postgresql'),
])


3185) tar   --extract   --file postgresql.tar.bz2   --directory /usr/src/postgresql   --strip-components 1

CommandNode(pos=(300, 400), parts=[
  WordNode(pos=(300, 303), word='tar'),
  WordNode(pos=(306, 315), word='--extract'),
  WordNode(pos=(318, 324), word='--file'),
  WordNode(pos=(325, 343), word='postgresql.tar.bz2'),
  WordNode(pos=(346, 357), word='--directory'),
  WordNode(pos=(358, 377), word='/usr/src/postgresql'),
  WordNode(pos=(380, 398), word='--strip-components'),
  WordNode(pos=(399, 400), word='1'),
])


3186) rm postgresql.tar.bz2

CommandNode(pos=(405, 426), parts=[
  WordNode(pos=(405, 407), word='rm'),
  WordNode(pos=(408, 426), word='postgresql.tar.bz2'),
])


3187) apk add --no-cache --virtual .build-deps   bison   coreutils   dpkg-dev dpkg   flex   gcc   libc-dev   libedit-dev   libxml2-dev   libxslt-dev   linux-headers   make   openssl-dev   perl-utils   perl-ipc-run   util-linux-dev   zlib-dev

CommandNode(pos=(432, 667), parts=[
  WordNode(pos=(432, 435), word='apk'),
  WordNode(pos=(436, 439), word='add'),
  WordNode(pos=(440, 450), word='--no-cache'),
  WordNode(pos=(451, 460), word='--virtual'),
  WordNode(pos=(461, 472), word='.build-deps'),
  WordNode(pos=(475, 480), word='bison'),
  WordNode(pos=(483, 492), word='coreutils'),
  WordNode(pos=(495, 503), word='dpkg-dev'),
  WordNode(pos=(504, 508), word='dpkg'),
  WordNode(pos=(511, 515), word='flex'),
  WordNode(pos=(518, 521), word='gcc'),
  WordNode(pos=(524, 532), word='libc-dev'),
  WordNode(pos=(535, 546), word='libedit-dev'),
  WordNode(pos=(549, 560), word='libxml2-dev'),
  WordNode(pos=(563, 574), word='libxslt-dev'),
  WordNode(pos=(577, 590), word='linux-headers'),
  WordNode(pos=(593, 597), word='make'),
  WordNode(pos=(600, 611), word='openssl-dev'),
  WordNode(pos=(614, 624), word='perl-utils'),
  WordNode(pos=(627, 639), word='perl-ipc-run'),
  WordNode(pos=(642, 656), word='util-linux-dev'),
  WordNode(pos=(659, 667), word='zlib-dev'),
])


3188) cd /usr/src/postgresql

CommandNode(pos=(673, 695), parts=[
  WordNode(pos=(673, 675), word='cd'),
  WordNode(pos=(676, 695), word='/usr/src/postgresql'),
])


3189) awk '$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\"/tmp\"" { $3 = "\"/var/run/postgresql\""; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new

CommandNode(pos=(700, 899), parts=[
  WordNode(pos=(700, 703), word='awk'),
  WordNode(pos=(704, 831), word='$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\\"/tmp\\"" { $3 = "\\"/var/run/postgresql\\""; print; next } { print }'),
  WordNode(pos=(832, 862), word='src/include/pg_config_manual.h'),
  RedirectNode(output=
    WordNode(pos=(865, 899), word='src/include/pg_config_manual.h.new'), pos=(863, 899), type='>'),
])


3190) grep '/var/run/postgresql' src/include/pg_config_manual.h.new

CommandNode(pos=(904, 965), parts=[
  WordNode(pos=(904, 908), word='grep'),
  WordNode(pos=(909, 930), word='/var/run/postgresql'),
  WordNode(pos=(931, 965), word='src/include/pg_config_manual.h.new'),
])


3191) mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h

CommandNode(pos=(970, 1038), parts=[
  WordNode(pos=(970, 972), word='mv'),
  WordNode(pos=(973, 1007), word='src/include/pg_config_manual.h.new'),
  WordNode(pos=(1008, 1038), word='src/include/pg_config_manual.h'),
])


3192) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1043, 1100), parts=[
  AssignmentNode(pos=(1043, 1100), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1054, 1098), parts=[
        WordNode(pos=(1054, 1071), word='dpkg-architecture'),
        WordNode(pos=(1072, 1079), word='--query'),
        WordNode(pos=(1080, 1098), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1052, 1099)),
  ]),
])


3193) wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1105, 1242), parts=[
  WordNode(pos=(1105, 1109), word='wget'),
  WordNode(pos=(1110, 1112), word='-O'),
  WordNode(pos=(1113, 1132), word='config/config.guess'),
  WordNode(pos=(1133, 1242), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


3194) wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1247, 1380), parts=[
  WordNode(pos=(1247, 1251), word='wget'),
  WordNode(pos=(1252, 1254), word='-O'),
  WordNode(pos=(1255, 1272), word='config/config.sub'),
  WordNode(pos=(1273, 1380), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


3195) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt

CommandNode(pos=(1385, 1754), parts=[
  WordNode(pos=(1385, 1396), word='./configure'),
  WordNode(pos=(1399, 1417), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1408, 1416), value='gnuArch'),
  ]),
  WordNode(pos=(1420, 1446), word='--enable-integer-datetimes'),
  WordNode(pos=(1449, 1471), word='--enable-thread-safety'),
  WordNode(pos=(1474, 1492), word='--enable-tap-tests'),
  WordNode(pos=(1495, 1510), word='--disable-rpath'),
  WordNode(pos=(1513, 1529), word='--with-uuid=e2fs'),
  WordNode(pos=(1532, 1545), word='--with-gnu-ld'),
  WordNode(pos=(1548, 1566), word='--with-pgport=5432'),
  WordNode(pos=(1569, 1609), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1612, 1631), word='--prefix=/usr/local'),
  WordNode(pos=(1634, 1668), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1671, 1702), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1707, 1721), word='--with-openssl'),
  WordNode(pos=(1724, 1737), word='--with-libxml'),
  WordNode(pos=(1740, 1754), word='--with-libxslt'),
])


3196) make -j "$(nproc)" world

CommandNode(pos=(1759, 1783), parts=[
  WordNode(pos=(1759, 1763), word='make'),
  WordNode(pos=(1764, 1766), word='-j'),
  WordNode(pos=(1767, 1777), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1770, 1775), parts=[
        WordNode(pos=(1770, 1775), word='nproc'),
      ]), pos=(1768, 1776)),
  ]),
  WordNode(pos=(1778, 1783), word='world'),
])


3197) make install-world

CommandNode(pos=(1788, 1806), parts=[
  WordNode(pos=(1788, 1792), word='make'),
  WordNode(pos=(1793, 1806), word='install-world'),
])


3198) make -C contrib install

CommandNode(pos=(1811, 1834), parts=[
  WordNode(pos=(1811, 1815), word='make'),
  WordNode(pos=(1816, 1818), word='-C'),
  WordNode(pos=(1819, 1826), word='contrib'),
  WordNode(pos=(1827, 1834), word='install'),
])


3199) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1840, 2037), parts=[
  AssignmentNode(pos=(1840, 2037), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1854, 2033), parts=[
        CommandNode(pos=(1854, 1920), parts=[
          WordNode(pos=(1854, 1861), word='scanelf'),
          WordNode(pos=(1862, 1870), word='--needed'),
          WordNode(pos=(1871, 1881), word='--nobanner'),
          WordNode(pos=(1882, 1890), word='--format'),
          WordNode(pos=(1891, 1897), word='%n#p'),
          WordNode(pos=(1898, 1909), word='--recursive'),
          WordNode(pos=(1910, 1920), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1924, 1925)),
        CommandNode(pos=(1926, 1937), parts=[
          WordNode(pos=(1926, 1928), word='tr'),
          WordNode(pos=(1929, 1932), word=','),
          WordNode(pos=(1933, 1937), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1941, 1942)),
        CommandNode(pos=(1943, 1950), parts=[
          WordNode(pos=(1943, 1947), word='sort'),
          WordNode(pos=(1948, 1950), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1954, 1955)),
        CommandNode(pos=(1956, 2033), parts=[
          WordNode(pos=(1956, 1959), word='awk'),
          WordNode(pos=(1960, 2033), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1849, 2034)),
  ]),
])


3200) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2042, 2127), parts=[
  WordNode(pos=(2042, 2045), word='apk'),
  WordNode(pos=(2046, 2049), word='add'),
  WordNode(pos=(2050, 2060), word='--no-cache'),
  WordNode(pos=(2061, 2070), word='--virtual'),
  WordNode(pos=(2071, 2090), word='.postgresql-rundeps'),
  WordNode(pos=(2093, 2101), word='$runDeps', parts=[
    ParameterNode(pos=(2093, 2101), value='runDeps'),
  ]),
  WordNode(pos=(2104, 2108), word='bash'),
  WordNode(pos=(2111, 2118), word='su-exec'),
  WordNode(pos=(2121, 2127), word='tzdata'),
])


3201) apk del .fetch-deps .build-deps

CommandNode(pos=(2132, 2163), parts=[
  WordNode(pos=(2132, 2135), word='apk'),
  WordNode(pos=(2136, 2139), word='del'),
  WordNode(pos=(2140, 2151), word='.fetch-deps'),
  WordNode(pos=(2152, 2163), word='.build-deps'),
])


3202) cd /

CommandNode(pos=(2168, 2172), parts=[
  WordNode(pos=(2168, 2170), word='cd'),
  WordNode(pos=(2171, 2172), word='/'),
])


3203) rm -rf   /usr/src/postgresql   /usr/local/share/doc   /usr/local/share/man

CommandNode(pos=(2177, 2251), parts=[
  WordNode(pos=(2177, 2179), word='rm'),
  WordNode(pos=(2180, 2183), word='-rf'),
  WordNode(pos=(2186, 2205), word='/usr/src/postgresql'),
  WordNode(pos=(2208, 2228), word='/usr/local/share/doc'),
  WordNode(pos=(2231, 2251), word='/usr/local/share/man'),
])


3204) find /usr/local -name '*.a' -delete

CommandNode(pos=(2256, 2291), parts=[
  WordNode(pos=(2256, 2260), word='find'),
  WordNode(pos=(2261, 2271), word='/usr/local'),
  WordNode(pos=(2272, 2277), word='-name'),
  WordNode(pos=(2278, 2283), word='*.a'),
  WordNode(pos=(2284, 2291), word='-delete'),
])


3205) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample

CommandNode(pos=(0, 106), parts=[
  WordNode(pos=(0, 3), word='sed'),
  WordNode(pos=(4, 7), word='-ri'),
  WordNode(pos=(8, 55), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(56, 106), word='/usr/local/share/postgresql/postgresql.conf.sample'),
])


3206) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


3207) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


3208) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


3209) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


3210) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


3211) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


3212) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


3213) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


3214) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3215) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


3216) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


3217) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


3218) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


3219) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


3220) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


3221) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


3222) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


3223) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


3224) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


3225) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


3226) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


3227) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


3228) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   zlib-dev

CommandNode(pos=(719, 1019), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1019), word='zlib-dev'),
])


3229) apk del .fetch-deps

CommandNode(pos=(1024, 1043), parts=[
  WordNode(pos=(1024, 1027), word='apk'),
  WordNode(pos=(1028, 1031), word='del'),
  WordNode(pos=(1032, 1043), word='.fetch-deps'),
])


3230) cd /usr/src/python

CommandNode(pos=(1049, 1067), parts=[
  WordNode(pos=(1049, 1051), word='cd'),
  WordNode(pos=(1052, 1067), word='/usr/src/python'),
])


3231) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1072, 1129), parts=[
  AssignmentNode(pos=(1072, 1129), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1083, 1127), parts=[
        WordNode(pos=(1083, 1100), word='dpkg-architecture'),
        WordNode(pos=(1101, 1108), word='--query'),
        WordNode(pos=(1109, 1127), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1081, 1128)),
  ]),
])


3232) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4   --with-system-expat   --with-system-ffi

CommandNode(pos=(1134, 1250), parts=[
  WordNode(pos=(1134, 1145), word='./configure'),
  WordNode(pos=(1148, 1166), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1157, 1165), value='gnuArch'),
  ]),
  WordNode(pos=(1169, 1184), word='--enable-shared'),
  WordNode(pos=(1187, 1208), word='--enable-unicode=ucs4'),
  WordNode(pos=(1211, 1230), word='--with-system-expat'),
  WordNode(pos=(1233, 1250), word='--with-system-ffi'),
])


3233) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1255, 1319), parts=[
  WordNode(pos=(1255, 1259), word='make'),
  WordNode(pos=(1260, 1262), word='-j'),
  WordNode(pos=(1263, 1273), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1266, 1271), parts=[
        WordNode(pos=(1266, 1271), word='nproc'),
      ]), pos=(1264, 1272)),
  ]),
  WordNode(pos=(1276, 1319), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


3234) make install

CommandNode(pos=(1324, 1336), parts=[
  WordNode(pos=(1324, 1328), word='make'),
  WordNode(pos=(1329, 1336), word='install'),
])


3235) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1342, 1465), parts=[
  WordNode(pos=(1342, 1346), word='find'),
  WordNode(pos=(1347, 1357), word='/usr/local'),
  WordNode(pos=(1358, 1363), word='-type'),
  WordNode(pos=(1364, 1365), word='f'),
  WordNode(pos=(1366, 1377), word='-executable'),
  WordNode(pos=(1378, 1382), word='-not'),
  WordNode(pos=(1383, 1385), word='('),
  WordNode(pos=(1386, 1391), word='-name'),
  WordNode(pos=(1392, 1403), word='*tkinter*'),
  WordNode(pos=(1404, 1406), word=')'),
  WordNode(pos=(1407, 1412), word='-exec'),
  WordNode(pos=(1413, 1420), word='scanelf'),
  WordNode(pos=(1421, 1429), word='--needed'),
  WordNode(pos=(1430, 1440), word='--nobanner'),
  WordNode(pos=(1441, 1449), word='--format'),
  WordNode(pos=(1450, 1456), word='%n#p'),
  WordNode(pos=(1457, 1461), word='{}'),
  WordNode(pos=(1462, 1465), word=';'),
])


3236) tr ',' '\n'

CommandNode(pos=(1470, 1481), parts=[
  WordNode(pos=(1470, 1472), word='tr'),
  WordNode(pos=(1473, 1476), word=','),
  WordNode(pos=(1477, 1481), word='\\n'),
])


3237) sort -u

CommandNode(pos=(1486, 1493), parts=[
  WordNode(pos=(1486, 1490), word='sort'),
  WordNode(pos=(1491, 1493), word='-u'),
])


3238) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1498, 1575), parts=[
  WordNode(pos=(1498, 1501), word='awk'),
  WordNode(pos=(1502, 1575), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


3239) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1580, 1634), parts=[
  WordNode(pos=(1580, 1585), word='xargs'),
  WordNode(pos=(1586, 1589), word='-rt'),
  WordNode(pos=(1590, 1593), word='apk'),
  WordNode(pos=(1594, 1597), word='add'),
  WordNode(pos=(1598, 1608), word='--no-cache'),
  WordNode(pos=(1609, 1618), word='--virtual'),
  WordNode(pos=(1619, 1634), word='.python-rundeps'),
])


3240) apk del .build-deps

CommandNode(pos=(1639, 1658), parts=[
  WordNode(pos=(1639, 1642), word='apk'),
  WordNode(pos=(1643, 1646), word='del'),
  WordNode(pos=(1647, 1658), word='.build-deps'),
])


3241) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1664, 1831), parts=[
  WordNode(pos=(1664, 1668), word='find'),
  WordNode(pos=(1669, 1679), word='/usr/local'),
  WordNode(pos=(1680, 1686), word='-depth'),
  WordNode(pos=(1689, 1691), word='('),
  WordNode(pos=(1695, 1697), word='('),
  WordNode(pos=(1698, 1703), word='-type'),
  WordNode(pos=(1704, 1705), word='d'),
  WordNode(pos=(1706, 1708), word='-a'),
  WordNode(pos=(1709, 1711), word='('),
  WordNode(pos=(1712, 1717), word='-name'),
  WordNode(pos=(1718, 1722), word='test'),
  WordNode(pos=(1723, 1725), word='-o'),
  WordNode(pos=(1726, 1731), word='-name'),
  WordNode(pos=(1732, 1737), word='tests'),
  WordNode(pos=(1738, 1740), word=')'),
  WordNode(pos=(1741, 1743), word=')'),
  WordNode(pos=(1747, 1749), word='-o'),
  WordNode(pos=(1753, 1755), word='('),
  WordNode(pos=(1756, 1761), word='-type'),
  WordNode(pos=(1762, 1763), word='f'),
  WordNode(pos=(1764, 1766), word='-a'),
  WordNode(pos=(1767, 1769), word='('),
  WordNode(pos=(1770, 1775), word='-name'),
  WordNode(pos=(1776, 1783), word='*.pyc'),
  WordNode(pos=(1784, 1786), word='-o'),
  WordNode(pos=(1787, 1792), word='-name'),
  WordNode(pos=(1793, 1800), word='*.pyo'),
  WordNode(pos=(1801, 1803), word=')'),
  WordNode(pos=(1804, 1806), word=')'),
  WordNode(pos=(1809, 1811), word=')'),
  WordNode(pos=(1812, 1817), word='-exec'),
  WordNode(pos=(1818, 1820), word='rm'),
  WordNode(pos=(1821, 1824), word='-rf'),
  WordNode(pos=(1825, 1829), word='{}'),
  WordNode(pos=(1830, 1831), word='+'),
])


3242) rm -rf /usr/src/python

CommandNode(pos=(1836, 1858), parts=[
  WordNode(pos=(1836, 1838), word='rm'),
  WordNode(pos=(1839, 1842), word='-rf'),
  WordNode(pos=(1843, 1858), word='/usr/src/python'),
])


3243) python2 --version

CommandNode(pos=(1864, 1881), parts=[
  WordNode(pos=(1864, 1871), word='python2'),
  WordNode(pos=(1872, 1881), word='--version'),
])


3244) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3245) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


3246) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


3247) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


3248) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


3249) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


3250) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3251) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


3252) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


3253) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


3254) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3255) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


3256) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


3257) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3258) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


3259) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


3260) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


3261) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


3262) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


3263) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


3264) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


3265) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


3266) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


3267) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


3268) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


3269) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


3270) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


3271) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


3272) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


3273) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


3274) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


3275) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


3276) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


3277) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


3278) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


3279) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


3280) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


3281) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


3282) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


3283) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


3284) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


3285) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


3286) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


3287) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


3288) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


3289) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3290) apt-get install -y   bzip2   curl   gcc   gnupg dirmngr   make

CommandNode(pos=(18, 80), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 44), word='bzip2'),
  WordNode(pos=(47, 51), word='curl'),
  WordNode(pos=(54, 57), word='gcc'),
  WordNode(pos=(60, 65), word='gnupg'),
  WordNode(pos=(66, 73), word='dirmngr'),
  WordNode(pos=(76, 80), word='make'),
])


3291) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(85, 112), parts=[
  WordNode(pos=(85, 87), word='rm'),
  WordNode(pos=(88, 91), word='-rf'),
  WordNode(pos=(92, 112), word='/var/lib/apt/lists/*'),
])


3292) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C9E9416F76E610DBD09D040F47B70C55ACC9965B

CommandNode(pos=(0, 103), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 11), word='--batch'),
  WordNode(pos=(12, 23), word='--keyserver'),
  WordNode(pos=(24, 50), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(51, 62), word='--recv-keys'),
  WordNode(pos=(63, 103), word='C9E9416F76E610DBD09D040F47B70C55ACC9965B'),
])


3293) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3294) tarball="busybox-${BUSYBOX_VERSION}.tar.bz2"

CommandNode(pos=(10, 54), parts=[
  AssignmentNode(pos=(10, 54), word='tarball=busybox-${BUSYBOX_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(27, 45), value='BUSYBOX_VERSION'),
  ]),
])


3295) curl -fL -o busybox.tar.bz2 "https://busybox.net/downloads/$tarball"

CommandNode(pos=(57, 125), parts=[
  WordNode(pos=(57, 61), word='curl'),
  WordNode(pos=(62, 65), word='-fL'),
  WordNode(pos=(66, 68), word='-o'),
  WordNode(pos=(69, 84), word='busybox.tar.bz2'),
  WordNode(pos=(85, 125), word='https://busybox.net/downloads/$tarball', parts=[
    ParameterNode(pos=(116, 124), value='tarball'),
  ]),
])


3296) curl -fL -o busybox.tar.bz2.sig "https://busybox.net/downloads/$tarball.sig"

CommandNode(pos=(128, 204), parts=[
  WordNode(pos=(128, 132), word='curl'),
  WordNode(pos=(133, 136), word='-fL'),
  WordNode(pos=(137, 139), word='-o'),
  WordNode(pos=(140, 159), word='busybox.tar.bz2.sig'),
  WordNode(pos=(160, 204), word='https://busybox.net/downloads/$tarball.sig', parts=[
    ParameterNode(pos=(191, 199), value='tarball'),
  ]),
])


3297) gpg --batch --verify busybox.tar.bz2.sig busybox.tar.bz2

CommandNode(pos=(207, 263), parts=[
  WordNode(pos=(207, 210), word='gpg'),
  WordNode(pos=(211, 218), word='--batch'),
  WordNode(pos=(219, 227), word='--verify'),
  WordNode(pos=(228, 247), word='busybox.tar.bz2.sig'),
  WordNode(pos=(248, 263), word='busybox.tar.bz2'),
])


3298) mkdir -p /usr/src/busybox

CommandNode(pos=(266, 291), parts=[
  WordNode(pos=(266, 271), word='mkdir'),
  WordNode(pos=(272, 274), word='-p'),
  WordNode(pos=(275, 291), word='/usr/src/busybox'),
])


3299) tar -xf busybox.tar.bz2 -C /usr/src/busybox --strip-components 1

CommandNode(pos=(294, 358), parts=[
  WordNode(pos=(294, 297), word='tar'),
  WordNode(pos=(298, 301), word='-xf'),
  WordNode(pos=(302, 317), word='busybox.tar.bz2'),
  WordNode(pos=(318, 320), word='-C'),
  WordNode(pos=(321, 337), word='/usr/src/busybox'),
  WordNode(pos=(338, 356), word='--strip-components'),
  WordNode(pos=(357, 358), word='1'),
])


3300) rm busybox.tar.bz2*

CommandNode(pos=(361, 380), parts=[
  WordNode(pos=(361, 363), word='rm'),
  WordNode(pos=(364, 380), word='busybox.tar.bz2*'),
])


3301) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3302) setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '

CommandNode(pos=(11, 136), parts=[
  AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
])


3303) unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  '

CommandNode(pos=(140, 183), parts=[
  AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
])


3304) make defconfig

CommandNode(pos=(187, 201), parts=[
  WordNode(pos=(187, 191), word='make'),
  WordNode(pos=(192, 201), word='defconfig'),
])


3305) sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config

CommandNode(pos=(235, 294), parts=[
  WordNode(pos=(235, 238), word='sed'),
  WordNode(pos=(239, 241), word='-i'),
  WordNode(pos=(245, 247), word='-e'),
  WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
    ParameterNode(pos=(252, 257), value='conf'),
    ParameterNode(pos=(265, 270), value='conf'),
  ]),
  WordNode(pos=(287, 294), word='.config'),
])


3306) conf="${confV%=*}"

CommandNode(pos=(334, 352), parts=[
  AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
    ParameterNode(pos=(340, 351), value='confV%=*'),
  ]),
])


3307) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(356, 443), parts=[
  WordNode(pos=(356, 359), word='sed'),
  WordNode(pos=(360, 362), word='-i'),
  WordNode(pos=(366, 368), word='-e'),
  WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(373, 378), value='conf'),
    ParameterNode(pos=(384, 390), value='confV'),
  ]),
  WordNode(pos=(396, 398), word='-e'),
  WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(405, 410), value='conf'),
    ParameterNode(pos=(424, 430), value='confV'),
  ]),
  WordNode(pos=(436, 443), word='.config'),
])


3308) grep -q "^$confV\$" .config

CommandNode(pos=(452, 479), parts=[
  WordNode(pos=(452, 456), word='grep'),
  WordNode(pos=(457, 459), word='-q'),
  WordNode(pos=(460, 471), word='^$confV$', parts=[
    ParameterNode(pos=(462, 468), value='confV'),
  ]),
  WordNode(pos=(472, 479), word='.config'),
])


3309) echo "$confV" >> .config

CommandNode(pos=(489, 513), parts=[
  WordNode(pos=(489, 493), word='echo'),
  WordNode(pos=(494, 502), word='$confV', parts=[
    ParameterNode(pos=(495, 501), value='confV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
])


3310) make oldconfig

CommandNode(pos=(530, 544), parts=[
  WordNode(pos=(530, 534), word='make'),
  WordNode(pos=(535, 544), word='oldconfig'),
])


3311) grep -q "^$conf=" .config

CommandNode(pos=(580, 605), parts=[
  WordNode(pos=(580, 584), word='grep'),
  WordNode(pos=(585, 587), word='-q'),
  WordNode(pos=(588, 597), word='^$conf=', parts=[
    ParameterNode(pos=(590, 595), value='conf'),
  ]),
  WordNode(pos=(598, 605), word='.config'),
])


3312) grep -q "^$confV\$" .config

CommandNode(pos=(644, 671), parts=[
  WordNode(pos=(644, 648), word='grep'),
  WordNode(pos=(649, 651), word='-q'),
  WordNode(pos=(652, 663), word='^$confV$', parts=[
    ParameterNode(pos=(654, 660), value='confV'),
  ]),
  WordNode(pos=(664, 671), word='.config'),
])


3313) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3314) make -j "$(nproc)"   busybox

CommandNode(pos=(12, 40), parts=[
  WordNode(pos=(12, 16), word='make'),
  WordNode(pos=(17, 19), word='-j'),
  WordNode(pos=(20, 30), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(23, 28), parts=[
        WordNode(pos=(23, 28), word='nproc'),
      ]), pos=(21, 29)),
  ]),
  WordNode(pos=(33, 40), word='busybox'),
])


3315) ./busybox --help

CommandNode(pos=(45, 61), parts=[
  WordNode(pos=(45, 54), word='./busybox'),
  WordNode(pos=(55, 61), word='--help'),
])


3316) mkdir -p rootfs/bin

CommandNode(pos=(66, 85), parts=[
  WordNode(pos=(66, 71), word='mkdir'),
  WordNode(pos=(72, 74), word='-p'),
  WordNode(pos=(75, 85), word='rootfs/bin'),
])


3317) ln -vL busybox rootfs/bin/

CommandNode(pos=(90, 116), parts=[
  WordNode(pos=(90, 92), word='ln'),
  WordNode(pos=(93, 96), word='-vL'),
  WordNode(pos=(97, 104), word='busybox'),
  WordNode(pos=(105, 116), word='rootfs/bin/'),
])


3318) ln -vL "$(which getconf)" rootfs/bin/getconf

CommandNode(pos=(122, 166), parts=[
  WordNode(pos=(122, 124), word='ln'),
  WordNode(pos=(125, 128), word='-vL'),
  WordNode(pos=(129, 147), word='$(which getconf)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(132, 145), parts=[
        WordNode(pos=(132, 137), word='which'),
        WordNode(pos=(138, 145), word='getconf'),
      ]), pos=(130, 146)),
  ]),
  WordNode(pos=(148, 166), word='rootfs/bin/getconf'),
])


3319) mkdir -p rootfs/etc

CommandNode(pos=(172, 191), parts=[
  WordNode(pos=(172, 177), word='mkdir'),
  WordNode(pos=(178, 180), word='-p'),
  WordNode(pos=(181, 191), word='rootfs/etc'),
])


3320) cp /etc/nsswitch.conf rootfs/etc/

CommandNode(pos=(196, 229), parts=[
  WordNode(pos=(196, 198), word='cp'),
  WordNode(pos=(199, 217), word='/etc/nsswitch.conf'),
  WordNode(pos=(218, 229), word='rootfs/etc/'),
])


3321) mkdir -p rootfs/lib

CommandNode(pos=(234, 253), parts=[
  WordNode(pos=(234, 239), word='mkdir'),
  WordNode(pos=(240, 242), word='-p'),
  WordNode(pos=(243, 253), word='rootfs/lib'),
])


3322) ln -sT lib rootfs/lib64

CommandNode(pos=(258, 281), parts=[
  WordNode(pos=(258, 260), word='ln'),
  WordNode(pos=(261, 264), word='-sT'),
  WordNode(pos=(265, 268), word='lib'),
  WordNode(pos=(269, 281), word='rootfs/lib64'),
])


3323) set --   rootfs/bin/busybox   rootfs/bin/getconf   /lib/"$(gcc -print-multiarch)"/libnss*.so.*   /lib/"$(gcc -print-multiarch)"/libpthread*.so.*

CommandNode(pos=(286, 430), parts=[
  WordNode(pos=(286, 289), word='set'),
  WordNode(pos=(290, 292), word='--'),
  WordNode(pos=(295, 313), word='rootfs/bin/busybox'),
  WordNode(pos=(316, 334), word='rootfs/bin/getconf'),
  WordNode(pos=(337, 380), word='/lib/$(gcc -print-multiarch)/libnss*.so.*', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(345, 365), parts=[
        WordNode(pos=(345, 348), word='gcc'),
        WordNode(pos=(349, 365), word='-print-multiarch'),
      ]), pos=(343, 366)),
  ]),
  WordNode(pos=(383, 430), word='/lib/$(gcc -print-multiarch)/libpthread*.so.*', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(391, 411), parts=[
        WordNode(pos=(391, 394), word='gcc'),
        WordNode(pos=(395, 411), word='-print-multiarch'),
      ]), pos=(389, 412)),
  ]),
])


3324) [ "$#" -gt 0 ]

CommandNode(pos=(441, 455), parts=[
  WordNode(pos=(441, 442), word='['),
  WordNode(pos=(443, 447), word='$#', parts=[
    ParameterNode(pos=(444, 446), value='#'),
  ]),
  WordNode(pos=(448, 451), word='-gt'),
  WordNode(pos=(452, 453), word='0'),
  WordNode(pos=(454, 455), word=']'),
])


3325) f="$1"

CommandNode(pos=(462, 468), parts=[
  AssignmentNode(pos=(462, 468), word='f=$1', parts=[
    ParameterNode(pos=(465, 467), value='1'),
  ]),
])


3326) shift

CommandNode(pos=(470, 475), parts=[
  WordNode(pos=(470, 475), word='shift'),
])


3327) fn="$(basename "$f")"

CommandNode(pos=(479, 500), parts=[
  AssignmentNode(pos=(479, 500), word='fn=$(basename "$f")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(485, 498), parts=[
        WordNode(pos=(485, 493), word='basename'),
        WordNode(pos=(494, 498), word='$f', parts=[
          ParameterNode(pos=(495, 497), value='f'),
        ]),
      ]), pos=(483, 499)),
  ]),
])


3328) [ -e "rootfs/lib/$fn" ]

CommandNode(pos=(507, 530), parts=[
  WordNode(pos=(507, 508), word='['),
  WordNode(pos=(509, 511), word='-e'),
  WordNode(pos=(512, 528), word='rootfs/lib/$fn', parts=[
    ParameterNode(pos=(524, 527), value='fn'),
  ]),
  WordNode(pos=(529, 530), word=']'),
])


3329) continue

CommandNode(pos=(537, 545), parts=[
  WordNode(pos=(537, 545), word='continue'),
])


3330) [ "${f#rootfs/}" = "$f" ]

CommandNode(pos=(556, 581), parts=[
  WordNode(pos=(556, 557), word='['),
  WordNode(pos=(558, 572), word='${f#rootfs/}', parts=[
    ParameterNode(pos=(559, 571), value='f#rootfs/'),
  ]),
  WordNode(pos=(573, 574), word='='),
  WordNode(pos=(575, 579), word='$f', parts=[
    ParameterNode(pos=(576, 578), value='f'),
  ]),
  WordNode(pos=(580, 581), word=']'),
])


3331) [ "${fn#ld-}" = "$fn" ]

CommandNode(pos=(594, 617), parts=[
  WordNode(pos=(594, 595), word='['),
  WordNode(pos=(596, 607), word='${fn#ld-}', parts=[
    ParameterNode(pos=(597, 606), value='fn#ld-'),
  ]),
  WordNode(pos=(608, 609), word='='),
  WordNode(pos=(610, 615), word='$fn', parts=[
    ParameterNode(pos=(611, 614), value='fn'),
  ]),
  WordNode(pos=(616, 617), word=']'),
])


3332) ln -vL "$f" "rootfs/lib/$fn"

CommandNode(pos=(628, 656), parts=[
  WordNode(pos=(628, 630), word='ln'),
  WordNode(pos=(631, 634), word='-vL'),
  WordNode(pos=(635, 639), word='$f', parts=[
    ParameterNode(pos=(636, 638), value='f'),
  ]),
  WordNode(pos=(640, 656), word='rootfs/lib/$fn', parts=[
    ParameterNode(pos=(652, 655), value='fn'),
  ]),
])


3333) cp -v "$f" "rootfs/lib/$fn"

CommandNode(pos=(670, 697), parts=[
  WordNode(pos=(670, 672), word='cp'),
  WordNode(pos=(673, 675), word='-v'),
  WordNode(pos=(676, 680), word='$f', parts=[
    ParameterNode(pos=(677, 679), value='f'),
  ]),
  WordNode(pos=(681, 697), word='rootfs/lib/$fn', parts=[
    ParameterNode(pos=(693, 696), value='fn'),
  ]),
])


3334) set -- "$@" $(ldd "$f" | awk '    $1 ~ /^\// { print $1; next }    $2 == "=>" && $3 ~ /^\// { print $3; next }   ')

CommandNode(pos=(714, 829), parts=[
  WordNode(pos=(714, 717), word='set'),
  WordNode(pos=(718, 720), word='--'),
  WordNode(pos=(721, 725), word='$@', parts=[
    ParameterNode(pos=(722, 724), value='@'),
  ]),
  WordNode(pos=(726, 829), word='$(ldd "$f" | awk \'    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   \')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(728, 828), parts=[
        CommandNode(pos=(728, 736), parts=[
          WordNode(pos=(728, 731), word='ldd'),
          WordNode(pos=(732, 736), word='$f', parts=[
            ParameterNode(pos=(733, 735), value='f'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(737, 738)),
        CommandNode(pos=(739, 828), parts=[
          WordNode(pos=(739, 742), word='awk'),
          WordNode(pos=(743, 828), word='    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   '),
        ]),
      ]), pos=(726, 829)),
  ]),
])


3335) chroot rootfs /bin/getconf _NPROCESSORS_ONLN

CommandNode(pos=(842, 886), parts=[
  WordNode(pos=(842, 848), word='chroot'),
  WordNode(pos=(849, 855), word='rootfs'),
  WordNode(pos=(856, 868), word='/bin/getconf'),
  WordNode(pos=(869, 886), word='_NPROCESSORS_ONLN'),
])


3336) chroot rootfs /bin/busybox --install /bin

CommandNode(pos=(892, 933), parts=[
  WordNode(pos=(892, 898), word='chroot'),
  WordNode(pos=(899, 905), word='rootfs'),
  WordNode(pos=(906, 918), word='/bin/busybox'),
  WordNode(pos=(919, 928), word='--install'),
  WordNode(pos=(929, 933), word='/bin'),
])


3337) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3338) buildrootVersion='2019.05'

CommandNode(pos=(10, 36), parts=[
  AssignmentNode(pos=(10, 36), word='buildrootVersion=2019.05'),
])


3339) mkdir -p rootfs/etc

CommandNode(pos=(39, 58), parts=[
  WordNode(pos=(39, 44), word='mkdir'),
  WordNode(pos=(45, 47), word='-p'),
  WordNode(pos=(48, 58), word='rootfs/etc'),
])


3340) curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion"

CommandNode(pos=(96, 209), parts=[
  WordNode(pos=(96, 100), word='curl'),
  WordNode(pos=(101, 104), word='-fL'),
  WordNode(pos=(105, 107), word='-o'),
  WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(120, 122), value='f'),
  ]),
  WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
    ParameterNode(pos=(185, 187), value='f'),
    ParameterNode(pos=(191, 208), value='buildrootVersion'),
  ]),
])


3341) grep -E '^root::' rootfs/etc/shadow

CommandNode(pos=(219, 254), parts=[
  WordNode(pos=(219, 223), word='grep'),
  WordNode(pos=(224, 226), word='-E'),
  WordNode(pos=(227, 236), word='^root::'),
  WordNode(pos=(237, 254), word='rootfs/etc/shadow'),
])


3342) sed -ri -e 's/^root::/root:*:/' rootfs/etc/shadow

CommandNode(pos=(257, 306), parts=[
  WordNode(pos=(257, 260), word='sed'),
  WordNode(pos=(261, 264), word='-ri'),
  WordNode(pos=(265, 267), word='-e'),
  WordNode(pos=(268, 288), word='s/^root::/root:*:/'),
  WordNode(pos=(289, 306), word='rootfs/etc/shadow'),
])


3343) grep -E '^root:[*]:' rootfs/etc/shadow

CommandNode(pos=(309, 347), parts=[
  WordNode(pos=(309, 313), word='grep'),
  WordNode(pos=(314, 316), word='-E'),
  WordNode(pos=(317, 329), word='^root:[*]:'),
  WordNode(pos=(330, 347), word='rootfs/etc/shadow'),
])


3344) curl -fL -o buildroot-device-table.txt "https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion"

CommandNode(pos=(350, 475), parts=[
  WordNode(pos=(350, 354), word='curl'),
  WordNode(pos=(355, 358), word='-fL'),
  WordNode(pos=(359, 361), word='-o'),
  WordNode(pos=(362, 388), word='buildroot-device-table.txt'),
  WordNode(pos=(389, 475), word='https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion', parts=[
    ParameterNode(pos=(457, 474), value='buildrootVersion'),
  ]),
])


3345) awk '   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \"%s\" encountered in line %d: %s\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\n", $1;    }    printf "chmod %s %s\n", $3, $1;   }  ' buildroot-device-table.txt

CommandNode(pos=(478, 798), parts=[
  WordNode(pos=(478, 481), word='awk'),
  WordNode(pos=(482, 771), word='   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \\"%s\\" encountered in line %d: %s\\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\\n", $1;    }    printf "chmod %s %s\\n", $3, $1;   }  '),
  WordNode(pos=(772, 798), word='buildroot-device-table.txt'),
])


3346) bash -Eeuo pipefail -x

CommandNode(pos=(801, 823), parts=[
  WordNode(pos=(801, 805), word='bash'),
  WordNode(pos=(806, 811), word='-Eeuo'),
  WordNode(pos=(812, 820), word='pipefail'),
  WordNode(pos=(821, 823), word='-x'),
])


3347) rm buildroot-device-table.txt

CommandNode(pos=(826, 855), parts=[
  WordNode(pos=(826, 828), word='rm'),
  WordNode(pos=(829, 855), word='buildroot-device-table.txt'),
])


3348) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3349) cd rootfs

CommandNode(pos=(12, 21), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 21), word='rootfs'),
])


3350) user="${userHome%%=*}"

CommandNode(pos=(102, 124), parts=[
  AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
    ParameterNode(pos=(108, 123), value='userHome%%=*'),
  ]),
])


3351) home="${userHome#*=}"

CommandNode(pos=(128, 149), parts=[
  AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
    ParameterNode(pos=(134, 148), value='userHome#*='),
  ]),
])


3352) home="./${home#/}"

CommandNode(pos=(153, 171), parts=[
  AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
    ParameterNode(pos=(161, 170), value='home#/'),
  ]),
])


3353) [ ! -d "$home" ]

CommandNode(pos=(178, 194), parts=[
  WordNode(pos=(178, 179), word='['),
  WordNode(pos=(180, 181), word='!'),
  WordNode(pos=(182, 184), word='-d'),
  WordNode(pos=(185, 192), word='$home', parts=[
    ParameterNode(pos=(186, 191), value='home'),
  ]),
  WordNode(pos=(193, 194), word=']'),
])


3354) mkdir -p "$home"

CommandNode(pos=(204, 220), parts=[
  WordNode(pos=(204, 209), word='mkdir'),
  WordNode(pos=(210, 212), word='-p'),
  WordNode(pos=(213, 220), word='$home', parts=[
    ParameterNode(pos=(214, 219), value='home'),
  ]),
])


3355) chown "$user" "$home"

CommandNode(pos=(225, 246), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 238), word='$user', parts=[
    ParameterNode(pos=(232, 237), value='user'),
  ]),
  WordNode(pos=(239, 246), word='$home', parts=[
    ParameterNode(pos=(240, 245), value='home'),
  ]),
])


3356) chmod 755 "$home"

CommandNode(pos=(251, 268), parts=[
  WordNode(pos=(251, 256), word='chmod'),
  WordNode(pos=(257, 260), word='755'),
  WordNode(pos=(261, 268), word='$home', parts=[
    ParameterNode(pos=(262, 267), value='home'),
  ]),
])


3357) chroot rootfs /bin/sh -xec 'true'

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 6), word='chroot'),
  WordNode(pos=(7, 13), word='rootfs'),
  WordNode(pos=(14, 21), word='/bin/sh'),
  WordNode(pos=(22, 26), word='-xec'),
  WordNode(pos=(27, 33), word='true'),
])


3358) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3359) ln -vL /usr/share/zoneinfo/UTC rootfs/etc/localtime

CommandNode(pos=(10, 61), parts=[
  WordNode(pos=(10, 12), word='ln'),
  WordNode(pos=(13, 16), word='-vL'),
  WordNode(pos=(17, 40), word='/usr/share/zoneinfo/UTC'),
  WordNode(pos=(41, 61), word='rootfs/etc/localtime'),
])


3360) [ "$(chroot rootfs date +%Z)" = 'UTC' ]

CommandNode(pos=(64, 103), parts=[
  WordNode(pos=(64, 65), word='['),
  WordNode(pos=(66, 93), word='$(chroot rootfs date +%Z)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(69, 91), parts=[
        WordNode(pos=(69, 75), word='chroot'),
        WordNode(pos=(76, 82), word='rootfs'),
        WordNode(pos=(83, 87), word='date'),
        WordNode(pos=(88, 91), word='+%Z'),
      ]), pos=(67, 92)),
  ]),
  WordNode(pos=(94, 95), word='='),
  WordNode(pos=(96, 101), word='UTC'),
  WordNode(pos=(102, 103), word=']'),
])


3361) cp -L /etc/resolv.conf rootfs/etc/

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 2), word='cp'),
  WordNode(pos=(3, 5), word='-L'),
  WordNode(pos=(6, 22), word='/etc/resolv.conf'),
  WordNode(pos=(23, 34), word='rootfs/etc/'),
])


3362) chroot rootfs /bin/sh -xec 'nslookup google.com'

CommandNode(pos=(39, 87), parts=[
  WordNode(pos=(39, 45), word='chroot'),
  WordNode(pos=(46, 52), word='rootfs'),
  WordNode(pos=(53, 60), word='/bin/sh'),
  WordNode(pos=(61, 65), word='-xec'),
  WordNode(pos=(66, 87), word='nslookup google.com'),
])


3363) rm rootfs/etc/resolv.conf

CommandNode(pos=(92, 117), parts=[
  WordNode(pos=(92, 94), word='rm'),
  WordNode(pos=(95, 117), word='rootfs/etc/resolv.conf'),
])


3364) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3365) apt-get install -y --no-install-recommends   bzip2   ca-certificates   libffi-dev   libgdbm3   libgmp-dev   libssl-dev   libyaml-dev   procps   zlib1g-dev

CommandNode(pos=(19, 173), parts=[
  WordNode(pos=(19, 26), word='apt-get'),
  WordNode(pos=(27, 34), word='install'),
  WordNode(pos=(35, 37), word='-y'),
  WordNode(pos=(38, 61), word='--no-install-recommends'),
  WordNode(pos=(64, 69), word='bzip2'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(90, 100), word='libffi-dev'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 124), word='libgmp-dev'),
  WordNode(pos=(127, 137), word='libssl-dev'),
  WordNode(pos=(140, 151), word='libyaml-dev'),
  WordNode(pos=(154, 160), word='procps'),
  WordNode(pos=(163, 173), word='zlib1g-dev'),
])


3366) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(178, 205), parts=[
  WordNode(pos=(178, 180), word='rm'),
  WordNode(pos=(181, 184), word='-rf'),
  WordNode(pos=(185, 205), word='/var/lib/apt/lists/*'),
])


3367) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


3368) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


3369) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


3370) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3371) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


3372) apt-get update

CommandNode(pos=(55, 69), parts=[
  WordNode(pos=(55, 62), word='apt-get'),
  WordNode(pos=(63, 69), word='update'),
])


3373) apt-get install -y --no-install-recommends   autoconf   bison   dpkg-dev   gcc   libbz2-dev   libgdbm-dev   libglib2.0-dev   libncurses-dev   libreadline-dev   libxml2-dev   libxslt-dev   make   ruby   wget   xz-utils

CommandNode(pos=(73, 290), parts=[
  WordNode(pos=(73, 80), word='apt-get'),
  WordNode(pos=(81, 88), word='install'),
  WordNode(pos=(89, 91), word='-y'),
  WordNode(pos=(92, 115), word='--no-install-recommends'),
  WordNode(pos=(118, 126), word='autoconf'),
  WordNode(pos=(129, 134), word='bison'),
  WordNode(pos=(137, 145), word='dpkg-dev'),
  WordNode(pos=(148, 151), word='gcc'),
  WordNode(pos=(154, 164), word='libbz2-dev'),
  WordNode(pos=(167, 178), word='libgdbm-dev'),
  WordNode(pos=(181, 195), word='libglib2.0-dev'),
  WordNode(pos=(198, 212), word='libncurses-dev'),
  WordNode(pos=(215, 230), word='libreadline-dev'),
  WordNode(pos=(233, 244), word='libxml2-dev'),
  WordNode(pos=(247, 258), word='libxslt-dev'),
  WordNode(pos=(261, 265), word='make'),
  WordNode(pos=(268, 272), word='ruby'),
  WordNode(pos=(275, 279), word='wget'),
  WordNode(pos=(282, 290), word='xz-utils'),
])


3374) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(295, 322), parts=[
  WordNode(pos=(295, 297), word='rm'),
  WordNode(pos=(298, 301), word='-rf'),
  WordNode(pos=(302, 322), word='/var/lib/apt/lists/*'),
])


3375) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


3376) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


3377) sha256sum -c -

CommandNode(pos=(479, 493), parts=[
  WordNode(pos=(479, 488), word='sha256sum'),
  WordNode(pos=(489, 491), word='-c'),
  WordNode(pos=(492, 493), word='-'),
])


3378) mkdir -p /usr/src/ruby

CommandNode(pos=(499, 521), parts=[
  WordNode(pos=(499, 504), word='mkdir'),
  WordNode(pos=(505, 507), word='-p'),
  WordNode(pos=(508, 521), word='/usr/src/ruby'),
])


3379) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(526, 584), parts=[
  WordNode(pos=(526, 529), word='tar'),
  WordNode(pos=(530, 534), word='-xJf'),
  WordNode(pos=(535, 546), word='ruby.tar.xz'),
  WordNode(pos=(547, 549), word='-C'),
  WordNode(pos=(550, 563), word='/usr/src/ruby'),
  WordNode(pos=(564, 584), word='--strip-components=1'),
])


3380) rm ruby.tar.xz

CommandNode(pos=(589, 603), parts=[
  WordNode(pos=(589, 591), word='rm'),
  WordNode(pos=(592, 603), word='ruby.tar.xz'),
])


3381) cd /usr/src/ruby

CommandNode(pos=(609, 625), parts=[
  WordNode(pos=(609, 611), word='cd'),
  WordNode(pos=(612, 625), word='/usr/src/ruby'),
])


3382) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(635, 669), parts=[
  WordNode(pos=(635, 639), word='echo'),
  WordNode(pos=(640, 669), word='#define ENABLE_PATH_CHECK 0'),
])


3383) echo

CommandNode(pos=(673, 677), parts=[
  WordNode(pos=(673, 677), word='echo'),
])


3384) cat file.c

CommandNode(pos=(681, 691), parts=[
  WordNode(pos=(681, 684), word='cat'),
  WordNode(pos=(685, 691), word='file.c'),
])


3385) mv file.c.new file.c

CommandNode(pos=(713, 733), parts=[
  WordNode(pos=(713, 715), word='mv'),
  WordNode(pos=(716, 726), word='file.c.new'),
  WordNode(pos=(727, 733), word='file.c'),
])


3386) autoconf

CommandNode(pos=(739, 747), parts=[
  WordNode(pos=(739, 747), word='autoconf'),
])


3387) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


3388) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


3389) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


3390) make install

CommandNode(pos=(916, 928), parts=[
  WordNode(pos=(916, 920), word='make'),
  WordNode(pos=(921, 928), word='install'),
])


3391) apt-mark auto '.*' > /dev/null

CommandNode(pos=(934, 964), parts=[
  WordNode(pos=(934, 942), word='apt-mark'),
  WordNode(pos=(943, 947), word='auto'),
  WordNode(pos=(948, 952), word='.*'),
  RedirectNode(output=
    WordNode(pos=(955, 964), word='/dev/null'), pos=(953, 964), type='>'),
])


3392) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


3393) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec ldd '{}' ';'

CommandNode(pos=(1003, 1086), parts=[
  WordNode(pos=(1003, 1007), word='find'),
  WordNode(pos=(1008, 1018), word='/usr/local'),
  WordNode(pos=(1019, 1024), word='-type'),
  WordNode(pos=(1025, 1026), word='f'),
  WordNode(pos=(1027, 1038), word='-executable'),
  WordNode(pos=(1039, 1043), word='-not'),
  WordNode(pos=(1044, 1046), word='('),
  WordNode(pos=(1047, 1052), word='-name'),
  WordNode(pos=(1053, 1064), word='*tkinter*'),
  WordNode(pos=(1065, 1067), word=')'),
  WordNode(pos=(1068, 1073), word='-exec'),
  WordNode(pos=(1074, 1077), word='ldd'),
  WordNode(pos=(1078, 1082), word='{}'),
  WordNode(pos=(1083, 1086), word=';'),
])


3394) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1091, 1119), parts=[
  WordNode(pos=(1091, 1094), word='awk'),
  WordNode(pos=(1095, 1119), word='/=>/ { print $(NF-1) }'),
])


3395) sort -u

CommandNode(pos=(1124, 1131), parts=[
  WordNode(pos=(1124, 1128), word='sort'),
  WordNode(pos=(1129, 1131), word='-u'),
])


3396) xargs -r dpkg-query --search

CommandNode(pos=(1136, 1164), parts=[
  WordNode(pos=(1136, 1141), word='xargs'),
  WordNode(pos=(1142, 1144), word='-r'),
  WordNode(pos=(1145, 1155), word='dpkg-query'),
  WordNode(pos=(1156, 1164), word='--search'),
])


3397) cut -d: -f1

CommandNode(pos=(1169, 1180), parts=[
  WordNode(pos=(1169, 1172), word='cut'),
  WordNode(pos=(1173, 1176), word='-d:'),
  WordNode(pos=(1177, 1180), word='-f1'),
])


3398) sort -u

CommandNode(pos=(1185, 1192), parts=[
  WordNode(pos=(1185, 1189), word='sort'),
  WordNode(pos=(1190, 1192), word='-u'),
])


3399) xargs -r apt-mark manual

CommandNode(pos=(1197, 1221), parts=[
  WordNode(pos=(1197, 1202), word='xargs'),
  WordNode(pos=(1203, 1205), word='-r'),
  WordNode(pos=(1206, 1214), word='apt-mark'),
  WordNode(pos=(1215, 1221), word='manual'),
])


3400) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1226, 1302), parts=[
  WordNode(pos=(1226, 1233), word='apt-get'),
  WordNode(pos=(1234, 1239), word='purge'),
  WordNode(pos=(1240, 1242), word='-y'),
  WordNode(pos=(1243, 1256), word='--auto-remove'),
  WordNode(pos=(1257, 1259), word='-o'),
  WordNode(pos=(1260, 1302), word='APT::AutoRemove::RecommendsImportant=false'),
])


3401) cd /

CommandNode(pos=(1308, 1312), parts=[
  WordNode(pos=(1308, 1310), word='cd'),
  WordNode(pos=(1311, 1312), word='/'),
])


3402) rm -r /usr/src/ruby

CommandNode(pos=(1317, 1336), parts=[
  WordNode(pos=(1317, 1319), word='rm'),
  WordNode(pos=(1320, 1322), word='-r'),
  WordNode(pos=(1323, 1336), word='/usr/src/ruby'),
])


3403) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(1341, 1437), parts=[
  WordNode(pos=(1341, 1345), word='ruby'),
  WordNode(pos=(1346, 1348), word='-e'),
  WordNode(pos=(1349, 1437), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


3404) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1442, 1481), parts=[
  WordNode(pos=(1442, 1445), word='gem'),
  WordNode(pos=(1446, 1452), word='update'),
  WordNode(pos=(1453, 1461), word='--system'),
  WordNode(pos=(1462, 1481), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1463, 1480), value='RUBYGEMS_VERSION'),
  ]),
])


3405) rm -r /root/.gem/

CommandNode(pos=(1485, 1502), parts=[
  WordNode(pos=(1485, 1487), word='rm'),
  WordNode(pos=(1488, 1490), word='-r'),
  WordNode(pos=(1491, 1502), word='/root/.gem/'),
])


3406) ruby --version

CommandNode(pos=(1507, 1521), parts=[
  WordNode(pos=(1507, 1511), word='ruby'),
  WordNode(pos=(1512, 1521), word='--version'),
])


3407) gem --version

CommandNode(pos=(1525, 1538), parts=[
  WordNode(pos=(1525, 1528), word='gem'),
  WordNode(pos=(1529, 1538), word='--version'),
])


3408) bundle --version

CommandNode(pos=(1542, 1558), parts=[
  WordNode(pos=(1542, 1548), word='bundle'),
  WordNode(pos=(1549, 1558), word='--version'),
])


3409) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


3410) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


3411) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3412) apt-get install -y --no-install-recommends   tcl   tk

CommandNode(pos=(18, 71), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='tcl'),
  WordNode(pos=(69, 71), word='tk'),
])


3413) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(76, 103), parts=[
  WordNode(pos=(76, 78), word='rm'),
  WordNode(pos=(79, 82), word='-rf'),
  WordNode(pos=(83, 103), word='/var/lib/apt/lists/*'),
])


3414) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3415) %%ARCH-CASE%%

CommandNode(pos=(11, 24), parts=[
  WordNode(pos=(11, 24), word='%%ARCH-CASE%%'),
])


3416) wget -O pypy.tar.bz2 "https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2" --progress=dot:giga

CommandNode(pos=(28, 157), parts=[
  WordNode(pos=(28, 32), word='wget'),
  WordNode(pos=(33, 35), word='-O'),
  WordNode(pos=(36, 48), word='pypy.tar.bz2'),
  WordNode(pos=(49, 137), word='https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2', parts=[
    ParameterNode(pos=(101, 116), value='PYPY_VERSION'),
    ParameterNode(pos=(117, 128), value='pypyArch'),
  ]),
  WordNode(pos=(138, 157), word='--progress=dot:giga'),
])


3417) echo "$sha256 *pypy.tar.bz2"

CommandNode(pos=(160, 188), parts=[
  WordNode(pos=(160, 164), word='echo'),
  WordNode(pos=(165, 188), word='$sha256 *pypy.tar.bz2', parts=[
    ParameterNode(pos=(166, 173), value='sha256'),
  ]),
])


3418) sha256sum -c

CommandNode(pos=(191, 203), parts=[
  WordNode(pos=(191, 200), word='sha256sum'),
  WordNode(pos=(201, 203), word='-c'),
])


3419) tar -xjC /usr/local --strip-components=1 -f pypy.tar.bz2

CommandNode(pos=(206, 262), parts=[
  WordNode(pos=(206, 209), word='tar'),
  WordNode(pos=(210, 214), word='-xjC'),
  WordNode(pos=(215, 225), word='/usr/local'),
  WordNode(pos=(226, 246), word='--strip-components=1'),
  WordNode(pos=(247, 249), word='-f'),
  WordNode(pos=(250, 262), word='pypy.tar.bz2'),
])


3420) find /usr/local/lib-python -depth -type d -a \( -name test -o -name tests \) -exec rm -rf '{}' +

CommandNode(pos=(265, 361), parts=[
  WordNode(pos=(265, 269), word='find'),
  WordNode(pos=(270, 291), word='/usr/local/lib-python'),
  WordNode(pos=(292, 298), word='-depth'),
  WordNode(pos=(299, 304), word='-type'),
  WordNode(pos=(305, 306), word='d'),
  WordNode(pos=(307, 309), word='-a'),
  WordNode(pos=(310, 312), word='('),
  WordNode(pos=(313, 318), word='-name'),
  WordNode(pos=(319, 323), word='test'),
  WordNode(pos=(324, 326), word='-o'),
  WordNode(pos=(327, 332), word='-name'),
  WordNode(pos=(333, 338), word='tests'),
  WordNode(pos=(339, 341), word=')'),
  WordNode(pos=(342, 347), word='-exec'),
  WordNode(pos=(348, 350), word='rm'),
  WordNode(pos=(351, 354), word='-rf'),
  WordNode(pos=(355, 359), word='{}'),
  WordNode(pos=(360, 361), word='+'),
])


3421) rm pypy.tar.bz2

CommandNode(pos=(364, 379), parts=[
  WordNode(pos=(364, 366), word='rm'),
  WordNode(pos=(367, 379), word='pypy.tar.bz2'),
])


3422) %%CMD%% --version

CommandNode(pos=(383, 400), parts=[
  WordNode(pos=(383, 390), word='%%CMD%%'),
  WordNode(pos=(391, 400), word='--version'),
])


3423) [ -f /usr/local/lib_pypy/_ssl_build.py ]

CommandNode(pos=(407, 447), parts=[
  WordNode(pos=(407, 408), word='['),
  WordNode(pos=(409, 411), word='-f'),
  WordNode(pos=(412, 445), word='/usr/local/lib_pypy/_ssl_build.py'),
  WordNode(pos=(446, 447), word=']'),
])


3424) cd /usr/local/lib_pypy

CommandNode(pos=(456, 478), parts=[
  WordNode(pos=(456, 458), word='cd'),
  WordNode(pos=(459, 478), word='/usr/local/lib_pypy'),
])


3425) %%CMD%% _ssl_build.py

CommandNode(pos=(482, 503), parts=[
  WordNode(pos=(482, 489), word='%%CMD%%'),
  WordNode(pos=(490, 503), word='_ssl_build.py'),
])


3426) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3427) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


3428) %%CMD%% get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 166), parts=[
  WordNode(pos=(72, 79), word='%%CMD%%'),
  WordNode(pos=(80, 90), word='get-pip.py'),
  WordNode(pos=(93, 120), word='--disable-pip-version-check'),
  WordNode(pos=(123, 137), word='--no-cache-dir'),
  WordNode(pos=(140, 166), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(146, 165), value='PYTHON_PIP_VERSION'),
  ]),
])


3429) pip --version

CommandNode(pos=(171, 184), parts=[
  WordNode(pos=(171, 174), word='pip'),
  WordNode(pos=(175, 184), word='--version'),
])


3430) rm -f get-pip.py

CommandNode(pos=(188, 204), parts=[
  WordNode(pos=(188, 190), word='rm'),
  WordNode(pos=(191, 193), word='-f'),
  WordNode(pos=(194, 204), word='get-pip.py'),
])


3431) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3432) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


3433) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


3434) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3435) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


3436) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


3437) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


3438) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


3439) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3440) apk add --no-cache --virtual .build-deps   coreutils   freetype-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev   postgresql-dev

CommandNode(pos=(12, 142), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 64), word='coreutils'),
  WordNode(pos=(67, 79), word='freetype-dev'),
  WordNode(pos=(82, 99), word='libjpeg-turbo-dev'),
  WordNode(pos=(102, 112), word='libpng-dev'),
  WordNode(pos=(115, 125), word='libzip-dev'),
  WordNode(pos=(128, 142), word='postgresql-dev'),
])


3441) docker-php-ext-configure gd   --with-freetype-dir=/usr/include/   --with-jpeg-dir=/usr/include/   --with-png-dir=/usr/include/

CommandNode(pos=(147, 273), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 174), word='gd'),
  WordNode(pos=(177, 210), word='--with-freetype-dir=/usr/include/'),
  WordNode(pos=(213, 242), word='--with-jpeg-dir=/usr/include/'),
  WordNode(pos=(245, 273), word='--with-png-dir=/usr/include/'),
])


3442) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(278, 359), parts=[
  WordNode(pos=(278, 300), word='docker-php-ext-install'),
  WordNode(pos=(301, 303), word='-j'),
  WordNode(pos=(304, 314), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(307, 312), parts=[
        WordNode(pos=(307, 312), word='nproc'),
      ]), pos=(305, 313)),
  ]),
  WordNode(pos=(317, 319), word='gd'),
  WordNode(pos=(322, 329), word='opcache'),
  WordNode(pos=(332, 341), word='pdo_mysql'),
  WordNode(pos=(344, 353), word='pdo_pgsql'),
  WordNode(pos=(356, 359), word='zip'),
])


3443) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


3444) apk add --virtual .drupal-phpexts-rundeps $runDeps

CommandNode(pos=(566, 616), parts=[
  WordNode(pos=(566, 569), word='apk'),
  WordNode(pos=(570, 573), word='add'),
  WordNode(pos=(574, 583), word='--virtual'),
  WordNode(pos=(584, 607), word='.drupal-phpexts-rundeps'),
  WordNode(pos=(608, 616), word='$runDeps', parts=[
    ParameterNode(pos=(608, 616), value='runDeps'),
  ]),
])


3445) apk del .build-deps

CommandNode(pos=(621, 640), parts=[
  WordNode(pos=(621, 624), word='apk'),
  WordNode(pos=(625, 628), word='del'),
  WordNode(pos=(629, 640), word='.build-deps'),
])


3446) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


3447) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


3448) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


3449) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


3450) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


3451) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


3452) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


3453) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


3454) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


3455) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


3456) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


3457) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


3458) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3459) apt-get install -y --no-install-recommends   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 119), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='git'),
  WordNode(pos=(69, 78), word='mercurial'),
  WordNode(pos=(81, 95), word='openssh-client'),
  WordNode(pos=(98, 108), word='subversion'),
  WordNode(pos=(113, 119), word='procps'),
])


3460) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(124, 151), parts=[
  WordNode(pos=(124, 126), word='rm'),
  WordNode(pos=(127, 130), word='-rf'),
  WordNode(pos=(131, 151), word='/var/lib/apt/lists/*'),
])


3461) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


3462) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


3463) apt-get update

CommandNode(pos=(54, 68), parts=[
  WordNode(pos=(54, 61), word='apt-get'),
  WordNode(pos=(62, 68), word='update'),
])


3464) apt-get install -y --no-install-recommends   ca-certificates   gcc   libc6-dev   liblua5.3-dev   libpcre2-dev   libssl-dev   make   wget   zlib1g-dev

CommandNode(pos=(72, 221), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 87), word='install'),
  WordNode(pos=(88, 90), word='-y'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 138), word='gcc'),
  WordNode(pos=(141, 150), word='libc6-dev'),
  WordNode(pos=(153, 166), word='liblua5.3-dev'),
  WordNode(pos=(169, 181), word='libpcre2-dev'),
  WordNode(pos=(184, 194), word='libssl-dev'),
  WordNode(pos=(197, 201), word='make'),
  WordNode(pos=(204, 208), word='wget'),
  WordNode(pos=(211, 221), word='zlib1g-dev'),
])


3465) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(226, 253), parts=[
  WordNode(pos=(226, 228), word='rm'),
  WordNode(pos=(229, 232), word='-rf'),
  WordNode(pos=(233, 253), word='/var/lib/apt/lists/*'),
])


3466) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


3467) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


3468) sha256sum -c

CommandNode(pos=(342, 354), parts=[
  WordNode(pos=(342, 351), word='sha256sum'),
  WordNode(pos=(352, 354), word='-c'),
])


3469) mkdir -p /usr/src/haproxy

CommandNode(pos=(359, 384), parts=[
  WordNode(pos=(359, 364), word='mkdir'),
  WordNode(pos=(365, 367), word='-p'),
  WordNode(pos=(368, 384), word='/usr/src/haproxy'),
])


3470) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(389, 453), parts=[
  WordNode(pos=(389, 392), word='tar'),
  WordNode(pos=(393, 397), word='-xzf'),
  WordNode(pos=(398, 412), word='haproxy.tar.gz'),
  WordNode(pos=(413, 415), word='-C'),
  WordNode(pos=(416, 432), word='/usr/src/haproxy'),
  WordNode(pos=(433, 453), word='--strip-components=1'),
])


3471) rm haproxy.tar.gz

CommandNode(pos=(458, 475), parts=[
  WordNode(pos=(458, 460), word='rm'),
  WordNode(pos=(461, 475), word='haproxy.tar.gz'),
])


3472) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 632), parts=[
  AssignmentNode(pos=(481, 632), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


3473) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(637, 689), parts=[
  WordNode(pos=(637, 641), word='make'),
  WordNode(pos=(642, 644), word='-C'),
  WordNode(pos=(645, 661), word='/usr/src/haproxy'),
  WordNode(pos=(662, 664), word='-j'),
  WordNode(pos=(665, 675), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(668, 673), parts=[
        WordNode(pos=(668, 673), word='nproc'),
      ]), pos=(666, 674)),
  ]),
  WordNode(pos=(676, 679), word='all'),
  WordNode(pos=(680, 689), word='$makeOpts', parts=[
    ParameterNode(pos=(680, 689), value='makeOpts'),
  ]),
])


3474) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(694, 740), parts=[
  WordNode(pos=(694, 698), word='make'),
  WordNode(pos=(699, 701), word='-C'),
  WordNode(pos=(702, 718), word='/usr/src/haproxy'),
  WordNode(pos=(719, 730), word='install-bin'),
  WordNode(pos=(731, 740), word='$makeOpts', parts=[
    ParameterNode(pos=(731, 740), value='makeOpts'),
  ]),
])


3475) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(746, 777), parts=[
  WordNode(pos=(746, 751), word='mkdir'),
  WordNode(pos=(752, 754), word='-p'),
  WordNode(pos=(755, 777), word='/usr/local/etc/haproxy'),
])


3476) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(782, 854), parts=[
  WordNode(pos=(782, 784), word='cp'),
  WordNode(pos=(785, 787), word='-R'),
  WordNode(pos=(788, 824), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(825, 854), word='/usr/local/etc/haproxy/errors'),
])


3477) rm -rf /usr/src/haproxy

CommandNode(pos=(859, 882), parts=[
  WordNode(pos=(859, 861), word='rm'),
  WordNode(pos=(862, 865), word='-rf'),
  WordNode(pos=(866, 882), word='/usr/src/haproxy'),
])


3478) apt-mark auto '.*' > /dev/null

CommandNode(pos=(888, 918), parts=[
  WordNode(pos=(888, 896), word='apt-mark'),
  WordNode(pos=(897, 901), word='auto'),
  WordNode(pos=(902, 906), word='.*'),
  RedirectNode(output=
    WordNode(pos=(909, 918), word='/dev/null'), pos=(907, 918), type='>'),
])


3479) [ -z "$savedAptMark" ]

CommandNode(pos=(925, 947), parts=[
  WordNode(pos=(925, 926), word='['),
  WordNode(pos=(927, 929), word='-z'),
  WordNode(pos=(930, 945), word='$savedAptMark', parts=[
    ParameterNode(pos=(931, 944), value='savedAptMark'),
  ]),
  WordNode(pos=(946, 947), word=']'),
])


3480) apt-mark manual $savedAptMark

CommandNode(pos=(951, 980), parts=[
  WordNode(pos=(951, 959), word='apt-mark'),
  WordNode(pos=(960, 966), word='manual'),
  WordNode(pos=(967, 980), word='$savedAptMark', parts=[
    ParameterNode(pos=(967, 980), value='savedAptMark'),
  ]),
])


3481) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(988, 1042), parts=[
  WordNode(pos=(988, 992), word='find'),
  WordNode(pos=(993, 1003), word='/usr/local'),
  WordNode(pos=(1004, 1009), word='-type'),
  WordNode(pos=(1010, 1011), word='f'),
  WordNode(pos=(1012, 1023), word='-executable'),
  WordNode(pos=(1024, 1029), word='-exec'),
  WordNode(pos=(1030, 1033), word='ldd'),
  WordNode(pos=(1034, 1038), word='{}'),
  WordNode(pos=(1039, 1042), word=';'),
])


3482) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1047, 1075), parts=[
  WordNode(pos=(1047, 1050), word='awk'),
  WordNode(pos=(1051, 1075), word='/=>/ { print $(NF-1) }'),
])


3483) sort -u

CommandNode(pos=(1080, 1087), parts=[
  WordNode(pos=(1080, 1084), word='sort'),
  WordNode(pos=(1085, 1087), word='-u'),
])


3484) xargs -r dpkg-query --search

CommandNode(pos=(1092, 1120), parts=[
  WordNode(pos=(1092, 1097), word='xargs'),
  WordNode(pos=(1098, 1100), word='-r'),
  WordNode(pos=(1101, 1111), word='dpkg-query'),
  WordNode(pos=(1112, 1120), word='--search'),
])


3485) cut -d: -f1

CommandNode(pos=(1125, 1136), parts=[
  WordNode(pos=(1125, 1128), word='cut'),
  WordNode(pos=(1129, 1132), word='-d:'),
  WordNode(pos=(1133, 1136), word='-f1'),
])


3486) sort -u

CommandNode(pos=(1141, 1148), parts=[
  WordNode(pos=(1141, 1145), word='sort'),
  WordNode(pos=(1146, 1148), word='-u'),
])


3487) xargs -r apt-mark manual

CommandNode(pos=(1153, 1177), parts=[
  WordNode(pos=(1153, 1158), word='xargs'),
  WordNode(pos=(1159, 1161), word='-r'),
  WordNode(pos=(1162, 1170), word='apt-mark'),
  WordNode(pos=(1171, 1177), word='manual'),
])


3488) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1182, 1258), parts=[
  WordNode(pos=(1182, 1189), word='apt-get'),
  WordNode(pos=(1190, 1195), word='purge'),
  WordNode(pos=(1196, 1198), word='-y'),
  WordNode(pos=(1199, 1212), word='--auto-remove'),
  WordNode(pos=(1213, 1215), word='-o'),
  WordNode(pos=(1216, 1258), word='APT::AutoRemove::RecommendsImportant=false'),
])


3489) groupadd -r redmine

CommandNode(pos=(0, 19), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 19), word='redmine'),
])


3490) useradd -r -g redmine redmine

CommandNode(pos=(23, 52), parts=[
  WordNode(pos=(23, 30), word='useradd'),
  WordNode(pos=(31, 33), word='-r'),
  WordNode(pos=(34, 36), word='-g'),
  WordNode(pos=(37, 44), word='redmine'),
  WordNode(pos=(45, 52), word='redmine'),
])


3491) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3492) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


3493) apt-get install -y --no-install-recommends   ca-certificates   wget     bzr   git   mercurial   openssh-client   subversion     gsfonts   imagemagick

CommandNode(pos=(28, 177), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 95), word='wget'),
  WordNode(pos=(100, 103), word='bzr'),
  WordNode(pos=(106, 109), word='git'),
  WordNode(pos=(112, 121), word='mercurial'),
  WordNode(pos=(124, 138), word='openssh-client'),
  WordNode(pos=(141, 151), word='subversion'),
  WordNode(pos=(156, 163), word='gsfonts'),
  WordNode(pos=(166, 177), word='imagemagick'),
])


3494) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(182, 209), parts=[
  WordNode(pos=(182, 184), word='rm'),
  WordNode(pos=(185, 188), word='-rf'),
  WordNode(pos=(189, 209), word='/var/lib/apt/lists/*'),
])


3495) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3496) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


3497) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


3498) apt-get install -y --no-install-recommends   dirmngr   gnupg

CommandNode(pos=(68, 128), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(113, 120), word='dirmngr'),
  WordNode(pos=(123, 128), word='gnupg'),
])


3499) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(133, 160), parts=[
  WordNode(pos=(133, 135), word='rm'),
  WordNode(pos=(136, 139), word='-rf'),
  WordNode(pos=(140, 160), word='/var/lib/apt/lists/*'),
])


3500) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(164, 229), parts=[
  AssignmentNode(pos=(164, 229), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(176, 227), parts=[
        CommandNode(pos=(176, 201), parts=[
          WordNode(pos=(176, 180), word='dpkg'),
          WordNode(pos=(181, 201), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(202, 203)),
        CommandNode(pos=(204, 227), parts=[
          WordNode(pos=(204, 207), word='awk'),
          WordNode(pos=(208, 211), word='-F-'),
          WordNode(pos=(212, 227), word='{ print $NF }'),
        ]),
      ]), pos=(174, 228)),
  ]),
])


3501) export GOSU_VERSION='1.11'

CommandNode(pos=(233, 259), parts=[
  WordNode(pos=(233, 239), word='export'),
  WordNode(pos=(240, 259), word='GOSU_VERSION=1.11'),
])


3502) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(262, 369), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 289), word='/usr/local/bin/gosu'),
  WordNode(pos=(290, 369), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(340, 353), value='GOSU_VERSION'),
    ParameterNode(pos=(359, 368), value='dpkgArch'),
  ]),
])


3503) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(372, 487), parts=[
  WordNode(pos=(372, 376), word='wget'),
  WordNode(pos=(377, 379), word='-O'),
  WordNode(pos=(380, 403), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(404, 487), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(454, 467), value='GOSU_VERSION'),
    ParameterNode(pos=(473, 482), value='dpkgArch'),
  ]),
])


3504) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(490, 521), parts=[
  WordNode(pos=(490, 496), word='export'),
  WordNode(pos=(497, 521), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(510, 519), parts=[
        WordNode(pos=(510, 516), word='mktemp'),
        WordNode(pos=(517, 519), word='-d'),
      ]), pos=(508, 520)),
  ]),
])


3505) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(524, 627), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 547), word='--keyserver'),
  WordNode(pos=(548, 574), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(575, 586), word='--recv-keys'),
  WordNode(pos=(587, 627), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


3506) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(630, 694), parts=[
  WordNode(pos=(630, 633), word='gpg'),
  WordNode(pos=(634, 641), word='--batch'),
  WordNode(pos=(642, 650), word='--verify'),
  WordNode(pos=(651, 674), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(675, 694), word='/usr/local/bin/gosu'),
])


3507) gpgconf --kill all

CommandNode(pos=(697, 715), parts=[
  WordNode(pos=(697, 704), word='gpgconf'),
  WordNode(pos=(705, 711), word='--kill'),
  WordNode(pos=(712, 715), word='all'),
])


3508) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(718, 760), parts=[
  WordNode(pos=(718, 720), word='rm'),
  WordNode(pos=(721, 723), word='-r'),
  WordNode(pos=(724, 736), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(725, 735), value='GNUPGHOME'),
  ]),
  WordNode(pos=(737, 760), word='/usr/local/bin/gosu.asc'),
])


3509) chmod +x /usr/local/bin/gosu

CommandNode(pos=(763, 791), parts=[
  WordNode(pos=(763, 768), word='chmod'),
  WordNode(pos=(769, 771), word='+x'),
  WordNode(pos=(772, 791), word='/usr/local/bin/gosu'),
])


3510) gosu nobody true

CommandNode(pos=(794, 810), parts=[
  WordNode(pos=(794, 798), word='gosu'),
  WordNode(pos=(799, 805), word='nobody'),
  WordNode(pos=(806, 810), word='true'),
])


3511) export TINI_VERSION='0.18.0'

CommandNode(pos=(814, 842), parts=[
  WordNode(pos=(814, 820), word='export'),
  WordNode(pos=(821, 842), word='TINI_VERSION=0.18.0'),
])


3512) wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"

CommandNode(pos=(845, 954), parts=[
  WordNode(pos=(845, 849), word='wget'),
  WordNode(pos=(850, 852), word='-O'),
  WordNode(pos=(853, 872), word='/usr/local/bin/tini'),
  WordNode(pos=(873, 954), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch', parts=[
    ParameterNode(pos=(925, 938), value='TINI_VERSION'),
    ParameterNode(pos=(944, 953), value='dpkgArch'),
  ]),
])


3513) wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"

CommandNode(pos=(957, 1074), parts=[
  WordNode(pos=(957, 961), word='wget'),
  WordNode(pos=(962, 964), word='-O'),
  WordNode(pos=(965, 988), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(989, 1074), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc', parts=[
    ParameterNode(pos=(1041, 1054), value='TINI_VERSION'),
    ParameterNode(pos=(1060, 1069), value='dpkgArch'),
  ]),
])


3514) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(1077, 1108), parts=[
  WordNode(pos=(1077, 1083), word='export'),
  WordNode(pos=(1084, 1108), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1097, 1106), parts=[
        WordNode(pos=(1097, 1103), word='mktemp'),
        WordNode(pos=(1104, 1106), word='-d'),
      ]), pos=(1095, 1107)),
  ]),
])


3515) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5

CommandNode(pos=(1111, 1214), parts=[
  WordNode(pos=(1111, 1114), word='gpg'),
  WordNode(pos=(1115, 1122), word='--batch'),
  WordNode(pos=(1123, 1134), word='--keyserver'),
  WordNode(pos=(1135, 1161), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(1162, 1173), word='--recv-keys'),
  WordNode(pos=(1174, 1214), word='6380DC428747F6C393FEACA59A84159D7001A4E5'),
])


3516) gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini

CommandNode(pos=(1217, 1281), parts=[
  WordNode(pos=(1217, 1220), word='gpg'),
  WordNode(pos=(1221, 1228), word='--batch'),
  WordNode(pos=(1229, 1237), word='--verify'),
  WordNode(pos=(1238, 1261), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(1262, 1281), word='/usr/local/bin/tini'),
])


3517) gpgconf --kill all

CommandNode(pos=(1284, 1302), parts=[
  WordNode(pos=(1284, 1291), word='gpgconf'),
  WordNode(pos=(1292, 1298), word='--kill'),
  WordNode(pos=(1299, 1302), word='all'),
])


3518) rm -r "$GNUPGHOME" /usr/local/bin/tini.asc

CommandNode(pos=(1305, 1347), parts=[
  WordNode(pos=(1305, 1307), word='rm'),
  WordNode(pos=(1308, 1310), word='-r'),
  WordNode(pos=(1311, 1323), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1312, 1322), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1324, 1347), word='/usr/local/bin/tini.asc'),
])


3519) chmod +x /usr/local/bin/tini

CommandNode(pos=(1350, 1378), parts=[
  WordNode(pos=(1350, 1355), word='chmod'),
  WordNode(pos=(1356, 1358), word='+x'),
  WordNode(pos=(1359, 1378), word='/usr/local/bin/tini'),
])


3520) tini -h

CommandNode(pos=(1381, 1388), parts=[
  WordNode(pos=(1381, 1385), word='tini'),
  WordNode(pos=(1386, 1388), word='-h'),
])


3521) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1392, 1422), parts=[
  WordNode(pos=(1392, 1400), word='apt-mark'),
  WordNode(pos=(1401, 1405), word='auto'),
  WordNode(pos=(1406, 1410), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1413, 1422), word='/dev/null'), pos=(1411, 1422), type='>'),
])


3522) [ -z "$savedAptMark" ]

CommandNode(pos=(1425, 1447), parts=[
  WordNode(pos=(1425, 1426), word='['),
  WordNode(pos=(1427, 1429), word='-z'),
  WordNode(pos=(1430, 1445), word='$savedAptMark', parts=[
    ParameterNode(pos=(1431, 1444), value='savedAptMark'),
  ]),
  WordNode(pos=(1446, 1447), word=']'),
])


3523) apt-mark manual $savedAptMark

CommandNode(pos=(1451, 1480), parts=[
  WordNode(pos=(1451, 1459), word='apt-mark'),
  WordNode(pos=(1460, 1466), word='manual'),
  WordNode(pos=(1467, 1480), word='$savedAptMark', parts=[
    ParameterNode(pos=(1467, 1480), value='savedAptMark'),
  ]),
])


3524) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1483, 1559), parts=[
  WordNode(pos=(1483, 1490), word='apt-get'),
  WordNode(pos=(1491, 1496), word='purge'),
  WordNode(pos=(1497, 1499), word='-y'),
  WordNode(pos=(1500, 1513), word='--auto-remove'),
  WordNode(pos=(1514, 1516), word='-o'),
  WordNode(pos=(1517, 1559), word='APT::AutoRemove::RecommendsImportant=false'),
])


3525) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3526) [ ! -d "$HOME" ]

CommandNode(pos=(11, 27), parts=[
  WordNode(pos=(11, 12), word='['),
  WordNode(pos=(13, 14), word='!'),
  WordNode(pos=(15, 17), word='-d'),
  WordNode(pos=(18, 25), word='$HOME', parts=[
    ParameterNode(pos=(19, 24), value='HOME'),
  ]),
  WordNode(pos=(26, 27), word=']'),
])


3527) mkdir -p "$HOME"

CommandNode(pos=(30, 46), parts=[
  WordNode(pos=(30, 35), word='mkdir'),
  WordNode(pos=(36, 38), word='-p'),
  WordNode(pos=(39, 46), word='$HOME', parts=[
    ParameterNode(pos=(40, 45), value='HOME'),
  ]),
])


3528) chown redmine:redmine "$HOME"

CommandNode(pos=(49, 78), parts=[
  WordNode(pos=(49, 54), word='chown'),
  WordNode(pos=(55, 70), word='redmine:redmine'),
  WordNode(pos=(71, 78), word='$HOME', parts=[
    ParameterNode(pos=(72, 77), value='HOME'),
  ]),
])


3529) chmod 1777 "$HOME"

CommandNode(pos=(81, 99), parts=[
  WordNode(pos=(81, 86), word='chmod'),
  WordNode(pos=(87, 91), word='1777'),
  WordNode(pos=(92, 99), word='$HOME', parts=[
    ParameterNode(pos=(93, 98), value='HOME'),
  ]),
])


3530) wget -O redmine.tar.gz "https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz"

CommandNode(pos=(0, 91), parts=[
  WordNode(pos=(0, 4), word='wget'),
  WordNode(pos=(5, 7), word='-O'),
  WordNode(pos=(8, 22), word='redmine.tar.gz'),
  WordNode(pos=(23, 91), word='https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(65, 83), value='REDMINE_VERSION'),
  ]),
])


3531) echo "$REDMINE_DOWNLOAD_MD5 redmine.tar.gz"

CommandNode(pos=(96, 139), parts=[
  WordNode(pos=(96, 100), word='echo'),
  WordNode(pos=(101, 139), word='$REDMINE_DOWNLOAD_MD5 redmine.tar.gz', parts=[
    ParameterNode(pos=(102, 123), value='REDMINE_DOWNLOAD_MD5'),
  ]),
])


3532) md5sum -c -

CommandNode(pos=(142, 153), parts=[
  WordNode(pos=(142, 148), word='md5sum'),
  WordNode(pos=(149, 151), word='-c'),
  WordNode(pos=(152, 153), word='-'),
])


3533) tar -xvf redmine.tar.gz --strip-components=1

CommandNode(pos=(158, 202), parts=[
  WordNode(pos=(158, 161), word='tar'),
  WordNode(pos=(162, 166), word='-xvf'),
  WordNode(pos=(167, 181), word='redmine.tar.gz'),
  WordNode(pos=(182, 202), word='--strip-components=1'),
])


3534) rm redmine.tar.gz files/delete.me log/delete.me

CommandNode(pos=(207, 254), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 224), word='redmine.tar.gz'),
  WordNode(pos=(225, 240), word='files/delete.me'),
  WordNode(pos=(241, 254), word='log/delete.me'),
])


3535) mkdir -p log public/plugin_assets sqlite tmp/pdf tmp/pids

CommandNode(pos=(259, 316), parts=[
  WordNode(pos=(259, 264), word='mkdir'),
  WordNode(pos=(265, 267), word='-p'),
  WordNode(pos=(268, 271), word='log'),
  WordNode(pos=(272, 292), word='public/plugin_assets'),
  WordNode(pos=(293, 299), word='sqlite'),
  WordNode(pos=(300, 307), word='tmp/pdf'),
  WordNode(pos=(308, 316), word='tmp/pids'),
])


3536) chown -R redmine:redmine ./

CommandNode(pos=(321, 348), parts=[
  WordNode(pos=(321, 326), word='chown'),
  WordNode(pos=(327, 329), word='-R'),
  WordNode(pos=(330, 345), word='redmine:redmine'),
  WordNode(pos=(346, 348), word='./'),
])


3537) echo 'config.logger = Logger.new(STDOUT)' > config/additional_environment.rb

CommandNode(pos=(353, 429), parts=[
  WordNode(pos=(353, 357), word='echo'),
  WordNode(pos=(358, 394), word='config.logger = Logger.new(STDOUT)'),
  RedirectNode(output=
    WordNode(pos=(397, 429), word='config/additional_environment.rb'), pos=(395, 429), type='>'),
])


3538) chmod -R ugo=rwX config db sqlite

CommandNode(pos=(434, 467), parts=[
  WordNode(pos=(434, 439), word='chmod'),
  WordNode(pos=(440, 442), word='-R'),
  WordNode(pos=(443, 450), word='ugo=rwX'),
  WordNode(pos=(451, 457), word='config'),
  WordNode(pos=(458, 460), word='db'),
  WordNode(pos=(461, 467), word='sqlite'),
])


3539) find log tmp -type d -exec chmod 1777 '{}' +

CommandNode(pos=(472, 516), parts=[
  WordNode(pos=(472, 476), word='find'),
  WordNode(pos=(477, 480), word='log'),
  WordNode(pos=(481, 484), word='tmp'),
  WordNode(pos=(485, 490), word='-type'),
  WordNode(pos=(491, 492), word='d'),
  WordNode(pos=(493, 498), word='-exec'),
  WordNode(pos=(499, 504), word='chmod'),
  WordNode(pos=(505, 509), word='1777'),
  WordNode(pos=(510, 514), word='{}'),
  WordNode(pos=(515, 516), word='+'),
])


3540) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3541) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


3542) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


3543) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libmagickcore-dev   libmagickwand-dev   libmariadbclient-dev   libpq-dev   libsqlite3-dev   make   patch     libssl1.0-dev

CommandNode(pos=(69, 253), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 122), word='dpkg-dev'),
  WordNode(pos=(125, 128), word='gcc'),
  WordNode(pos=(131, 148), word='libmagickcore-dev'),
  WordNode(pos=(151, 168), word='libmagickwand-dev'),
  WordNode(pos=(171, 191), word='libmariadbclient-dev'),
  WordNode(pos=(194, 203), word='libpq-dev'),
  WordNode(pos=(206, 220), word='libsqlite3-dev'),
  WordNode(pos=(223, 227), word='make'),
  WordNode(pos=(230, 235), word='patch'),
  WordNode(pos=(240, 253), word='libssl1.0-dev'),
])


3544) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(258, 285), parts=[
  WordNode(pos=(258, 260), word='rm'),
  WordNode(pos=(261, 264), word='-rf'),
  WordNode(pos=(265, 285), word='/var/lib/apt/lists/*'),
])


3545) wget -O freetds.tar.bz2 'http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'

CommandNode(pos=(289, 374), parts=[
  WordNode(pos=(289, 293), word='wget'),
  WordNode(pos=(294, 296), word='-O'),
  WordNode(pos=(297, 312), word='freetds.tar.bz2'),
  WordNode(pos=(313, 374), word='http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'),
])


3546) echo '8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2'

CommandNode(pos=(377, 433), parts=[
  WordNode(pos=(377, 381), word='echo'),
  WordNode(pos=(382, 433), word='8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2'),
])


3547) md5sum -c -

CommandNode(pos=(436, 447), parts=[
  WordNode(pos=(436, 442), word='md5sum'),
  WordNode(pos=(443, 445), word='-c'),
  WordNode(pos=(446, 447), word='-'),
])


3548) mkdir freetds

CommandNode(pos=(450, 463), parts=[
  WordNode(pos=(450, 455), word='mkdir'),
  WordNode(pos=(456, 463), word='freetds'),
])


3549) tar -xf freetds.tar.bz2 -C freetds --strip-components=1

CommandNode(pos=(466, 521), parts=[
  WordNode(pos=(466, 469), word='tar'),
  WordNode(pos=(470, 473), word='-xf'),
  WordNode(pos=(474, 489), word='freetds.tar.bz2'),
  WordNode(pos=(490, 492), word='-C'),
  WordNode(pos=(493, 500), word='freetds'),
  WordNode(pos=(501, 521), word='--strip-components=1'),
])


3550) rm freetds.tar.bz2

CommandNode(pos=(524, 542), parts=[
  WordNode(pos=(524, 526), word='rm'),
  WordNode(pos=(527, 542), word='freetds.tar.bz2'),
])


3551) cd freetds

CommandNode(pos=(547, 557), parts=[
  WordNode(pos=(547, 549), word='cd'),
  WordNode(pos=(550, 557), word='freetds'),
])


3552) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(561, 618), parts=[
  AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(572, 616), parts=[
        WordNode(pos=(572, 589), word='dpkg-architecture'),
        WordNode(pos=(590, 597), word='--query'),
        WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(570, 617)),
  ]),
])


3553) ./configure --build="$gnuArch" --enable-silent-rules

CommandNode(pos=(622, 674), parts=[
  WordNode(pos=(622, 633), word='./configure'),
  WordNode(pos=(634, 652), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(643, 651), value='gnuArch'),
  ]),
  WordNode(pos=(653, 674), word='--enable-silent-rules'),
])


3554) make -j "$(nproc)"

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-j'),
  WordNode(pos=(686, 696), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 694), parts=[
        WordNode(pos=(689, 694), word='nproc'),
      ]), pos=(687, 695)),
  ]),
])


3555) make -C src install

CommandNode(pos=(700, 719), parts=[
  WordNode(pos=(700, 704), word='make'),
  WordNode(pos=(705, 707), word='-C'),
  WordNode(pos=(708, 711), word='src'),
  WordNode(pos=(712, 719), word='install'),
])


3556) make -C include install

CommandNode(pos=(723, 746), parts=[
  WordNode(pos=(723, 727), word='make'),
  WordNode(pos=(728, 730), word='-C'),
  WordNode(pos=(731, 738), word='include'),
  WordNode(pos=(739, 746), word='install'),
])


3557) rm -rf freetds

CommandNode(pos=(751, 765), parts=[
  WordNode(pos=(751, 753), word='rm'),
  WordNode(pos=(754, 757), word='-rf'),
  WordNode(pos=(758, 765), word='freetds'),
])


3558) gosu redmine bundle config build.tiny_tds --enable-system-freetds

CommandNode(pos=(768, 833), parts=[
  WordNode(pos=(768, 772), word='gosu'),
  WordNode(pos=(773, 780), word='redmine'),
  WordNode(pos=(781, 787), word='bundle'),
  WordNode(pos=(788, 794), word='config'),
  WordNode(pos=(795, 809), word='build.tiny_tds'),
  WordNode(pos=(810, 833), word='--enable-system-freetds'),
])


3559) gosu redmine bundle install --without development test

CommandNode(pos=(837, 891), parts=[
  WordNode(pos=(837, 841), word='gosu'),
  WordNode(pos=(842, 849), word='redmine'),
  WordNode(pos=(850, 856), word='bundle'),
  WordNode(pos=(857, 864), word='install'),
  WordNode(pos=(865, 874), word='--without'),
  WordNode(pos=(875, 886), word='development'),
  WordNode(pos=(887, 891), word='test'),
])


3560) echo "$RAILS_ENV:" > ./config/database.yml

CommandNode(pos=(951, 993), parts=[
  WordNode(pos=(951, 955), word='echo'),
  WordNode(pos=(956, 969), word='$RAILS_ENV:', parts=[
    ParameterNode(pos=(957, 967), value='RAILS_ENV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(972, 993), word='./config/database.yml'), pos=(970, 993), type='>'),
])


3561) echo "  adapter: $adapter" >> ./config/database.yml

CommandNode(pos=(997, 1048), parts=[
  WordNode(pos=(997, 1001), word='echo'),
  WordNode(pos=(1002, 1023), word='  adapter: $adapter', parts=[
    ParameterNode(pos=(1014, 1022), value='adapter'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1027, 1048), word='./config/database.yml'), pos=(1024, 1048), type='>>'),
])


3562) gosu redmine bundle install --without development test

CommandNode(pos=(1052, 1106), parts=[
  WordNode(pos=(1052, 1056), word='gosu'),
  WordNode(pos=(1057, 1064), word='redmine'),
  WordNode(pos=(1065, 1071), word='bundle'),
  WordNode(pos=(1072, 1079), word='install'),
  WordNode(pos=(1080, 1089), word='--without'),
  WordNode(pos=(1090, 1101), word='development'),
  WordNode(pos=(1102, 1106), word='test'),
])


3563) cp Gemfile.lock "Gemfile.lock.${adapter}"

CommandNode(pos=(1110, 1151), parts=[
  WordNode(pos=(1110, 1112), word='cp'),
  WordNode(pos=(1113, 1125), word='Gemfile.lock'),
  WordNode(pos=(1126, 1151), word='Gemfile.lock.${adapter}', parts=[
    ParameterNode(pos=(1140, 1150), value='adapter'),
  ]),
])


3564) rm ./config/database.yml

CommandNode(pos=(1161, 1185), parts=[
  WordNode(pos=(1161, 1163), word='rm'),
  WordNode(pos=(1164, 1185), word='./config/database.yml'),
])


3565) chmod -R ugo=rwX Gemfile.lock "$GEM_HOME"

CommandNode(pos=(1188, 1229), parts=[
  WordNode(pos=(1188, 1193), word='chmod'),
  WordNode(pos=(1194, 1196), word='-R'),
  WordNode(pos=(1197, 1204), word='ugo=rwX'),
  WordNode(pos=(1205, 1217), word='Gemfile.lock'),
  WordNode(pos=(1218, 1229), word='$GEM_HOME', parts=[
    ParameterNode(pos=(1219, 1228), value='GEM_HOME'),
  ]),
])


3566) rm -rf ~redmine/.bundle

CommandNode(pos=(1232, 1255), parts=[
  WordNode(pos=(1232, 1234), word='rm'),
  WordNode(pos=(1235, 1238), word='-rf'),
  WordNode(pos=(1239, 1255), word='~redmine/.bundle', parts=[
    TildeNode(pos=(1239, 1247), value='~redmine'),
  ]),
])


3567) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1259, 1289), parts=[
  WordNode(pos=(1259, 1267), word='apt-mark'),
  WordNode(pos=(1268, 1272), word='auto'),
  WordNode(pos=(1273, 1277), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1280, 1289), word='/dev/null'), pos=(1278, 1289), type='>'),
])


3568) [ -z "$savedAptMark" ]

CommandNode(pos=(1292, 1314), parts=[
  WordNode(pos=(1292, 1293), word='['),
  WordNode(pos=(1294, 1296), word='-z'),
  WordNode(pos=(1297, 1312), word='$savedAptMark', parts=[
    ParameterNode(pos=(1298, 1311), value='savedAptMark'),
  ]),
  WordNode(pos=(1313, 1314), word=']'),
])


3569) apt-mark manual $savedAptMark

CommandNode(pos=(1318, 1347), parts=[
  WordNode(pos=(1318, 1326), word='apt-mark'),
  WordNode(pos=(1327, 1333), word='manual'),
  WordNode(pos=(1334, 1347), word='$savedAptMark', parts=[
    ParameterNode(pos=(1334, 1347), value='savedAptMark'),
  ]),
])


3570) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1350, 1404), parts=[
  WordNode(pos=(1350, 1354), word='find'),
  WordNode(pos=(1355, 1365), word='/usr/local'),
  WordNode(pos=(1366, 1371), word='-type'),
  WordNode(pos=(1372, 1373), word='f'),
  WordNode(pos=(1374, 1385), word='-executable'),
  WordNode(pos=(1386, 1391), word='-exec'),
  WordNode(pos=(1392, 1395), word='ldd'),
  WordNode(pos=(1396, 1400), word='{}'),
  WordNode(pos=(1401, 1404), word=';'),
])


3571) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1409, 1437), parts=[
  WordNode(pos=(1409, 1412), word='awk'),
  WordNode(pos=(1413, 1437), word='/=>/ { print $(NF-1) }'),
])


3572) sort -u

CommandNode(pos=(1442, 1449), parts=[
  WordNode(pos=(1442, 1446), word='sort'),
  WordNode(pos=(1447, 1449), word='-u'),
])


3573) grep -v '^/usr/local/'

CommandNode(pos=(1454, 1476), parts=[
  WordNode(pos=(1454, 1458), word='grep'),
  WordNode(pos=(1459, 1461), word='-v'),
  WordNode(pos=(1462, 1476), word='^/usr/local/'),
])


3574) xargs -r dpkg-query --search

CommandNode(pos=(1481, 1509), parts=[
  WordNode(pos=(1481, 1486), word='xargs'),
  WordNode(pos=(1487, 1489), word='-r'),
  WordNode(pos=(1490, 1500), word='dpkg-query'),
  WordNode(pos=(1501, 1509), word='--search'),
])


3575) cut -d: -f1

CommandNode(pos=(1514, 1525), parts=[
  WordNode(pos=(1514, 1517), word='cut'),
  WordNode(pos=(1518, 1521), word='-d:'),
  WordNode(pos=(1522, 1525), word='-f1'),
])


3576) sort -u

CommandNode(pos=(1530, 1537), parts=[
  WordNode(pos=(1530, 1534), word='sort'),
  WordNode(pos=(1535, 1537), word='-u'),
])


3577) xargs -r apt-mark manual

CommandNode(pos=(1542, 1566), parts=[
  WordNode(pos=(1542, 1547), word='xargs'),
  WordNode(pos=(1548, 1550), word='-r'),
  WordNode(pos=(1551, 1559), word='apt-mark'),
  WordNode(pos=(1560, 1566), word='manual'),
])


3578) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1571, 1647), parts=[
  WordNode(pos=(1571, 1578), word='apt-get'),
  WordNode(pos=(1579, 1584), word='purge'),
  WordNode(pos=(1585, 1587), word='-y'),
  WordNode(pos=(1588, 1601), word='--auto-remove'),
  WordNode(pos=(1602, 1604), word='-o'),
  WordNode(pos=(1605, 1647), word='APT::AutoRemove::RecommendsImportant=false'),
])


3579) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3580) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


3581) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


3582) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3583) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


3584) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


3585) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


3586) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


3587) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


3588) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


3589) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


3590) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


3591) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3592) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


3593) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


3594) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


3595) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


3596) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


3597) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


3598) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


3599) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


3600) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


3601) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


3602) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


3603) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


3604) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


3605) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


3606) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


3607) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


3608) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


3609) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


3610) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


3611) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


3612) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


3613) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


3614) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


3615) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


3616) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


3617) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3618) apt-get install -y git vim --no-install-recommends

CommandNode(pos=(18, 68), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 40), word='git'),
  WordNode(pos=(41, 44), word='vim'),
  WordNode(pos=(45, 68), word='--no-install-recommends'),
])


3619) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(72, 99), parts=[
  WordNode(pos=(72, 74), word='rm'),
  WordNode(pos=(75, 78), word='-rf'),
  WordNode(pos=(79, 99), word='/var/lib/apt/lists/*'),
])


3620) cpanm Digest::SHA Module::Signature

CommandNode(pos=(0, 35), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 17), word='Digest::SHA'),
  WordNode(pos=(18, 35), word='Module::Signature'),
])


3621) cpanm App::cpanminus

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 20), word='App::cpanminus'),
])


3622) cpanm Mojolicious@5.80

CommandNode(pos=(0, 22), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 22), word='Mojolicious@5.80'),
])


3623) cpanm EV

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 8), word='EV'),
])


3624) cpanm IO::Socket::IP

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 20), word='IO::Socket::IP'),
])


3625) cpanm --notest IO::Socket::SSL

CommandNode(pos=(0, 30), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 14), word='--notest'),
  WordNode(pos=(15, 30), word='IO::Socket::SSL'),
])


3626) cpanm Term::UI

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 14), word='Term::UI'),
])


3627) mkdir ~/.vim ~/.vim/bundle ~/.vim/autoload

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 12), word='~/.vim', parts=[
    TildeNode(pos=(6, 7), value='~'),
  ]),
  WordNode(pos=(13, 26), word='~/.vim/bundle', parts=[
    TildeNode(pos=(13, 14), value='~'),
  ]),
  WordNode(pos=(27, 42), word='~/.vim/autoload', parts=[
    TildeNode(pos=(27, 28), value='~'),
  ]),
])


3628) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


3629) git clone https://github.com/tpope/vim-pathogen.git ~/.vim/bundle/pathogen

CommandNode(pos=(11, 85), parts=[
  WordNode(pos=(11, 14), word='git'),
  WordNode(pos=(15, 20), word='clone'),
  WordNode(pos=(21, 62), word='https://github.com/tpope/vim-pathogen.git'),
  WordNode(pos=(63, 85), word='~/.vim/bundle/pathogen', parts=[
    TildeNode(pos=(63, 64), value='~'),
  ]),
])


3630) ln -s ../bundle/pathogen/autoload/pathogen.vim ~/.vim/autoload/

CommandNode(pos=(90, 153), parts=[
  WordNode(pos=(90, 92), word='ln'),
  WordNode(pos=(93, 95), word='-s'),
  WordNode(pos=(96, 136), word='../bundle/pathogen/autoload/pathogen.vim'),
  WordNode(pos=(137, 153), word='~/.vim/autoload/', parts=[
    TildeNode(pos=(137, 138), value='~'),
  ]),
])


3631) git clone https://github.com/jtratner/vim-flavored-markdown.git ~/.vim/bundle/ghmarkdown

CommandNode(pos=(0, 88), parts=[
  WordNode(pos=(0, 3), word='git'),
  WordNode(pos=(4, 9), word='clone'),
  WordNode(pos=(10, 63), word='https://github.com/jtratner/vim-flavored-markdown.git'),
  WordNode(pos=(64, 88), word='~/.vim/bundle/ghmarkdown', parts=[
    TildeNode(pos=(64, 65), value='~'),
  ]),
])


3632) git clone https://github.com/nanotech/jellybeans.vim.git ~/.vim/bundle/jellybeans

CommandNode(pos=(0, 81), parts=[
  WordNode(pos=(0, 3), word='git'),
  WordNode(pos=(4, 9), word='clone'),
  WordNode(pos=(10, 56), word='https://github.com/nanotech/jellybeans.vim.git'),
  WordNode(pos=(57, 81), word='~/.vim/bundle/jellybeans', parts=[
    TildeNode(pos=(57, 58), value='~'),
  ]),
])


3633) echo 'scriptencoding utf-8'

CommandNode(pos=(4, 31), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 31), word='scriptencoding utf-8'),
])


3634) echo 'execute pathogen#infect()'

CommandNode(pos=(37, 69), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 69), word='execute pathogen#infect()'),
])


3635) echo 'syntax on'

CommandNode(pos=(75, 91), parts=[
  WordNode(pos=(75, 79), word='echo'),
  WordNode(pos=(80, 91), word='syntax on'),
])


3636) echo 'filetype plugin indent on'

CommandNode(pos=(95, 127), parts=[
  WordNode(pos=(95, 99), word='echo'),
  WordNode(pos=(100, 127), word='filetype plugin indent on'),
])


3637) echo 'set list listchars=tab:»·,nbsp:_,extends:¬ noet ts=4 sw=4 nobackup noswapfile'

CommandNode(pos=(131, 215), parts=[
  WordNode(pos=(131, 135), word='echo'),
  WordNode(pos=(136, 215), word='set list listchars=tab:»·,nbsp:_,extends:¬ noet ts=4 sw=4 nobackup noswapfile'),
])


3638) echo 'set background=dark'

CommandNode(pos=(221, 247), parts=[
  WordNode(pos=(221, 225), word='echo'),
  WordNode(pos=(226, 247), word='set background=dark'),
])


3639) echo 'colorscheme jellybeans'

CommandNode(pos=(251, 280), parts=[
  WordNode(pos=(251, 255), word='echo'),
  WordNode(pos=(256, 280), word='colorscheme jellybeans'),
])


3640) echo 'au FilterWritePre * if &diff | setlocal wrap< | endif'

CommandNode(pos=(286, 346), parts=[
  WordNode(pos=(286, 290), word='echo'),
  WordNode(pos=(291, 346), word='au FilterWritePre * if &diff | setlocal wrap< | endif'),
])


3641) echo 'au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown'

CommandNode(pos=(352, 425), parts=[
  WordNode(pos=(352, 356), word='echo'),
  WordNode(pos=(357, 425), word='au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown'),
])


3642) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


3643) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


3644) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3645) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


3646) which gpg

CommandNode(pos=(32, 41), parts=[
  WordNode(pos=(32, 37), word='which'),
  WordNode(pos=(38, 41), word='gpg'),
])


3647) apt-get install -y --no-install-recommends gnupg

CommandNode(pos=(50, 98), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 65), word='install'),
  WordNode(pos=(66, 68), word='-y'),
  WordNode(pos=(69, 92), word='--no-install-recommends'),
  WordNode(pos=(93, 98), word='gnupg'),
])


3648) gpg --version

CommandNode(pos=(111, 124), parts=[
  WordNode(pos=(111, 114), word='gpg'),
  WordNode(pos=(115, 124), word='--version'),
])


3649) grep -q '^gpg (GnuPG) 1\.'

CommandNode(pos=(127, 153), parts=[
  WordNode(pos=(127, 131), word='grep'),
  WordNode(pos=(132, 134), word='-q'),
  WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
])


3650) apt-get install -y --no-install-recommends dirmngr

CommandNode(pos=(163, 213), parts=[
  WordNode(pos=(163, 170), word='apt-get'),
  WordNode(pos=(171, 178), word='install'),
  WordNode(pos=(179, 181), word='-y'),
  WordNode(pos=(182, 205), word='--no-install-recommends'),
  WordNode(pos=(206, 213), word='dirmngr'),
])


3651) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(221, 248), parts=[
  WordNode(pos=(221, 223), word='rm'),
  WordNode(pos=(224, 227), word='-rf'),
  WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
])


3652) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3653) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


3654) apt-get update

CommandNode(pos=(53, 67), parts=[
  WordNode(pos=(53, 60), word='apt-get'),
  WordNode(pos=(61, 67), word='update'),
])


3655) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


3656) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


3657) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


3658) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


3659) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


3660) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


3661) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(488, 591), parts=[
  WordNode(pos=(488, 491), word='gpg'),
  WordNode(pos=(492, 499), word='--batch'),
  WordNode(pos=(500, 511), word='--keyserver'),
  WordNode(pos=(512, 538), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(539, 550), word='--recv-keys'),
  WordNode(pos=(551, 591), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


3662) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(594, 658), parts=[
  WordNode(pos=(594, 597), word='gpg'),
  WordNode(pos=(598, 605), word='--batch'),
  WordNode(pos=(606, 614), word='--verify'),
  WordNode(pos=(615, 638), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(639, 658), word='/usr/local/bin/gosu'),
])


3663) command -v gpgconf > /dev/null

CommandNode(pos=(661, 691), parts=[
  WordNode(pos=(661, 668), word='command'),
  WordNode(pos=(669, 671), word='-v'),
  WordNode(pos=(672, 679), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(682, 691), word='/dev/null'), pos=(680, 691), type='>'),
])


3664) gpgconf --kill all

CommandNode(pos=(695, 713), parts=[
  WordNode(pos=(695, 702), word='gpgconf'),
  WordNode(pos=(703, 709), word='--kill'),
  WordNode(pos=(710, 713), word='all'),
])


3665) :

CommandNode(pos=(717, 718), parts=[
  WordNode(pos=(717, 718), word=':'),
])


3666) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


3667) chmod +x /usr/local/bin/gosu

CommandNode(pos=(767, 795), parts=[
  WordNode(pos=(767, 772), word='chmod'),
  WordNode(pos=(773, 775), word='+x'),
  WordNode(pos=(776, 795), word='/usr/local/bin/gosu'),
])


3668) gosu nobody true

CommandNode(pos=(798, 814), parts=[
  WordNode(pos=(798, 802), word='gosu'),
  WordNode(pos=(803, 809), word='nobody'),
  WordNode(pos=(810, 814), word='true'),
])


3669) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


3670) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


3671) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3672) apt-get install -y --no-install-recommends   apt-transport-https ca-certificates   pwgen   tzdata

CommandNode(pos=(18, 115), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 82), word='apt-transport-https'),
  WordNode(pos=(83, 98), word='ca-certificates'),
  WordNode(pos=(101, 106), word='pwgen'),
  WordNode(pos=(109, 115), word='tzdata'),
])


3673) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(120, 147), parts=[
  WordNode(pos=(120, 122), word='rm'),
  WordNode(pos=(123, 126), word='-rf'),
  WordNode(pos=(127, 147), word='/var/lib/apt/lists/*'),
])


3674) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3675) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


3676) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


3677) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


3678) command -v gpgconf > /dev/null

CommandNode(pos=(220, 250), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
])


3679) gpgconf --kill all

CommandNode(pos=(254, 272), parts=[
  WordNode(pos=(254, 261), word='gpgconf'),
  WordNode(pos=(262, 268), word='--kill'),
  WordNode(pos=(269, 272), word='all'),
])


3680) :

CommandNode(pos=(276, 277), parts=[
  WordNode(pos=(276, 277), word=':'),
])


3681) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


3682) apt-key list

CommandNode(pos=(301, 313), parts=[
  WordNode(pos=(301, 308), word='apt-key'),
  WordNode(pos=(309, 313), word='list'),
])


3683) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


3684) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 130), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 91), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(94, 130), word='/etc/apt/sources.list.d/mariadb.list'), pos=(92, 130), type='>'),
])


3685) echo 'Package: *'

CommandNode(pos=(137, 154), parts=[
  WordNode(pos=(137, 141), word='echo'),
  WordNode(pos=(142, 154), word='Package: *'),
])


3686) echo 'Pin: release o=MariaDB'

CommandNode(pos=(158, 187), parts=[
  WordNode(pos=(158, 162), word='echo'),
  WordNode(pos=(163, 187), word='Pin: release o=MariaDB'),
])


3687) echo 'Pin-Priority: 999'

CommandNode(pos=(191, 215), parts=[
  WordNode(pos=(191, 195), word='echo'),
  WordNode(pos=(196, 215), word='Pin-Priority: 999'),
])


3688) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3689) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


3690) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


3691) debconf-set-selections

CommandNode(pos=(193, 215), parts=[
  WordNode(pos=(193, 215), word='debconf-set-selections'),
])


3692) apt-get update

CommandNode(pos=(218, 232), parts=[
  WordNode(pos=(218, 225), word='apt-get'),
  WordNode(pos=(226, 232), word='update'),
])


3693) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   mariadb-backup-10.1   socat

CommandNode(pos=(235, 319), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 311), word='mariadb-backup-10.1'),
  WordNode(pos=(314, 319), word='socat'),
])


3694) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(324, 351), parts=[
  WordNode(pos=(324, 326), word='rm'),
  WordNode(pos=(327, 330), word='-rf'),
  WordNode(pos=(331, 351), word='/var/lib/apt/lists/*'),
])


3695) sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*

CommandNode(pos=(354, 415), parts=[
  WordNode(pos=(354, 357), word='sed'),
  WordNode(pos=(358, 361), word='-ri'),
  WordNode(pos=(362, 377), word='s/^user\\s/#&/'),
  WordNode(pos=(378, 395), word='/etc/mysql/my.cnf'),
  WordNode(pos=(396, 415), word='/etc/mysql/conf.d/*'),
])


3696) rm -rf /var/lib/mysql

CommandNode(pos=(418, 439), parts=[
  WordNode(pos=(418, 420), word='rm'),
  WordNode(pos=(421, 424), word='-rf'),
  WordNode(pos=(425, 439), word='/var/lib/mysql'),
])


3697) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(442, 481), parts=[
  WordNode(pos=(442, 447), word='mkdir'),
  WordNode(pos=(448, 450), word='-p'),
  WordNode(pos=(451, 465), word='/var/lib/mysql'),
  WordNode(pos=(466, 481), word='/var/run/mysqld'),
])


3698) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(484, 535), parts=[
  WordNode(pos=(484, 489), word='chown'),
  WordNode(pos=(490, 492), word='-R'),
  WordNode(pos=(493, 504), word='mysql:mysql'),
  WordNode(pos=(505, 519), word='/var/lib/mysql'),
  WordNode(pos=(520, 535), word='/var/run/mysqld'),
])


3699) chmod 777 /var/run/mysqld

CommandNode(pos=(538, 563), parts=[
  WordNode(pos=(538, 543), word='chmod'),
  WordNode(pos=(544, 547), word='777'),
  WordNode(pos=(548, 563), word='/var/run/mysqld'),
])


3700) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(566, 604), parts=[
  WordNode(pos=(566, 570), word='find'),
  WordNode(pos=(571, 582), word='/etc/mysql/'),
  WordNode(pos=(583, 588), word='-name'),
  WordNode(pos=(589, 596), word='*.cnf'),
  WordNode(pos=(597, 604), word='-print0'),
])


3701) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(609, 649), parts=[
  WordNode(pos=(609, 614), word='xargs'),
  WordNode(pos=(615, 617), word='-0'),
  WordNode(pos=(618, 622), word='grep'),
  WordNode(pos=(623, 627), word='-lZE'),
  WordNode(pos=(628, 649), word='^(bind-address|log)'),
])


3702) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(654, 702), parts=[
  WordNode(pos=(654, 659), word='xargs'),
  WordNode(pos=(660, 663), word='-rt'),
  WordNode(pos=(664, 666), word='-0'),
  WordNode(pos=(667, 670), word='sed'),
  WordNode(pos=(671, 674), word='-Ei'),
  WordNode(pos=(675, 702), word='s/^(bind-address|log)/#&/'),
])


3703) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(705, 787), parts=[
  WordNode(pos=(705, 709), word='echo'),
  WordNode(pos=(710, 756), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(759, 787), word='/etc/mysql/conf.d/docker.cnf'), pos=(757, 787), type='>'),
])


3704) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


3705) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3706) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


3707) apt-get install -y --no-install-recommends   ca-certificates p11-kit

CommandNode(pos=(28, 96), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(89, 96), word='p11-kit'),
])


3708) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(101, 128), parts=[
  WordNode(pos=(101, 103), word='rm'),
  WordNode(pos=(104, 107), word='-rf'),
  WordNode(pos=(108, 128), word='/var/lib/apt/lists/*'),
])


3709) echo '#/bin/sh'

CommandNode(pos=(2, 17), parts=[
  WordNode(pos=(2, 6), word='echo'),
  WordNode(pos=(7, 17), word='#/bin/sh'),
])


3710) echo 'echo "$JAVA_HOME"'

CommandNode(pos=(19, 43), parts=[
  WordNode(pos=(19, 23), word='echo'),
  WordNode(pos=(24, 43), word='echo "$JAVA_HOME"'),
])


3711) chmod +x /usr/local/bin/docker-java-home

CommandNode(pos=(84, 124), parts=[
  WordNode(pos=(84, 89), word='chmod'),
  WordNode(pos=(90, 92), word='+x'),
  WordNode(pos=(93, 124), word='/usr/local/bin/docker-java-home'),
])


3712) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


3713) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


3714) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


3715) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


3716) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


3717) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3718) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


3719) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


3720) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


3721) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


3722) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


3723) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


3724) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


3725) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


3726) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


3727) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


3728) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


3729) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


3730) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


3731) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


3732) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


3733) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


3734) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


3735) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


3736) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


3737) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


3738) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


3739) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


3740) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


3741) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


3742) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


3743) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


3744) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3745) apt-get install -y --no-install-recommends   ca-certificates   libexpat1   libffi6   libgdbm3   libsqlite3-0

CommandNode(pos=(18, 126), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 90), word='libexpat1'),
  WordNode(pos=(93, 100), word='libffi6'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 126), word='libsqlite3-0'),
])


3746) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(131, 158), parts=[
  WordNode(pos=(131, 133), word='rm'),
  WordNode(pos=(134, 137), word='-rf'),
  WordNode(pos=(138, 158), word='/var/lib/apt/lists/*'),
])


3747) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


3748) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3749) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


3750) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


3751) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


3752) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


3753) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


3754) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


3755) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


3756) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


3757) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


3758) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


3759) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


3760) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


3761) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


3762) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   util-linux-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1045), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1025), word='util-linux-dev'),
  WordNode(pos=(1028, 1034), word='xz-dev'),
  WordNode(pos=(1037, 1045), word='zlib-dev'),
])


3763) apk del .fetch-deps

CommandNode(pos=(1050, 1069), parts=[
  WordNode(pos=(1050, 1053), word='apk'),
  WordNode(pos=(1054, 1057), word='del'),
  WordNode(pos=(1058, 1069), word='.fetch-deps'),
])


3764) cd /usr/src/python

CommandNode(pos=(1075, 1093), parts=[
  WordNode(pos=(1075, 1077), word='cd'),
  WordNode(pos=(1078, 1093), word='/usr/src/python'),
])


3765) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


3766) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


3767) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


3768) make install

CommandNode(pos=(1386, 1398), parts=[
  WordNode(pos=(1386, 1390), word='make'),
  WordNode(pos=(1391, 1398), word='install'),
])


3769) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1404, 1527), parts=[
  WordNode(pos=(1404, 1408), word='find'),
  WordNode(pos=(1409, 1419), word='/usr/local'),
  WordNode(pos=(1420, 1425), word='-type'),
  WordNode(pos=(1426, 1427), word='f'),
  WordNode(pos=(1428, 1439), word='-executable'),
  WordNode(pos=(1440, 1444), word='-not'),
  WordNode(pos=(1445, 1447), word='('),
  WordNode(pos=(1448, 1453), word='-name'),
  WordNode(pos=(1454, 1465), word='*tkinter*'),
  WordNode(pos=(1466, 1468), word=')'),
  WordNode(pos=(1469, 1474), word='-exec'),
  WordNode(pos=(1475, 1482), word='scanelf'),
  WordNode(pos=(1483, 1491), word='--needed'),
  WordNode(pos=(1492, 1502), word='--nobanner'),
  WordNode(pos=(1503, 1511), word='--format'),
  WordNode(pos=(1512, 1518), word='%n#p'),
  WordNode(pos=(1519, 1523), word='{}'),
  WordNode(pos=(1524, 1527), word=';'),
])


3770) tr ',' '\n'

CommandNode(pos=(1532, 1543), parts=[
  WordNode(pos=(1532, 1534), word='tr'),
  WordNode(pos=(1535, 1538), word=','),
  WordNode(pos=(1539, 1543), word='\\n'),
])


3771) sort -u

CommandNode(pos=(1548, 1555), parts=[
  WordNode(pos=(1548, 1552), word='sort'),
  WordNode(pos=(1553, 1555), word='-u'),
])


3772) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1560, 1637), parts=[
  WordNode(pos=(1560, 1563), word='awk'),
  WordNode(pos=(1564, 1637), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


3773) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1642, 1696), parts=[
  WordNode(pos=(1642, 1647), word='xargs'),
  WordNode(pos=(1648, 1651), word='-rt'),
  WordNode(pos=(1652, 1655), word='apk'),
  WordNode(pos=(1656, 1659), word='add'),
  WordNode(pos=(1660, 1670), word='--no-cache'),
  WordNode(pos=(1671, 1680), word='--virtual'),
  WordNode(pos=(1681, 1696), word='.python-rundeps'),
])


3774) apk del .build-deps

CommandNode(pos=(1701, 1720), parts=[
  WordNode(pos=(1701, 1704), word='apk'),
  WordNode(pos=(1705, 1708), word='del'),
  WordNode(pos=(1709, 1720), word='.build-deps'),
])


3775) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1726, 1893), parts=[
  WordNode(pos=(1726, 1730), word='find'),
  WordNode(pos=(1731, 1741), word='/usr/local'),
  WordNode(pos=(1742, 1748), word='-depth'),
  WordNode(pos=(1751, 1753), word='('),
  WordNode(pos=(1757, 1759), word='('),
  WordNode(pos=(1760, 1765), word='-type'),
  WordNode(pos=(1766, 1767), word='d'),
  WordNode(pos=(1768, 1770), word='-a'),
  WordNode(pos=(1771, 1773), word='('),
  WordNode(pos=(1774, 1779), word='-name'),
  WordNode(pos=(1780, 1784), word='test'),
  WordNode(pos=(1785, 1787), word='-o'),
  WordNode(pos=(1788, 1793), word='-name'),
  WordNode(pos=(1794, 1799), word='tests'),
  WordNode(pos=(1800, 1802), word=')'),
  WordNode(pos=(1803, 1805), word=')'),
  WordNode(pos=(1809, 1811), word='-o'),
  WordNode(pos=(1815, 1817), word='('),
  WordNode(pos=(1818, 1823), word='-type'),
  WordNode(pos=(1824, 1825), word='f'),
  WordNode(pos=(1826, 1828), word='-a'),
  WordNode(pos=(1829, 1831), word='('),
  WordNode(pos=(1832, 1837), word='-name'),
  WordNode(pos=(1838, 1845), word='*.pyc'),
  WordNode(pos=(1846, 1848), word='-o'),
  WordNode(pos=(1849, 1854), word='-name'),
  WordNode(pos=(1855, 1862), word='*.pyo'),
  WordNode(pos=(1863, 1865), word=')'),
  WordNode(pos=(1866, 1868), word=')'),
  WordNode(pos=(1871, 1873), word=')'),
  WordNode(pos=(1874, 1879), word='-exec'),
  WordNode(pos=(1880, 1882), word='rm'),
  WordNode(pos=(1883, 1886), word='-rf'),
  WordNode(pos=(1887, 1891), word='{}'),
  WordNode(pos=(1892, 1893), word='+'),
])


3776) rm -rf /usr/src/python

CommandNode(pos=(1898, 1920), parts=[
  WordNode(pos=(1898, 1900), word='rm'),
  WordNode(pos=(1901, 1904), word='-rf'),
  WordNode(pos=(1905, 1920), word='/usr/src/python'),
])


3777) python3 --version

CommandNode(pos=(1926, 1943), parts=[
  WordNode(pos=(1926, 1933), word='python3'),
  WordNode(pos=(1934, 1943), word='--version'),
])


3778) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


3779) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


3780) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


3781) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


3782) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


3783) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3784) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


3785) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


3786) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


3787) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


3788) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


3789) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


3790) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


3791) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


3792) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


3793) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3794) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


3795) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


3796) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


3797) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


3798) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


3799) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


3800) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


3801) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


3802) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


3803) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


3804) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


3805) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


3806) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


3807) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


3808) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


3809) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


3810) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


3811) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


3812) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


3813) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


3814) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


3815) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


3816) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


3817) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


3818) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


3819) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


3820) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3821) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


3822) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


3823) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


3824) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


3825) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


3826) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


3827) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


3828) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


3829) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


3830) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


3831) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


3832) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


3833) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


3834) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


3835) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


3836) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


3837) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


3838) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


3839) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


3840) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


3841) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


3842) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


3843) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


3844) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


3845) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


3846) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


3847) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


3848) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


3849) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


3850) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


3851) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


3852) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


3853) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


3854) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


3855) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


3856) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


3857) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


3858) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


3859) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3860) cd /usr/local/etc

CommandNode(pos=(12, 29), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 29), word='/usr/local/etc'),
])


3861) [ -d php-fpm.d ]

CommandNode(pos=(37, 53), parts=[
  WordNode(pos=(37, 38), word='['),
  WordNode(pos=(39, 41), word='-d'),
  WordNode(pos=(42, 51), word='php-fpm.d'),
  WordNode(pos=(52, 53), word=']'),
])


3862) sed 's!=NONE/!=!g' php-fpm.conf.default

CommandNode(pos=(62, 101), parts=[
  WordNode(pos=(62, 65), word='sed'),
  WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
  WordNode(pos=(81, 101), word='php-fpm.conf.default'),
])


3863) tee php-fpm.conf > /dev/null

CommandNode(pos=(104, 132), parts=[
  WordNode(pos=(104, 107), word='tee'),
  WordNode(pos=(108, 120), word='php-fpm.conf'),
  RedirectNode(output=
    WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
])


3864) cp php-fpm.d/www.conf.default php-fpm.d/www.conf

CommandNode(pos=(136, 184), parts=[
  WordNode(pos=(136, 138), word='cp'),
  WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
  WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
])


3865) mkdir php-fpm.d

CommandNode(pos=(194, 209), parts=[
  WordNode(pos=(194, 199), word='mkdir'),
  WordNode(pos=(200, 209), word='php-fpm.d'),
])


3866) cp php-fpm.conf.default php-fpm.d/www.conf

CommandNode(pos=(213, 255), parts=[
  WordNode(pos=(213, 215), word='cp'),
  WordNode(pos=(216, 236), word='php-fpm.conf.default'),
  WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
])


3867) echo '[global]'

CommandNode(pos=(264, 279), parts=[
  WordNode(pos=(264, 268), word='echo'),
  WordNode(pos=(269, 279), word='[global]'),
])


3868) echo 'include=etc/php-fpm.d/*.conf'

CommandNode(pos=(284, 319), parts=[
  WordNode(pos=(284, 288), word='echo'),
  WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
])


3869) tee php-fpm.conf

CommandNode(pos=(327, 343), parts=[
  WordNode(pos=(327, 330), word='tee'),
  WordNode(pos=(331, 343), word='php-fpm.conf'),
])


3870) echo '[global]'

CommandNode(pos=(357, 372), parts=[
  WordNode(pos=(357, 361), word='echo'),
  WordNode(pos=(362, 372), word='[global]'),
])


3871) echo 'error_log = /proc/self/fd/2'

CommandNode(pos=(376, 410), parts=[
  WordNode(pos=(376, 380), word='echo'),
  WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
])


3872) echo

CommandNode(pos=(414, 418), parts=[
  WordNode(pos=(414, 418), word='echo'),
])


3873) echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'

CommandNode(pos=(420, 498), parts=[
  WordNode(pos=(420, 424), word='echo'),
  WordNode(pos=(425, 498), word='; https://github.com/docker-library/php/pull/725#issuecomment-443540114'),
])


3874) echo 'log_limit = 8192'

CommandNode(pos=(500, 523), parts=[
  WordNode(pos=(500, 504), word='echo'),
  WordNode(pos=(505, 523), word='log_limit = 8192'),
])


3875) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


3876) echo '[www]'

CommandNode(pos=(535, 547), parts=[
  WordNode(pos=(535, 539), word='echo'),
  WordNode(pos=(540, 547), word='[www]'),
])


3877) echo '; if we send this to /proc/self/fd/1, it never appears'

CommandNode(pos=(551, 612), parts=[
  WordNode(pos=(551, 555), word='echo'),
  WordNode(pos=(556, 612), word='; if we send this to /proc/self/fd/1, it never appears'),
])


3878) echo 'access.log = /proc/self/fd/2'

CommandNode(pos=(616, 651), parts=[
  WordNode(pos=(616, 620), word='echo'),
  WordNode(pos=(621, 651), word='access.log = /proc/self/fd/2'),
])


3879) echo

CommandNode(pos=(655, 659), parts=[
  WordNode(pos=(655, 659), word='echo'),
])


3880) echo 'clear_env = no'

CommandNode(pos=(663, 684), parts=[
  WordNode(pos=(663, 667), word='echo'),
  WordNode(pos=(668, 684), word='clear_env = no'),
])


3881) echo

CommandNode(pos=(688, 692), parts=[
  WordNode(pos=(688, 692), word='echo'),
])


3882) echo '; Ensure worker stdout and stderr are sent to the main error log.'

CommandNode(pos=(696, 768), parts=[
  WordNode(pos=(696, 700), word='echo'),
  WordNode(pos=(701, 768), word='; Ensure worker stdout and stderr are sent to the main error log.'),
])


3883) echo 'catch_workers_output = yes'

CommandNode(pos=(772, 805), parts=[
  WordNode(pos=(772, 776), word='echo'),
  WordNode(pos=(777, 805), word='catch_workers_output = yes'),
])


3884) echo 'decorate_workers_output = no'

CommandNode(pos=(809, 844), parts=[
  WordNode(pos=(809, 813), word='echo'),
  WordNode(pos=(814, 844), word='decorate_workers_output = no'),
])


3885) tee php-fpm.d/docker.conf

CommandNode(pos=(851, 876), parts=[
  WordNode(pos=(851, 854), word='tee'),
  WordNode(pos=(855, 876), word='php-fpm.d/docker.conf'),
])


3886) echo '[global]'

CommandNode(pos=(885, 900), parts=[
  WordNode(pos=(885, 889), word='echo'),
  WordNode(pos=(890, 900), word='[global]'),
])


3887) echo 'daemonize = no'

CommandNode(pos=(904, 925), parts=[
  WordNode(pos=(904, 908), word='echo'),
  WordNode(pos=(909, 925), word='daemonize = no'),
])


3888) echo

CommandNode(pos=(929, 933), parts=[
  WordNode(pos=(929, 933), word='echo'),
])


3889) echo '[www]'

CommandNode(pos=(937, 949), parts=[
  WordNode(pos=(937, 941), word='echo'),
  WordNode(pos=(942, 949), word='[www]'),
])


3890) echo 'listen = 9000'

CommandNode(pos=(953, 973), parts=[
  WordNode(pos=(953, 957), word='echo'),
  WordNode(pos=(958, 973), word='listen = 9000'),
])


3891) tee php-fpm.d/zz-docker.conf

CommandNode(pos=(980, 1008), parts=[
  WordNode(pos=(980, 983), word='tee'),
  WordNode(pos=(984, 1008), word='php-fpm.d/zz-docker.conf'),
])


3892) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3893) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


3894) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


3895) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


3896) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3897) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


3898) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


3899) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


3900) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


3901) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3902) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


3903) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


3904) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


3905) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


3906) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


3907) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


3908) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


3909) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


3910) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


3911) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


3912) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


3913) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


3914) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


3915) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   zlib-dev

CommandNode(pos=(719, 1019), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1019), word='zlib-dev'),
])


3916) apk del .fetch-deps

CommandNode(pos=(1024, 1043), parts=[
  WordNode(pos=(1024, 1027), word='apk'),
  WordNode(pos=(1028, 1031), word='del'),
  WordNode(pos=(1032, 1043), word='.fetch-deps'),
])


3917) cd /usr/src/python

CommandNode(pos=(1049, 1067), parts=[
  WordNode(pos=(1049, 1051), word='cd'),
  WordNode(pos=(1052, 1067), word='/usr/src/python'),
])


3918) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1072, 1129), parts=[
  AssignmentNode(pos=(1072, 1129), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1083, 1127), parts=[
        WordNode(pos=(1083, 1100), word='dpkg-architecture'),
        WordNode(pos=(1101, 1108), word='--query'),
        WordNode(pos=(1109, 1127), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1081, 1128)),
  ]),
])


3919) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4   --with-system-expat   --with-system-ffi

CommandNode(pos=(1134, 1250), parts=[
  WordNode(pos=(1134, 1145), word='./configure'),
  WordNode(pos=(1148, 1166), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1157, 1165), value='gnuArch'),
  ]),
  WordNode(pos=(1169, 1184), word='--enable-shared'),
  WordNode(pos=(1187, 1208), word='--enable-unicode=ucs4'),
  WordNode(pos=(1211, 1230), word='--with-system-expat'),
  WordNode(pos=(1233, 1250), word='--with-system-ffi'),
])


3920) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1255, 1319), parts=[
  WordNode(pos=(1255, 1259), word='make'),
  WordNode(pos=(1260, 1262), word='-j'),
  WordNode(pos=(1263, 1273), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1266, 1271), parts=[
        WordNode(pos=(1266, 1271), word='nproc'),
      ]), pos=(1264, 1272)),
  ]),
  WordNode(pos=(1276, 1319), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


3921) make install

CommandNode(pos=(1324, 1336), parts=[
  WordNode(pos=(1324, 1328), word='make'),
  WordNode(pos=(1329, 1336), word='install'),
])


3922) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1342, 1465), parts=[
  WordNode(pos=(1342, 1346), word='find'),
  WordNode(pos=(1347, 1357), word='/usr/local'),
  WordNode(pos=(1358, 1363), word='-type'),
  WordNode(pos=(1364, 1365), word='f'),
  WordNode(pos=(1366, 1377), word='-executable'),
  WordNode(pos=(1378, 1382), word='-not'),
  WordNode(pos=(1383, 1385), word='('),
  WordNode(pos=(1386, 1391), word='-name'),
  WordNode(pos=(1392, 1403), word='*tkinter*'),
  WordNode(pos=(1404, 1406), word=')'),
  WordNode(pos=(1407, 1412), word='-exec'),
  WordNode(pos=(1413, 1420), word='scanelf'),
  WordNode(pos=(1421, 1429), word='--needed'),
  WordNode(pos=(1430, 1440), word='--nobanner'),
  WordNode(pos=(1441, 1449), word='--format'),
  WordNode(pos=(1450, 1456), word='%n#p'),
  WordNode(pos=(1457, 1461), word='{}'),
  WordNode(pos=(1462, 1465), word=';'),
])


3923) tr ',' '\n'

CommandNode(pos=(1470, 1481), parts=[
  WordNode(pos=(1470, 1472), word='tr'),
  WordNode(pos=(1473, 1476), word=','),
  WordNode(pos=(1477, 1481), word='\\n'),
])


3924) sort -u

CommandNode(pos=(1486, 1493), parts=[
  WordNode(pos=(1486, 1490), word='sort'),
  WordNode(pos=(1491, 1493), word='-u'),
])


3925) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1498, 1575), parts=[
  WordNode(pos=(1498, 1501), word='awk'),
  WordNode(pos=(1502, 1575), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


3926) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1580, 1634), parts=[
  WordNode(pos=(1580, 1585), word='xargs'),
  WordNode(pos=(1586, 1589), word='-rt'),
  WordNode(pos=(1590, 1593), word='apk'),
  WordNode(pos=(1594, 1597), word='add'),
  WordNode(pos=(1598, 1608), word='--no-cache'),
  WordNode(pos=(1609, 1618), word='--virtual'),
  WordNode(pos=(1619, 1634), word='.python-rundeps'),
])


3927) apk del .build-deps

CommandNode(pos=(1639, 1658), parts=[
  WordNode(pos=(1639, 1642), word='apk'),
  WordNode(pos=(1643, 1646), word='del'),
  WordNode(pos=(1647, 1658), word='.build-deps'),
])


3928) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1664, 1831), parts=[
  WordNode(pos=(1664, 1668), word='find'),
  WordNode(pos=(1669, 1679), word='/usr/local'),
  WordNode(pos=(1680, 1686), word='-depth'),
  WordNode(pos=(1689, 1691), word='('),
  WordNode(pos=(1695, 1697), word='('),
  WordNode(pos=(1698, 1703), word='-type'),
  WordNode(pos=(1704, 1705), word='d'),
  WordNode(pos=(1706, 1708), word='-a'),
  WordNode(pos=(1709, 1711), word='('),
  WordNode(pos=(1712, 1717), word='-name'),
  WordNode(pos=(1718, 1722), word='test'),
  WordNode(pos=(1723, 1725), word='-o'),
  WordNode(pos=(1726, 1731), word='-name'),
  WordNode(pos=(1732, 1737), word='tests'),
  WordNode(pos=(1738, 1740), word=')'),
  WordNode(pos=(1741, 1743), word=')'),
  WordNode(pos=(1747, 1749), word='-o'),
  WordNode(pos=(1753, 1755), word='('),
  WordNode(pos=(1756, 1761), word='-type'),
  WordNode(pos=(1762, 1763), word='f'),
  WordNode(pos=(1764, 1766), word='-a'),
  WordNode(pos=(1767, 1769), word='('),
  WordNode(pos=(1770, 1775), word='-name'),
  WordNode(pos=(1776, 1783), word='*.pyc'),
  WordNode(pos=(1784, 1786), word='-o'),
  WordNode(pos=(1787, 1792), word='-name'),
  WordNode(pos=(1793, 1800), word='*.pyo'),
  WordNode(pos=(1801, 1803), word=')'),
  WordNode(pos=(1804, 1806), word=')'),
  WordNode(pos=(1809, 1811), word=')'),
  WordNode(pos=(1812, 1817), word='-exec'),
  WordNode(pos=(1818, 1820), word='rm'),
  WordNode(pos=(1821, 1824), word='-rf'),
  WordNode(pos=(1825, 1829), word='{}'),
  WordNode(pos=(1830, 1831), word='+'),
])


3929) rm -rf /usr/src/python

CommandNode(pos=(1836, 1858), parts=[
  WordNode(pos=(1836, 1838), word='rm'),
  WordNode(pos=(1839, 1842), word='-rf'),
  WordNode(pos=(1843, 1858), word='/usr/src/python'),
])


3930) python2 --version

CommandNode(pos=(1864, 1881), parts=[
  WordNode(pos=(1864, 1871), word='python2'),
  WordNode(pos=(1872, 1881), word='--version'),
])


3931) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3932) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


3933) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


3934) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


3935) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


3936) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


3937) apk add --no-cache   ca-certificates

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
])


3938) [ ! -e /etc/nsswitch.conf ]

CommandNode(pos=(0, 27), parts=[
  WordNode(pos=(0, 1), word='['),
  WordNode(pos=(2, 3), word='!'),
  WordNode(pos=(4, 6), word='-e'),
  WordNode(pos=(7, 25), word='/etc/nsswitch.conf'),
  WordNode(pos=(26, 27), word=']'),
])


3939) echo 'hosts: files dns' > /etc/nsswitch.conf

CommandNode(pos=(31, 75), parts=[
  WordNode(pos=(31, 35), word='echo'),
  WordNode(pos=(36, 54), word='hosts: files dns'),
  RedirectNode(output=
    WordNode(pos=(57, 75), word='/etc/nsswitch.conf'), pos=(55, 75), type='>'),
])


3940) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3941) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


3942) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


3943) apt-get install -y --no-install-recommends   libjpeg-dev   libmagickwand-dev   libpng-dev   libzip-dev

CommandNode(pos=(69, 171), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 125), word='libjpeg-dev'),
  WordNode(pos=(128, 145), word='libmagickwand-dev'),
  WordNode(pos=(148, 158), word='libpng-dev'),
  WordNode(pos=(161, 171), word='libzip-dev'),
])


3944) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(177, 245), parts=[
  WordNode(pos=(177, 201), word='docker-php-ext-configure'),
  WordNode(pos=(202, 204), word='gd'),
  WordNode(pos=(205, 224), word='--with-png-dir=/usr'),
  WordNode(pos=(225, 245), word='--with-jpeg-dir=/usr'),
])


3945) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(248, 316), parts=[
  WordNode(pos=(248, 270), word='docker-php-ext-install'),
  WordNode(pos=(273, 279), word='bcmath'),
  WordNode(pos=(282, 286), word='exif'),
  WordNode(pos=(289, 291), word='gd'),
  WordNode(pos=(294, 300), word='mysqli'),
  WordNode(pos=(303, 310), word='opcache'),
  WordNode(pos=(313, 316), word='zip'),
])


3946) pecl install imagick-3.4.4

CommandNode(pos=(321, 347), parts=[
  WordNode(pos=(321, 325), word='pecl'),
  WordNode(pos=(326, 333), word='install'),
  WordNode(pos=(334, 347), word='imagick-3.4.4'),
])


3947) docker-php-ext-enable imagick

CommandNode(pos=(350, 379), parts=[
  WordNode(pos=(350, 371), word='docker-php-ext-enable'),
  WordNode(pos=(372, 379), word='imagick'),
])


3948) apt-mark auto '.*' > /dev/null

CommandNode(pos=(383, 413), parts=[
  WordNode(pos=(383, 391), word='apt-mark'),
  WordNode(pos=(392, 396), word='auto'),
  WordNode(pos=(397, 401), word='.*'),
  RedirectNode(output=
    WordNode(pos=(404, 413), word='/dev/null'), pos=(402, 413), type='>'),
])


3949) apt-mark manual $savedAptMark

CommandNode(pos=(416, 445), parts=[
  WordNode(pos=(416, 424), word='apt-mark'),
  WordNode(pos=(425, 431), word='manual'),
  WordNode(pos=(432, 445), word='$savedAptMark', parts=[
    ParameterNode(pos=(432, 445), value='savedAptMark'),
  ]),
])


3950) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(448, 501), parts=[
  WordNode(pos=(448, 451), word='ldd'),
  WordNode(pos=(452, 501), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(455, 494), parts=[
        WordNode(pos=(455, 458), word='php'),
        WordNode(pos=(459, 461), word='-r'),
        WordNode(pos=(462, 494), word='echo ini_get("extension_dir");'),
      ]), pos=(453, 495)),
  ]),
])


3951) awk '/=>/ { print $3 }'

CommandNode(pos=(506, 529), parts=[
  WordNode(pos=(506, 509), word='awk'),
  WordNode(pos=(510, 529), word='/=>/ { print $3 }'),
])


3952) sort -u

CommandNode(pos=(534, 541), parts=[
  WordNode(pos=(534, 538), word='sort'),
  WordNode(pos=(539, 541), word='-u'),
])


3953) xargs -r dpkg-query -S

CommandNode(pos=(546, 568), parts=[
  WordNode(pos=(546, 551), word='xargs'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 565), word='dpkg-query'),
  WordNode(pos=(566, 568), word='-S'),
])


3954) cut -d: -f1

CommandNode(pos=(573, 584), parts=[
  WordNode(pos=(573, 576), word='cut'),
  WordNode(pos=(577, 580), word='-d:'),
  WordNode(pos=(581, 584), word='-f1'),
])


3955) sort -u

CommandNode(pos=(589, 596), parts=[
  WordNode(pos=(589, 593), word='sort'),
  WordNode(pos=(594, 596), word='-u'),
])


3956) xargs -rt apt-mark manual

CommandNode(pos=(601, 626), parts=[
  WordNode(pos=(601, 606), word='xargs'),
  WordNode(pos=(607, 610), word='-rt'),
  WordNode(pos=(611, 619), word='apt-mark'),
  WordNode(pos=(620, 626), word='manual'),
])


3957) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(630, 706), parts=[
  WordNode(pos=(630, 637), word='apt-get'),
  WordNode(pos=(638, 643), word='purge'),
  WordNode(pos=(644, 646), word='-y'),
  WordNode(pos=(647, 660), word='--auto-remove'),
  WordNode(pos=(661, 663), word='-o'),
  WordNode(pos=(664, 706), word='APT::AutoRemove::RecommendsImportant=false'),
])


3958) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(709, 736), parts=[
  WordNode(pos=(709, 711), word='rm'),
  WordNode(pos=(712, 715), word='-rf'),
  WordNode(pos=(716, 736), word='/var/lib/apt/lists/*'),
])


3959) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


3960) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


3961) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


3962) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


3963) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


3964) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


3965) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


3966) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


3967) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


3968) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


3969) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


3970) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


3971) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


3972) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


3973) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


3974) a2enmod rewrite expires

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 7), word='a2enmod'),
  WordNode(pos=(8, 15), word='rewrite'),
  WordNode(pos=(16, 23), word='expires'),
])


3975) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3976) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


3977) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


3978) sha1sum -c -

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 154), word='sha1sum'),
  WordNode(pos=(155, 157), word='-c'),
  WordNode(pos=(158, 159), word='-'),
])


3979) tar -xzf wordpress.tar.gz -C /usr/src/

CommandNode(pos=(162, 200), parts=[
  WordNode(pos=(162, 165), word='tar'),
  WordNode(pos=(166, 170), word='-xzf'),
  WordNode(pos=(171, 187), word='wordpress.tar.gz'),
  WordNode(pos=(188, 190), word='-C'),
  WordNode(pos=(191, 200), word='/usr/src/'),
])


3980) rm wordpress.tar.gz

CommandNode(pos=(203, 222), parts=[
  WordNode(pos=(203, 205), word='rm'),
  WordNode(pos=(206, 222), word='wordpress.tar.gz'),
])


3981) chown -R www-data:www-data /usr/src/wordpress

CommandNode(pos=(225, 270), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 233), word='-R'),
  WordNode(pos=(234, 251), word='www-data:www-data'),
  WordNode(pos=(252, 270), word='/usr/src/wordpress'),
])


3982) apk add --no-cache   ca-certificates

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
])


3983) [ ! -e /etc/nsswitch.conf ]

CommandNode(pos=(0, 27), parts=[
  WordNode(pos=(0, 1), word='['),
  WordNode(pos=(2, 3), word='!'),
  WordNode(pos=(4, 6), word='-e'),
  WordNode(pos=(7, 25), word='/etc/nsswitch.conf'),
  WordNode(pos=(26, 27), word=']'),
])


3984) echo 'hosts: files dns' > /etc/nsswitch.conf

CommandNode(pos=(31, 75), parts=[
  WordNode(pos=(31, 35), word='echo'),
  WordNode(pos=(36, 54), word='hosts: files dns'),
  RedirectNode(output=
    WordNode(pos=(57, 75), word='/etc/nsswitch.conf'), pos=(55, 75), type='>'),
])


3985) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


3986) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


3987) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


3988) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


3989) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3990) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


3991) which gpg

CommandNode(pos=(32, 41), parts=[
  WordNode(pos=(32, 37), word='which'),
  WordNode(pos=(38, 41), word='gpg'),
])


3992) apt-get install -y --no-install-recommends gnupg

CommandNode(pos=(50, 98), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 65), word='install'),
  WordNode(pos=(66, 68), word='-y'),
  WordNode(pos=(69, 92), word='--no-install-recommends'),
  WordNode(pos=(93, 98), word='gnupg'),
])


3993) gpg --version

CommandNode(pos=(111, 124), parts=[
  WordNode(pos=(111, 114), word='gpg'),
  WordNode(pos=(115, 124), word='--version'),
])


3994) grep -q '^gpg (GnuPG) 1\.'

CommandNode(pos=(127, 153), parts=[
  WordNode(pos=(127, 131), word='grep'),
  WordNode(pos=(132, 134), word='-q'),
  WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
])


3995) apt-get install -y --no-install-recommends dirmngr

CommandNode(pos=(163, 213), parts=[
  WordNode(pos=(163, 170), word='apt-get'),
  WordNode(pos=(171, 178), word='install'),
  WordNode(pos=(179, 181), word='-y'),
  WordNode(pos=(182, 205), word='--no-install-recommends'),
  WordNode(pos=(206, 213), word='dirmngr'),
])


3996) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(221, 248), parts=[
  WordNode(pos=(221, 223), word='rm'),
  WordNode(pos=(224, 227), word='-rf'),
  WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
])


3997) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


3998) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


3999) apt-get update

CommandNode(pos=(53, 67), parts=[
  WordNode(pos=(53, 60), word='apt-get'),
  WordNode(pos=(61, 67), word='update'),
])


4000) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


4001) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


4002) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


4003) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


4004) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


4005) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


4006) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(488, 591), parts=[
  WordNode(pos=(488, 491), word='gpg'),
  WordNode(pos=(492, 499), word='--batch'),
  WordNode(pos=(500, 511), word='--keyserver'),
  WordNode(pos=(512, 538), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(539, 550), word='--recv-keys'),
  WordNode(pos=(551, 591), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


4007) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(594, 658), parts=[
  WordNode(pos=(594, 597), word='gpg'),
  WordNode(pos=(598, 605), word='--batch'),
  WordNode(pos=(606, 614), word='--verify'),
  WordNode(pos=(615, 638), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(639, 658), word='/usr/local/bin/gosu'),
])


4008) command -v gpgconf > /dev/null

CommandNode(pos=(661, 691), parts=[
  WordNode(pos=(661, 668), word='command'),
  WordNode(pos=(669, 671), word='-v'),
  WordNode(pos=(672, 679), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(682, 691), word='/dev/null'), pos=(680, 691), type='>'),
])


4009) gpgconf --kill all

CommandNode(pos=(695, 713), parts=[
  WordNode(pos=(695, 702), word='gpgconf'),
  WordNode(pos=(703, 709), word='--kill'),
  WordNode(pos=(710, 713), word='all'),
])


4010) :

CommandNode(pos=(717, 718), parts=[
  WordNode(pos=(717, 718), word=':'),
])


4011) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


4012) chmod +x /usr/local/bin/gosu

CommandNode(pos=(767, 795), parts=[
  WordNode(pos=(767, 772), word='chmod'),
  WordNode(pos=(773, 775), word='+x'),
  WordNode(pos=(776, 795), word='/usr/local/bin/gosu'),
])


4013) gosu nobody true

CommandNode(pos=(798, 814), parts=[
  WordNode(pos=(798, 802), word='gosu'),
  WordNode(pos=(803, 809), word='nobody'),
  WordNode(pos=(810, 814), word='true'),
])


4014) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


4015) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


4016) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


4017) apt-get install -y --no-install-recommends   apt-transport-https ca-certificates   pwgen   tzdata

CommandNode(pos=(18, 115), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 82), word='apt-transport-https'),
  WordNode(pos=(83, 98), word='ca-certificates'),
  WordNode(pos=(101, 106), word='pwgen'),
  WordNode(pos=(109, 115), word='tzdata'),
])


4018) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(120, 147), parts=[
  WordNode(pos=(120, 122), word='rm'),
  WordNode(pos=(123, 126), word='-rf'),
  WordNode(pos=(127, 147), word='/var/lib/apt/lists/*'),
])


4019) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4020) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


4021) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


4022) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


4023) command -v gpgconf > /dev/null

CommandNode(pos=(220, 250), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
])


4024) gpgconf --kill all

CommandNode(pos=(254, 272), parts=[
  WordNode(pos=(254, 261), word='gpgconf'),
  WordNode(pos=(262, 268), word='--kill'),
  WordNode(pos=(269, 272), word='all'),
])


4025) :

CommandNode(pos=(276, 277), parts=[
  WordNode(pos=(276, 277), word=':'),
])


4026) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


4027) apt-key list

CommandNode(pos=(301, 313), parts=[
  WordNode(pos=(301, 308), word='apt-key'),
  WordNode(pos=(309, 313), word='list'),
])


4028) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


4029) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu %%SUITE%% main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 133), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 94), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu %%SUITE%% main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(97, 133), word='/etc/apt/sources.list.d/mariadb.list'), pos=(95, 133), type='>'),
])


4030) echo 'Package: *'

CommandNode(pos=(140, 157), parts=[
  WordNode(pos=(140, 144), word='echo'),
  WordNode(pos=(145, 157), word='Package: *'),
])


4031) echo 'Pin: release o=MariaDB'

CommandNode(pos=(161, 190), parts=[
  WordNode(pos=(161, 165), word='echo'),
  WordNode(pos=(166, 190), word='Pin: release o=MariaDB'),
])


4032) echo 'Pin-Priority: 999'

CommandNode(pos=(194, 218), parts=[
  WordNode(pos=(194, 198), word='echo'),
  WordNode(pos=(199, 218), word='Pin-Priority: 999'),
])


4033) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4034) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


4035) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


4036) debconf-set-selections

CommandNode(pos=(193, 215), parts=[
  WordNode(pos=(193, 215), word='debconf-set-selections'),
])


4037) apt-get update

CommandNode(pos=(218, 232), parts=[
  WordNode(pos=(218, 225), word='apt-get'),
  WordNode(pos=(226, 232), word='update'),
])


4038) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   %%BACKUP_PACKAGE%%   socat

CommandNode(pos=(235, 318), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 310), word='%%BACKUP_PACKAGE%%'),
  WordNode(pos=(313, 318), word='socat'),
])


4039) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(323, 350), parts=[
  WordNode(pos=(323, 325), word='rm'),
  WordNode(pos=(326, 329), word='-rf'),
  WordNode(pos=(330, 350), word='/var/lib/apt/lists/*'),
])


4040) sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*

CommandNode(pos=(353, 414), parts=[
  WordNode(pos=(353, 356), word='sed'),
  WordNode(pos=(357, 360), word='-ri'),
  WordNode(pos=(361, 376), word='s/^user\\s/#&/'),
  WordNode(pos=(377, 394), word='/etc/mysql/my.cnf'),
  WordNode(pos=(395, 414), word='/etc/mysql/conf.d/*'),
])


4041) rm -rf /var/lib/mysql

CommandNode(pos=(417, 438), parts=[
  WordNode(pos=(417, 419), word='rm'),
  WordNode(pos=(420, 423), word='-rf'),
  WordNode(pos=(424, 438), word='/var/lib/mysql'),
])


4042) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(441, 480), parts=[
  WordNode(pos=(441, 446), word='mkdir'),
  WordNode(pos=(447, 449), word='-p'),
  WordNode(pos=(450, 464), word='/var/lib/mysql'),
  WordNode(pos=(465, 480), word='/var/run/mysqld'),
])


4043) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(483, 534), parts=[
  WordNode(pos=(483, 488), word='chown'),
  WordNode(pos=(489, 491), word='-R'),
  WordNode(pos=(492, 503), word='mysql:mysql'),
  WordNode(pos=(504, 518), word='/var/lib/mysql'),
  WordNode(pos=(519, 534), word='/var/run/mysqld'),
])


4044) chmod 777 /var/run/mysqld

CommandNode(pos=(537, 562), parts=[
  WordNode(pos=(537, 542), word='chmod'),
  WordNode(pos=(543, 546), word='777'),
  WordNode(pos=(547, 562), word='/var/run/mysqld'),
])


4045) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(565, 603), parts=[
  WordNode(pos=(565, 569), word='find'),
  WordNode(pos=(570, 581), word='/etc/mysql/'),
  WordNode(pos=(582, 587), word='-name'),
  WordNode(pos=(588, 595), word='*.cnf'),
  WordNode(pos=(596, 603), word='-print0'),
])


4046) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(608, 648), parts=[
  WordNode(pos=(608, 613), word='xargs'),
  WordNode(pos=(614, 616), word='-0'),
  WordNode(pos=(617, 621), word='grep'),
  WordNode(pos=(622, 626), word='-lZE'),
  WordNode(pos=(627, 648), word='^(bind-address|log)'),
])


4047) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(653, 701), parts=[
  WordNode(pos=(653, 658), word='xargs'),
  WordNode(pos=(659, 662), word='-rt'),
  WordNode(pos=(663, 665), word='-0'),
  WordNode(pos=(666, 669), word='sed'),
  WordNode(pos=(670, 673), word='-Ei'),
  WordNode(pos=(674, 701), word='s/^(bind-address|log)/#&/'),
])


4048) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(704, 786), parts=[
  WordNode(pos=(704, 708), word='echo'),
  WordNode(pos=(709, 755), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(758, 786), word='/etc/mysql/conf.d/docker.cnf'), pos=(756, 786), type='>'),
])


4049) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


4050) apk add --no-cache   'su-exec>=0.2'   bash   procps

CommandNode(pos=(0, 51), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 35), word='su-exec>=0.2'),
  WordNode(pos=(38, 42), word='bash'),
  WordNode(pos=(45, 51), word='procps'),
])


4051) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4052) apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev

CommandNode(pos=(12, 159), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 63), word='autoconf'),
  WordNode(pos=(66, 81), word='ca-certificates'),
  WordNode(pos=(84, 92), word='dpkg-dev'),
  WordNode(pos=(93, 97), word='dpkg'),
  WordNode(pos=(100, 103), word='gcc'),
  WordNode(pos=(106, 111), word='gnupg'),
  WordNode(pos=(114, 122), word='libc-dev'),
  WordNode(pos=(125, 138), word='linux-headers'),
  WordNode(pos=(141, 145), word='make'),
  WordNode(pos=(148, 159), word='ncurses-dev'),
])


4053) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


4054) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


4055) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(308, 345), parts=[
  AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


4056) mkdir /usr/local/src

CommandNode(pos=(349, 369), parts=[
  WordNode(pos=(349, 354), word='mkdir'),
  WordNode(pos=(355, 369), word='/usr/local/src'),
])


4057) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


4058) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


4059) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(521, 552), parts=[
  WordNode(pos=(521, 527), word='export'),
  WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(541, 550), parts=[
        WordNode(pos=(541, 547), word='mktemp'),
        WordNode(pos=(548, 550), word='-d'),
      ]), pos=(539, 551)),
  ]),
])


4060) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


4061) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


4062) gpgconf --kill all

CommandNode(pos=(735, 753), parts=[
  WordNode(pos=(735, 742), word='gpgconf'),
  WordNode(pos=(743, 749), word='--kill'),
  WordNode(pos=(750, 753), word='all'),
])


4063) rm -rf "$GNUPGHOME"

CommandNode(pos=(756, 775), parts=[
  WordNode(pos=(756, 758), word='rm'),
  WordNode(pos=(759, 762), word='-rf'),
  WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(764, 774), value='GNUPGHOME'),
  ]),
])


4064) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


4065) sha256sum -c -

CommandNode(pos=(832, 846), parts=[
  WordNode(pos=(832, 841), word='sha256sum'),
  WordNode(pos=(842, 844), word='-c'),
  WordNode(pos=(845, 846), word='-'),
])


4066) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(849, 873), parts=[
  WordNode(pos=(849, 854), word='mkdir'),
  WordNode(pos=(855, 857), word='-p'),
  WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
  ]),
])


4067) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


4068) cd "$OPENSSL_PATH"

CommandNode(pos=(972, 990), parts=[
  WordNode(pos=(972, 974), word='cd'),
  WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
  ]),
])


4069) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


4070) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1145, 1183), parts=[
  WordNode(pos=(1145, 1149), word='make'),
  WordNode(pos=(1150, 1152), word='-j'),
  WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1156, 1181), parts=[
        WordNode(pos=(1156, 1163), word='getconf'),
        WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
      ]), pos=(1154, 1182)),
  ]),
])


4071) make install_sw install_ssldirs

CommandNode(pos=(1186, 1217), parts=[
  WordNode(pos=(1186, 1190), word='make'),
  WordNode(pos=(1191, 1201), word='install_sw'),
  WordNode(pos=(1202, 1217), word='install_ssldirs'),
])


4072) cd ..

CommandNode(pos=(1220, 1225), parts=[
  WordNode(pos=(1220, 1222), word='cd'),
  WordNode(pos=(1223, 1225), word='..'),
])


4073) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1228, 1251), parts=[
  WordNode(pos=(1228, 1230), word='rm'),
  WordNode(pos=(1231, 1234), word='-rf'),
  WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
  ]),
])


4074) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


4075) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1320, 1380), parts=[
  WordNode(pos=(1320, 1322), word='ln'),
  WordNode(pos=(1323, 1326), word='-sf'),
  WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
  WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
  WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
  ]),
])


4076) openssl version

CommandNode(pos=(1383, 1398), parts=[
  WordNode(pos=(1383, 1390), word='openssl'),
  WordNode(pos=(1391, 1398), word='version'),
])


4077) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


4078) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


4079) mkdir -p "$OTP_PATH"

CommandNode(pos=(1529, 1549), parts=[
  WordNode(pos=(1529, 1534), word='mkdir'),
  WordNode(pos=(1535, 1537), word='-p'),
  WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
  ]),
])


4080) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


4081) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


4082) sha256sum -c -

CommandNode(pos=(1660, 1674), parts=[
  WordNode(pos=(1660, 1669), word='sha256sum'),
  WordNode(pos=(1670, 1672), word='-c'),
  WordNode(pos=(1673, 1674), word='-'),
])


4083) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


4084) cd "$OTP_PATH"

CommandNode(pos=(1765, 1779), parts=[
  WordNode(pos=(1765, 1767), word='cd'),
  WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
  ]),
])


4085) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(1782, 1808), parts=[
  WordNode(pos=(1782, 1788), word='export'),
  WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
  ]),
])


4086) ./otp_build autoconf

CommandNode(pos=(1811, 1831), parts=[
  WordNode(pos=(1811, 1822), word='./otp_build'),
  WordNode(pos=(1823, 1831), word='autoconf'),
])


4087) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


4088) export CFLAGS

CommandNode(pos=(1876, 1889), parts=[
  WordNode(pos=(1876, 1882), word='export'),
  WordNode(pos=(1883, 1889), word='CFLAGS'),
])


4089) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


4090) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


4091) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


4092) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


4093) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


4094) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(2771, 2849), parts=[
  WordNode(pos=(2771, 2775), word='make'),
  WordNode(pos=(2776, 2778), word='-j'),
  WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2782, 2807), parts=[
        WordNode(pos=(2782, 2789), word='getconf'),
        WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
      ]), pos=(2780, 2808)),
  ]),
  WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


4095) make install

CommandNode(pos=(2852, 2864), parts=[
  WordNode(pos=(2852, 2856), word='make'),
  WordNode(pos=(2857, 2864), word='install'),
])


4096) cd ..

CommandNode(pos=(2867, 2872), parts=[
  WordNode(pos=(2867, 2869), word='cd'),
  WordNode(pos=(2870, 2872), word='..'),
])


4097) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(2875, 2969), parts=[
  WordNode(pos=(2875, 2877), word='rm'),
  WordNode(pos=(2878, 2881), word='-rf'),
  WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
  ]),
  WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
])


4098) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


4099) apk add --no-cache --virtual .otp-run-deps $runDeps

CommandNode(pos=(3175, 3226), parts=[
  WordNode(pos=(3175, 3178), word='apk'),
  WordNode(pos=(3179, 3182), word='add'),
  WordNode(pos=(3183, 3193), word='--no-cache'),
  WordNode(pos=(3194, 3203), word='--virtual'),
  WordNode(pos=(3204, 3217), word='.otp-run-deps'),
  WordNode(pos=(3218, 3226), word='$runDeps', parts=[
    ParameterNode(pos=(3218, 3226), value='runDeps'),
  ]),
])


4100) apk del --no-network .build-deps

CommandNode(pos=(3229, 3261), parts=[
  WordNode(pos=(3229, 3232), word='apk'),
  WordNode(pos=(3233, 3236), word='del'),
  WordNode(pos=(3237, 3249), word='--no-network'),
  WordNode(pos=(3250, 3261), word='.build-deps'),
])


4101) openssl version

CommandNode(pos=(3265, 3280), parts=[
  WordNode(pos=(3265, 3272), word='openssl'),
  WordNode(pos=(3273, 3280), word='version'),
])


4102) erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

CommandNode(pos=(3283, 3380), parts=[
  WordNode(pos=(3283, 3286), word='erl'),
  WordNode(pos=(3287, 3295), word='-noshell'),
  WordNode(pos=(3296, 3301), word='-eval'),
  WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
])


4103) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4104) addgroup -g 101 -S rabbitmq

CommandNode(pos=(11, 38), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 26), word='101'),
  WordNode(pos=(27, 29), word='-S'),
  WordNode(pos=(30, 38), word='rabbitmq'),
])


4105) adduser -u 100 -S -h "$RABBITMQ_DATA_DIR" -G rabbitmq rabbitmq

CommandNode(pos=(41, 103), parts=[
  WordNode(pos=(41, 48), word='adduser'),
  WordNode(pos=(49, 51), word='-u'),
  WordNode(pos=(52, 55), word='100'),
  WordNode(pos=(56, 58), word='-S'),
  WordNode(pos=(59, 61), word='-h'),
  WordNode(pos=(62, 82), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(63, 81), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(83, 85), word='-G'),
  WordNode(pos=(86, 94), word='rabbitmq'),
  WordNode(pos=(95, 103), word='rabbitmq'),
])


4106) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(106, 185), parts=[
  WordNode(pos=(106, 111), word='mkdir'),
  WordNode(pos=(112, 114), word='-p'),
  WordNode(pos=(115, 135), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(116, 134), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(136, 149), word='/etc/rabbitmq'),
  WordNode(pos=(150, 167), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(168, 185), word='/var/log/rabbitmq'),
])


4107) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(188, 286), parts=[
  WordNode(pos=(188, 193), word='chown'),
  WordNode(pos=(194, 197), word='-fR'),
  WordNode(pos=(198, 215), word='rabbitmq:rabbitmq'),
  WordNode(pos=(216, 236), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(217, 235), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(237, 250), word='/etc/rabbitmq'),
  WordNode(pos=(251, 268), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(269, 286), word='/var/log/rabbitmq'),
])


4108) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(289, 369), parts=[
  WordNode(pos=(289, 294), word='chmod'),
  WordNode(pos=(295, 298), word='777'),
  WordNode(pos=(299, 319), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(300, 318), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(320, 333), word='/etc/rabbitmq'),
  WordNode(pos=(334, 351), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(352, 369), word='/var/log/rabbitmq'),
])


4109) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(372, 435), parts=[
  WordNode(pos=(372, 374), word='ln'),
  WordNode(pos=(375, 378), word='-sf'),
  WordNode(pos=(379, 414), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(380, 398), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(415, 435), word='/root/.erlang.cookie'),
])


4110) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4111) apk add --no-cache --virtual .build-deps   ca-certificates   gnupg   xz

CommandNode(pos=(12, 83), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 78), word='gnupg'),
  WordNode(pos=(81, 83), word='xz'),
])


4112) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


4113) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


4114) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


4115) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


4116) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(462, 493), parts=[
  WordNode(pos=(462, 468), word='export'),
  WordNode(pos=(469, 493), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(482, 491), parts=[
        WordNode(pos=(482, 488), word='mktemp'),
        WordNode(pos=(489, 491), word='-d'),
      ]), pos=(480, 492)),
  ]),
])


4117) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


4118) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


4119) gpgconf --kill all

CommandNode(pos=(649, 667), parts=[
  WordNode(pos=(649, 656), word='gpgconf'),
  WordNode(pos=(657, 663), word='--kill'),
  WordNode(pos=(664, 667), word='all'),
])


4120) rm -rf "$GNUPGHOME"

CommandNode(pos=(670, 689), parts=[
  WordNode(pos=(670, 672), word='rm'),
  WordNode(pos=(673, 676), word='-rf'),
  WordNode(pos=(677, 689), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(678, 688), value='GNUPGHOME'),
  ]),
])


4121) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(693, 718), parts=[
  WordNode(pos=(693, 698), word='mkdir'),
  WordNode(pos=(699, 701), word='-p'),
  WordNode(pos=(702, 718), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(703, 717), value='RABBITMQ_HOME'),
  ]),
])


4122) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


4123) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(818, 842), parts=[
  WordNode(pos=(818, 820), word='rm'),
  WordNode(pos=(821, 824), word='-rf'),
  WordNode(pos=(825, 842), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(826, 840), value='RABBITMQ_PATH'),
  ]),
])


4124) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(845, 928), parts=[
  WordNode(pos=(845, 849), word='grep'),
  WordNode(pos=(850, 853), word='-qE'),
  WordNode(pos=(854, 888), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(889, 928), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(890, 904), value='RABBITMQ_HOME'),
  ]),
])


4125) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(931, 1010), parts=[
  WordNode(pos=(931, 934), word='sed'),
  WordNode(pos=(935, 937), word='-i'),
  WordNode(pos=(938, 970), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(971, 1010), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(972, 986), value='RABBITMQ_HOME'),
  ]),
])


4126) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1013, 1077), parts=[
  WordNode(pos=(1013, 1017), word='grep'),
  WordNode(pos=(1018, 1021), word='-qE'),
  WordNode(pos=(1022, 1037), word='^SYS_PREFIX=$'),
  WordNode(pos=(1038, 1077), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1039, 1053), value='RABBITMQ_HOME'),
  ]),
])


4127) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1080, 1123), parts=[
  WordNode(pos=(1080, 1085), word='chown'),
  WordNode(pos=(1086, 1088), word='-R'),
  WordNode(pos=(1089, 1106), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1107, 1123), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1108, 1122), value='RABBITMQ_HOME'),
  ]),
])


4128) apk del .build-deps

CommandNode(pos=(1127, 1146), parts=[
  WordNode(pos=(1127, 1130), word='apk'),
  WordNode(pos=(1131, 1134), word='del'),
  WordNode(pos=(1135, 1146), word='.build-deps'),
])


4129) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1150, 1194), parts=[
  WordNode(pos=(1150, 1151), word='['),
  WordNode(pos=(1152, 1153), word='!'),
  WordNode(pos=(1154, 1156), word='-e'),
  WordNode(pos=(1157, 1192), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1158, 1176), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1193, 1194), word=']'),
])


4130) su-exec rabbitmq rabbitmqctl help

CommandNode(pos=(1197, 1230), parts=[
  WordNode(pos=(1197, 1204), word='su-exec'),
  WordNode(pos=(1205, 1213), word='rabbitmq'),
  WordNode(pos=(1214, 1225), word='rabbitmqctl'),
  WordNode(pos=(1226, 1230), word='help'),
])


4131) su-exec rabbitmq rabbitmqctl list_ciphers

CommandNode(pos=(1233, 1274), parts=[
  WordNode(pos=(1233, 1240), word='su-exec'),
  WordNode(pos=(1241, 1249), word='rabbitmq'),
  WordNode(pos=(1250, 1261), word='rabbitmqctl'),
  WordNode(pos=(1262, 1274), word='list_ciphers'),
])


4132) su-exec rabbitmq rabbitmq-plugins list

CommandNode(pos=(1277, 1315), parts=[
  WordNode(pos=(1277, 1284), word='su-exec'),
  WordNode(pos=(1285, 1293), word='rabbitmq'),
  WordNode(pos=(1294, 1310), word='rabbitmq-plugins'),
  WordNode(pos=(1311, 1315), word='list'),
])


4133) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1318, 1356), parts=[
  WordNode(pos=(1318, 1320), word='rm'),
  WordNode(pos=(1321, 1356), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1322, 1340), value='RABBITMQ_DATA_DIR'),
  ]),
])


4134) ln -sf /opt/rabbitmq/plugins /plugins

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 6), word='-sf'),
  WordNode(pos=(7, 28), word='/opt/rabbitmq/plugins'),
  WordNode(pos=(29, 37), word='/plugins'),
])


4135) apk add --no-cache   ca-certificates

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
])


4136) [ ! -e /etc/nsswitch.conf ]

CommandNode(pos=(0, 27), parts=[
  WordNode(pos=(0, 1), word='['),
  WordNode(pos=(2, 3), word='!'),
  WordNode(pos=(4, 6), word='-e'),
  WordNode(pos=(7, 25), word='/etc/nsswitch.conf'),
  WordNode(pos=(26, 27), word=']'),
])


4137) echo 'hosts: files dns' > /etc/nsswitch.conf

CommandNode(pos=(31, 75), parts=[
  WordNode(pos=(31, 35), word='echo'),
  WordNode(pos=(36, 54), word='hosts: files dns'),
  RedirectNode(output=
    WordNode(pos=(57, 75), word='/etc/nsswitch.conf'), pos=(55, 75), type='>'),
])


4138) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


4139) apt-get install -y --no-install-recommends   bzip2   gnupg dirmngr   libcurl4-openssl-dev   libfreetype6-dev   libicu-dev   libjpeg-dev   libldap2-dev   libmcrypt-dev   libmemcached-dev   libpng-dev   libpq-dev   libxml2-dev   unzip

CommandNode(pos=(18, 250), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 68), word='bzip2'),
  WordNode(pos=(71, 76), word='gnupg'),
  WordNode(pos=(77, 84), word='dirmngr'),
  WordNode(pos=(87, 107), word='libcurl4-openssl-dev'),
  WordNode(pos=(110, 126), word='libfreetype6-dev'),
  WordNode(pos=(129, 139), word='libicu-dev'),
  WordNode(pos=(142, 153), word='libjpeg-dev'),
  WordNode(pos=(156, 168), word='libldap2-dev'),
  WordNode(pos=(171, 184), word='libmcrypt-dev'),
  WordNode(pos=(187, 203), word='libmemcached-dev'),
  WordNode(pos=(206, 216), word='libpng-dev'),
  WordNode(pos=(219, 228), word='libpq-dev'),
  WordNode(pos=(231, 242), word='libxml2-dev'),
  WordNode(pos=(245, 250), word='unzip'),
])


4140) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(255, 282), parts=[
  WordNode(pos=(255, 257), word='rm'),
  WordNode(pos=(258, 261), word='-rf'),
  WordNode(pos=(262, 282), word='/var/lib/apt/lists/*'),
])


4141) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4142) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(10, 78), parts=[
  WordNode(pos=(10, 34), word='docker-php-ext-configure'),
  WordNode(pos=(35, 37), word='gd'),
  WordNode(pos=(38, 57), word='--with-png-dir=/usr'),
  WordNode(pos=(58, 78), word='--with-jpeg-dir=/usr'),
])


4143) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


4144) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


4145) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   mcrypt   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 340), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 284), word='mcrypt'),
  WordNode(pos=(287, 294), word='opcache'),
  WordNode(pos=(297, 302), word='pcntl'),
  WordNode(pos=(305, 314), word='pdo_mysql'),
  WordNode(pos=(317, 326), word='pdo_pgsql'),
  WordNode(pos=(329, 334), word='pgsql'),
  WordNode(pos=(337, 340), word='zip'),
])


4146) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


4147) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


4148) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


4149) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


4150) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


4151) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


4152) a2enmod rewrite

CommandNode(pos=(0, 15), parts=[
  WordNode(pos=(0, 7), word='a2enmod'),
  WordNode(pos=(8, 15), word='rewrite'),
])


4153) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4154) pecl install APCu-5.1.11

CommandNode(pos=(10, 34), parts=[
  WordNode(pos=(10, 14), word='pecl'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 34), word='APCu-5.1.11'),
])


4155) pecl install memcached-3.0.4

CommandNode(pos=(37, 65), parts=[
  WordNode(pos=(37, 41), word='pecl'),
  WordNode(pos=(42, 49), word='install'),
  WordNode(pos=(50, 65), word='memcached-3.0.4'),
])


4156) pecl install redis-3.1.6

CommandNode(pos=(68, 92), parts=[
  WordNode(pos=(68, 72), word='pecl'),
  WordNode(pos=(73, 80), word='install'),
  WordNode(pos=(81, 92), word='redis-3.1.6'),
])


4157) docker-php-ext-enable   apcu   memcached   redis

CommandNode(pos=(95, 143), parts=[
  WordNode(pos=(95, 116), word='docker-php-ext-enable'),
  WordNode(pos=(119, 123), word='apcu'),
  WordNode(pos=(126, 135), word='memcached'),
  WordNode(pos=(138, 143), word='redis'),
])


4158) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4159) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


4160) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


4161) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


4162) sha256sum -c -

CommandNode(pos=(283, 297), parts=[
  WordNode(pos=(283, 292), word='sha256sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


4163) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


4164) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys E3036906AD9F30807351FAC32D5D5E97F6978A26

CommandNode(pos=(334, 437), parts=[
  WordNode(pos=(334, 337), word='gpg'),
  WordNode(pos=(338, 345), word='--batch'),
  WordNode(pos=(346, 357), word='--keyserver'),
  WordNode(pos=(358, 384), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(385, 396), word='--recv-keys'),
  WordNode(pos=(397, 437), word='E3036906AD9F30807351FAC32D5D5E97F6978A26'),
])


4165) gpg --batch --verify owncloud.tar.bz2.asc owncloud.tar.bz2

CommandNode(pos=(440, 498), parts=[
  WordNode(pos=(440, 443), word='gpg'),
  WordNode(pos=(444, 451), word='--batch'),
  WordNode(pos=(452, 460), word='--verify'),
  WordNode(pos=(461, 481), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(482, 498), word='owncloud.tar.bz2'),
])


4166) command -v gpgconf

CommandNode(pos=(501, 519), parts=[
  WordNode(pos=(501, 508), word='command'),
  WordNode(pos=(509, 511), word='-v'),
  WordNode(pos=(512, 519), word='gpgconf'),
])


4167) gpgconf --kill all

CommandNode(pos=(523, 541), parts=[
  WordNode(pos=(523, 530), word='gpgconf'),
  WordNode(pos=(531, 537), word='--kill'),
  WordNode(pos=(538, 541), word='all'),
])


4168) :

CommandNode(pos=(545, 546), parts=[
  WordNode(pos=(545, 546), word=':'),
])


4169) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


4170) tar -xjf owncloud.tar.bz2 -C /usr/src/

CommandNode(pos=(591, 629), parts=[
  WordNode(pos=(591, 594), word='tar'),
  WordNode(pos=(595, 599), word='-xjf'),
  WordNode(pos=(600, 616), word='owncloud.tar.bz2'),
  WordNode(pos=(617, 619), word='-C'),
  WordNode(pos=(620, 629), word='/usr/src/'),
])


4171) rm owncloud.tar.bz2

CommandNode(pos=(632, 651), parts=[
  WordNode(pos=(632, 634), word='rm'),
  WordNode(pos=(635, 651), word='owncloud.tar.bz2'),
])


4172) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


4173) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4174) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


4175) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


4176) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


4177) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


4178) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


4179) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


4180) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4181) apk add --no-cache --virtual .fetch-deps   ca-certificates   openssl   tar

CommandNode(pos=(13, 87), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 53), word='.fetch-deps'),
  WordNode(pos=(56, 71), word='ca-certificates'),
  WordNode(pos=(74, 81), word='openssl'),
  WordNode(pos=(84, 87), word='tar'),
])


4182) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


4183) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


4184) sha256sum -c -

CommandNode(pos=(248, 262), parts=[
  WordNode(pos=(248, 257), word='sha256sum'),
  WordNode(pos=(258, 260), word='-c'),
  WordNode(pos=(261, 262), word='-'),
])


4185) mkdir -p /usr/src/postgresql

CommandNode(pos=(267, 295), parts=[
  WordNode(pos=(267, 272), word='mkdir'),
  WordNode(pos=(273, 275), word='-p'),
  WordNode(pos=(276, 295), word='/usr/src/postgresql'),
])


4186) tar   --extract   --file postgresql.tar.bz2   --directory /usr/src/postgresql   --strip-components 1

CommandNode(pos=(300, 400), parts=[
  WordNode(pos=(300, 303), word='tar'),
  WordNode(pos=(306, 315), word='--extract'),
  WordNode(pos=(318, 324), word='--file'),
  WordNode(pos=(325, 343), word='postgresql.tar.bz2'),
  WordNode(pos=(346, 357), word='--directory'),
  WordNode(pos=(358, 377), word='/usr/src/postgresql'),
  WordNode(pos=(380, 398), word='--strip-components'),
  WordNode(pos=(399, 400), word='1'),
])


4187) rm postgresql.tar.bz2

CommandNode(pos=(405, 426), parts=[
  WordNode(pos=(405, 407), word='rm'),
  WordNode(pos=(408, 426), word='postgresql.tar.bz2'),
])


4188) apk add --no-cache --virtual .build-deps   bison   coreutils   dpkg-dev dpkg   flex   gcc   libc-dev   libedit-dev   libxml2-dev   libxslt-dev   linux-headers   make   openssl-dev   perl-utils   perl-ipc-run   util-linux-dev   zlib-dev   icu-dev

CommandNode(pos=(432, 677), parts=[
  WordNode(pos=(432, 435), word='apk'),
  WordNode(pos=(436, 439), word='add'),
  WordNode(pos=(440, 450), word='--no-cache'),
  WordNode(pos=(451, 460), word='--virtual'),
  WordNode(pos=(461, 472), word='.build-deps'),
  WordNode(pos=(475, 480), word='bison'),
  WordNode(pos=(483, 492), word='coreutils'),
  WordNode(pos=(495, 503), word='dpkg-dev'),
  WordNode(pos=(504, 508), word='dpkg'),
  WordNode(pos=(511, 515), word='flex'),
  WordNode(pos=(518, 521), word='gcc'),
  WordNode(pos=(524, 532), word='libc-dev'),
  WordNode(pos=(535, 546), word='libedit-dev'),
  WordNode(pos=(549, 560), word='libxml2-dev'),
  WordNode(pos=(563, 574), word='libxslt-dev'),
  WordNode(pos=(577, 590), word='linux-headers'),
  WordNode(pos=(593, 597), word='make'),
  WordNode(pos=(600, 611), word='openssl-dev'),
  WordNode(pos=(614, 624), word='perl-utils'),
  WordNode(pos=(627, 639), word='perl-ipc-run'),
  WordNode(pos=(642, 656), word='util-linux-dev'),
  WordNode(pos=(659, 667), word='zlib-dev'),
  WordNode(pos=(670, 677), word='icu-dev'),
])


4189) cd /usr/src/postgresql

CommandNode(pos=(683, 705), parts=[
  WordNode(pos=(683, 685), word='cd'),
  WordNode(pos=(686, 705), word='/usr/src/postgresql'),
])


4190) awk '$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\"/tmp\"" { $3 = "\"/var/run/postgresql\""; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new

CommandNode(pos=(710, 909), parts=[
  WordNode(pos=(710, 713), word='awk'),
  WordNode(pos=(714, 841), word='$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\\"/tmp\\"" { $3 = "\\"/var/run/postgresql\\""; print; next } { print }'),
  WordNode(pos=(842, 872), word='src/include/pg_config_manual.h'),
  RedirectNode(output=
    WordNode(pos=(875, 909), word='src/include/pg_config_manual.h.new'), pos=(873, 909), type='>'),
])


4191) grep '/var/run/postgresql' src/include/pg_config_manual.h.new

CommandNode(pos=(914, 975), parts=[
  WordNode(pos=(914, 918), word='grep'),
  WordNode(pos=(919, 940), word='/var/run/postgresql'),
  WordNode(pos=(941, 975), word='src/include/pg_config_manual.h.new'),
])


4192) mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h

CommandNode(pos=(980, 1048), parts=[
  WordNode(pos=(980, 982), word='mv'),
  WordNode(pos=(983, 1017), word='src/include/pg_config_manual.h.new'),
  WordNode(pos=(1018, 1048), word='src/include/pg_config_manual.h'),
])


4193) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


4194) wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1115, 1252), parts=[
  WordNode(pos=(1115, 1119), word='wget'),
  WordNode(pos=(1120, 1122), word='-O'),
  WordNode(pos=(1123, 1142), word='config/config.guess'),
  WordNode(pos=(1143, 1252), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


4195) wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1257, 1390), parts=[
  WordNode(pos=(1257, 1261), word='wget'),
  WordNode(pos=(1262, 1264), word='-O'),
  WordNode(pos=(1265, 1282), word='config/config.sub'),
  WordNode(pos=(1283, 1390), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


4196) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt   --with-icu

CommandNode(pos=(1395, 1777), parts=[
  WordNode(pos=(1395, 1406), word='./configure'),
  WordNode(pos=(1409, 1427), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1418, 1426), value='gnuArch'),
  ]),
  WordNode(pos=(1430, 1456), word='--enable-integer-datetimes'),
  WordNode(pos=(1459, 1481), word='--enable-thread-safety'),
  WordNode(pos=(1484, 1502), word='--enable-tap-tests'),
  WordNode(pos=(1505, 1520), word='--disable-rpath'),
  WordNode(pos=(1523, 1539), word='--with-uuid=e2fs'),
  WordNode(pos=(1542, 1555), word='--with-gnu-ld'),
  WordNode(pos=(1558, 1576), word='--with-pgport=5432'),
  WordNode(pos=(1579, 1619), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1622, 1641), word='--prefix=/usr/local'),
  WordNode(pos=(1644, 1678), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1681, 1712), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1717, 1731), word='--with-openssl'),
  WordNode(pos=(1734, 1747), word='--with-libxml'),
  WordNode(pos=(1750, 1764), word='--with-libxslt'),
  WordNode(pos=(1767, 1777), word='--with-icu'),
])


4197) make -j "$(nproc)" world

CommandNode(pos=(1782, 1806), parts=[
  WordNode(pos=(1782, 1786), word='make'),
  WordNode(pos=(1787, 1789), word='-j'),
  WordNode(pos=(1790, 1800), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1793, 1798), parts=[
        WordNode(pos=(1793, 1798), word='nproc'),
      ]), pos=(1791, 1799)),
  ]),
  WordNode(pos=(1801, 1806), word='world'),
])


4198) make install-world

CommandNode(pos=(1811, 1829), parts=[
  WordNode(pos=(1811, 1815), word='make'),
  WordNode(pos=(1816, 1829), word='install-world'),
])


4199) make -C contrib install

CommandNode(pos=(1834, 1857), parts=[
  WordNode(pos=(1834, 1838), word='make'),
  WordNode(pos=(1839, 1841), word='-C'),
  WordNode(pos=(1842, 1849), word='contrib'),
  WordNode(pos=(1850, 1857), word='install'),
])


4200) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


4201) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2065, 2150), parts=[
  WordNode(pos=(2065, 2068), word='apk'),
  WordNode(pos=(2069, 2072), word='add'),
  WordNode(pos=(2073, 2083), word='--no-cache'),
  WordNode(pos=(2084, 2093), word='--virtual'),
  WordNode(pos=(2094, 2113), word='.postgresql-rundeps'),
  WordNode(pos=(2116, 2124), word='$runDeps', parts=[
    ParameterNode(pos=(2116, 2124), value='runDeps'),
  ]),
  WordNode(pos=(2127, 2131), word='bash'),
  WordNode(pos=(2134, 2141), word='su-exec'),
  WordNode(pos=(2144, 2150), word='tzdata'),
])


4202) apk del .fetch-deps .build-deps

CommandNode(pos=(2155, 2186), parts=[
  WordNode(pos=(2155, 2158), word='apk'),
  WordNode(pos=(2159, 2162), word='del'),
  WordNode(pos=(2163, 2174), word='.fetch-deps'),
  WordNode(pos=(2175, 2186), word='.build-deps'),
])


4203) cd /

CommandNode(pos=(2191, 2195), parts=[
  WordNode(pos=(2191, 2193), word='cd'),
  WordNode(pos=(2194, 2195), word='/'),
])


4204) rm -rf   /usr/src/postgresql   /usr/local/share/doc   /usr/local/share/man

CommandNode(pos=(2200, 2274), parts=[
  WordNode(pos=(2200, 2202), word='rm'),
  WordNode(pos=(2203, 2206), word='-rf'),
  WordNode(pos=(2209, 2228), word='/usr/src/postgresql'),
  WordNode(pos=(2231, 2251), word='/usr/local/share/doc'),
  WordNode(pos=(2254, 2274), word='/usr/local/share/man'),
])


4205) find /usr/local -name '*.a' -delete

CommandNode(pos=(2279, 2314), parts=[
  WordNode(pos=(2279, 2283), word='find'),
  WordNode(pos=(2284, 2294), word='/usr/local'),
  WordNode(pos=(2295, 2300), word='-name'),
  WordNode(pos=(2301, 2306), word='*.a'),
  WordNode(pos=(2307, 2314), word='-delete'),
])


4206) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample

CommandNode(pos=(0, 106), parts=[
  WordNode(pos=(0, 3), word='sed'),
  WordNode(pos=(4, 7), word='-ri'),
  WordNode(pos=(8, 55), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(56, 106), word='/usr/local/share/postgresql/postgresql.conf.sample'),
])


4207) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


4208) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


4209) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


4210) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


4211) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


4212) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


4213) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


4214) groupadd -r mongodb

CommandNode(pos=(0, 19), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 19), word='mongodb'),
])


4215) useradd -r -g mongodb mongodb

CommandNode(pos=(23, 52), parts=[
  WordNode(pos=(23, 30), word='useradd'),
  WordNode(pos=(31, 33), word='-r'),
  WordNode(pos=(34, 36), word='-g'),
  WordNode(pos=(37, 44), word='mongodb'),
  WordNode(pos=(45, 52), word='mongodb'),
])


4216) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4217) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


4218) apt-get install -y --no-install-recommends   ca-certificates   jq   numactl

CommandNode(pos=(28, 103), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 93), word='jq'),
  WordNode(pos=(96, 103), word='numactl'),
])


4219) command -v ps > /dev/null

CommandNode(pos=(113, 138), parts=[
  WordNode(pos=(113, 120), word='command'),
  WordNode(pos=(121, 123), word='-v'),
  WordNode(pos=(124, 126), word='ps'),
  RedirectNode(output=
    WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
])


4220) apt-get install -y --no-install-recommends procps

CommandNode(pos=(147, 196), parts=[
  WordNode(pos=(147, 154), word='apt-get'),
  WordNode(pos=(155, 162), word='install'),
  WordNode(pos=(163, 165), word='-y'),
  WordNode(pos=(166, 189), word='--no-install-recommends'),
  WordNode(pos=(190, 196), word='procps'),
])


4221) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 206), word='rm'),
  WordNode(pos=(207, 210), word='-rf'),
  WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
])


4222) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4223) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


4224) apt-get install -y --no-install-recommends   wget

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='wget'),
])


4225) command -v gpg > /dev/null

CommandNode(pos=(87, 113), parts=[
  WordNode(pos=(87, 94), word='command'),
  WordNode(pos=(95, 97), word='-v'),
  WordNode(pos=(98, 101), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
])


4226) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(122, 178), parts=[
  WordNode(pos=(122, 129), word='apt-get'),
  WordNode(pos=(130, 137), word='install'),
  WordNode(pos=(138, 140), word='-y'),
  WordNode(pos=(141, 164), word='--no-install-recommends'),
  WordNode(pos=(165, 170), word='gnupg'),
  WordNode(pos=(171, 178), word='dirmngr'),
])


4227) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(186, 213), parts=[
  WordNode(pos=(186, 188), word='rm'),
  WordNode(pos=(189, 192), word='-rf'),
  WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
])


4228) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


4229) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


4230) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


4231) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


4232) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(547, 650), parts=[
  WordNode(pos=(547, 550), word='gpg'),
  WordNode(pos=(551, 558), word='--batch'),
  WordNode(pos=(559, 570), word='--keyserver'),
  WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(598, 609), word='--recv-keys'),
  WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


4233) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(653, 717), parts=[
  WordNode(pos=(653, 656), word='gpg'),
  WordNode(pos=(657, 664), word='--batch'),
  WordNode(pos=(665, 673), word='--verify'),
  WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
])


4234) command -v gpgconf

CommandNode(pos=(720, 738), parts=[
  WordNode(pos=(720, 727), word='command'),
  WordNode(pos=(728, 730), word='-v'),
  WordNode(pos=(731, 738), word='gpgconf'),
])


4235) gpgconf --kill all

CommandNode(pos=(742, 760), parts=[
  WordNode(pos=(742, 749), word='gpgconf'),
  WordNode(pos=(750, 756), word='--kill'),
  WordNode(pos=(757, 760), word='all'),
])


4236) :

CommandNode(pos=(764, 765), parts=[
  WordNode(pos=(764, 765), word=':'),
])


4237) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


4238) chmod +x /usr/local/bin/gosu

CommandNode(pos=(813, 841), parts=[
  WordNode(pos=(813, 818), word='chmod'),
  WordNode(pos=(819, 821), word='+x'),
  WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
])


4239) gosu --version

CommandNode(pos=(844, 858), parts=[
  WordNode(pos=(844, 848), word='gosu'),
  WordNode(pos=(849, 858), word='--version'),
])


4240) gosu nobody true

CommandNode(pos=(861, 877), parts=[
  WordNode(pos=(861, 865), word='gosu'),
  WordNode(pos=(866, 872), word='nobody'),
  WordNode(pos=(873, 877), word='true'),
])


4241) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


4242) apt-get purge -y --auto-remove wget

CommandNode(pos=(978, 1013), parts=[
  WordNode(pos=(978, 985), word='apt-get'),
  WordNode(pos=(986, 991), word='purge'),
  WordNode(pos=(992, 994), word='-y'),
  WordNode(pos=(995, 1008), word='--auto-remove'),
  WordNode(pos=(1009, 1013), word='wget'),
])


4243) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


4244) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4245) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


4246) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


4247) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


4248) command -v gpgconf

CommandNode(pos=(220, 238), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
])


4249) gpgconf --kill all

CommandNode(pos=(242, 260), parts=[
  WordNode(pos=(242, 249), word='gpgconf'),
  WordNode(pos=(250, 256), word='--kill'),
  WordNode(pos=(257, 260), word='all'),
])


4250) :

CommandNode(pos=(264, 265), parts=[
  WordNode(pos=(264, 265), word=':'),
])


4251) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


4252) apt-key list

CommandNode(pos=(289, 301), parts=[
  WordNode(pos=(289, 296), word='apt-key'),
  WordNode(pos=(297, 301), word='list'),
])


4253) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


4254) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


4255) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


4256) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


4257) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


4258) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(249, 276), parts=[
  WordNode(pos=(249, 251), word='rm'),
  WordNode(pos=(252, 255), word='-rf'),
  WordNode(pos=(256, 276), word='/var/lib/apt/lists/*'),
])


4259) rm -rf /var/lib/mongodb

CommandNode(pos=(281, 304), parts=[
  WordNode(pos=(281, 283), word='rm'),
  WordNode(pos=(284, 287), word='-rf'),
  WordNode(pos=(288, 304), word='/var/lib/mongodb'),
])


4260) mv /etc/mongod.conf /etc/mongod.conf.orig

CommandNode(pos=(309, 350), parts=[
  WordNode(pos=(309, 311), word='mv'),
  WordNode(pos=(312, 328), word='/etc/mongod.conf'),
  WordNode(pos=(329, 350), word='/etc/mongod.conf.orig'),
])


4261) mkdir -p /data/db /data/configdb

CommandNode(pos=(0, 32), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 17), word='/data/db'),
  WordNode(pos=(18, 32), word='/data/configdb'),
])


4262) chown -R mongodb:mongodb /data/db /data/configdb

CommandNode(pos=(37, 85), parts=[
  WordNode(pos=(37, 42), word='chown'),
  WordNode(pos=(43, 45), word='-R'),
  WordNode(pos=(46, 61), word='mongodb:mongodb'),
  WordNode(pos=(62, 70), word='/data/db'),
  WordNode(pos=(71, 85), word='/data/configdb'),
])


4263) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


4264) apt-get install -y --no-install-recommends   tk-dev   uuid-dev

CommandNode(pos=(18, 80), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 69), word='tk-dev'),
  WordNode(pos=(72, 80), word='uuid-dev'),
])


4265) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(85, 112), parts=[
  WordNode(pos=(85, 87), word='rm'),
  WordNode(pos=(88, 91), word='-rf'),
  WordNode(pos=(92, 112), word='/var/lib/apt/lists/*'),
])


4266) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4267) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


4268) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


4269) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


4270) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


4271) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


4272) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


4273) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


4274) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


4275) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


4276) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


4277) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


4278) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


4279) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


4280) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


4281) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


4282) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


4283) make install

CommandNode(pos=(920, 932), parts=[
  WordNode(pos=(920, 924), word='make'),
  WordNode(pos=(925, 932), word='install'),
])


4284) ldconfig

CommandNode(pos=(937, 945), parts=[
  WordNode(pos=(937, 945), word='ldconfig'),
])


4285) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(951, 1118), parts=[
  WordNode(pos=(951, 955), word='find'),
  WordNode(pos=(956, 966), word='/usr/local'),
  WordNode(pos=(967, 973), word='-depth'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(982, 984), word='('),
  WordNode(pos=(985, 990), word='-type'),
  WordNode(pos=(991, 992), word='d'),
  WordNode(pos=(993, 995), word='-a'),
  WordNode(pos=(996, 998), word='('),
  WordNode(pos=(999, 1004), word='-name'),
  WordNode(pos=(1005, 1009), word='test'),
  WordNode(pos=(1010, 1012), word='-o'),
  WordNode(pos=(1013, 1018), word='-name'),
  WordNode(pos=(1019, 1024), word='tests'),
  WordNode(pos=(1025, 1027), word=')'),
  WordNode(pos=(1028, 1030), word=')'),
  WordNode(pos=(1034, 1036), word='-o'),
  WordNode(pos=(1040, 1042), word='('),
  WordNode(pos=(1043, 1048), word='-type'),
  WordNode(pos=(1049, 1050), word='f'),
  WordNode(pos=(1051, 1053), word='-a'),
  WordNode(pos=(1054, 1056), word='('),
  WordNode(pos=(1057, 1062), word='-name'),
  WordNode(pos=(1063, 1070), word='*.pyc'),
  WordNode(pos=(1071, 1073), word='-o'),
  WordNode(pos=(1074, 1079), word='-name'),
  WordNode(pos=(1080, 1087), word='*.pyo'),
  WordNode(pos=(1088, 1090), word=')'),
  WordNode(pos=(1091, 1093), word=')'),
  WordNode(pos=(1096, 1098), word=')'),
  WordNode(pos=(1099, 1104), word='-exec'),
  WordNode(pos=(1105, 1107), word='rm'),
  WordNode(pos=(1108, 1111), word='-rf'),
  WordNode(pos=(1112, 1116), word='{}'),
  WordNode(pos=(1117, 1118), word='+'),
])


4286) rm -rf /usr/src/python

CommandNode(pos=(1123, 1145), parts=[
  WordNode(pos=(1123, 1125), word='rm'),
  WordNode(pos=(1126, 1129), word='-rf'),
  WordNode(pos=(1130, 1145), word='/usr/src/python'),
])


4287) python3 --version

CommandNode(pos=(1151, 1168), parts=[
  WordNode(pos=(1151, 1158), word='python3'),
  WordNode(pos=(1159, 1168), word='--version'),
])


4288) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


4289) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


4290) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


4291) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


4292) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


4293) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4294) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


4295) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


4296) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


4297) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


4298) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


4299) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4300) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


4301) apt-get install -y --no-install-recommends   gosu

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='gosu'),
])


4302) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(82, 109), parts=[
  WordNode(pos=(82, 84), word='rm'),
  WordNode(pos=(85, 88), word='-rf'),
  WordNode(pos=(89, 109), word='/var/lib/apt/lists/*'),
])


4303) gosu nobody true

CommandNode(pos=(112, 128), parts=[
  WordNode(pos=(112, 116), word='gosu'),
  WordNode(pos=(117, 123), word='nobody'),
  WordNode(pos=(124, 128), word='true'),
])


4304) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4305) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


4306) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


4307) apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget

CommandNode(pos=(69, 200), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 90), word='--yes'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 125), word='autoconf'),
  WordNode(pos=(128, 143), word='ca-certificates'),
  WordNode(pos=(146, 154), word='dpkg-dev'),
  WordNode(pos=(157, 160), word='gcc'),
  WordNode(pos=(163, 168), word='gnupg'),
  WordNode(pos=(171, 186), word='libncurses5-dev'),
  WordNode(pos=(189, 193), word='make'),
  WordNode(pos=(196, 200), word='wget'),
])


4308) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 207), word='rm'),
  WordNode(pos=(208, 211), word='-rf'),
  WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
])


4309) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


4310) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


4311) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(379, 416), parts=[
  AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


4312) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


4313) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


4314) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(608, 639), parts=[
  WordNode(pos=(608, 614), word='export'),
  WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(628, 637), parts=[
        WordNode(pos=(628, 634), word='mktemp'),
        WordNode(pos=(635, 637), word='-d'),
      ]), pos=(626, 638)),
  ]),
])


4315) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


4316) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


4317) gpgconf --kill all

CommandNode(pos=(822, 840), parts=[
  WordNode(pos=(822, 829), word='gpgconf'),
  WordNode(pos=(830, 836), word='--kill'),
  WordNode(pos=(837, 840), word='all'),
])


4318) rm -rf "$GNUPGHOME"

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(851, 861), value='GNUPGHOME'),
  ]),
])


4319) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


4320) sha256sum --check --strict -

CommandNode(pos=(919, 947), parts=[
  WordNode(pos=(919, 928), word='sha256sum'),
  WordNode(pos=(929, 936), word='--check'),
  WordNode(pos=(937, 945), word='--strict'),
  WordNode(pos=(946, 947), word='-'),
])


4321) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(950, 974), parts=[
  WordNode(pos=(950, 955), word='mkdir'),
  WordNode(pos=(956, 958), word='-p'),
  WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
  ]),
])


4322) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


4323) cd "$OPENSSL_PATH"

CommandNode(pos=(1073, 1091), parts=[
  WordNode(pos=(1073, 1075), word='cd'),
  WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
  ]),
])


4324) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


4325) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


4326) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1340, 1378), parts=[
  WordNode(pos=(1340, 1344), word='make'),
  WordNode(pos=(1345, 1347), word='-j'),
  WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1351, 1376), parts=[
        WordNode(pos=(1351, 1358), word='getconf'),
        WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
      ]), pos=(1349, 1377)),
  ]),
])


4327) make install_sw install_ssldirs

CommandNode(pos=(1381, 1412), parts=[
  WordNode(pos=(1381, 1385), word='make'),
  WordNode(pos=(1386, 1396), word='install_sw'),
  WordNode(pos=(1397, 1412), word='install_ssldirs'),
])


4328) cd ..

CommandNode(pos=(1415, 1420), parts=[
  WordNode(pos=(1415, 1417), word='cd'),
  WordNode(pos=(1418, 1420), word='..'),
])


4329) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1423, 1446), parts=[
  WordNode(pos=(1423, 1425), word='rm'),
  WordNode(pos=(1426, 1429), word='-rf'),
  WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
  ]),
])


4330) echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf

CommandNode(pos=(1449, 1512), parts=[
  WordNode(pos=(1449, 1453), word='echo'),
  WordNode(pos=(1454, 1470), word='/usr/local/lib'),
  RedirectNode(output=
    WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
])


4331) ldconfig

CommandNode(pos=(1515, 1523), parts=[
  WordNode(pos=(1515, 1523), word='ldconfig'),
])


4332) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


4333) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1592, 1652), parts=[
  WordNode(pos=(1592, 1594), word='ln'),
  WordNode(pos=(1595, 1598), word='-sf'),
  WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
  WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
  WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
  ]),
])


4334) openssl version

CommandNode(pos=(1655, 1670), parts=[
  WordNode(pos=(1655, 1662), word='openssl'),
  WordNode(pos=(1663, 1670), word='version'),
])


4335) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


4336) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


4337) mkdir -p "$OTP_PATH"

CommandNode(pos=(1801, 1821), parts=[
  WordNode(pos=(1801, 1806), word='mkdir'),
  WordNode(pos=(1807, 1809), word='-p'),
  WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
  ]),
])


4338) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


4339) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


4340) sha256sum --check --strict -

CommandNode(pos=(1952, 1980), parts=[
  WordNode(pos=(1952, 1961), word='sha256sum'),
  WordNode(pos=(1962, 1969), word='--check'),
  WordNode(pos=(1970, 1978), word='--strict'),
  WordNode(pos=(1979, 1980), word='-'),
])


4341) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


4342) cd "$OTP_PATH"

CommandNode(pos=(2071, 2085), parts=[
  WordNode(pos=(2071, 2073), word='cd'),
  WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
  ]),
])


4343) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(2088, 2114), parts=[
  WordNode(pos=(2088, 2094), word='export'),
  WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
  ]),
])


4344) ./otp_build autoconf

CommandNode(pos=(2117, 2137), parts=[
  WordNode(pos=(2117, 2128), word='./otp_build'),
  WordNode(pos=(2129, 2137), word='autoconf'),
])


4345) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


4346) export CFLAGS

CommandNode(pos=(2182, 2195), parts=[
  WordNode(pos=(2182, 2188), word='export'),
  WordNode(pos=(2189, 2195), word='CFLAGS'),
])


4347) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


4348) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


4349) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


4350) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


4351) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


4352) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(3077, 3155), parts=[
  WordNode(pos=(3077, 3081), word='make'),
  WordNode(pos=(3082, 3084), word='-j'),
  WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(3088, 3113), parts=[
        WordNode(pos=(3088, 3095), word='getconf'),
        WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
      ]), pos=(3086, 3114)),
  ]),
  WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


4353) make install

CommandNode(pos=(3158, 3170), parts=[
  WordNode(pos=(3158, 3162), word='make'),
  WordNode(pos=(3163, 3170), word='install'),
])


4354) cd ..

CommandNode(pos=(3173, 3178), parts=[
  WordNode(pos=(3173, 3175), word='cd'),
  WordNode(pos=(3176, 3178), word='..'),
])


4355) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(3181, 3275), parts=[
  WordNode(pos=(3181, 3183), word='rm'),
  WordNode(pos=(3184, 3187), word='-rf'),
  WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
  ]),
  WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
])


4356) apt-mark auto '.*' > /dev/null

CommandNode(pos=(3281, 3311), parts=[
  WordNode(pos=(3281, 3289), word='apt-mark'),
  WordNode(pos=(3290, 3294), word='auto'),
  WordNode(pos=(3295, 3299), word='.*'),
  RedirectNode(output=
    WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
])


4357) [ -z "$savedAptMark" ]

CommandNode(pos=(3314, 3336), parts=[
  WordNode(pos=(3314, 3315), word='['),
  WordNode(pos=(3316, 3318), word='-z'),
  WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
    ParameterNode(pos=(3320, 3333), value='savedAptMark'),
  ]),
  WordNode(pos=(3335, 3336), word=']'),
])


4358) apt-mark manual $savedAptMark

CommandNode(pos=(3340, 3369), parts=[
  WordNode(pos=(3340, 3348), word='apt-mark'),
  WordNode(pos=(3349, 3355), word='manual'),
  WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
    ParameterNode(pos=(3356, 3369), value='savedAptMark'),
  ]),
])


4359) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(3372, 3426), parts=[
  WordNode(pos=(3372, 3376), word='find'),
  WordNode(pos=(3377, 3387), word='/usr/local'),
  WordNode(pos=(3388, 3393), word='-type'),
  WordNode(pos=(3394, 3395), word='f'),
  WordNode(pos=(3396, 3407), word='-executable'),
  WordNode(pos=(3408, 3413), word='-exec'),
  WordNode(pos=(3414, 3417), word='ldd'),
  WordNode(pos=(3418, 3422), word='{}'),
  WordNode(pos=(3423, 3426), word=';'),
])


4360) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(3431, 3459), parts=[
  WordNode(pos=(3431, 3434), word='awk'),
  WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
])


4361) sort -u

CommandNode(pos=(3464, 3471), parts=[
  WordNode(pos=(3464, 3468), word='sort'),
  WordNode(pos=(3469, 3471), word='-u'),
])


4362) xargs -r dpkg-query --search

CommandNode(pos=(3476, 3504), parts=[
  WordNode(pos=(3476, 3481), word='xargs'),
  WordNode(pos=(3482, 3484), word='-r'),
  WordNode(pos=(3485, 3495), word='dpkg-query'),
  WordNode(pos=(3496, 3504), word='--search'),
])


4363) cut -d: -f1

CommandNode(pos=(3509, 3520), parts=[
  WordNode(pos=(3509, 3512), word='cut'),
  WordNode(pos=(3513, 3516), word='-d:'),
  WordNode(pos=(3517, 3520), word='-f1'),
])


4364) sort -u

CommandNode(pos=(3525, 3532), parts=[
  WordNode(pos=(3525, 3529), word='sort'),
  WordNode(pos=(3530, 3532), word='-u'),
])


4365) xargs -r apt-mark manual

CommandNode(pos=(3537, 3561), parts=[
  WordNode(pos=(3537, 3542), word='xargs'),
  WordNode(pos=(3543, 3545), word='-r'),
  WordNode(pos=(3546, 3554), word='apt-mark'),
  WordNode(pos=(3555, 3561), word='manual'),
])


4366) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(3566, 3642), parts=[
  WordNode(pos=(3566, 3573), word='apt-get'),
  WordNode(pos=(3574, 3579), word='purge'),
  WordNode(pos=(3580, 3582), word='-y'),
  WordNode(pos=(3583, 3596), word='--auto-remove'),
  WordNode(pos=(3597, 3599), word='-o'),
  WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
])


4367) openssl version

CommandNode(pos=(3646, 3661), parts=[
  WordNode(pos=(3646, 3653), word='openssl'),
  WordNode(pos=(3654, 3661), word='version'),
])


4368) erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

CommandNode(pos=(3664, 3761), parts=[
  WordNode(pos=(3664, 3667), word='erl'),
  WordNode(pos=(3668, 3676), word='-noshell'),
  WordNode(pos=(3677, 3682), word='-eval'),
  WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
])


4369) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4370) groupadd --gid 999 --system rabbitmq

CommandNode(pos=(11, 47), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 25), word='--gid'),
  WordNode(pos=(26, 29), word='999'),
  WordNode(pos=(30, 38), word='--system'),
  WordNode(pos=(39, 47), word='rabbitmq'),
])


4371) useradd --uid 999 --system --home-dir "$RABBITMQ_DATA_DIR" --gid rabbitmq rabbitmq

CommandNode(pos=(50, 132), parts=[
  WordNode(pos=(50, 57), word='useradd'),
  WordNode(pos=(58, 63), word='--uid'),
  WordNode(pos=(64, 67), word='999'),
  WordNode(pos=(68, 76), word='--system'),
  WordNode(pos=(77, 87), word='--home-dir'),
  WordNode(pos=(88, 108), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(89, 107), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(109, 114), word='--gid'),
  WordNode(pos=(115, 123), word='rabbitmq'),
  WordNode(pos=(124, 132), word='rabbitmq'),
])


4372) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(135, 214), parts=[
  WordNode(pos=(135, 140), word='mkdir'),
  WordNode(pos=(141, 143), word='-p'),
  WordNode(pos=(144, 164), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(145, 163), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(165, 178), word='/etc/rabbitmq'),
  WordNode(pos=(179, 196), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(197, 214), word='/var/log/rabbitmq'),
])


4373) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(217, 315), parts=[
  WordNode(pos=(217, 222), word='chown'),
  WordNode(pos=(223, 226), word='-fR'),
  WordNode(pos=(227, 244), word='rabbitmq:rabbitmq'),
  WordNode(pos=(245, 265), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(246, 264), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(266, 279), word='/etc/rabbitmq'),
  WordNode(pos=(280, 297), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(298, 315), word='/var/log/rabbitmq'),
])


4374) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(318, 398), parts=[
  WordNode(pos=(318, 323), word='chmod'),
  WordNode(pos=(324, 327), word='777'),
  WordNode(pos=(328, 348), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(329, 347), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(349, 362), word='/etc/rabbitmq'),
  WordNode(pos=(363, 380), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(381, 398), word='/var/log/rabbitmq'),
])


4375) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(401, 464), parts=[
  WordNode(pos=(401, 403), word='ln'),
  WordNode(pos=(404, 407), word='-sf'),
  WordNode(pos=(408, 443), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(409, 427), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(444, 464), word='/root/.erlang.cookie'),
])


4376) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4377) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


4378) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


4379) apt-get install --yes --no-install-recommends   ca-certificates   gnupg   wget   xz-utils

CommandNode(pos=(69, 158), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 90), word='--yes'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 140), word='gnupg'),
  WordNode(pos=(143, 147), word='wget'),
  WordNode(pos=(150, 158), word='xz-utils'),
])


4380) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(163, 190), parts=[
  WordNode(pos=(163, 165), word='rm'),
  WordNode(pos=(166, 169), word='-rf'),
  WordNode(pos=(170, 190), word='/var/lib/apt/lists/*'),
])


4381) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


4382) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


4383) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


4384) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


4385) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(607, 638), parts=[
  WordNode(pos=(607, 613), word='export'),
  WordNode(pos=(614, 638), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(627, 636), parts=[
        WordNode(pos=(627, 633), word='mktemp'),
        WordNode(pos=(634, 636), word='-d'),
      ]), pos=(625, 637)),
  ]),
])


4386) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


4387) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


4388) gpgconf --kill all

CommandNode(pos=(794, 812), parts=[
  WordNode(pos=(794, 801), word='gpgconf'),
  WordNode(pos=(802, 808), word='--kill'),
  WordNode(pos=(809, 812), word='all'),
])


4389) rm -rf "$GNUPGHOME"

CommandNode(pos=(815, 834), parts=[
  WordNode(pos=(815, 817), word='rm'),
  WordNode(pos=(818, 821), word='-rf'),
  WordNode(pos=(822, 834), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(823, 833), value='GNUPGHOME'),
  ]),
])


4390) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(838, 863), parts=[
  WordNode(pos=(838, 843), word='mkdir'),
  WordNode(pos=(844, 846), word='-p'),
  WordNode(pos=(847, 863), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(848, 862), value='RABBITMQ_HOME'),
  ]),
])


4391) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


4392) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(963, 987), parts=[
  WordNode(pos=(963, 965), word='rm'),
  WordNode(pos=(966, 969), word='-rf'),
  WordNode(pos=(970, 987), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(971, 985), value='RABBITMQ_PATH'),
  ]),
])


4393) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(990, 1073), parts=[
  WordNode(pos=(990, 994), word='grep'),
  WordNode(pos=(995, 998), word='-qE'),
  WordNode(pos=(999, 1033), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(1034, 1073), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1035, 1049), value='RABBITMQ_HOME'),
  ]),
])


4394) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1076, 1155), parts=[
  WordNode(pos=(1076, 1079), word='sed'),
  WordNode(pos=(1080, 1082), word='-i'),
  WordNode(pos=(1083, 1115), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(1116, 1155), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1117, 1131), value='RABBITMQ_HOME'),
  ]),
])


4395) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1158, 1222), parts=[
  WordNode(pos=(1158, 1162), word='grep'),
  WordNode(pos=(1163, 1166), word='-qE'),
  WordNode(pos=(1167, 1182), word='^SYS_PREFIX=$'),
  WordNode(pos=(1183, 1222), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1184, 1198), value='RABBITMQ_HOME'),
  ]),
])


4396) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1225, 1268), parts=[
  WordNode(pos=(1225, 1230), word='chown'),
  WordNode(pos=(1231, 1233), word='-R'),
  WordNode(pos=(1234, 1251), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1252, 1268), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1253, 1267), value='RABBITMQ_HOME'),
  ]),
])


4397) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1272, 1302), parts=[
  WordNode(pos=(1272, 1280), word='apt-mark'),
  WordNode(pos=(1281, 1285), word='auto'),
  WordNode(pos=(1286, 1290), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1293, 1302), word='/dev/null'), pos=(1291, 1302), type='>'),
])


4398) apt-mark manual $savedAptMark

CommandNode(pos=(1305, 1334), parts=[
  WordNode(pos=(1305, 1313), word='apt-mark'),
  WordNode(pos=(1314, 1320), word='manual'),
  WordNode(pos=(1321, 1334), word='$savedAptMark', parts=[
    ParameterNode(pos=(1321, 1334), value='savedAptMark'),
  ]),
])


4399) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1337, 1413), parts=[
  WordNode(pos=(1337, 1344), word='apt-get'),
  WordNode(pos=(1345, 1350), word='purge'),
  WordNode(pos=(1351, 1353), word='-y'),
  WordNode(pos=(1354, 1367), word='--auto-remove'),
  WordNode(pos=(1368, 1370), word='-o'),
  WordNode(pos=(1371, 1413), word='APT::AutoRemove::RecommendsImportant=false'),
])


4400) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1417, 1461), parts=[
  WordNode(pos=(1417, 1418), word='['),
  WordNode(pos=(1419, 1420), word='!'),
  WordNode(pos=(1421, 1423), word='-e'),
  WordNode(pos=(1424, 1459), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1425, 1443), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1460, 1461), word=']'),
])


4401) gosu rabbitmq rabbitmqctl help

CommandNode(pos=(1464, 1494), parts=[
  WordNode(pos=(1464, 1468), word='gosu'),
  WordNode(pos=(1469, 1477), word='rabbitmq'),
  WordNode(pos=(1478, 1489), word='rabbitmqctl'),
  WordNode(pos=(1490, 1494), word='help'),
])


4402) gosu rabbitmq rabbitmqctl list_ciphers

CommandNode(pos=(1497, 1535), parts=[
  WordNode(pos=(1497, 1501), word='gosu'),
  WordNode(pos=(1502, 1510), word='rabbitmq'),
  WordNode(pos=(1511, 1522), word='rabbitmqctl'),
  WordNode(pos=(1523, 1535), word='list_ciphers'),
])


4403) gosu rabbitmq rabbitmq-plugins list

CommandNode(pos=(1538, 1573), parts=[
  WordNode(pos=(1538, 1542), word='gosu'),
  WordNode(pos=(1543, 1551), word='rabbitmq'),
  WordNode(pos=(1552, 1568), word='rabbitmq-plugins'),
  WordNode(pos=(1569, 1573), word='list'),
])


4404) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1576, 1614), parts=[
  WordNode(pos=(1576, 1578), word='rm'),
  WordNode(pos=(1579, 1614), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1580, 1598), value='RABBITMQ_DATA_DIR'),
  ]),
])


4405) ln -sf /opt/rabbitmq/plugins /plugins

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 6), word='-sf'),
  WordNode(pos=(7, 28), word='/opt/rabbitmq/plugins'),
  WordNode(pos=(29, 37), word='/plugins'),
])


4406) apk add --no-cache 'su-exec>=0.2'

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 33), word='su-exec>=0.2'),
])


4407) apk add --no-cache   bash

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='bash'),
])


4408) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4409) npm install -g "ghost-cli@$GHOST_CLI_VERSION"

CommandNode(pos=(11, 56), parts=[
  WordNode(pos=(11, 14), word='npm'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-g'),
  WordNode(pos=(26, 56), word='ghost-cli@$GHOST_CLI_VERSION', parts=[
    ParameterNode(pos=(37, 55), value='GHOST_CLI_VERSION'),
  ]),
])


4410) npm cache clean --force

CommandNode(pos=(59, 82), parts=[
  WordNode(pos=(59, 62), word='npm'),
  WordNode(pos=(63, 68), word='cache'),
  WordNode(pos=(69, 74), word='clean'),
  WordNode(pos=(75, 82), word='--force'),
])


4411) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4412) mkdir -p "$GHOST_INSTALL"

CommandNode(pos=(11, 36), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
  ]),
])


4413) chown node:node "$GHOST_INSTALL"

CommandNode(pos=(39, 71), parts=[
  WordNode(pos=(39, 44), word='chown'),
  WordNode(pos=(45, 54), word='node:node'),
  WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
  ]),
])


4414) su-exec node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 188), parts=[
  WordNode(pos=(75, 82), word='su-exec'),
  WordNode(pos=(83, 87), word='node'),
  WordNode(pos=(88, 93), word='ghost'),
  WordNode(pos=(94, 101), word='install'),
  WordNode(pos=(102, 118), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(103, 117), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(119, 123), word='--db'),
  WordNode(pos=(124, 131), word='sqlite3'),
  WordNode(pos=(132, 143), word='--no-prompt'),
  WordNode(pos=(144, 154), word='--no-stack'),
  WordNode(pos=(155, 165), word='--no-setup'),
  WordNode(pos=(166, 171), word='--dir'),
  WordNode(pos=(172, 188), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(173, 187), value='GHOST_INSTALL'),
  ]),
])


4415) cd "$GHOST_INSTALL"

CommandNode(pos=(192, 211), parts=[
  WordNode(pos=(192, 194), word='cd'),
  WordNode(pos=(195, 211), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(196, 210), value='GHOST_INSTALL'),
  ]),
])


4416) su-exec node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db"

CommandNode(pos=(214, 357), parts=[
  WordNode(pos=(214, 221), word='su-exec'),
  WordNode(pos=(222, 226), word='node'),
  WordNode(pos=(227, 232), word='ghost'),
  WordNode(pos=(233, 239), word='config'),
  WordNode(pos=(240, 244), word='--ip'),
  WordNode(pos=(245, 252), word='0.0.0.0'),
  WordNode(pos=(253, 259), word='--port'),
  WordNode(pos=(260, 264), word='2368'),
  WordNode(pos=(265, 276), word='--no-prompt'),
  WordNode(pos=(277, 281), word='--db'),
  WordNode(pos=(282, 289), word='sqlite3'),
  WordNode(pos=(290, 295), word='--url'),
  WordNode(pos=(296, 317), word='http://localhost:2368'),
  WordNode(pos=(318, 326), word='--dbpath'),
  WordNode(pos=(327, 357), word='$GHOST_CONTENT/data/ghost.db', parts=[
    ParameterNode(pos=(328, 342), value='GHOST_CONTENT'),
  ]),
])


4417) su-exec node ghost config paths.contentPath "$GHOST_CONTENT"

CommandNode(pos=(360, 420), parts=[
  WordNode(pos=(360, 367), word='su-exec'),
  WordNode(pos=(368, 372), word='node'),
  WordNode(pos=(373, 378), word='ghost'),
  WordNode(pos=(379, 385), word='config'),
  WordNode(pos=(386, 403), word='paths.contentPath'),
  WordNode(pos=(404, 420), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(405, 419), value='GHOST_CONTENT'),
  ]),
])


4418) su-exec node ln -s config.production.json "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(424, 506), parts=[
  WordNode(pos=(424, 431), word='su-exec'),
  WordNode(pos=(432, 436), word='node'),
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 442), word='-s'),
  WordNode(pos=(443, 465), word='config.production.json'),
  WordNode(pos=(466, 506), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(467, 481), value='GHOST_INSTALL'),
  ]),
])


4419) readlink -f "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(509, 561), parts=[
  WordNode(pos=(509, 517), word='readlink'),
  WordNode(pos=(518, 520), word='-f'),
  WordNode(pos=(521, 561), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(522, 536), value='GHOST_INSTALL'),
  ]),
])


4420) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(565, 614), parts=[
  WordNode(pos=(565, 567), word='mv'),
  WordNode(pos=(568, 584), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(569, 583), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(585, 614), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(586, 600), value='GHOST_INSTALL'),
  ]),
])


4421) mkdir -p "$GHOST_CONTENT"

CommandNode(pos=(617, 642), parts=[
  WordNode(pos=(617, 622), word='mkdir'),
  WordNode(pos=(623, 625), word='-p'),
  WordNode(pos=(626, 642), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(627, 641), value='GHOST_CONTENT'),
  ]),
])


4422) chown node:node "$GHOST_CONTENT"

CommandNode(pos=(645, 677), parts=[
  WordNode(pos=(645, 650), word='chown'),
  WordNode(pos=(651, 660), word='node:node'),
  WordNode(pos=(661, 677), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(662, 676), value='GHOST_CONTENT'),
  ]),
])


4423) cd "$GHOST_INSTALL/current"

CommandNode(pos=(681, 708), parts=[
  WordNode(pos=(681, 683), word='cd'),
  WordNode(pos=(684, 708), word='$GHOST_INSTALL/current', parts=[
    ParameterNode(pos=(685, 699), value='GHOST_INSTALL'),
  ]),
])


4424) sqlite3Version="$(npm view . optionalDependencies.sqlite3)"

CommandNode(pos=(711, 770), parts=[
  WordNode(pos=(711, 770), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(729, 768), parts=[
        WordNode(pos=(729, 732), word='npm'),
        WordNode(pos=(733, 737), word='view'),
        WordNode(pos=(738, 739), word='.'),
        WordNode(pos=(740, 768), word='optionalDependencies.sqlite3'),
      ]), pos=(727, 769)),
  ]),
])


4425) su-exec node yarn add "sqlite3@$sqlite3Version" --force

CommandNode(pos=(778, 833), parts=[
  WordNode(pos=(778, 785), word='su-exec'),
  WordNode(pos=(786, 790), word='node'),
  WordNode(pos=(791, 795), word='yarn'),
  WordNode(pos=(796, 799), word='add'),
  WordNode(pos=(800, 825), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(809, 824), value='sqlite3Version'),
  ]),
  WordNode(pos=(826, 833), word='--force'),
])


4426) apk add --no-cache --virtual .build-deps python make gcc g++ libc-dev

CommandNode(pos=(842, 911), parts=[
  WordNode(pos=(842, 845), word='apk'),
  WordNode(pos=(846, 849), word='add'),
  WordNode(pos=(850, 860), word='--no-cache'),
  WordNode(pos=(861, 870), word='--virtual'),
  WordNode(pos=(871, 882), word='.build-deps'),
  WordNode(pos=(883, 889), word='python'),
  WordNode(pos=(890, 894), word='make'),
  WordNode(pos=(895, 898), word='gcc'),
  WordNode(pos=(899, 902), word='g++'),
  WordNode(pos=(903, 911), word='libc-dev'),
])


4427) su-exec node yarn add "sqlite3@$sqlite3Version" --force --build-from-source

CommandNode(pos=(917, 992), parts=[
  WordNode(pos=(917, 924), word='su-exec'),
  WordNode(pos=(925, 929), word='node'),
  WordNode(pos=(930, 934), word='yarn'),
  WordNode(pos=(935, 938), word='add'),
  WordNode(pos=(939, 964), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(948, 963), value='sqlite3Version'),
  ]),
  WordNode(pos=(965, 972), word='--force'),
  WordNode(pos=(973, 992), word='--build-from-source'),
])


4428) apk del --no-network .build-deps

CommandNode(pos=(998, 1030), parts=[
  WordNode(pos=(998, 1001), word='apk'),
  WordNode(pos=(1002, 1005), word='del'),
  WordNode(pos=(1006, 1018), word='--no-network'),
  WordNode(pos=(1019, 1030), word='.build-deps'),
])


4429) su-exec node yarn cache clean

CommandNode(pos=(1039, 1068), parts=[
  WordNode(pos=(1039, 1046), word='su-exec'),
  WordNode(pos=(1047, 1051), word='node'),
  WordNode(pos=(1052, 1056), word='yarn'),
  WordNode(pos=(1057, 1062), word='cache'),
  WordNode(pos=(1063, 1068), word='clean'),
])


4430) su-exec node npm cache clean --force

CommandNode(pos=(1071, 1107), parts=[
  WordNode(pos=(1071, 1078), word='su-exec'),
  WordNode(pos=(1079, 1083), word='node'),
  WordNode(pos=(1084, 1087), word='npm'),
  WordNode(pos=(1088, 1093), word='cache'),
  WordNode(pos=(1094, 1099), word='clean'),
  WordNode(pos=(1100, 1107), word='--force'),
])


4431) npm cache clean --force

CommandNode(pos=(1110, 1133), parts=[
  WordNode(pos=(1110, 1113), word='npm'),
  WordNode(pos=(1114, 1119), word='cache'),
  WordNode(pos=(1120, 1125), word='clean'),
  WordNode(pos=(1126, 1133), word='--force'),
])


4432) rm -rv /tmp/yarn* /tmp/v8*

CommandNode(pos=(1136, 1162), parts=[
  WordNode(pos=(1136, 1138), word='rm'),
  WordNode(pos=(1139, 1142), word='-rv'),
  WordNode(pos=(1143, 1153), word='/tmp/yarn*'),
  WordNode(pos=(1154, 1162), word='/tmp/v8*'),
])


4433) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


4434) apt-get install -y --no-install-recommends   bzip2   ca-certificates   libffi-dev   libgdbm3   libgmp-dev   libssl-dev   libyaml-dev   procps   zlib1g-dev

CommandNode(pos=(19, 173), parts=[
  WordNode(pos=(19, 26), word='apt-get'),
  WordNode(pos=(27, 34), word='install'),
  WordNode(pos=(35, 37), word='-y'),
  WordNode(pos=(38, 61), word='--no-install-recommends'),
  WordNode(pos=(64, 69), word='bzip2'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(90, 100), word='libffi-dev'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 124), word='libgmp-dev'),
  WordNode(pos=(127, 137), word='libssl-dev'),
  WordNode(pos=(140, 151), word='libyaml-dev'),
  WordNode(pos=(154, 160), word='procps'),
  WordNode(pos=(163, 173), word='zlib1g-dev'),
])


4435) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(178, 205), parts=[
  WordNode(pos=(178, 180), word='rm'),
  WordNode(pos=(181, 184), word='-rf'),
  WordNode(pos=(185, 205), word='/var/lib/apt/lists/*'),
])


4436) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


4437) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


4438) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


4439) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4440) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


4441) apt-get update

CommandNode(pos=(55, 69), parts=[
  WordNode(pos=(55, 62), word='apt-get'),
  WordNode(pos=(63, 69), word='update'),
])


4442) apt-get install -y --no-install-recommends   autoconf   bison   dpkg-dev   gcc   libbz2-dev   libgdbm-dev   libglib2.0-dev   libncurses-dev   libreadline-dev   libxml2-dev   libxslt-dev   make   ruby   wget   xz-utils

CommandNode(pos=(73, 290), parts=[
  WordNode(pos=(73, 80), word='apt-get'),
  WordNode(pos=(81, 88), word='install'),
  WordNode(pos=(89, 91), word='-y'),
  WordNode(pos=(92, 115), word='--no-install-recommends'),
  WordNode(pos=(118, 126), word='autoconf'),
  WordNode(pos=(129, 134), word='bison'),
  WordNode(pos=(137, 145), word='dpkg-dev'),
  WordNode(pos=(148, 151), word='gcc'),
  WordNode(pos=(154, 164), word='libbz2-dev'),
  WordNode(pos=(167, 178), word='libgdbm-dev'),
  WordNode(pos=(181, 195), word='libglib2.0-dev'),
  WordNode(pos=(198, 212), word='libncurses-dev'),
  WordNode(pos=(215, 230), word='libreadline-dev'),
  WordNode(pos=(233, 244), word='libxml2-dev'),
  WordNode(pos=(247, 258), word='libxslt-dev'),
  WordNode(pos=(261, 265), word='make'),
  WordNode(pos=(268, 272), word='ruby'),
  WordNode(pos=(275, 279), word='wget'),
  WordNode(pos=(282, 290), word='xz-utils'),
])


4443) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(295, 322), parts=[
  WordNode(pos=(295, 297), word='rm'),
  WordNode(pos=(298, 301), word='-rf'),
  WordNode(pos=(302, 322), word='/var/lib/apt/lists/*'),
])


4444) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


4445) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


4446) sha256sum -c -

CommandNode(pos=(479, 493), parts=[
  WordNode(pos=(479, 488), word='sha256sum'),
  WordNode(pos=(489, 491), word='-c'),
  WordNode(pos=(492, 493), word='-'),
])


4447) mkdir -p /usr/src/ruby

CommandNode(pos=(499, 521), parts=[
  WordNode(pos=(499, 504), word='mkdir'),
  WordNode(pos=(505, 507), word='-p'),
  WordNode(pos=(508, 521), word='/usr/src/ruby'),
])


4448) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(526, 584), parts=[
  WordNode(pos=(526, 529), word='tar'),
  WordNode(pos=(530, 534), word='-xJf'),
  WordNode(pos=(535, 546), word='ruby.tar.xz'),
  WordNode(pos=(547, 549), word='-C'),
  WordNode(pos=(550, 563), word='/usr/src/ruby'),
  WordNode(pos=(564, 584), word='--strip-components=1'),
])


4449) rm ruby.tar.xz

CommandNode(pos=(589, 603), parts=[
  WordNode(pos=(589, 591), word='rm'),
  WordNode(pos=(592, 603), word='ruby.tar.xz'),
])


4450) cd /usr/src/ruby

CommandNode(pos=(609, 625), parts=[
  WordNode(pos=(609, 611), word='cd'),
  WordNode(pos=(612, 625), word='/usr/src/ruby'),
])


4451) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(635, 669), parts=[
  WordNode(pos=(635, 639), word='echo'),
  WordNode(pos=(640, 669), word='#define ENABLE_PATH_CHECK 0'),
])


4452) echo

CommandNode(pos=(673, 677), parts=[
  WordNode(pos=(673, 677), word='echo'),
])


4453) cat file.c

CommandNode(pos=(681, 691), parts=[
  WordNode(pos=(681, 684), word='cat'),
  WordNode(pos=(685, 691), word='file.c'),
])


4454) mv file.c.new file.c

CommandNode(pos=(713, 733), parts=[
  WordNode(pos=(713, 715), word='mv'),
  WordNode(pos=(716, 726), word='file.c.new'),
  WordNode(pos=(727, 733), word='file.c'),
])


4455) autoconf

CommandNode(pos=(739, 747), parts=[
  WordNode(pos=(739, 747), word='autoconf'),
])


4456) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


4457) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


4458) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


4459) make install

CommandNode(pos=(916, 928), parts=[
  WordNode(pos=(916, 920), word='make'),
  WordNode(pos=(921, 928), word='install'),
])


4460) apt-mark auto '.*' > /dev/null

CommandNode(pos=(934, 964), parts=[
  WordNode(pos=(934, 942), word='apt-mark'),
  WordNode(pos=(943, 947), word='auto'),
  WordNode(pos=(948, 952), word='.*'),
  RedirectNode(output=
    WordNode(pos=(955, 964), word='/dev/null'), pos=(953, 964), type='>'),
])


4461) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


4462) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec ldd '{}' ';'

CommandNode(pos=(1003, 1086), parts=[
  WordNode(pos=(1003, 1007), word='find'),
  WordNode(pos=(1008, 1018), word='/usr/local'),
  WordNode(pos=(1019, 1024), word='-type'),
  WordNode(pos=(1025, 1026), word='f'),
  WordNode(pos=(1027, 1038), word='-executable'),
  WordNode(pos=(1039, 1043), word='-not'),
  WordNode(pos=(1044, 1046), word='('),
  WordNode(pos=(1047, 1052), word='-name'),
  WordNode(pos=(1053, 1064), word='*tkinter*'),
  WordNode(pos=(1065, 1067), word=')'),
  WordNode(pos=(1068, 1073), word='-exec'),
  WordNode(pos=(1074, 1077), word='ldd'),
  WordNode(pos=(1078, 1082), word='{}'),
  WordNode(pos=(1083, 1086), word=';'),
])


4463) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1091, 1119), parts=[
  WordNode(pos=(1091, 1094), word='awk'),
  WordNode(pos=(1095, 1119), word='/=>/ { print $(NF-1) }'),
])


4464) sort -u

CommandNode(pos=(1124, 1131), parts=[
  WordNode(pos=(1124, 1128), word='sort'),
  WordNode(pos=(1129, 1131), word='-u'),
])


4465) xargs -r dpkg-query --search

CommandNode(pos=(1136, 1164), parts=[
  WordNode(pos=(1136, 1141), word='xargs'),
  WordNode(pos=(1142, 1144), word='-r'),
  WordNode(pos=(1145, 1155), word='dpkg-query'),
  WordNode(pos=(1156, 1164), word='--search'),
])


4466) cut -d: -f1

CommandNode(pos=(1169, 1180), parts=[
  WordNode(pos=(1169, 1172), word='cut'),
  WordNode(pos=(1173, 1176), word='-d:'),
  WordNode(pos=(1177, 1180), word='-f1'),
])


4467) sort -u

CommandNode(pos=(1185, 1192), parts=[
  WordNode(pos=(1185, 1189), word='sort'),
  WordNode(pos=(1190, 1192), word='-u'),
])


4468) xargs -r apt-mark manual

CommandNode(pos=(1197, 1221), parts=[
  WordNode(pos=(1197, 1202), word='xargs'),
  WordNode(pos=(1203, 1205), word='-r'),
  WordNode(pos=(1206, 1214), word='apt-mark'),
  WordNode(pos=(1215, 1221), word='manual'),
])


4469) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1226, 1302), parts=[
  WordNode(pos=(1226, 1233), word='apt-get'),
  WordNode(pos=(1234, 1239), word='purge'),
  WordNode(pos=(1240, 1242), word='-y'),
  WordNode(pos=(1243, 1256), word='--auto-remove'),
  WordNode(pos=(1257, 1259), word='-o'),
  WordNode(pos=(1260, 1302), word='APT::AutoRemove::RecommendsImportant=false'),
])


4470) cd /

CommandNode(pos=(1308, 1312), parts=[
  WordNode(pos=(1308, 1310), word='cd'),
  WordNode(pos=(1311, 1312), word='/'),
])


4471) rm -r /usr/src/ruby

CommandNode(pos=(1317, 1336), parts=[
  WordNode(pos=(1317, 1319), word='rm'),
  WordNode(pos=(1320, 1322), word='-r'),
  WordNode(pos=(1323, 1336), word='/usr/src/ruby'),
])


4472) ruby --version

CommandNode(pos=(1341, 1355), parts=[
  WordNode(pos=(1341, 1345), word='ruby'),
  WordNode(pos=(1346, 1355), word='--version'),
])


4473) gem --version

CommandNode(pos=(1359, 1372), parts=[
  WordNode(pos=(1359, 1362), word='gem'),
  WordNode(pos=(1363, 1372), word='--version'),
])


4474) bundle --version

CommandNode(pos=(1376, 1392), parts=[
  WordNode(pos=(1376, 1382), word='bundle'),
  WordNode(pos=(1383, 1392), word='--version'),
])


4475) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


4476) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


4477) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


4478) apt-get install -y --no-install-recommends   bzr   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 125), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='bzr'),
  WordNode(pos=(69, 72), word='git'),
  WordNode(pos=(75, 84), word='mercurial'),
  WordNode(pos=(87, 101), word='openssh-client'),
  WordNode(pos=(104, 114), word='subversion'),
  WordNode(pos=(119, 125), word='procps'),
])


4479) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(130, 157), parts=[
  WordNode(pos=(130, 132), word='rm'),
  WordNode(pos=(133, 136), word='-rf'),
  WordNode(pos=(137, 157), word='/var/lib/apt/lists/*'),
])


4480) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


4481) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4482) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


4483) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


4484) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


4485) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


4486) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


4487) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


4488) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


4489) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


4490) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


4491) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


4492) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


4493) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


4494) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


4495) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1000), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 881), word='linux-headers'),
  WordNode(pos=(884, 888), word='make'),
  WordNode(pos=(891, 902), word='ncurses-dev'),
  WordNode(pos=(905, 916), word='openssl-dev'),
  WordNode(pos=(919, 928), word='pax-utils'),
  WordNode(pos=(931, 943), word='readline-dev'),
  WordNode(pos=(946, 956), word='sqlite-dev'),
  WordNode(pos=(959, 966), word='tcl-dev'),
  WordNode(pos=(969, 971), word='tk'),
  WordNode(pos=(974, 980), word='tk-dev'),
  WordNode(pos=(983, 989), word='xz-dev'),
  WordNode(pos=(992, 1000), word='zlib-dev'),
])


4496) apk del .fetch-deps

CommandNode(pos=(1005, 1024), parts=[
  WordNode(pos=(1005, 1008), word='apk'),
  WordNode(pos=(1009, 1012), word='del'),
  WordNode(pos=(1013, 1024), word='.fetch-deps'),
])


4497) cd /usr/src/python

CommandNode(pos=(1030, 1048), parts=[
  WordNode(pos=(1030, 1032), word='cd'),
  WordNode(pos=(1033, 1048), word='/usr/src/python'),
])


4498) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


4499) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1115, 1267), parts=[
  WordNode(pos=(1115, 1126), word='./configure'),
  WordNode(pos=(1129, 1147), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1138, 1146), value='gnuArch'),
  ]),
  WordNode(pos=(1150, 1185), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1188, 1203), word='--enable-shared'),
  WordNode(pos=(1206, 1225), word='--with-system-expat'),
  WordNode(pos=(1228, 1245), word='--with-system-ffi'),
  WordNode(pos=(1248, 1267), word='--without-ensurepip'),
])


4500) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1272, 1336), parts=[
  WordNode(pos=(1272, 1276), word='make'),
  WordNode(pos=(1277, 1279), word='-j'),
  WordNode(pos=(1280, 1290), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1283, 1288), parts=[
        WordNode(pos=(1283, 1288), word='nproc'),
      ]), pos=(1281, 1289)),
  ]),
  WordNode(pos=(1293, 1336), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


4501) make install

CommandNode(pos=(1341, 1353), parts=[
  WordNode(pos=(1341, 1345), word='make'),
  WordNode(pos=(1346, 1353), word='install'),
])


4502) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1359, 1482), parts=[
  WordNode(pos=(1359, 1363), word='find'),
  WordNode(pos=(1364, 1374), word='/usr/local'),
  WordNode(pos=(1375, 1380), word='-type'),
  WordNode(pos=(1381, 1382), word='f'),
  WordNode(pos=(1383, 1394), word='-executable'),
  WordNode(pos=(1395, 1399), word='-not'),
  WordNode(pos=(1400, 1402), word='('),
  WordNode(pos=(1403, 1408), word='-name'),
  WordNode(pos=(1409, 1420), word='*tkinter*'),
  WordNode(pos=(1421, 1423), word=')'),
  WordNode(pos=(1424, 1429), word='-exec'),
  WordNode(pos=(1430, 1437), word='scanelf'),
  WordNode(pos=(1438, 1446), word='--needed'),
  WordNode(pos=(1447, 1457), word='--nobanner'),
  WordNode(pos=(1458, 1466), word='--format'),
  WordNode(pos=(1467, 1473), word='%n#p'),
  WordNode(pos=(1474, 1478), word='{}'),
  WordNode(pos=(1479, 1482), word=';'),
])


4503) tr ',' '\n'

CommandNode(pos=(1487, 1498), parts=[
  WordNode(pos=(1487, 1489), word='tr'),
  WordNode(pos=(1490, 1493), word=','),
  WordNode(pos=(1494, 1498), word='\\n'),
])


4504) sort -u

CommandNode(pos=(1503, 1510), parts=[
  WordNode(pos=(1503, 1507), word='sort'),
  WordNode(pos=(1508, 1510), word='-u'),
])


4505) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1515, 1592), parts=[
  WordNode(pos=(1515, 1518), word='awk'),
  WordNode(pos=(1519, 1592), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


4506) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1597, 1651), parts=[
  WordNode(pos=(1597, 1602), word='xargs'),
  WordNode(pos=(1603, 1606), word='-rt'),
  WordNode(pos=(1607, 1610), word='apk'),
  WordNode(pos=(1611, 1614), word='add'),
  WordNode(pos=(1615, 1625), word='--no-cache'),
  WordNode(pos=(1626, 1635), word='--virtual'),
  WordNode(pos=(1636, 1651), word='.python-rundeps'),
])


4507) apk del .build-deps

CommandNode(pos=(1656, 1675), parts=[
  WordNode(pos=(1656, 1659), word='apk'),
  WordNode(pos=(1660, 1663), word='del'),
  WordNode(pos=(1664, 1675), word='.build-deps'),
])


4508) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1681, 1848), parts=[
  WordNode(pos=(1681, 1685), word='find'),
  WordNode(pos=(1686, 1696), word='/usr/local'),
  WordNode(pos=(1697, 1703), word='-depth'),
  WordNode(pos=(1706, 1708), word='('),
  WordNode(pos=(1712, 1714), word='('),
  WordNode(pos=(1715, 1720), word='-type'),
  WordNode(pos=(1721, 1722), word='d'),
  WordNode(pos=(1723, 1725), word='-a'),
  WordNode(pos=(1726, 1728), word='('),
  WordNode(pos=(1729, 1734), word='-name'),
  WordNode(pos=(1735, 1739), word='test'),
  WordNode(pos=(1740, 1742), word='-o'),
  WordNode(pos=(1743, 1748), word='-name'),
  WordNode(pos=(1749, 1754), word='tests'),
  WordNode(pos=(1755, 1757), word=')'),
  WordNode(pos=(1758, 1760), word=')'),
  WordNode(pos=(1764, 1766), word='-o'),
  WordNode(pos=(1770, 1772), word='('),
  WordNode(pos=(1773, 1778), word='-type'),
  WordNode(pos=(1779, 1780), word='f'),
  WordNode(pos=(1781, 1783), word='-a'),
  WordNode(pos=(1784, 1786), word='('),
  WordNode(pos=(1787, 1792), word='-name'),
  WordNode(pos=(1793, 1800), word='*.pyc'),
  WordNode(pos=(1801, 1803), word='-o'),
  WordNode(pos=(1804, 1809), word='-name'),
  WordNode(pos=(1810, 1817), word='*.pyo'),
  WordNode(pos=(1818, 1820), word=')'),
  WordNode(pos=(1821, 1823), word=')'),
  WordNode(pos=(1826, 1828), word=')'),
  WordNode(pos=(1829, 1834), word='-exec'),
  WordNode(pos=(1835, 1837), word='rm'),
  WordNode(pos=(1838, 1841), word='-rf'),
  WordNode(pos=(1842, 1846), word='{}'),
  WordNode(pos=(1847, 1848), word='+'),
])


4509) rm -rf /usr/src/python

CommandNode(pos=(1853, 1875), parts=[
  WordNode(pos=(1853, 1855), word='rm'),
  WordNode(pos=(1856, 1859), word='-rf'),
  WordNode(pos=(1860, 1875), word='/usr/src/python'),
])


4510) python3 --version

CommandNode(pos=(1881, 1898), parts=[
  WordNode(pos=(1881, 1888), word='python3'),
  WordNode(pos=(1889, 1898), word='--version'),
])


4511) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


4512) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


4513) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


4514) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


4515) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


4516) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4517) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


4518) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


4519) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


4520) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


4521) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


4522) groupadd -r cassandra --gid=999

CommandNode(pos=(0, 31), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 21), word='cassandra'),
  WordNode(pos=(22, 31), word='--gid=999'),
])


4523) useradd -r -g cassandra --uid=999 cassandra

CommandNode(pos=(35, 78), parts=[
  WordNode(pos=(35, 42), word='useradd'),
  WordNode(pos=(43, 45), word='-r'),
  WordNode(pos=(46, 48), word='-g'),
  WordNode(pos=(49, 58), word='cassandra'),
  WordNode(pos=(59, 68), word='--uid=999'),
  WordNode(pos=(69, 78), word='cassandra'),
])


4524) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4525) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


4526) apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2

CommandNode(pos=(27, 104), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 84), word='libjemalloc1'),
  WordNode(pos=(87, 93), word='procps'),
  WordNode(pos=(96, 104), word='iproute2'),
])


4527) command -v gpg > /dev/null

CommandNode(pos=(114, 140), parts=[
  WordNode(pos=(114, 121), word='command'),
  WordNode(pos=(122, 124), word='-v'),
  WordNode(pos=(125, 128), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
])


4528) apt-get install -y --no-install-recommends    dirmngr    gnupg

CommandNode(pos=(149, 211), parts=[
  WordNode(pos=(149, 156), word='apt-get'),
  WordNode(pos=(157, 164), word='install'),
  WordNode(pos=(165, 167), word='-y'),
  WordNode(pos=(168, 191), word='--no-install-recommends'),
  WordNode(pos=(195, 202), word='dirmngr'),
  WordNode(pos=(206, 211), word='gnupg'),
])


4529) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(222, 249), parts=[
  WordNode(pos=(222, 224), word='rm'),
  WordNode(pos=(225, 228), word='-rf'),
  WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
])


4530) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


4531) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


4532) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


4533) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


4534) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


4535) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


4536) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


4537) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


4538) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


4539) command -v gpgconf

CommandNode(pos=(613, 631), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
])


4540) gpgconf --kill all

CommandNode(pos=(635, 653), parts=[
  WordNode(pos=(635, 642), word='gpgconf'),
  WordNode(pos=(643, 649), word='--kill'),
  WordNode(pos=(650, 653), word='all'),
])


4541) :

CommandNode(pos=(657, 658), parts=[
  WordNode(pos=(657, 658), word=':'),
])


4542) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


4543) chmod +x /usr/local/bin/gosu

CommandNode(pos=(714, 742), parts=[
  WordNode(pos=(714, 719), word='chmod'),
  WordNode(pos=(720, 722), word='+x'),
  WordNode(pos=(723, 742), word='/usr/local/bin/gosu'),
])


4544) gosu nobody true

CommandNode(pos=(747, 763), parts=[
  WordNode(pos=(747, 751), word='gosu'),
  WordNode(pos=(752, 758), word='nobody'),
  WordNode(pos=(759, 763), word='true'),
])


4545) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(768, 819), parts=[
  WordNode(pos=(768, 775), word='apt-get'),
  WordNode(pos=(776, 781), word='purge'),
  WordNode(pos=(782, 784), word='-y'),
  WordNode(pos=(785, 798), word='--auto-remove'),
  WordNode(pos=(799, 814), word='ca-certificates'),
  WordNode(pos=(815, 819), word='wget'),
])


4546) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4547) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


4548) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


4549) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


4550) command -v gpgconf

CommandNode(pos=(222, 240), parts=[
  WordNode(pos=(222, 229), word='command'),
  WordNode(pos=(230, 232), word='-v'),
  WordNode(pos=(233, 240), word='gpgconf'),
])


4551) gpgconf --kill all

CommandNode(pos=(244, 262), parts=[
  WordNode(pos=(244, 251), word='gpgconf'),
  WordNode(pos=(252, 258), word='--kill'),
  WordNode(pos=(259, 262), word='all'),
])


4552) :

CommandNode(pos=(266, 267), parts=[
  WordNode(pos=(266, 267), word=':'),
])


4553) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


4554) apt-key list

CommandNode(pos=(292, 304), parts=[
  WordNode(pos=(292, 299), word='apt-key'),
  WordNode(pos=(300, 304), word='list'),
])


4555) ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh

CommandNode(pos=(0, 62), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 62), word='/docker-entrypoint.sh'),
])


4556) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


4557) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


4558) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


4559) apk add --no-cache bash

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 23), word='bash'),
])


4560) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4561) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


4562) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


4563) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


4564) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4565) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


4566) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


4567) apt-get install -y --no-install-recommends   gcc   make

CommandNode(pos=(69, 124), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 117), word='gcc'),
  WordNode(pos=(120, 124), word='make'),
])


4568) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(129, 156), parts=[
  WordNode(pos=(129, 131), word='rm'),
  WordNode(pos=(132, 135), word='-rf'),
  WordNode(pos=(136, 156), word='/var/lib/apt/lists/*'),
])


4569) gem install passenger --version "$PASSENGER_VERSION"

CommandNode(pos=(160, 212), parts=[
  WordNode(pos=(160, 163), word='gem'),
  WordNode(pos=(164, 171), word='install'),
  WordNode(pos=(172, 181), word='passenger'),
  WordNode(pos=(182, 191), word='--version'),
  WordNode(pos=(192, 212), word='$PASSENGER_VERSION', parts=[
    ParameterNode(pos=(193, 211), value='PASSENGER_VERSION'),
  ]),
])


4570) passenger-config build-native-support

CommandNode(pos=(215, 252), parts=[
  WordNode(pos=(215, 231), word='passenger-config'),
  WordNode(pos=(232, 252), word='build-native-support'),
])


4571) [ -n "$(passenger-config build-native-support 2>&1)" ]

CommandNode(pos=(258, 312), parts=[
  WordNode(pos=(258, 259), word='['),
  WordNode(pos=(260, 262), word='-n'),
  WordNode(pos=(263, 310), word='$(passenger-config build-native-support 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(266, 308), parts=[
        WordNode(pos=(266, 282), word='passenger-config'),
        WordNode(pos=(283, 303), word='build-native-support'),
        RedirectNode(input=2, output=1, pos=(304, 308), type='>&'),
      ]), pos=(264, 309)),
  ]),
  WordNode(pos=(311, 312), word=']'),
])


4572) cat /tmp/passenger_native_support-*.log

CommandNode(pos=(319, 358), parts=[
  WordNode(pos=(319, 322), word='cat'),
  WordNode(pos=(323, 358), word='/tmp/passenger_native_support-*.log'),
])


4573) false

CommandNode(pos=(360, 365), parts=[
  WordNode(pos=(360, 365), word='false'),
])


4574) apt-mark auto '.*' > /dev/null

CommandNode(pos=(373, 403), parts=[
  WordNode(pos=(373, 381), word='apt-mark'),
  WordNode(pos=(382, 386), word='auto'),
  WordNode(pos=(387, 391), word='.*'),
  RedirectNode(output=
    WordNode(pos=(394, 403), word='/dev/null'), pos=(392, 403), type='>'),
])


4575) [ -z "$savedAptMark" ]

CommandNode(pos=(406, 428), parts=[
  WordNode(pos=(406, 407), word='['),
  WordNode(pos=(408, 410), word='-z'),
  WordNode(pos=(411, 426), word='$savedAptMark', parts=[
    ParameterNode(pos=(412, 425), value='savedAptMark'),
  ]),
  WordNode(pos=(427, 428), word=']'),
])


4576) apt-mark manual $savedAptMark

CommandNode(pos=(432, 461), parts=[
  WordNode(pos=(432, 440), word='apt-mark'),
  WordNode(pos=(441, 447), word='manual'),
  WordNode(pos=(448, 461), word='$savedAptMark', parts=[
    ParameterNode(pos=(448, 461), value='savedAptMark'),
  ]),
])


4577) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(464, 540), parts=[
  WordNode(pos=(464, 471), word='apt-get'),
  WordNode(pos=(472, 477), word='purge'),
  WordNode(pos=(478, 480), word='-y'),
  WordNode(pos=(481, 494), word='--auto-remove'),
  WordNode(pos=(495, 497), word='-o'),
  WordNode(pos=(498, 540), word='APT::AutoRemove::RecommendsImportant=false'),
])


4578) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4579) passenger-config install-agent

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 27), word='passenger-config'),
  WordNode(pos=(28, 41), word='install-agent'),
])


4580) passenger-config download-nginx-engine

CommandNode(pos=(44, 82), parts=[
  WordNode(pos=(44, 60), word='passenger-config'),
  WordNode(pos=(61, 82), word='download-nginx-engine'),
])


4581) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4582) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


4583) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


4584) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


4585) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


4586) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4587) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


4588) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4589) echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 14), word='echo'),
  WordNode(pos=(15, 33), word='/usr/local/lib64'),
  RedirectNode(output=
    WordNode(pos=(36, 70), word='/etc/ld.so.conf.d/local-lib64.conf'), pos=(34, 70), type='>'),
])


4590) ldconfig -v

CommandNode(pos=(73, 84), parts=[
  WordNode(pos=(73, 81), word='ldconfig'),
  WordNode(pos=(82, 84), word='-v'),
])


4591) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4592) dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 21), word='dpkg-divert'),
  WordNode(pos=(22, 30), word='--divert'),
  WordNode(pos=(31, 48), word='/usr/bin/gcc.orig'),
  WordNode(pos=(49, 57), word='--rename'),
  WordNode(pos=(58, 70), word='/usr/bin/gcc'),
])


4593) dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++

CommandNode(pos=(73, 133), parts=[
  WordNode(pos=(73, 84), word='dpkg-divert'),
  WordNode(pos=(85, 93), word='--divert'),
  WordNode(pos=(94, 111), word='/usr/bin/g++.orig'),
  WordNode(pos=(112, 120), word='--rename'),
  WordNode(pos=(121, 133), word='/usr/bin/g++'),
])


4594) dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran

CommandNode(pos=(136, 206), parts=[
  WordNode(pos=(136, 147), word='dpkg-divert'),
  WordNode(pos=(148, 156), word='--divert'),
  WordNode(pos=(157, 179), word='/usr/bin/gfortran.orig'),
  WordNode(pos=(180, 188), word='--rename'),
  WordNode(pos=(189, 206), word='/usr/bin/gfortran'),
])


4595) update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999

CommandNode(pos=(209, 276), parts=[
  WordNode(pos=(209, 228), word='update-alternatives'),
  WordNode(pos=(229, 238), word='--install'),
  WordNode(pos=(239, 250), word='/usr/bin/cc'),
  WordNode(pos=(251, 253), word='cc'),
  WordNode(pos=(254, 272), word='/usr/local/bin/gcc'),
  WordNode(pos=(273, 276), word='999'),
])


4596) apk add --no-cache   file   gnupg

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='file'),
  WordNode(pos=(28, 33), word='gnupg'),
])


4597) set -euxo pipefail

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 9), word='-euxo'),
  WordNode(pos=(10, 18), word='pipefail'),
])


4598) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(22, 53), parts=[
  WordNode(pos=(22, 28), word='export'),
  WordNode(pos=(29, 53), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(42, 51), parts=[
        WordNode(pos=(42, 48), word='mktemp'),
        WordNode(pos=(49, 51), word='-d'),
      ]), pos=(40, 52)),
  ]),
])


4599) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$MANIFEST_TOOL_GPG_KEY"

CommandNode(pos=(56, 143), parts=[
  WordNode(pos=(56, 59), word='gpg'),
  WordNode(pos=(60, 67), word='--batch'),
  WordNode(pos=(68, 79), word='--keyserver'),
  WordNode(pos=(80, 106), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(107, 118), word='--recv-keys'),
  WordNode(pos=(119, 143), word='$MANIFEST_TOOL_GPG_KEY', parts=[
    ParameterNode(pos=(120, 142), value='MANIFEST_TOOL_GPG_KEY'),
  ]),
])


4600) mkdir -p bin

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 152), word='mkdir'),
  WordNode(pos=(153, 155), word='-p'),
  WordNode(pos=(156, 159), word='bin'),
])


4601) goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"

CommandNode(pos=(211, 264), parts=[
  AssignmentNode(pos=(211, 264), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(220, 262), parts=[
        WordNode(pos=(220, 246), word='.bashbrew-arch-to-goenv.sh'),
        WordNode(pos=(247, 262), word='$bashbrewArch', parts=[
          ParameterNode(pos=(248, 261), value='bashbrewArch'),
        ]),
      ]), pos=(218, 263)),
  ]),
])


4602) eval "$goEnv"

CommandNode(pos=(266, 279), parts=[
  WordNode(pos=(266, 270), word='eval'),
  WordNode(pos=(271, 279), word='$goEnv', parts=[
    ParameterNode(pos=(272, 278), value='goEnv'),
  ]),
])


4603) srcBin="manifest-tool-$GOOS-$GOARCH"

CommandNode(pos=(284, 320), parts=[
  AssignmentNode(pos=(284, 320), word='srcBin=manifest-tool-$GOOS-$GOARCH', parts=[
    ParameterNode(pos=(306, 311), value='GOOS'),
    ParameterNode(pos=(312, 319), value='GOARCH'),
  ]),
])


4604) [ "$GOARCH" = 'arm' ]

CommandNode(pos=(328, 349), parts=[
  WordNode(pos=(328, 329), word='['),
  WordNode(pos=(330, 339), word='$GOARCH', parts=[
    ParameterNode(pos=(331, 338), value='GOARCH'),
  ]),
  WordNode(pos=(340, 341), word='='),
  WordNode(pos=(342, 347), word='arm'),
  WordNode(pos=(348, 349), word=']'),
])


4605) [ -n "$GOARM" ]

CommandNode(pos=(356, 371), parts=[
  WordNode(pos=(356, 357), word='['),
  WordNode(pos=(358, 360), word='-n'),
  WordNode(pos=(361, 369), word='$GOARM', parts=[
    ParameterNode(pos=(362, 368), value='GOARM'),
  ]),
  WordNode(pos=(370, 371), word=']'),
])


4606) srcBin="${srcBin}v$GOARM"

CommandNode(pos=(373, 398), parts=[
  AssignmentNode(pos=(373, 398), word='srcBin=${srcBin}v$GOARM', parts=[
    ParameterNode(pos=(381, 390), value='srcBin'),
    ParameterNode(pos=(391, 397), value='GOARM'),
  ]),
])


4607) [ "$GOOS" = 'windows' ]

CommandNode(pos=(407, 430), parts=[
  WordNode(pos=(407, 408), word='['),
  WordNode(pos=(409, 416), word='$GOOS', parts=[
    ParameterNode(pos=(410, 415), value='GOOS'),
  ]),
  WordNode(pos=(417, 418), word='='),
  WordNode(pos=(419, 428), word='windows'),
  WordNode(pos=(429, 430), word=']'),
])


4608) ext='.exe'

CommandNode(pos=(434, 444), parts=[
  AssignmentNode(pos=(434, 444), word='ext=.exe'),
])


4609) ext=

CommandNode(pos=(448, 452), parts=[
  AssignmentNode(pos=(448, 452), word='ext='),
])


4610) srcBin="$srcBin$ext"

CommandNode(pos=(457, 477), parts=[
  AssignmentNode(pos=(457, 477), word='srcBin=$srcBin$ext', parts=[
    ParameterNode(pos=(465, 472), value='srcBin'),
    ParameterNode(pos=(472, 476), value='ext'),
  ]),
])


4611) targetBin="bin/manifest-tool-$bashbrewArch$ext"

CommandNode(pos=(482, 529), parts=[
  AssignmentNode(pos=(482, 529), word='targetBin=bin/manifest-tool-$bashbrewArch$ext', parts=[
    ParameterNode(pos=(511, 524), value='bashbrewArch'),
    ParameterNode(pos=(524, 528), value='ext'),
  ]),
])


4612) wget -O "$targetBin.asc" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc"

CommandNode(pos=(534, 656), parts=[
  WordNode(pos=(534, 538), word='wget'),
  WordNode(pos=(539, 541), word='-O'),
  WordNode(pos=(542, 558), word='$targetBin.asc', parts=[
    ParameterNode(pos=(543, 553), value='targetBin'),
  ]),
  WordNode(pos=(559, 656), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc', parts=[
    ParameterNode(pos=(619, 643), value='MANIFEST_TOOL_VERSION'),
    ParameterNode(pos=(644, 651), value='srcBin'),
  ]),
])


4613) wget -O "$targetBin" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin"

CommandNode(pos=(661, 775), parts=[
  WordNode(pos=(661, 665), word='wget'),
  WordNode(pos=(666, 668), word='-O'),
  WordNode(pos=(669, 681), word='$targetBin', parts=[
    ParameterNode(pos=(670, 680), value='targetBin'),
  ]),
  WordNode(pos=(682, 775), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin', parts=[
    ParameterNode(pos=(742, 766), value='MANIFEST_TOOL_VERSION'),
    ParameterNode(pos=(767, 774), value='srcBin'),
  ]),
])


4614) gpg --batch --verify "$targetBin.asc" "$targetBin"

CommandNode(pos=(780, 830), parts=[
  WordNode(pos=(780, 783), word='gpg'),
  WordNode(pos=(784, 791), word='--batch'),
  WordNode(pos=(792, 800), word='--verify'),
  WordNode(pos=(801, 817), word='$targetBin.asc', parts=[
    ParameterNode(pos=(802, 812), value='targetBin'),
  ]),
  WordNode(pos=(818, 830), word='$targetBin', parts=[
    ParameterNode(pos=(819, 829), value='targetBin'),
  ]),
])


4615) ls -lAFh "$targetBin"*

CommandNode(pos=(835, 857), parts=[
  WordNode(pos=(835, 837), word='ls'),
  WordNode(pos=(838, 843), word='-lAFh'),
  WordNode(pos=(844, 857), word='$targetBin*', parts=[
    ParameterNode(pos=(845, 855), value='targetBin'),
  ]),
])


4616) file "$targetBin"*

CommandNode(pos=(862, 880), parts=[
  WordNode(pos=(862, 866), word='file'),
  WordNode(pos=(867, 880), word='$targetBin*', parts=[
    ParameterNode(pos=(868, 878), value='targetBin'),
  ]),
])


4617) gpgconf --kill all

CommandNode(pos=(895, 913), parts=[
  WordNode(pos=(895, 902), word='gpgconf'),
  WordNode(pos=(903, 909), word='--kill'),
  WordNode(pos=(910, 913), word='all'),
])


4618) rm -r "$GNUPGHOME"

CommandNode(pos=(916, 934), parts=[
  WordNode(pos=(916, 918), word='rm'),
  WordNode(pos=(919, 921), word='-r'),
  WordNode(pos=(922, 934), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(923, 933), value='GNUPGHOME'),
  ]),
])


4619) ls -lAFh bin/manifest-tool-*

CommandNode(pos=(938, 966), parts=[
  WordNode(pos=(938, 940), word='ls'),
  WordNode(pos=(941, 946), word='-lAFh'),
  WordNode(pos=(947, 966), word='bin/manifest-tool-*'),
])


4620) file bin/manifest-tool-*

CommandNode(pos=(969, 993), parts=[
  WordNode(pos=(969, 973), word='file'),
  WordNode(pos=(974, 993), word='bin/manifest-tool-*'),
])


4621) set -euxo pipefail

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 9), word='-euxo'),
  WordNode(pos=(10, 18), word='pipefail'),
])


4622) mkdir -p bin

CommandNode(pos=(22, 34), parts=[
  WordNode(pos=(22, 27), word='mkdir'),
  WordNode(pos=(28, 30), word='-p'),
  WordNode(pos=(31, 34), word='bin'),
])


4623) goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"

CommandNode(pos=(86, 139), parts=[
  AssignmentNode(pos=(86, 139), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(95, 137), parts=[
        WordNode(pos=(95, 121), word='.bashbrew-arch-to-goenv.sh'),
        WordNode(pos=(122, 137), word='$bashbrewArch', parts=[
          ParameterNode(pos=(123, 136), value='bashbrewArch'),
        ]),
      ]), pos=(93, 138)),
  ]),
])


4624) eval "$goEnv"

CommandNode(pos=(141, 154), parts=[
  WordNode(pos=(141, 145), word='eval'),
  WordNode(pos=(146, 154), word='$goEnv', parts=[
    ParameterNode(pos=(147, 153), value='goEnv'),
  ]),
])


4625) [ "$GOOS" = 'windows' ]

CommandNode(pos=(159, 182), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 168), word='$GOOS', parts=[
    ParameterNode(pos=(162, 167), value='GOOS'),
  ]),
  WordNode(pos=(169, 170), word='='),
  WordNode(pos=(171, 180), word='windows'),
  WordNode(pos=(181, 182), word=']'),
])


4626) ext='.exe'

CommandNode(pos=(186, 196), parts=[
  AssignmentNode(pos=(186, 196), word='ext=.exe'),
])


4627) ext=

CommandNode(pos=(200, 204), parts=[
  AssignmentNode(pos=(200, 204), word='ext='),
])


4628) targetBin="bin/bashbrew-$bashbrewArch$ext"

CommandNode(pos=(212, 254), parts=[
  AssignmentNode(pos=(212, 254), word='targetBin=bin/bashbrew-$bashbrewArch$ext', parts=[
    ParameterNode(pos=(236, 249), value='bashbrewArch'),
    ParameterNode(pos=(249, 253), value='ext'),
  ]),
])


4629) go build     -a -v     -ldflags '-s -w'     -tags netgo -installsuffix netgo     -o "$targetBin"     -mod vendor     bashbrew/src/bashbrew

CommandNode(pos=(259, 397), parts=[
  WordNode(pos=(259, 261), word='go'),
  WordNode(pos=(262, 267), word='build'),
  WordNode(pos=(272, 274), word='-a'),
  WordNode(pos=(275, 277), word='-v'),
  WordNode(pos=(282, 290), word='-ldflags'),
  WordNode(pos=(291, 298), word='-s -w'),
  WordNode(pos=(303, 308), word='-tags'),
  WordNode(pos=(309, 314), word='netgo'),
  WordNode(pos=(315, 329), word='-installsuffix'),
  WordNode(pos=(330, 335), word='netgo'),
  WordNode(pos=(340, 342), word='-o'),
  WordNode(pos=(343, 355), word='$targetBin', parts=[
    ParameterNode(pos=(344, 354), value='targetBin'),
  ]),
  WordNode(pos=(360, 364), word='-mod'),
  WordNode(pos=(365, 371), word='vendor'),
  WordNode(pos=(376, 397), word='bashbrew/src/bashbrew'),
])


4630) ls -lAFh "$targetBin"

CommandNode(pos=(406, 427), parts=[
  WordNode(pos=(406, 408), word='ls'),
  WordNode(pos=(409, 414), word='-lAFh'),
  WordNode(pos=(415, 427), word='$targetBin', parts=[
    ParameterNode(pos=(416, 426), value='targetBin'),
  ]),
])


4631) file "$targetBin"

CommandNode(pos=(432, 449), parts=[
  WordNode(pos=(432, 436), word='file'),
  WordNode(pos=(437, 449), word='$targetBin', parts=[
    ParameterNode(pos=(438, 448), value='targetBin'),
  ]),
])


4632) ls -lAFh bin/bashbrew-*

CommandNode(pos=(464, 487), parts=[
  WordNode(pos=(464, 466), word='ls'),
  WordNode(pos=(467, 472), word='-lAFh'),
  WordNode(pos=(473, 487), word='bin/bashbrew-*'),
])


4633) file bin/bashbrew-*

CommandNode(pos=(490, 509), parts=[
  WordNode(pos=(490, 494), word='file'),
  WordNode(pos=(495, 509), word='bin/bashbrew-*'),
])


4634) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4635) apk add --no-cache --virtual .build-deps   coreutils   freetype-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev   postgresql-dev

CommandNode(pos=(12, 142), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 64), word='coreutils'),
  WordNode(pos=(67, 79), word='freetype-dev'),
  WordNode(pos=(82, 99), word='libjpeg-turbo-dev'),
  WordNode(pos=(102, 112), word='libpng-dev'),
  WordNode(pos=(115, 125), word='libzip-dev'),
  WordNode(pos=(128, 142), word='postgresql-dev'),
])


4636) docker-php-ext-configure gd   --with-freetype-dir=/usr/include/   --with-jpeg-dir=/usr/include/   --with-png-dir=/usr/include/

CommandNode(pos=(147, 273), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 174), word='gd'),
  WordNode(pos=(177, 210), word='--with-freetype-dir=/usr/include/'),
  WordNode(pos=(213, 242), word='--with-jpeg-dir=/usr/include/'),
  WordNode(pos=(245, 273), word='--with-png-dir=/usr/include/'),
])


4637) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(278, 359), parts=[
  WordNode(pos=(278, 300), word='docker-php-ext-install'),
  WordNode(pos=(301, 303), word='-j'),
  WordNode(pos=(304, 314), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(307, 312), parts=[
        WordNode(pos=(307, 312), word='nproc'),
      ]), pos=(305, 313)),
  ]),
  WordNode(pos=(317, 319), word='gd'),
  WordNode(pos=(322, 329), word='opcache'),
  WordNode(pos=(332, 341), word='pdo_mysql'),
  WordNode(pos=(344, 353), word='pdo_pgsql'),
  WordNode(pos=(356, 359), word='zip'),
])


4638) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


4639) apk add --virtual .drupal-phpexts-rundeps $runDeps

CommandNode(pos=(566, 616), parts=[
  WordNode(pos=(566, 569), word='apk'),
  WordNode(pos=(570, 573), word='add'),
  WordNode(pos=(574, 583), word='--virtual'),
  WordNode(pos=(584, 607), word='.drupal-phpexts-rundeps'),
  WordNode(pos=(608, 616), word='$runDeps', parts=[
    ParameterNode(pos=(608, 616), value='runDeps'),
  ]),
])


4640) apk del .build-deps

CommandNode(pos=(621, 640), parts=[
  WordNode(pos=(621, 624), word='apk'),
  WordNode(pos=(625, 628), word='del'),
  WordNode(pos=(629, 640), word='.build-deps'),
])


4641) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


4642) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


4643) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


4644) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


4645) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


4646) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


4647) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


4648) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


4649) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


4650) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


4651) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


4652) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


4653) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4654) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


4655) apt-get install -y --no-install-recommends   bzip2   unzip   xz-utils     ca-certificates p11-kit     fontconfig libfreetype6

CommandNode(pos=(28, 153), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 78), word='bzip2'),
  WordNode(pos=(81, 86), word='unzip'),
  WordNode(pos=(89, 97), word='xz-utils'),
  WordNode(pos=(102, 117), word='ca-certificates'),
  WordNode(pos=(118, 125), word='p11-kit'),
  WordNode(pos=(130, 140), word='fontconfig'),
  WordNode(pos=(141, 153), word='libfreetype6'),
])


4656) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(158, 185), parts=[
  WordNode(pos=(158, 160), word='rm'),
  WordNode(pos=(161, 164), word='-rf'),
  WordNode(pos=(165, 185), word='/var/lib/apt/lists/*'),
])


4657) echo '#/bin/sh'

CommandNode(pos=(2, 17), parts=[
  WordNode(pos=(2, 6), word='echo'),
  WordNode(pos=(7, 17), word='#/bin/sh'),
])


4658) echo 'echo "$JAVA_HOME"'

CommandNode(pos=(19, 43), parts=[
  WordNode(pos=(19, 23), word='echo'),
  WordNode(pos=(24, 43), word='echo "$JAVA_HOME"'),
])


4659) chmod +x /usr/local/bin/docker-java-home

CommandNode(pos=(84, 124), parts=[
  WordNode(pos=(84, 89), word='chmod'),
  WordNode(pos=(90, 92), word='+x'),
  WordNode(pos=(93, 124), word='/usr/local/bin/docker-java-home'),
])


4660) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


4661) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4662) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


4663) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


4664) apt-get install -y --no-install-recommends   libjpeg-dev   libmagickwand-dev   libpng-dev

CommandNode(pos=(69, 158), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 125), word='libjpeg-dev'),
  WordNode(pos=(128, 145), word='libmagickwand-dev'),
  WordNode(pos=(148, 158), word='libpng-dev'),
])


4665) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(164, 232), parts=[
  WordNode(pos=(164, 188), word='docker-php-ext-configure'),
  WordNode(pos=(189, 191), word='gd'),
  WordNode(pos=(192, 211), word='--with-png-dir=/usr'),
  WordNode(pos=(212, 232), word='--with-jpeg-dir=/usr'),
])


4666) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(235, 303), parts=[
  WordNode(pos=(235, 257), word='docker-php-ext-install'),
  WordNode(pos=(260, 266), word='bcmath'),
  WordNode(pos=(269, 273), word='exif'),
  WordNode(pos=(276, 278), word='gd'),
  WordNode(pos=(281, 287), word='mysqli'),
  WordNode(pos=(290, 297), word='opcache'),
  WordNode(pos=(300, 303), word='zip'),
])


4667) pecl install imagick-3.4.4

CommandNode(pos=(308, 334), parts=[
  WordNode(pos=(308, 312), word='pecl'),
  WordNode(pos=(313, 320), word='install'),
  WordNode(pos=(321, 334), word='imagick-3.4.4'),
])


4668) docker-php-ext-enable imagick

CommandNode(pos=(337, 366), parts=[
  WordNode(pos=(337, 358), word='docker-php-ext-enable'),
  WordNode(pos=(359, 366), word='imagick'),
])


4669) apt-mark auto '.*' > /dev/null

CommandNode(pos=(370, 400), parts=[
  WordNode(pos=(370, 378), word='apt-mark'),
  WordNode(pos=(379, 383), word='auto'),
  WordNode(pos=(384, 388), word='.*'),
  RedirectNode(output=
    WordNode(pos=(391, 400), word='/dev/null'), pos=(389, 400), type='>'),
])


4670) apt-mark manual $savedAptMark

CommandNode(pos=(403, 432), parts=[
  WordNode(pos=(403, 411), word='apt-mark'),
  WordNode(pos=(412, 418), word='manual'),
  WordNode(pos=(419, 432), word='$savedAptMark', parts=[
    ParameterNode(pos=(419, 432), value='savedAptMark'),
  ]),
])


4671) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(435, 488), parts=[
  WordNode(pos=(435, 438), word='ldd'),
  WordNode(pos=(439, 488), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(442, 481), parts=[
        WordNode(pos=(442, 445), word='php'),
        WordNode(pos=(446, 448), word='-r'),
        WordNode(pos=(449, 481), word='echo ini_get("extension_dir");'),
      ]), pos=(440, 482)),
  ]),
])


4672) awk '/=>/ { print $3 }'

CommandNode(pos=(493, 516), parts=[
  WordNode(pos=(493, 496), word='awk'),
  WordNode(pos=(497, 516), word='/=>/ { print $3 }'),
])


4673) sort -u

CommandNode(pos=(521, 528), parts=[
  WordNode(pos=(521, 525), word='sort'),
  WordNode(pos=(526, 528), word='-u'),
])


4674) xargs -r dpkg-query -S

CommandNode(pos=(533, 555), parts=[
  WordNode(pos=(533, 538), word='xargs'),
  WordNode(pos=(539, 541), word='-r'),
  WordNode(pos=(542, 552), word='dpkg-query'),
  WordNode(pos=(553, 555), word='-S'),
])


4675) cut -d: -f1

CommandNode(pos=(560, 571), parts=[
  WordNode(pos=(560, 563), word='cut'),
  WordNode(pos=(564, 567), word='-d:'),
  WordNode(pos=(568, 571), word='-f1'),
])


4676) sort -u

CommandNode(pos=(576, 583), parts=[
  WordNode(pos=(576, 580), word='sort'),
  WordNode(pos=(581, 583), word='-u'),
])


4677) xargs -rt apt-mark manual

CommandNode(pos=(588, 613), parts=[
  WordNode(pos=(588, 593), word='xargs'),
  WordNode(pos=(594, 597), word='-rt'),
  WordNode(pos=(598, 606), word='apt-mark'),
  WordNode(pos=(607, 613), word='manual'),
])


4678) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(617, 693), parts=[
  WordNode(pos=(617, 624), word='apt-get'),
  WordNode(pos=(625, 630), word='purge'),
  WordNode(pos=(631, 633), word='-y'),
  WordNode(pos=(634, 647), word='--auto-remove'),
  WordNode(pos=(648, 650), word='-o'),
  WordNode(pos=(651, 693), word='APT::AutoRemove::RecommendsImportant=false'),
])


4679) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(696, 723), parts=[
  WordNode(pos=(696, 698), word='rm'),
  WordNode(pos=(699, 702), word='-rf'),
  WordNode(pos=(703, 723), word='/var/lib/apt/lists/*'),
])


4680) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


4681) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


4682) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


4683) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


4684) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


4685) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


4686) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


4687) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


4688) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


4689) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


4690) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


4691) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


4692) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


4693) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


4694) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


4695) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4696) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


4697) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


4698) sha1sum -c -

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 154), word='sha1sum'),
  WordNode(pos=(155, 157), word='-c'),
  WordNode(pos=(158, 159), word='-'),
])


4699) tar -xzf wordpress.tar.gz -C /usr/src/

CommandNode(pos=(162, 200), parts=[
  WordNode(pos=(162, 165), word='tar'),
  WordNode(pos=(166, 170), word='-xzf'),
  WordNode(pos=(171, 187), word='wordpress.tar.gz'),
  WordNode(pos=(188, 190), word='-C'),
  WordNode(pos=(191, 200), word='/usr/src/'),
])


4700) rm wordpress.tar.gz

CommandNode(pos=(203, 222), parts=[
  WordNode(pos=(203, 205), word='rm'),
  WordNode(pos=(206, 222), word='wordpress.tar.gz'),
])


4701) chown -R www-data:www-data /usr/src/wordpress

CommandNode(pos=(225, 270), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 233), word='-R'),
  WordNode(pos=(234, 251), word='www-data:www-data'),
  WordNode(pos=(252, 270), word='/usr/src/wordpress'),
])


4702) apk add --no-cache   'su-exec>=0.2'   bash   procps

CommandNode(pos=(0, 51), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 35), word='su-exec>=0.2'),
  WordNode(pos=(38, 42), word='bash'),
  WordNode(pos=(45, 51), word='procps'),
])


4703) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4704) apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev

CommandNode(pos=(12, 159), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 63), word='autoconf'),
  WordNode(pos=(66, 81), word='ca-certificates'),
  WordNode(pos=(84, 92), word='dpkg-dev'),
  WordNode(pos=(93, 97), word='dpkg'),
  WordNode(pos=(100, 103), word='gcc'),
  WordNode(pos=(106, 111), word='gnupg'),
  WordNode(pos=(114, 122), word='libc-dev'),
  WordNode(pos=(125, 138), word='linux-headers'),
  WordNode(pos=(141, 145), word='make'),
  WordNode(pos=(148, 159), word='ncurses-dev'),
])


4705) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


4706) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


4707) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(308, 345), parts=[
  AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


4708) mkdir /usr/local/src

CommandNode(pos=(349, 369), parts=[
  WordNode(pos=(349, 354), word='mkdir'),
  WordNode(pos=(355, 369), word='/usr/local/src'),
])


4709) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


4710) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


4711) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(521, 552), parts=[
  WordNode(pos=(521, 527), word='export'),
  WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(541, 550), parts=[
        WordNode(pos=(541, 547), word='mktemp'),
        WordNode(pos=(548, 550), word='-d'),
      ]), pos=(539, 551)),
  ]),
])


4712) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


4713) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


4714) gpgconf --kill all

CommandNode(pos=(735, 753), parts=[
  WordNode(pos=(735, 742), word='gpgconf'),
  WordNode(pos=(743, 749), word='--kill'),
  WordNode(pos=(750, 753), word='all'),
])


4715) rm -rf "$GNUPGHOME"

CommandNode(pos=(756, 775), parts=[
  WordNode(pos=(756, 758), word='rm'),
  WordNode(pos=(759, 762), word='-rf'),
  WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(764, 774), value='GNUPGHOME'),
  ]),
])


4716) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


4717) sha256sum -c -

CommandNode(pos=(832, 846), parts=[
  WordNode(pos=(832, 841), word='sha256sum'),
  WordNode(pos=(842, 844), word='-c'),
  WordNode(pos=(845, 846), word='-'),
])


4718) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(849, 873), parts=[
  WordNode(pos=(849, 854), word='mkdir'),
  WordNode(pos=(855, 857), word='-p'),
  WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
  ]),
])


4719) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


4720) cd "$OPENSSL_PATH"

CommandNode(pos=(972, 990), parts=[
  WordNode(pos=(972, 974), word='cd'),
  WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
  ]),
])


4721) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


4722) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1145, 1183), parts=[
  WordNode(pos=(1145, 1149), word='make'),
  WordNode(pos=(1150, 1152), word='-j'),
  WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1156, 1181), parts=[
        WordNode(pos=(1156, 1163), word='getconf'),
        WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
      ]), pos=(1154, 1182)),
  ]),
])


4723) make install_sw install_ssldirs

CommandNode(pos=(1186, 1217), parts=[
  WordNode(pos=(1186, 1190), word='make'),
  WordNode(pos=(1191, 1201), word='install_sw'),
  WordNode(pos=(1202, 1217), word='install_ssldirs'),
])


4724) cd ..

CommandNode(pos=(1220, 1225), parts=[
  WordNode(pos=(1220, 1222), word='cd'),
  WordNode(pos=(1223, 1225), word='..'),
])


4725) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1228, 1251), parts=[
  WordNode(pos=(1228, 1230), word='rm'),
  WordNode(pos=(1231, 1234), word='-rf'),
  WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
  ]),
])


4726) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


4727) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1320, 1380), parts=[
  WordNode(pos=(1320, 1322), word='ln'),
  WordNode(pos=(1323, 1326), word='-sf'),
  WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
  WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
  WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
  ]),
])


4728) openssl version

CommandNode(pos=(1383, 1398), parts=[
  WordNode(pos=(1383, 1390), word='openssl'),
  WordNode(pos=(1391, 1398), word='version'),
])


4729) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


4730) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


4731) mkdir -p "$OTP_PATH"

CommandNode(pos=(1529, 1549), parts=[
  WordNode(pos=(1529, 1534), word='mkdir'),
  WordNode(pos=(1535, 1537), word='-p'),
  WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
  ]),
])


4732) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


4733) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


4734) sha256sum -c -

CommandNode(pos=(1660, 1674), parts=[
  WordNode(pos=(1660, 1669), word='sha256sum'),
  WordNode(pos=(1670, 1672), word='-c'),
  WordNode(pos=(1673, 1674), word='-'),
])


4735) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


4736) cd "$OTP_PATH"

CommandNode(pos=(1765, 1779), parts=[
  WordNode(pos=(1765, 1767), word='cd'),
  WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
  ]),
])


4737) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(1782, 1808), parts=[
  WordNode(pos=(1782, 1788), word='export'),
  WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
  ]),
])


4738) ./otp_build autoconf

CommandNode(pos=(1811, 1831), parts=[
  WordNode(pos=(1811, 1822), word='./otp_build'),
  WordNode(pos=(1823, 1831), word='autoconf'),
])


4739) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


4740) export CFLAGS

CommandNode(pos=(1876, 1889), parts=[
  WordNode(pos=(1876, 1882), word='export'),
  WordNode(pos=(1883, 1889), word='CFLAGS'),
])


4741) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


4742) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


4743) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


4744) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


4745) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


4746) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(2771, 2849), parts=[
  WordNode(pos=(2771, 2775), word='make'),
  WordNode(pos=(2776, 2778), word='-j'),
  WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2782, 2807), parts=[
        WordNode(pos=(2782, 2789), word='getconf'),
        WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
      ]), pos=(2780, 2808)),
  ]),
  WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


4747) make install

CommandNode(pos=(2852, 2864), parts=[
  WordNode(pos=(2852, 2856), word='make'),
  WordNode(pos=(2857, 2864), word='install'),
])


4748) cd ..

CommandNode(pos=(2867, 2872), parts=[
  WordNode(pos=(2867, 2869), word='cd'),
  WordNode(pos=(2870, 2872), word='..'),
])


4749) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(2875, 2969), parts=[
  WordNode(pos=(2875, 2877), word='rm'),
  WordNode(pos=(2878, 2881), word='-rf'),
  WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
  ]),
  WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
])


4750) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


4751) apk add --no-cache --virtual .otp-run-deps $runDeps

CommandNode(pos=(3175, 3226), parts=[
  WordNode(pos=(3175, 3178), word='apk'),
  WordNode(pos=(3179, 3182), word='add'),
  WordNode(pos=(3183, 3193), word='--no-cache'),
  WordNode(pos=(3194, 3203), word='--virtual'),
  WordNode(pos=(3204, 3217), word='.otp-run-deps'),
  WordNode(pos=(3218, 3226), word='$runDeps', parts=[
    ParameterNode(pos=(3218, 3226), value='runDeps'),
  ]),
])


4752) apk del --no-network .build-deps

CommandNode(pos=(3229, 3261), parts=[
  WordNode(pos=(3229, 3232), word='apk'),
  WordNode(pos=(3233, 3236), word='del'),
  WordNode(pos=(3237, 3249), word='--no-network'),
  WordNode(pos=(3250, 3261), word='.build-deps'),
])


4753) openssl version

CommandNode(pos=(3265, 3280), parts=[
  WordNode(pos=(3265, 3272), word='openssl'),
  WordNode(pos=(3273, 3280), word='version'),
])


4754) erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

CommandNode(pos=(3283, 3380), parts=[
  WordNode(pos=(3283, 3286), word='erl'),
  WordNode(pos=(3287, 3295), word='-noshell'),
  WordNode(pos=(3296, 3301), word='-eval'),
  WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
])


4755) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4756) addgroup -g 101 -S rabbitmq

CommandNode(pos=(11, 38), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 26), word='101'),
  WordNode(pos=(27, 29), word='-S'),
  WordNode(pos=(30, 38), word='rabbitmq'),
])


4757) adduser -u 100 -S -h "$RABBITMQ_DATA_DIR" -G rabbitmq rabbitmq

CommandNode(pos=(41, 103), parts=[
  WordNode(pos=(41, 48), word='adduser'),
  WordNode(pos=(49, 51), word='-u'),
  WordNode(pos=(52, 55), word='100'),
  WordNode(pos=(56, 58), word='-S'),
  WordNode(pos=(59, 61), word='-h'),
  WordNode(pos=(62, 82), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(63, 81), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(83, 85), word='-G'),
  WordNode(pos=(86, 94), word='rabbitmq'),
  WordNode(pos=(95, 103), word='rabbitmq'),
])


4758) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(106, 185), parts=[
  WordNode(pos=(106, 111), word='mkdir'),
  WordNode(pos=(112, 114), word='-p'),
  WordNode(pos=(115, 135), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(116, 134), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(136, 149), word='/etc/rabbitmq'),
  WordNode(pos=(150, 167), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(168, 185), word='/var/log/rabbitmq'),
])


4759) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(188, 286), parts=[
  WordNode(pos=(188, 193), word='chown'),
  WordNode(pos=(194, 197), word='-fR'),
  WordNode(pos=(198, 215), word='rabbitmq:rabbitmq'),
  WordNode(pos=(216, 236), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(217, 235), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(237, 250), word='/etc/rabbitmq'),
  WordNode(pos=(251, 268), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(269, 286), word='/var/log/rabbitmq'),
])


4760) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(289, 369), parts=[
  WordNode(pos=(289, 294), word='chmod'),
  WordNode(pos=(295, 298), word='777'),
  WordNode(pos=(299, 319), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(300, 318), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(320, 333), word='/etc/rabbitmq'),
  WordNode(pos=(334, 351), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(352, 369), word='/var/log/rabbitmq'),
])


4761) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(372, 435), parts=[
  WordNode(pos=(372, 374), word='ln'),
  WordNode(pos=(375, 378), word='-sf'),
  WordNode(pos=(379, 414), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(380, 398), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(415, 435), word='/root/.erlang.cookie'),
])


4762) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4763) apk add --no-cache --virtual .build-deps   ca-certificates   gnupg   xz

CommandNode(pos=(12, 83), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 78), word='gnupg'),
  WordNode(pos=(81, 83), word='xz'),
])


4764) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


4765) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


4766) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


4767) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


4768) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(462, 493), parts=[
  WordNode(pos=(462, 468), word='export'),
  WordNode(pos=(469, 493), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(482, 491), parts=[
        WordNode(pos=(482, 488), word='mktemp'),
        WordNode(pos=(489, 491), word='-d'),
      ]), pos=(480, 492)),
  ]),
])


4769) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


4770) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


4771) gpgconf --kill all

CommandNode(pos=(649, 667), parts=[
  WordNode(pos=(649, 656), word='gpgconf'),
  WordNode(pos=(657, 663), word='--kill'),
  WordNode(pos=(664, 667), word='all'),
])


4772) rm -rf "$GNUPGHOME"

CommandNode(pos=(670, 689), parts=[
  WordNode(pos=(670, 672), word='rm'),
  WordNode(pos=(673, 676), word='-rf'),
  WordNode(pos=(677, 689), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(678, 688), value='GNUPGHOME'),
  ]),
])


4773) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(693, 718), parts=[
  WordNode(pos=(693, 698), word='mkdir'),
  WordNode(pos=(699, 701), word='-p'),
  WordNode(pos=(702, 718), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(703, 717), value='RABBITMQ_HOME'),
  ]),
])


4774) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


4775) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(818, 842), parts=[
  WordNode(pos=(818, 820), word='rm'),
  WordNode(pos=(821, 824), word='-rf'),
  WordNode(pos=(825, 842), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(826, 840), value='RABBITMQ_PATH'),
  ]),
])


4776) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(845, 928), parts=[
  WordNode(pos=(845, 849), word='grep'),
  WordNode(pos=(850, 853), word='-qE'),
  WordNode(pos=(854, 888), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(889, 928), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(890, 904), value='RABBITMQ_HOME'),
  ]),
])


4777) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(931, 1010), parts=[
  WordNode(pos=(931, 934), word='sed'),
  WordNode(pos=(935, 937), word='-i'),
  WordNode(pos=(938, 970), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(971, 1010), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(972, 986), value='RABBITMQ_HOME'),
  ]),
])


4778) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1013, 1077), parts=[
  WordNode(pos=(1013, 1017), word='grep'),
  WordNode(pos=(1018, 1021), word='-qE'),
  WordNode(pos=(1022, 1037), word='^SYS_PREFIX=$'),
  WordNode(pos=(1038, 1077), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1039, 1053), value='RABBITMQ_HOME'),
  ]),
])


4779) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1080, 1123), parts=[
  WordNode(pos=(1080, 1085), word='chown'),
  WordNode(pos=(1086, 1088), word='-R'),
  WordNode(pos=(1089, 1106), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1107, 1123), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1108, 1122), value='RABBITMQ_HOME'),
  ]),
])


4780) apk del .build-deps

CommandNode(pos=(1127, 1146), parts=[
  WordNode(pos=(1127, 1130), word='apk'),
  WordNode(pos=(1131, 1134), word='del'),
  WordNode(pos=(1135, 1146), word='.build-deps'),
])


4781) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1150, 1194), parts=[
  WordNode(pos=(1150, 1151), word='['),
  WordNode(pos=(1152, 1153), word='!'),
  WordNode(pos=(1154, 1156), word='-e'),
  WordNode(pos=(1157, 1192), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1158, 1176), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1193, 1194), word=']'),
])


4782) su-exec rabbitmq rabbitmqctl help

CommandNode(pos=(1197, 1230), parts=[
  WordNode(pos=(1197, 1204), word='su-exec'),
  WordNode(pos=(1205, 1213), word='rabbitmq'),
  WordNode(pos=(1214, 1225), word='rabbitmqctl'),
  WordNode(pos=(1226, 1230), word='help'),
])


4783) su-exec rabbitmq rabbitmqctl list_ciphers

CommandNode(pos=(1233, 1274), parts=[
  WordNode(pos=(1233, 1240), word='su-exec'),
  WordNode(pos=(1241, 1249), word='rabbitmq'),
  WordNode(pos=(1250, 1261), word='rabbitmqctl'),
  WordNode(pos=(1262, 1274), word='list_ciphers'),
])


4784) su-exec rabbitmq rabbitmq-plugins list

CommandNode(pos=(1277, 1315), parts=[
  WordNode(pos=(1277, 1284), word='su-exec'),
  WordNode(pos=(1285, 1293), word='rabbitmq'),
  WordNode(pos=(1294, 1310), word='rabbitmq-plugins'),
  WordNode(pos=(1311, 1315), word='list'),
])


4785) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1318, 1356), parts=[
  WordNode(pos=(1318, 1320), word='rm'),
  WordNode(pos=(1321, 1356), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1322, 1340), value='RABBITMQ_DATA_DIR'),
  ]),
])


4786) ln -sf /opt/rabbitmq/plugins /plugins

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 6), word='-sf'),
  WordNode(pos=(7, 28), word='/opt/rabbitmq/plugins'),
  WordNode(pos=(29, 37), word='/plugins'),
])


4787) mkdir -p "$HTTPD_PREFIX"

CommandNode(pos=(0, 24), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 24), word='$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(10, 23), value='HTTPD_PREFIX'),
  ]),
])


4788) chown www-data:www-data "$HTTPD_PREFIX"

CommandNode(pos=(29, 68), parts=[
  WordNode(pos=(29, 34), word='chown'),
  WordNode(pos=(35, 52), word='www-data:www-data'),
  WordNode(pos=(53, 68), word='$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(54, 67), value='HTTPD_PREFIX'),
  ]),
])


4789) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4790) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


4791) apt-get install -y --no-install-recommends   libapr1-dev   libaprutil1-dev   libaprutil1-ldap

CommandNode(pos=(28, 121), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 84), word='libapr1-dev'),
  WordNode(pos=(87, 102), word='libaprutil1-dev'),
  WordNode(pos=(105, 121), word='libaprutil1-ldap'),
])


4792) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


4793) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4794) echo 'deb http://deb.debian.org/debian stretch-backports main' > /etc/apt/sources.list.d/stretch-backports.list

CommandNode(pos=(12, 123), parts=[
  WordNode(pos=(12, 16), word='echo'),
  WordNode(pos=(17, 74), word='deb http://deb.debian.org/debian stretch-backports main'),
  RedirectNode(output=
    WordNode(pos=(77, 123), word='/etc/apt/sources.list.d/stretch-backports.list'), pos=(75, 123), type='>'),
])


4795) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(126, 163), parts=[
  AssignmentNode(pos=(126, 163), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(142, 161), parts=[
        WordNode(pos=(142, 150), word='apt-mark'),
        WordNode(pos=(151, 161), word='showmanual'),
      ]), pos=(140, 162)),
  ]),
])


4796) apt-get update

CommandNode(pos=(166, 180), parts=[
  WordNode(pos=(166, 173), word='apt-get'),
  WordNode(pos=(174, 180), word='update'),
])


4797) apt-get install -y --no-install-recommends   bzip2   ca-certificates   dirmngr   dpkg-dev   gcc   gnupg   libbrotli-dev   libcurl4-openssl-dev   libjansson-dev   liblua5.2-dev   libnghttp2-dev   libpcre3-dev   libssl-dev   libxml2-dev   make   wget   zlib1g-dev

CommandNode(pos=(183, 444), parts=[
  WordNode(pos=(183, 190), word='apt-get'),
  WordNode(pos=(191, 198), word='install'),
  WordNode(pos=(199, 201), word='-y'),
  WordNode(pos=(202, 225), word='--no-install-recommends'),
  WordNode(pos=(228, 233), word='bzip2'),
  WordNode(pos=(236, 251), word='ca-certificates'),
  WordNode(pos=(254, 261), word='dirmngr'),
  WordNode(pos=(264, 272), word='dpkg-dev'),
  WordNode(pos=(275, 278), word='gcc'),
  WordNode(pos=(281, 286), word='gnupg'),
  WordNode(pos=(289, 302), word='libbrotli-dev'),
  WordNode(pos=(305, 325), word='libcurl4-openssl-dev'),
  WordNode(pos=(328, 342), word='libjansson-dev'),
  WordNode(pos=(345, 358), word='liblua5.2-dev'),
  WordNode(pos=(361, 375), word='libnghttp2-dev'),
  WordNode(pos=(378, 390), word='libpcre3-dev'),
  WordNode(pos=(393, 403), word='libssl-dev'),
  WordNode(pos=(406, 417), word='libxml2-dev'),
  WordNode(pos=(420, 424), word='make'),
  WordNode(pos=(427, 431), word='wget'),
  WordNode(pos=(434, 444), word='zlib1g-dev'),
])


4798) rm -r /var/lib/apt/lists/*

CommandNode(pos=(449, 475), parts=[
  WordNode(pos=(449, 451), word='rm'),
  WordNode(pos=(452, 454), word='-r'),
  WordNode(pos=(455, 475), word='/var/lib/apt/lists/*'),
])


4799) local f="$1"

CommandNode(pos=(491, 503), parts=[
  WordNode(pos=(491, 496), word='local'),
  WordNode(pos=(497, 503), word='f=$1', parts=[
    ParameterNode(pos=(500, 502), value='1'),
  ]),
])


4800) shift

CommandNode(pos=(505, 510), parts=[
  WordNode(pos=(505, 510), word='shift'),
])


4801) local distFile="$1"

CommandNode(pos=(514, 533), parts=[
  WordNode(pos=(514, 519), word='local'),
  WordNode(pos=(520, 533), word='distFile=$1', parts=[
    ParameterNode(pos=(530, 532), value='1'),
  ]),
])


4802) shift

CommandNode(pos=(535, 540), parts=[
  WordNode(pos=(535, 540), word='shift'),
])


4803) local success=

CommandNode(pos=(544, 558), parts=[
  WordNode(pos=(544, 549), word='local'),
  WordNode(pos=(550, 558), word='success='),
])


4804) local distUrl=

CommandNode(pos=(562, 576), parts=[
  WordNode(pos=(562, 567), word='local'),
  WordNode(pos=(568, 576), word='distUrl='),
])


4805) wget -O "$f" "$distUrl$distFile"

CommandNode(pos=(623, 655), parts=[
  WordNode(pos=(623, 627), word='wget'),
  WordNode(pos=(628, 630), word='-O'),
  WordNode(pos=(631, 635), word='$f', parts=[
    ParameterNode(pos=(632, 634), value='f'),
  ]),
  WordNode(pos=(636, 655), word='$distUrl$distFile', parts=[
    ParameterNode(pos=(637, 645), value='distUrl'),
    ParameterNode(pos=(645, 654), value='distFile'),
  ]),
])


4806) [ -s "$f" ]

CommandNode(pos=(659, 670), parts=[
  WordNode(pos=(659, 660), word='['),
  WordNode(pos=(661, 663), word='-s'),
  WordNode(pos=(664, 668), word='$f', parts=[
    ParameterNode(pos=(665, 667), value='f'),
  ]),
  WordNode(pos=(669, 670), word=']'),
])


4807) success=1

CommandNode(pos=(681, 690), parts=[
  AssignmentNode(pos=(681, 690), word='success=1'),
])


4808) break

CommandNode(pos=(696, 701), parts=[
  WordNode(pos=(696, 701), word='break'),
])


4809) [ -n "$success" ]

CommandNode(pos=(720, 737), parts=[
  WordNode(pos=(720, 721), word='['),
  WordNode(pos=(722, 724), word='-n'),
  WordNode(pos=(725, 735), word='$success', parts=[
    ParameterNode(pos=(726, 734), value='success'),
  ]),
  WordNode(pos=(736, 737), word=']'),
])


4810) ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2"

CommandNode(pos=(745, 803), parts=[
  WordNode(pos=(745, 750), word='ddist'),
  WordNode(pos=(751, 766), word='httpd.tar.bz2'),
  WordNode(pos=(767, 803), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(780, 794), value='HTTPD_VERSION'),
  ]),
])


4811) echo "$HTTPD_SHA256 *httpd.tar.bz2"

CommandNode(pos=(806, 841), parts=[
  WordNode(pos=(806, 810), word='echo'),
  WordNode(pos=(811, 841), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
    ParameterNode(pos=(812, 825), value='HTTPD_SHA256'),
  ]),
])


4812) sha256sum -c -

CommandNode(pos=(844, 858), parts=[
  WordNode(pos=(844, 853), word='sha256sum'),
  WordNode(pos=(854, 856), word='-c'),
  WordNode(pos=(857, 858), word='-'),
])


4813) ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc"

CommandNode(pos=(862, 928), parts=[
  WordNode(pos=(862, 867), word='ddist'),
  WordNode(pos=(868, 887), word='httpd.tar.bz2.asc'),
  WordNode(pos=(888, 928), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
    ParameterNode(pos=(901, 915), value='HTTPD_VERSION'),
  ]),
])


4814) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(931, 962), parts=[
  WordNode(pos=(931, 937), word='export'),
  WordNode(pos=(938, 962), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(951, 960), parts=[
        WordNode(pos=(951, 957), word='mktemp'),
        WordNode(pos=(958, 960), word='-d'),
      ]), pos=(949, 961)),
  ]),
])


4815) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(1070, 1139), parts=[
  WordNode(pos=(1070, 1073), word='gpg'),
  WordNode(pos=(1074, 1081), word='--batch'),
  WordNode(pos=(1082, 1093), word='--keyserver'),
  WordNode(pos=(1094, 1120), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(1121, 1132), word='--recv-keys'),
  WordNode(pos=(1133, 1139), word='$key', parts=[
    ParameterNode(pos=(1134, 1138), value='key'),
  ]),
])


4816) gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2

CommandNode(pos=(1149, 1201), parts=[
  WordNode(pos=(1149, 1152), word='gpg'),
  WordNode(pos=(1153, 1160), word='--batch'),
  WordNode(pos=(1161, 1169), word='--verify'),
  WordNode(pos=(1170, 1187), word='httpd.tar.bz2.asc'),
  WordNode(pos=(1188, 1201), word='httpd.tar.bz2'),
])


4817) command -v gpgconf

CommandNode(pos=(1204, 1222), parts=[
  WordNode(pos=(1204, 1211), word='command'),
  WordNode(pos=(1212, 1214), word='-v'),
  WordNode(pos=(1215, 1222), word='gpgconf'),
])


4818) gpgconf --kill all

CommandNode(pos=(1226, 1244), parts=[
  WordNode(pos=(1226, 1233), word='gpgconf'),
  WordNode(pos=(1234, 1240), word='--kill'),
  WordNode(pos=(1241, 1244), word='all'),
])


4819) :

CommandNode(pos=(1248, 1249), parts=[
  WordNode(pos=(1248, 1249), word=':'),
])


4820) rm -rf "$GNUPGHOME" httpd.tar.bz2.asc

CommandNode(pos=(1252, 1289), parts=[
  WordNode(pos=(1252, 1254), word='rm'),
  WordNode(pos=(1255, 1258), word='-rf'),
  WordNode(pos=(1259, 1271), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1260, 1270), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1272, 1289), word='httpd.tar.bz2.asc'),
])


4821) mkdir -p src

CommandNode(pos=(1293, 1305), parts=[
  WordNode(pos=(1293, 1298), word='mkdir'),
  WordNode(pos=(1299, 1301), word='-p'),
  WordNode(pos=(1302, 1305), word='src'),
])


4822) tar -xf httpd.tar.bz2 -C src --strip-components=1

CommandNode(pos=(1308, 1357), parts=[
  WordNode(pos=(1308, 1311), word='tar'),
  WordNode(pos=(1312, 1315), word='-xf'),
  WordNode(pos=(1316, 1329), word='httpd.tar.bz2'),
  WordNode(pos=(1330, 1332), word='-C'),
  WordNode(pos=(1333, 1336), word='src'),
  WordNode(pos=(1337, 1357), word='--strip-components=1'),
])


4823) rm httpd.tar.bz2

CommandNode(pos=(1360, 1376), parts=[
  WordNode(pos=(1360, 1362), word='rm'),
  WordNode(pos=(1363, 1376), word='httpd.tar.bz2'),
])


4824) cd src

CommandNode(pos=(1379, 1385), parts=[
  WordNode(pos=(1379, 1381), word='cd'),
  WordNode(pos=(1382, 1385), word='src'),
])


4825) [ "$#" -gt 0 ]

CommandNode(pos=(1409, 1423), parts=[
  WordNode(pos=(1409, 1410), word='['),
  WordNode(pos=(1411, 1415), word='$#', parts=[
    ParameterNode(pos=(1412, 1414), value='#'),
  ]),
  WordNode(pos=(1416, 1419), word='-gt'),
  WordNode(pos=(1420, 1421), word='0'),
  WordNode(pos=(1422, 1423), word=']'),
])


4826) local patchFile="$1"

CommandNode(pos=(1431, 1451), parts=[
  WordNode(pos=(1431, 1436), word='local'),
  WordNode(pos=(1437, 1451), word='patchFile=$1', parts=[
    ParameterNode(pos=(1448, 1450), value='1'),
  ]),
])


4827) shift

CommandNode(pos=(1453, 1458), parts=[
  WordNode(pos=(1453, 1458), word='shift'),
])


4828) local patchSha256="$1"

CommandNode(pos=(1463, 1485), parts=[
  WordNode(pos=(1463, 1468), word='local'),
  WordNode(pos=(1469, 1485), word='patchSha256=$1', parts=[
    ParameterNode(pos=(1482, 1484), value='1'),
  ]),
])


4829) shift

CommandNode(pos=(1487, 1492), parts=[
  WordNode(pos=(1487, 1492), word='shift'),
])


4830) ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile"

CommandNode(pos=(1497, 1566), parts=[
  WordNode(pos=(1497, 1502), word='ddist'),
  WordNode(pos=(1503, 1515), word='$patchFile', parts=[
    ParameterNode(pos=(1504, 1514), value='patchFile'),
  ]),
  WordNode(pos=(1516, 1566), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
    ParameterNode(pos=(1540, 1554), value='HTTPD_VERSION'),
    ParameterNode(pos=(1555, 1565), value='patchFile'),
  ]),
])


4831) echo "$patchSha256 *$patchFile"

CommandNode(pos=(1571, 1602), parts=[
  WordNode(pos=(1571, 1575), word='echo'),
  WordNode(pos=(1576, 1602), word='$patchSha256 *$patchFile', parts=[
    ParameterNode(pos=(1577, 1589), value='patchSha256'),
    ParameterNode(pos=(1591, 1601), value='patchFile'),
  ]),
])


4832) sha256sum -c -

CommandNode(pos=(1605, 1619), parts=[
  WordNode(pos=(1605, 1614), word='sha256sum'),
  WordNode(pos=(1615, 1617), word='-c'),
  WordNode(pos=(1618, 1619), word='-'),
])


4833) patch -p0 < "$patchFile"

CommandNode(pos=(1624, 1648), parts=[
  WordNode(pos=(1624, 1629), word='patch'),
  WordNode(pos=(1630, 1633), word='-p0'),
  RedirectNode(output=
    WordNode(pos=(1636, 1648), word='$patchFile', parts=[
      ParameterNode(pos=(1637, 1647), value='patchFile'),
    ]), pos=(1634, 1648), type='<'),
])


4834) rm -f "$patchFile"

CommandNode(pos=(1653, 1671), parts=[
  WordNode(pos=(1653, 1655), word='rm'),
  WordNode(pos=(1656, 1658), word='-f'),
  WordNode(pos=(1659, 1671), word='$patchFile', parts=[
    ParameterNode(pos=(1660, 1670), value='patchFile'),
  ]),
])


4835) patches $HTTPD_PATCHES

CommandNode(pos=(1686, 1708), parts=[
  WordNode(pos=(1686, 1693), word='patches'),
  WordNode(pos=(1694, 1708), word='$HTTPD_PATCHES', parts=[
    ParameterNode(pos=(1694, 1708), value='HTTPD_PATCHES'),
  ]),
])


4836) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1712, 1769), parts=[
  AssignmentNode(pos=(1712, 1769), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1723, 1767), parts=[
        WordNode(pos=(1723, 1740), word='dpkg-architecture'),
        WordNode(pos=(1741, 1748), word='--query'),
        WordNode(pos=(1749, 1767), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1721, 1768)),
  ]),
])


4837) ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all

CommandNode(pos=(1772, 1891), parts=[
  WordNode(pos=(1772, 1783), word='./configure'),
  WordNode(pos=(1786, 1804), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1795, 1803), value='gnuArch'),
  ]),
  WordNode(pos=(1807, 1831), word='--prefix=$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(1817, 1830), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(1834, 1864), word='--enable-mods-shared=reallyall'),
  WordNode(pos=(1867, 1891), word='--enable-mpms-shared=all'),
])


4838) make -j "$(nproc)"

CommandNode(pos=(1896, 1914), parts=[
  WordNode(pos=(1896, 1900), word='make'),
  WordNode(pos=(1901, 1903), word='-j'),
  WordNode(pos=(1904, 1914), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1907, 1912), parts=[
        WordNode(pos=(1907, 1912), word='nproc'),
      ]), pos=(1905, 1913)),
  ]),
])


4839) make install

CommandNode(pos=(1917, 1929), parts=[
  WordNode(pos=(1917, 1921), word='make'),
  WordNode(pos=(1922, 1929), word='install'),
])


4840) cd ..

CommandNode(pos=(1933, 1938), parts=[
  WordNode(pos=(1933, 1935), word='cd'),
  WordNode(pos=(1936, 1938), word='..'),
])


4841) rm -r src man manual

CommandNode(pos=(1941, 1961), parts=[
  WordNode(pos=(1941, 1943), word='rm'),
  WordNode(pos=(1944, 1946), word='-r'),
  WordNode(pos=(1947, 1950), word='src'),
  WordNode(pos=(1951, 1954), word='man'),
  WordNode(pos=(1955, 1961), word='manual'),
])


4842) sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"

CommandNode(pos=(1965, 2207), parts=[
  WordNode(pos=(1965, 1968), word='sed'),
  WordNode(pos=(1969, 1972), word='-ri'),
  WordNode(pos=(1975, 1977), word='-e'),
  WordNode(pos=(1978, 2024), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(2027, 2029), word='-e'),
  WordNode(pos=(2030, 2075), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
  WordNode(pos=(2078, 2080), word='-e'),
  WordNode(pos=(2081, 2129), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(2132, 2163), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
    ParameterNode(pos=(2133, 2146), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(2166, 2207), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
    ParameterNode(pos=(2167, 2180), value='HTTPD_PREFIX'),
  ]),
])


4843) apt-mark auto '.*' > /dev/null

CommandNode(pos=(2213, 2243), parts=[
  WordNode(pos=(2213, 2221), word='apt-mark'),
  WordNode(pos=(2222, 2226), word='auto'),
  WordNode(pos=(2227, 2231), word='.*'),
  RedirectNode(output=
    WordNode(pos=(2234, 2243), word='/dev/null'), pos=(2232, 2243), type='>'),
])


4844) [ -z "$savedAptMark" ]

CommandNode(pos=(2246, 2268), parts=[
  WordNode(pos=(2246, 2247), word='['),
  WordNode(pos=(2248, 2250), word='-z'),
  WordNode(pos=(2251, 2266), word='$savedAptMark', parts=[
    ParameterNode(pos=(2252, 2265), value='savedAptMark'),
  ]),
  WordNode(pos=(2267, 2268), word=']'),
])


4845) apt-mark manual $savedAptMark

CommandNode(pos=(2272, 2301), parts=[
  WordNode(pos=(2272, 2280), word='apt-mark'),
  WordNode(pos=(2281, 2287), word='manual'),
  WordNode(pos=(2288, 2301), word='$savedAptMark', parts=[
    ParameterNode(pos=(2288, 2301), value='savedAptMark'),
  ]),
])


4846) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(2304, 2358), parts=[
  WordNode(pos=(2304, 2308), word='find'),
  WordNode(pos=(2309, 2319), word='/usr/local'),
  WordNode(pos=(2320, 2325), word='-type'),
  WordNode(pos=(2326, 2327), word='f'),
  WordNode(pos=(2328, 2339), word='-executable'),
  WordNode(pos=(2340, 2345), word='-exec'),
  WordNode(pos=(2346, 2349), word='ldd'),
  WordNode(pos=(2350, 2354), word='{}'),
  WordNode(pos=(2355, 2358), word=';'),
])


4847) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(2363, 2391), parts=[
  WordNode(pos=(2363, 2366), word='awk'),
  WordNode(pos=(2367, 2391), word='/=>/ { print $(NF-1) }'),
])


4848) sort -u

CommandNode(pos=(2396, 2403), parts=[
  WordNode(pos=(2396, 2400), word='sort'),
  WordNode(pos=(2401, 2403), word='-u'),
])


4849) xargs -r dpkg-query --search

CommandNode(pos=(2408, 2436), parts=[
  WordNode(pos=(2408, 2413), word='xargs'),
  WordNode(pos=(2414, 2416), word='-r'),
  WordNode(pos=(2417, 2427), word='dpkg-query'),
  WordNode(pos=(2428, 2436), word='--search'),
])


4850) cut -d: -f1

CommandNode(pos=(2441, 2452), parts=[
  WordNode(pos=(2441, 2444), word='cut'),
  WordNode(pos=(2445, 2448), word='-d:'),
  WordNode(pos=(2449, 2452), word='-f1'),
])


4851) sort -u

CommandNode(pos=(2457, 2464), parts=[
  WordNode(pos=(2457, 2461), word='sort'),
  WordNode(pos=(2462, 2464), word='-u'),
])


4852) xargs -r apt-mark manual

CommandNode(pos=(2469, 2493), parts=[
  WordNode(pos=(2469, 2474), word='xargs'),
  WordNode(pos=(2475, 2477), word='-r'),
  WordNode(pos=(2478, 2486), word='apt-mark'),
  WordNode(pos=(2487, 2493), word='manual'),
])


4853) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(2498, 2574), parts=[
  WordNode(pos=(2498, 2505), word='apt-get'),
  WordNode(pos=(2506, 2511), word='purge'),
  WordNode(pos=(2512, 2514), word='-y'),
  WordNode(pos=(2515, 2528), word='--auto-remove'),
  WordNode(pos=(2529, 2531), word='-o'),
  WordNode(pos=(2532, 2574), word='APT::AutoRemove::RecommendsImportant=false'),
])


4854) httpd -v

CommandNode(pos=(2578, 2586), parts=[
  WordNode(pos=(2578, 2583), word='httpd'),
  WordNode(pos=(2584, 2586), word='-v'),
])


4855) apk add --no-cache   bash   sed

CommandNode(pos=(0, 31), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='bash'),
  WordNode(pos=(28, 31), word='sed'),
])


4856) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4857) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev

CommandNode(pos=(11, 117), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
])


4858) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(123, 191), parts=[
  WordNode(pos=(123, 147), word='docker-php-ext-configure'),
  WordNode(pos=(148, 150), word='gd'),
  WordNode(pos=(151, 170), word='--with-png-dir=/usr'),
  WordNode(pos=(171, 191), word='--with-jpeg-dir=/usr'),
])


4859) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(194, 262), parts=[
  WordNode(pos=(194, 216), word='docker-php-ext-install'),
  WordNode(pos=(219, 225), word='bcmath'),
  WordNode(pos=(228, 232), word='exif'),
  WordNode(pos=(235, 237), word='gd'),
  WordNode(pos=(240, 246), word='mysqli'),
  WordNode(pos=(249, 256), word='opcache'),
  WordNode(pos=(259, 262), word='zip'),
])


4860) pecl install imagick-3.4.4

CommandNode(pos=(267, 293), parts=[
  WordNode(pos=(267, 271), word='pecl'),
  WordNode(pos=(272, 279), word='install'),
  WordNode(pos=(280, 293), word='imagick-3.4.4'),
])


4861) docker-php-ext-enable imagick

CommandNode(pos=(296, 325), parts=[
  WordNode(pos=(296, 317), word='docker-php-ext-enable'),
  WordNode(pos=(318, 325), word='imagick'),
])


4862) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


4863) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(548, 601), parts=[
  WordNode(pos=(548, 551), word='apk'),
  WordNode(pos=(552, 555), word='add'),
  WordNode(pos=(556, 565), word='--virtual'),
  WordNode(pos=(566, 592), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(593, 601), word='$runDeps', parts=[
    ParameterNode(pos=(593, 601), value='runDeps'),
  ]),
])


4864) apk del .build-deps

CommandNode(pos=(604, 623), parts=[
  WordNode(pos=(604, 607), word='apk'),
  WordNode(pos=(608, 611), word='del'),
  WordNode(pos=(612, 623), word='.build-deps'),
])


4865) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


4866) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


4867) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


4868) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


4869) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


4870) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


4871) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


4872) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


4873) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


4874) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


4875) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


4876) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


4877) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


4878) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


4879) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


4880) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4881) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


4882) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


4883) sha1sum -c -

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 154), word='sha1sum'),
  WordNode(pos=(155, 157), word='-c'),
  WordNode(pos=(158, 159), word='-'),
])


4884) tar -xzf wordpress.tar.gz -C /usr/src/

CommandNode(pos=(162, 200), parts=[
  WordNode(pos=(162, 165), word='tar'),
  WordNode(pos=(166, 170), word='-xzf'),
  WordNode(pos=(171, 187), word='wordpress.tar.gz'),
  WordNode(pos=(188, 190), word='-C'),
  WordNode(pos=(191, 200), word='/usr/src/'),
])


4885) rm wordpress.tar.gz

CommandNode(pos=(203, 222), parts=[
  WordNode(pos=(203, 205), word='rm'),
  WordNode(pos=(206, 222), word='wordpress.tar.gz'),
])


4886) chown -R www-data:www-data /usr/src/wordpress

CommandNode(pos=(225, 270), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 233), word='-R'),
  WordNode(pos=(234, 251), word='www-data:www-data'),
  WordNode(pos=(252, 270), word='/usr/src/wordpress'),
])


4887) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4888) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


4889) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


4890) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


4891) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


4892) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4893) groupadd -r postgres --gid=999

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 22), word='-r'),
  WordNode(pos=(23, 31), word='postgres'),
  WordNode(pos=(32, 41), word='--gid=999'),
])


4894) useradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres

CommandNode(pos=(44, 134), parts=[
  WordNode(pos=(44, 51), word='useradd'),
  WordNode(pos=(52, 54), word='-r'),
  WordNode(pos=(55, 57), word='-g'),
  WordNode(pos=(58, 66), word='postgres'),
  WordNode(pos=(67, 76), word='--uid=999'),
  WordNode(pos=(77, 107), word='--home-dir=/var/lib/postgresql'),
  WordNode(pos=(108, 125), word='--shell=/bin/bash'),
  WordNode(pos=(126, 134), word='postgres'),
])


4895) mkdir -p /var/lib/postgresql

CommandNode(pos=(137, 165), parts=[
  WordNode(pos=(137, 142), word='mkdir'),
  WordNode(pos=(143, 145), word='-p'),
  WordNode(pos=(146, 165), word='/var/lib/postgresql'),
])


4896) chown -R postgres:postgres /var/lib/postgresql

CommandNode(pos=(168, 214), parts=[
  WordNode(pos=(168, 173), word='chown'),
  WordNode(pos=(174, 176), word='-R'),
  WordNode(pos=(177, 194), word='postgres:postgres'),
  WordNode(pos=(195, 214), word='/var/lib/postgresql'),
])


4897) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


4898) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


4899) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


4900) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


4901) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


4902) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


4903) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


4904) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


4905) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


4906) command -v gpgconf > /dev/null

CommandNode(pos=(613, 643), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(634, 643), word='/dev/null'), pos=(632, 643), type='>'),
])


4907) gpgconf --kill all

CommandNode(pos=(647, 665), parts=[
  WordNode(pos=(647, 654), word='gpgconf'),
  WordNode(pos=(655, 661), word='--kill'),
  WordNode(pos=(662, 665), word='all'),
])


4908) :

CommandNode(pos=(669, 670), parts=[
  WordNode(pos=(669, 670), word=':'),
])


4909) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


4910) chmod +x /usr/local/bin/gosu

CommandNode(pos=(726, 754), parts=[
  WordNode(pos=(726, 731), word='chmod'),
  WordNode(pos=(732, 734), word='+x'),
  WordNode(pos=(735, 754), word='/usr/local/bin/gosu'),
])


4911) gosu nobody true

CommandNode(pos=(759, 775), parts=[
  WordNode(pos=(759, 763), word='gosu'),
  WordNode(pos=(764, 770), word='nobody'),
  WordNode(pos=(771, 775), word='true'),
])


4912) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(780, 831), parts=[
  WordNode(pos=(780, 787), word='apt-get'),
  WordNode(pos=(788, 793), word='purge'),
  WordNode(pos=(794, 796), word='-y'),
  WordNode(pos=(797, 810), word='--auto-remove'),
  WordNode(pos=(811, 826), word='ca-certificates'),
  WordNode(pos=(827, 831), word='wget'),
])


4913) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4914) [ -f /etc/dpkg/dpkg.cfg.d/docker ]

CommandNode(pos=(14, 48), parts=[
  WordNode(pos=(14, 15), word='['),
  WordNode(pos=(16, 18), word='-f'),
  WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
  WordNode(pos=(47, 48), word=']'),
])


4915) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(57, 112), parts=[
  WordNode(pos=(57, 61), word='grep'),
  WordNode(pos=(62, 64), word='-q'),
  WordNode(pos=(65, 84), word='/usr/share/locale'),
  WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


4916) sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(116, 177), parts=[
  WordNode(pos=(116, 119), word='sed'),
  WordNode(pos=(120, 123), word='-ri'),
  WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
  WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


4917) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(183, 238), parts=[
  WordNode(pos=(183, 187), word='grep'),
  WordNode(pos=(188, 190), word='-q'),
  WordNode(pos=(191, 210), word='/usr/share/locale'),
  WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


4918) apt-get update

CommandNode(pos=(246, 260), parts=[
  WordNode(pos=(246, 253), word='apt-get'),
  WordNode(pos=(254, 260), word='update'),
])


4919) apt-get install -y locales

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 269), word='apt-get'),
  WordNode(pos=(270, 277), word='install'),
  WordNode(pos=(278, 280), word='-y'),
  WordNode(pos=(281, 288), word='locales'),
])


4920) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(290, 317), parts=[
  WordNode(pos=(290, 292), word='rm'),
  WordNode(pos=(293, 296), word='-rf'),
  WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
])


4921) localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

CommandNode(pos=(320, 396), parts=[
  WordNode(pos=(320, 329), word='localedef'),
  WordNode(pos=(330, 332), word='-i'),
  WordNode(pos=(333, 338), word='en_US'),
  WordNode(pos=(339, 341), word='-c'),
  WordNode(pos=(342, 344), word='-f'),
  WordNode(pos=(345, 350), word='UTF-8'),
  WordNode(pos=(351, 353), word='-A'),
  WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
  WordNode(pos=(385, 396), word='en_US.UTF-8'),
])


4922) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4923) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


4924) apt-get install -y --no-install-recommends libnss-wrapper

CommandNode(pos=(28, 85), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 85), word='libnss-wrapper'),
])


4925) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(88, 115), parts=[
  WordNode(pos=(88, 90), word='rm'),
  WordNode(pos=(91, 94), word='-rf'),
  WordNode(pos=(95, 115), word='/var/lib/apt/lists/*'),
])


4926) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


4927) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4928) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


4929) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


4930) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


4931) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


4932) command -v gpgconf > /dev/null

CommandNode(pos=(233, 263), parts=[
  WordNode(pos=(233, 240), word='command'),
  WordNode(pos=(241, 243), word='-v'),
  WordNode(pos=(244, 251), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(254, 263), word='/dev/null'), pos=(252, 263), type='>'),
])


4933) gpgconf --kill all

CommandNode(pos=(267, 285), parts=[
  WordNode(pos=(267, 274), word='gpgconf'),
  WordNode(pos=(275, 281), word='--kill'),
  WordNode(pos=(282, 285), word='all'),
])


4934) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


4935) apt-key list

CommandNode(pos=(310, 322), parts=[
  WordNode(pos=(310, 317), word='apt-key'),
  WordNode(pos=(318, 322), word='list'),
])


4936) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


4937) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


4938) cp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(158, 258), parts=[
  WordNode(pos=(158, 160), word='cp'),
  WordNode(pos=(161, 163), word='-v'),
  WordNode(pos=(164, 213), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(214, 258), word='/usr/share/postgresql/postgresql.conf.sample'),
])


4939) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


4940) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(331, 431), parts=[
  WordNode(pos=(331, 334), word='sed'),
  WordNode(pos=(335, 338), word='-ri'),
  WordNode(pos=(339, 386), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(387, 431), word='/usr/share/postgresql/postgresql.conf.sample'),
])


4941) grep -F "listen_addresses = '*'" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(434, 511), parts=[
  WordNode(pos=(434, 438), word='grep'),
  WordNode(pos=(439, 441), word='-F'),
  WordNode(pos=(442, 466), word="listen_addresses = '*'"),
  WordNode(pos=(467, 511), word='/usr/share/postgresql/postgresql.conf.sample'),
])


4942) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


4943) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


4944) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


4945) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


4946) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


4947) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


4948) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


4949) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


4950) apt-get install -y --no-install-recommends   bzip2   ca-certificates   libffi-dev   libgdbm3   libgmp-dev   libssl-dev   libyaml-dev   procps   zlib1g-dev

CommandNode(pos=(19, 173), parts=[
  WordNode(pos=(19, 26), word='apt-get'),
  WordNode(pos=(27, 34), word='install'),
  WordNode(pos=(35, 37), word='-y'),
  WordNode(pos=(38, 61), word='--no-install-recommends'),
  WordNode(pos=(64, 69), word='bzip2'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(90, 100), word='libffi-dev'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 124), word='libgmp-dev'),
  WordNode(pos=(127, 137), word='libssl-dev'),
  WordNode(pos=(140, 151), word='libyaml-dev'),
  WordNode(pos=(154, 160), word='procps'),
  WordNode(pos=(163, 173), word='zlib1g-dev'),
])


4951) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(178, 205), parts=[
  WordNode(pos=(178, 180), word='rm'),
  WordNode(pos=(181, 184), word='-rf'),
  WordNode(pos=(185, 205), word='/var/lib/apt/lists/*'),
])


4952) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


4953) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


4954) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


4955) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4956) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


4957) apt-get update

CommandNode(pos=(55, 69), parts=[
  WordNode(pos=(55, 62), word='apt-get'),
  WordNode(pos=(63, 69), word='update'),
])


4958) apt-get install -y --no-install-recommends   autoconf   bison   dpkg-dev   gcc   libbz2-dev   libgdbm-dev   libglib2.0-dev   libncurses-dev   libreadline-dev   libxml2-dev   libxslt-dev   make   ruby   wget   xz-utils

CommandNode(pos=(73, 290), parts=[
  WordNode(pos=(73, 80), word='apt-get'),
  WordNode(pos=(81, 88), word='install'),
  WordNode(pos=(89, 91), word='-y'),
  WordNode(pos=(92, 115), word='--no-install-recommends'),
  WordNode(pos=(118, 126), word='autoconf'),
  WordNode(pos=(129, 134), word='bison'),
  WordNode(pos=(137, 145), word='dpkg-dev'),
  WordNode(pos=(148, 151), word='gcc'),
  WordNode(pos=(154, 164), word='libbz2-dev'),
  WordNode(pos=(167, 178), word='libgdbm-dev'),
  WordNode(pos=(181, 195), word='libglib2.0-dev'),
  WordNode(pos=(198, 212), word='libncurses-dev'),
  WordNode(pos=(215, 230), word='libreadline-dev'),
  WordNode(pos=(233, 244), word='libxml2-dev'),
  WordNode(pos=(247, 258), word='libxslt-dev'),
  WordNode(pos=(261, 265), word='make'),
  WordNode(pos=(268, 272), word='ruby'),
  WordNode(pos=(275, 279), word='wget'),
  WordNode(pos=(282, 290), word='xz-utils'),
])


4959) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(295, 322), parts=[
  WordNode(pos=(295, 297), word='rm'),
  WordNode(pos=(298, 301), word='-rf'),
  WordNode(pos=(302, 322), word='/var/lib/apt/lists/*'),
])


4960) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


4961) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


4962) sha256sum -c -

CommandNode(pos=(479, 493), parts=[
  WordNode(pos=(479, 488), word='sha256sum'),
  WordNode(pos=(489, 491), word='-c'),
  WordNode(pos=(492, 493), word='-'),
])


4963) mkdir -p /usr/src/ruby

CommandNode(pos=(499, 521), parts=[
  WordNode(pos=(499, 504), word='mkdir'),
  WordNode(pos=(505, 507), word='-p'),
  WordNode(pos=(508, 521), word='/usr/src/ruby'),
])


4964) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(526, 584), parts=[
  WordNode(pos=(526, 529), word='tar'),
  WordNode(pos=(530, 534), word='-xJf'),
  WordNode(pos=(535, 546), word='ruby.tar.xz'),
  WordNode(pos=(547, 549), word='-C'),
  WordNode(pos=(550, 563), word='/usr/src/ruby'),
  WordNode(pos=(564, 584), word='--strip-components=1'),
])


4965) rm ruby.tar.xz

CommandNode(pos=(589, 603), parts=[
  WordNode(pos=(589, 591), word='rm'),
  WordNode(pos=(592, 603), word='ruby.tar.xz'),
])


4966) cd /usr/src/ruby

CommandNode(pos=(609, 625), parts=[
  WordNode(pos=(609, 611), word='cd'),
  WordNode(pos=(612, 625), word='/usr/src/ruby'),
])


4967) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(635, 669), parts=[
  WordNode(pos=(635, 639), word='echo'),
  WordNode(pos=(640, 669), word='#define ENABLE_PATH_CHECK 0'),
])


4968) echo

CommandNode(pos=(673, 677), parts=[
  WordNode(pos=(673, 677), word='echo'),
])


4969) cat file.c

CommandNode(pos=(681, 691), parts=[
  WordNode(pos=(681, 684), word='cat'),
  WordNode(pos=(685, 691), word='file.c'),
])


4970) mv file.c.new file.c

CommandNode(pos=(713, 733), parts=[
  WordNode(pos=(713, 715), word='mv'),
  WordNode(pos=(716, 726), word='file.c.new'),
  WordNode(pos=(727, 733), word='file.c'),
])


4971) autoconf

CommandNode(pos=(739, 747), parts=[
  WordNode(pos=(739, 747), word='autoconf'),
])


4972) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


4973) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


4974) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


4975) make install

CommandNode(pos=(916, 928), parts=[
  WordNode(pos=(916, 920), word='make'),
  WordNode(pos=(921, 928), word='install'),
])


4976) apt-mark auto '.*' > /dev/null

CommandNode(pos=(934, 964), parts=[
  WordNode(pos=(934, 942), word='apt-mark'),
  WordNode(pos=(943, 947), word='auto'),
  WordNode(pos=(948, 952), word='.*'),
  RedirectNode(output=
    WordNode(pos=(955, 964), word='/dev/null'), pos=(953, 964), type='>'),
])


4977) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


4978) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec ldd '{}' ';'

CommandNode(pos=(1003, 1086), parts=[
  WordNode(pos=(1003, 1007), word='find'),
  WordNode(pos=(1008, 1018), word='/usr/local'),
  WordNode(pos=(1019, 1024), word='-type'),
  WordNode(pos=(1025, 1026), word='f'),
  WordNode(pos=(1027, 1038), word='-executable'),
  WordNode(pos=(1039, 1043), word='-not'),
  WordNode(pos=(1044, 1046), word='('),
  WordNode(pos=(1047, 1052), word='-name'),
  WordNode(pos=(1053, 1064), word='*tkinter*'),
  WordNode(pos=(1065, 1067), word=')'),
  WordNode(pos=(1068, 1073), word='-exec'),
  WordNode(pos=(1074, 1077), word='ldd'),
  WordNode(pos=(1078, 1082), word='{}'),
  WordNode(pos=(1083, 1086), word=';'),
])


4979) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1091, 1119), parts=[
  WordNode(pos=(1091, 1094), word='awk'),
  WordNode(pos=(1095, 1119), word='/=>/ { print $(NF-1) }'),
])


4980) sort -u

CommandNode(pos=(1124, 1131), parts=[
  WordNode(pos=(1124, 1128), word='sort'),
  WordNode(pos=(1129, 1131), word='-u'),
])


4981) xargs -r dpkg-query --search

CommandNode(pos=(1136, 1164), parts=[
  WordNode(pos=(1136, 1141), word='xargs'),
  WordNode(pos=(1142, 1144), word='-r'),
  WordNode(pos=(1145, 1155), word='dpkg-query'),
  WordNode(pos=(1156, 1164), word='--search'),
])


4982) cut -d: -f1

CommandNode(pos=(1169, 1180), parts=[
  WordNode(pos=(1169, 1172), word='cut'),
  WordNode(pos=(1173, 1176), word='-d:'),
  WordNode(pos=(1177, 1180), word='-f1'),
])


4983) sort -u

CommandNode(pos=(1185, 1192), parts=[
  WordNode(pos=(1185, 1189), word='sort'),
  WordNode(pos=(1190, 1192), word='-u'),
])


4984) xargs -r apt-mark manual

CommandNode(pos=(1197, 1221), parts=[
  WordNode(pos=(1197, 1202), word='xargs'),
  WordNode(pos=(1203, 1205), word='-r'),
  WordNode(pos=(1206, 1214), word='apt-mark'),
  WordNode(pos=(1215, 1221), word='manual'),
])


4985) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1226, 1302), parts=[
  WordNode(pos=(1226, 1233), word='apt-get'),
  WordNode(pos=(1234, 1239), word='purge'),
  WordNode(pos=(1240, 1242), word='-y'),
  WordNode(pos=(1243, 1256), word='--auto-remove'),
  WordNode(pos=(1257, 1259), word='-o'),
  WordNode(pos=(1260, 1302), word='APT::AutoRemove::RecommendsImportant=false'),
])


4986) cd /

CommandNode(pos=(1308, 1312), parts=[
  WordNode(pos=(1308, 1310), word='cd'),
  WordNode(pos=(1311, 1312), word='/'),
])


4987) rm -r /usr/src/ruby

CommandNode(pos=(1317, 1336), parts=[
  WordNode(pos=(1317, 1319), word='rm'),
  WordNode(pos=(1320, 1322), word='-r'),
  WordNode(pos=(1323, 1336), word='/usr/src/ruby'),
])


4988) ruby --version

CommandNode(pos=(1341, 1355), parts=[
  WordNode(pos=(1341, 1345), word='ruby'),
  WordNode(pos=(1346, 1355), word='--version'),
])


4989) gem --version

CommandNode(pos=(1359, 1372), parts=[
  WordNode(pos=(1359, 1362), word='gem'),
  WordNode(pos=(1363, 1372), word='--version'),
])


4990) bundle --version

CommandNode(pos=(1376, 1392), parts=[
  WordNode(pos=(1376, 1382), word='bundle'),
  WordNode(pos=(1383, 1392), word='--version'),
])


4991) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


4992) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


4993) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


4994) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


4995) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


4996) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


4997) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


4998) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


4999) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


5000) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


5001) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


5002) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


5003) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5004) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


5005) which gpg

CommandNode(pos=(32, 41), parts=[
  WordNode(pos=(32, 37), word='which'),
  WordNode(pos=(38, 41), word='gpg'),
])


5006) apt-get install -y --no-install-recommends gnupg

CommandNode(pos=(50, 98), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 65), word='install'),
  WordNode(pos=(66, 68), word='-y'),
  WordNode(pos=(69, 92), word='--no-install-recommends'),
  WordNode(pos=(93, 98), word='gnupg'),
])


5007) gpg --version

CommandNode(pos=(111, 124), parts=[
  WordNode(pos=(111, 114), word='gpg'),
  WordNode(pos=(115, 124), word='--version'),
])


5008) grep -q '^gpg (GnuPG) 1\.'

CommandNode(pos=(127, 153), parts=[
  WordNode(pos=(127, 131), word='grep'),
  WordNode(pos=(132, 134), word='-q'),
  WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
])


5009) apt-get install -y --no-install-recommends dirmngr

CommandNode(pos=(163, 213), parts=[
  WordNode(pos=(163, 170), word='apt-get'),
  WordNode(pos=(171, 178), word='install'),
  WordNode(pos=(179, 181), word='-y'),
  WordNode(pos=(182, 205), word='--no-install-recommends'),
  WordNode(pos=(206, 213), word='dirmngr'),
])


5010) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(221, 248), parts=[
  WordNode(pos=(221, 223), word='rm'),
  WordNode(pos=(224, 227), word='-rf'),
  WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
])


5011) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5012) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


5013) apt-get update

CommandNode(pos=(53, 67), parts=[
  WordNode(pos=(53, 60), word='apt-get'),
  WordNode(pos=(61, 67), word='update'),
])


5014) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


5015) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


5016) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


5017) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


5018) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


5019) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


5020) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(488, 591), parts=[
  WordNode(pos=(488, 491), word='gpg'),
  WordNode(pos=(492, 499), word='--batch'),
  WordNode(pos=(500, 511), word='--keyserver'),
  WordNode(pos=(512, 538), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(539, 550), word='--recv-keys'),
  WordNode(pos=(551, 591), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


5021) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(594, 658), parts=[
  WordNode(pos=(594, 597), word='gpg'),
  WordNode(pos=(598, 605), word='--batch'),
  WordNode(pos=(606, 614), word='--verify'),
  WordNode(pos=(615, 638), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(639, 658), word='/usr/local/bin/gosu'),
])


5022) command -v gpgconf > /dev/null

CommandNode(pos=(661, 691), parts=[
  WordNode(pos=(661, 668), word='command'),
  WordNode(pos=(669, 671), word='-v'),
  WordNode(pos=(672, 679), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(682, 691), word='/dev/null'), pos=(680, 691), type='>'),
])


5023) gpgconf --kill all

CommandNode(pos=(695, 713), parts=[
  WordNode(pos=(695, 702), word='gpgconf'),
  WordNode(pos=(703, 709), word='--kill'),
  WordNode(pos=(710, 713), word='all'),
])


5024) :

CommandNode(pos=(717, 718), parts=[
  WordNode(pos=(717, 718), word=':'),
])


5025) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


5026) chmod +x /usr/local/bin/gosu

CommandNode(pos=(767, 795), parts=[
  WordNode(pos=(767, 772), word='chmod'),
  WordNode(pos=(773, 775), word='+x'),
  WordNode(pos=(776, 795), word='/usr/local/bin/gosu'),
])


5027) gosu nobody true

CommandNode(pos=(798, 814), parts=[
  WordNode(pos=(798, 802), word='gosu'),
  WordNode(pos=(803, 809), word='nobody'),
  WordNode(pos=(810, 814), word='true'),
])


5028) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


5029) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


5030) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5031) apt-get install -y --no-install-recommends   apt-transport-https ca-certificates   pwgen   tzdata

CommandNode(pos=(18, 115), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 82), word='apt-transport-https'),
  WordNode(pos=(83, 98), word='ca-certificates'),
  WordNode(pos=(101, 106), word='pwgen'),
  WordNode(pos=(109, 115), word='tzdata'),
])


5032) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(120, 147), parts=[
  WordNode(pos=(120, 122), word='rm'),
  WordNode(pos=(123, 126), word='-rf'),
  WordNode(pos=(127, 147), word='/var/lib/apt/lists/*'),
])


5033) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5034) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


5035) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


5036) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


5037) command -v gpgconf > /dev/null

CommandNode(pos=(220, 250), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
])


5038) gpgconf --kill all

CommandNode(pos=(254, 272), parts=[
  WordNode(pos=(254, 261), word='gpgconf'),
  WordNode(pos=(262, 268), word='--kill'),
  WordNode(pos=(269, 272), word='all'),
])


5039) :

CommandNode(pos=(276, 277), parts=[
  WordNode(pos=(276, 277), word=':'),
])


5040) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


5041) apt-key list

CommandNode(pos=(301, 313), parts=[
  WordNode(pos=(301, 308), word='apt-key'),
  WordNode(pos=(309, 313), word='list'),
])


5042) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


5043) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 130), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 91), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(94, 130), word='/etc/apt/sources.list.d/mariadb.list'), pos=(92, 130), type='>'),
])


5044) echo 'Package: *'

CommandNode(pos=(137, 154), parts=[
  WordNode(pos=(137, 141), word='echo'),
  WordNode(pos=(142, 154), word='Package: *'),
])


5045) echo 'Pin: release o=MariaDB'

CommandNode(pos=(158, 187), parts=[
  WordNode(pos=(158, 162), word='echo'),
  WordNode(pos=(163, 187), word='Pin: release o=MariaDB'),
])


5046) echo 'Pin-Priority: 999'

CommandNode(pos=(191, 215), parts=[
  WordNode(pos=(191, 195), word='echo'),
  WordNode(pos=(196, 215), word='Pin-Priority: 999'),
])


5047) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5048) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


5049) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


5050) debconf-set-selections

CommandNode(pos=(193, 215), parts=[
  WordNode(pos=(193, 215), word='debconf-set-selections'),
])


5051) apt-get update

CommandNode(pos=(218, 232), parts=[
  WordNode(pos=(218, 225), word='apt-get'),
  WordNode(pos=(226, 232), word='update'),
])


5052) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   mariadb-backup   socat

CommandNode(pos=(235, 314), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 306), word='mariadb-backup'),
  WordNode(pos=(309, 314), word='socat'),
])


5053) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(319, 346), parts=[
  WordNode(pos=(319, 321), word='rm'),
  WordNode(pos=(322, 325), word='-rf'),
  WordNode(pos=(326, 346), word='/var/lib/apt/lists/*'),
])


5054) sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*

CommandNode(pos=(349, 410), parts=[
  WordNode(pos=(349, 352), word='sed'),
  WordNode(pos=(353, 356), word='-ri'),
  WordNode(pos=(357, 372), word='s/^user\\s/#&/'),
  WordNode(pos=(373, 390), word='/etc/mysql/my.cnf'),
  WordNode(pos=(391, 410), word='/etc/mysql/conf.d/*'),
])


5055) rm -rf /var/lib/mysql

CommandNode(pos=(413, 434), parts=[
  WordNode(pos=(413, 415), word='rm'),
  WordNode(pos=(416, 419), word='-rf'),
  WordNode(pos=(420, 434), word='/var/lib/mysql'),
])


5056) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(437, 476), parts=[
  WordNode(pos=(437, 442), word='mkdir'),
  WordNode(pos=(443, 445), word='-p'),
  WordNode(pos=(446, 460), word='/var/lib/mysql'),
  WordNode(pos=(461, 476), word='/var/run/mysqld'),
])


5057) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(479, 530), parts=[
  WordNode(pos=(479, 484), word='chown'),
  WordNode(pos=(485, 487), word='-R'),
  WordNode(pos=(488, 499), word='mysql:mysql'),
  WordNode(pos=(500, 514), word='/var/lib/mysql'),
  WordNode(pos=(515, 530), word='/var/run/mysqld'),
])


5058) chmod 777 /var/run/mysqld

CommandNode(pos=(533, 558), parts=[
  WordNode(pos=(533, 538), word='chmod'),
  WordNode(pos=(539, 542), word='777'),
  WordNode(pos=(543, 558), word='/var/run/mysqld'),
])


5059) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(561, 599), parts=[
  WordNode(pos=(561, 565), word='find'),
  WordNode(pos=(566, 577), word='/etc/mysql/'),
  WordNode(pos=(578, 583), word='-name'),
  WordNode(pos=(584, 591), word='*.cnf'),
  WordNode(pos=(592, 599), word='-print0'),
])


5060) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(604, 644), parts=[
  WordNode(pos=(604, 609), word='xargs'),
  WordNode(pos=(610, 612), word='-0'),
  WordNode(pos=(613, 617), word='grep'),
  WordNode(pos=(618, 622), word='-lZE'),
  WordNode(pos=(623, 644), word='^(bind-address|log)'),
])


5061) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(649, 697), parts=[
  WordNode(pos=(649, 654), word='xargs'),
  WordNode(pos=(655, 658), word='-rt'),
  WordNode(pos=(659, 661), word='-0'),
  WordNode(pos=(662, 665), word='sed'),
  WordNode(pos=(666, 669), word='-Ei'),
  WordNode(pos=(670, 697), word='s/^(bind-address|log)/#&/'),
])


5062) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(700, 782), parts=[
  WordNode(pos=(700, 704), word='echo'),
  WordNode(pos=(705, 751), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(754, 782), word='/etc/mysql/conf.d/docker.cnf'), pos=(752, 782), type='>'),
])


5063) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


5064) rabbitmq-plugins enable --offline rabbitmq_management

CommandNode(pos=(0, 53), parts=[
  WordNode(pos=(0, 16), word='rabbitmq-plugins'),
  WordNode(pos=(17, 23), word='enable'),
  WordNode(pos=(24, 33), word='--offline'),
  WordNode(pos=(34, 53), word='rabbitmq_management'),
])


5065) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5066) erl -noinput -eval '   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  ' -- /plugins/rabbitmq_management-*.ez > /usr/local/bin/rabbitmqadmin

CommandNode(pos=(11, 422), parts=[
  WordNode(pos=(11, 14), word='erl'),
  WordNode(pos=(15, 23), word='-noinput'),
  WordNode(pos=(24, 29), word='-eval'),
  WordNode(pos=(30, 354), word='   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  '),
  WordNode(pos=(355, 357), word='--'),
  WordNode(pos=(358, 391), word='/plugins/rabbitmq_management-*.ez'),
  RedirectNode(output=
    WordNode(pos=(394, 422), word='/usr/local/bin/rabbitmqadmin'), pos=(392, 422), type='>'),
])


5067) [ -s /usr/local/bin/rabbitmqadmin ]

CommandNode(pos=(425, 460), parts=[
  WordNode(pos=(425, 426), word='['),
  WordNode(pos=(427, 429), word='-s'),
  WordNode(pos=(430, 458), word='/usr/local/bin/rabbitmqadmin'),
  WordNode(pos=(459, 460), word=']'),
])


5068) chmod +x /usr/local/bin/rabbitmqadmin

CommandNode(pos=(463, 500), parts=[
  WordNode(pos=(463, 468), word='chmod'),
  WordNode(pos=(469, 471), word='+x'),
  WordNode(pos=(472, 500), word='/usr/local/bin/rabbitmqadmin'),
])


5069) apt-get update

CommandNode(pos=(503, 517), parts=[
  WordNode(pos=(503, 510), word='apt-get'),
  WordNode(pos=(511, 517), word='update'),
])


5070) apt-get install -y --no-install-recommends python

CommandNode(pos=(519, 568), parts=[
  WordNode(pos=(519, 526), word='apt-get'),
  WordNode(pos=(527, 534), word='install'),
  WordNode(pos=(535, 537), word='-y'),
  WordNode(pos=(538, 561), word='--no-install-recommends'),
  WordNode(pos=(562, 568), word='python'),
])


5071) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(570, 597), parts=[
  WordNode(pos=(570, 572), word='rm'),
  WordNode(pos=(573, 576), word='-rf'),
  WordNode(pos=(577, 597), word='/var/lib/apt/lists/*'),
])


5072) rabbitmqadmin --version

CommandNode(pos=(600, 623), parts=[
  WordNode(pos=(600, 613), word='rabbitmqadmin'),
  WordNode(pos=(614, 623), word='--version'),
])


5073) apk add --no-cache   gmp-dev

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 28), word='gmp-dev'),
])


5074) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


5075) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


5076) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


5077) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5078) apk add --no-cache --virtual .ruby-builddeps   autoconf   bison   bzip2   bzip2-dev   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gdbm-dev   glib-dev   libc-dev   libffi-dev   libxml2-dev   libxslt-dev   linux-headers   make   ncurses-dev   openssl   openssl-dev   procps   readline-dev   ruby   tar   xz   yaml-dev   zlib-dev

CommandNode(pos=(13, 347), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 57), word='.ruby-builddeps'),
  WordNode(pos=(60, 68), word='autoconf'),
  WordNode(pos=(71, 76), word='bison'),
  WordNode(pos=(79, 84), word='bzip2'),
  WordNode(pos=(87, 96), word='bzip2-dev'),
  WordNode(pos=(99, 114), word='ca-certificates'),
  WordNode(pos=(117, 126), word='coreutils'),
  WordNode(pos=(129, 137), word='dpkg-dev'),
  WordNode(pos=(138, 142), word='dpkg'),
  WordNode(pos=(145, 148), word='gcc'),
  WordNode(pos=(151, 159), word='gdbm-dev'),
  WordNode(pos=(162, 170), word='glib-dev'),
  WordNode(pos=(173, 181), word='libc-dev'),
  WordNode(pos=(184, 194), word='libffi-dev'),
  WordNode(pos=(197, 208), word='libxml2-dev'),
  WordNode(pos=(211, 222), word='libxslt-dev'),
  WordNode(pos=(225, 238), word='linux-headers'),
  WordNode(pos=(241, 245), word='make'),
  WordNode(pos=(248, 259), word='ncurses-dev'),
  WordNode(pos=(262, 269), word='openssl'),
  WordNode(pos=(272, 283), word='openssl-dev'),
  WordNode(pos=(286, 292), word='procps'),
  WordNode(pos=(295, 307), word='readline-dev'),
  WordNode(pos=(310, 314), word='ruby'),
  WordNode(pos=(317, 320), word='tar'),
  WordNode(pos=(323, 325), word='xz'),
  WordNode(pos=(328, 336), word='yaml-dev'),
  WordNode(pos=(339, 347), word='zlib-dev'),
])


5079) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


5080) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


5081) sha256sum -c -

CommandNode(pos=(504, 518), parts=[
  WordNode(pos=(504, 513), word='sha256sum'),
  WordNode(pos=(514, 516), word='-c'),
  WordNode(pos=(517, 518), word='-'),
])


5082) mkdir -p /usr/src/ruby

CommandNode(pos=(524, 546), parts=[
  WordNode(pos=(524, 529), word='mkdir'),
  WordNode(pos=(530, 532), word='-p'),
  WordNode(pos=(533, 546), word='/usr/src/ruby'),
])


5083) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(551, 609), parts=[
  WordNode(pos=(551, 554), word='tar'),
  WordNode(pos=(555, 559), word='-xJf'),
  WordNode(pos=(560, 571), word='ruby.tar.xz'),
  WordNode(pos=(572, 574), word='-C'),
  WordNode(pos=(575, 588), word='/usr/src/ruby'),
  WordNode(pos=(589, 609), word='--strip-components=1'),
])


5084) rm ruby.tar.xz

CommandNode(pos=(614, 628), parts=[
  WordNode(pos=(614, 616), word='rm'),
  WordNode(pos=(617, 628), word='ruby.tar.xz'),
])


5085) cd /usr/src/ruby

CommandNode(pos=(634, 650), parts=[
  WordNode(pos=(634, 636), word='cd'),
  WordNode(pos=(637, 650), word='/usr/src/ruby'),
])


5086) wget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'

CommandNode(pos=(656, 807), parts=[
  WordNode(pos=(656, 660), word='wget'),
  WordNode(pos=(661, 663), word='-O'),
  WordNode(pos=(664, 688), word='thread-stack-fix.patch'),
  WordNode(pos=(689, 807), word='https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'),
])


5087) echo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'

CommandNode(pos=(812, 907), parts=[
  WordNode(pos=(812, 816), word='echo'),
  WordNode(pos=(817, 907), word='3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'),
])


5088) sha256sum -c -

CommandNode(pos=(910, 924), parts=[
  WordNode(pos=(910, 919), word='sha256sum'),
  WordNode(pos=(920, 922), word='-c'),
  WordNode(pos=(923, 924), word='-'),
])


5089) patch -p1 -i thread-stack-fix.patch

CommandNode(pos=(929, 964), parts=[
  WordNode(pos=(929, 934), word='patch'),
  WordNode(pos=(935, 938), word='-p1'),
  WordNode(pos=(939, 941), word='-i'),
  WordNode(pos=(942, 964), word='thread-stack-fix.patch'),
])


5090) rm thread-stack-fix.patch

CommandNode(pos=(969, 994), parts=[
  WordNode(pos=(969, 971), word='rm'),
  WordNode(pos=(972, 994), word='thread-stack-fix.patch'),
])


5091) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(1004, 1038), parts=[
  WordNode(pos=(1004, 1008), word='echo'),
  WordNode(pos=(1009, 1038), word='#define ENABLE_PATH_CHECK 0'),
])


5092) echo

CommandNode(pos=(1042, 1046), parts=[
  WordNode(pos=(1042, 1046), word='echo'),
])


5093) cat file.c

CommandNode(pos=(1050, 1060), parts=[
  WordNode(pos=(1050, 1053), word='cat'),
  WordNode(pos=(1054, 1060), word='file.c'),
])


5094) mv file.c.new file.c

CommandNode(pos=(1082, 1102), parts=[
  WordNode(pos=(1082, 1084), word='mv'),
  WordNode(pos=(1085, 1095), word='file.c.new'),
  WordNode(pos=(1096, 1102), word='file.c'),
])


5095) autoconf

CommandNode(pos=(1108, 1116), parts=[
  WordNode(pos=(1108, 1116), word='autoconf'),
])


5096) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


5097) export ac_cv_func_isnan=yes ac_cv_func_isinf=yes

CommandNode(pos=(1183, 1231), parts=[
  WordNode(pos=(1183, 1189), word='export'),
  WordNode(pos=(1190, 1210), word='ac_cv_func_isnan=yes'),
  WordNode(pos=(1211, 1231), word='ac_cv_func_isinf=yes'),
])


5098) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


5099) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


5100) make install

CommandNode(pos=(1338, 1350), parts=[
  WordNode(pos=(1338, 1342), word='make'),
  WordNode(pos=(1343, 1350), word='install'),
])


5101) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


5102) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


5103) apk del --no-network .ruby-builddeps

CommandNode(pos=(1686, 1722), parts=[
  WordNode(pos=(1686, 1689), word='apk'),
  WordNode(pos=(1690, 1693), word='del'),
  WordNode(pos=(1694, 1706), word='--no-network'),
  WordNode(pos=(1707, 1722), word='.ruby-builddeps'),
])


5104) cd /

CommandNode(pos=(1727, 1731), parts=[
  WordNode(pos=(1727, 1729), word='cd'),
  WordNode(pos=(1730, 1731), word='/'),
])


5105) rm -r /usr/src/ruby

CommandNode(pos=(1736, 1755), parts=[
  WordNode(pos=(1736, 1738), word='rm'),
  WordNode(pos=(1739, 1741), word='-r'),
  WordNode(pos=(1742, 1755), word='/usr/src/ruby'),
])


5106) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(1760, 1856), parts=[
  WordNode(pos=(1760, 1764), word='ruby'),
  WordNode(pos=(1765, 1767), word='-e'),
  WordNode(pos=(1768, 1856), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


5107) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1861, 1900), parts=[
  WordNode(pos=(1861, 1864), word='gem'),
  WordNode(pos=(1865, 1871), word='update'),
  WordNode(pos=(1872, 1880), word='--system'),
  WordNode(pos=(1881, 1900), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1882, 1899), value='RUBYGEMS_VERSION'),
  ]),
])


5108) rm -r /root/.gem/

CommandNode(pos=(1904, 1921), parts=[
  WordNode(pos=(1904, 1906), word='rm'),
  WordNode(pos=(1907, 1909), word='-r'),
  WordNode(pos=(1910, 1921), word='/root/.gem/'),
])


5109) ruby --version

CommandNode(pos=(1926, 1940), parts=[
  WordNode(pos=(1926, 1930), word='ruby'),
  WordNode(pos=(1931, 1940), word='--version'),
])


5110) gem --version

CommandNode(pos=(1944, 1957), parts=[
  WordNode(pos=(1944, 1947), word='gem'),
  WordNode(pos=(1948, 1957), word='--version'),
])


5111) bundle --version

CommandNode(pos=(1961, 1977), parts=[
  WordNode(pos=(1961, 1967), word='bundle'),
  WordNode(pos=(1968, 1977), word='--version'),
])


5112) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


5113) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


5114) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5115) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


5116) apt-get install -y --no-install-recommends   ca-certificates   curl

CommandNode(pos=(28, 95), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 95), word='curl'),
])


5117) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(100, 127), parts=[
  WordNode(pos=(100, 102), word='rm'),
  WordNode(pos=(103, 106), word='-rf'),
  WordNode(pos=(107, 127), word='/var/lib/apt/lists/*'),
])


5118) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5119) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


5120) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


5121) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


5122) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5123) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


5124) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


5125) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5126) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


5127) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


5128) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


5129) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


5130) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


5131) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


5132) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


5133) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


5134) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


5135) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


5136) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


5137) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


5138) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


5139) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


5140) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


5141) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


5142) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


5143) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


5144) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


5145) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


5146) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


5147) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


5148) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


5149) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


5150) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


5151) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


5152) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


5153) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


5154) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


5155) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


5156) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


5157) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


5158) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


5159) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


5160) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5161) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


5162) apt-get update

CommandNode(pos=(72, 86), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 86), word='update'),
])


5163) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


5164) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(149, 176), parts=[
  WordNode(pos=(149, 151), word='rm'),
  WordNode(pos=(152, 155), word='-rf'),
  WordNode(pos=(156, 176), word='/var/lib/apt/lists/*'),
])


5165) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


5166) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


5167) sha256sum -c -

CommandNode(pos=(333, 347), parts=[
  WordNode(pos=(333, 342), word='sha256sum'),
  WordNode(pos=(343, 345), word='-c'),
  WordNode(pos=(346, 347), word='-'),
])


5168) mkdir -p /usr/src/ruby

CommandNode(pos=(353, 375), parts=[
  WordNode(pos=(353, 358), word='mkdir'),
  WordNode(pos=(359, 361), word='-p'),
  WordNode(pos=(362, 375), word='/usr/src/ruby'),
])


5169) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(380, 438), parts=[
  WordNode(pos=(380, 383), word='tar'),
  WordNode(pos=(384, 388), word='-xJf'),
  WordNode(pos=(389, 400), word='ruby.tar.xz'),
  WordNode(pos=(401, 403), word='-C'),
  WordNode(pos=(404, 417), word='/usr/src/ruby'),
  WordNode(pos=(418, 438), word='--strip-components=1'),
])


5170) rm ruby.tar.xz

CommandNode(pos=(443, 457), parts=[
  WordNode(pos=(443, 445), word='rm'),
  WordNode(pos=(446, 457), word='ruby.tar.xz'),
])


5171) cd /usr/src/ruby

CommandNode(pos=(463, 479), parts=[
  WordNode(pos=(463, 465), word='cd'),
  WordNode(pos=(466, 479), word='/usr/src/ruby'),
])


5172) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(489, 523), parts=[
  WordNode(pos=(489, 493), word='echo'),
  WordNode(pos=(494, 523), word='#define ENABLE_PATH_CHECK 0'),
])


5173) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


5174) cat file.c

CommandNode(pos=(535, 545), parts=[
  WordNode(pos=(535, 538), word='cat'),
  WordNode(pos=(539, 545), word='file.c'),
])


5175) mv file.c.new file.c

CommandNode(pos=(567, 587), parts=[
  WordNode(pos=(567, 569), word='mv'),
  WordNode(pos=(570, 580), word='file.c.new'),
  WordNode(pos=(581, 587), word='file.c'),
])


5176) autoconf

CommandNode(pos=(593, 601), parts=[
  WordNode(pos=(593, 601), word='autoconf'),
])


5177) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


5178) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


5179) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


5180) make install

CommandNode(pos=(770, 782), parts=[
  WordNode(pos=(770, 774), word='make'),
  WordNode(pos=(775, 782), word='install'),
])


5181) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


5182) cd /

CommandNode(pos=(834, 838), parts=[
  WordNode(pos=(834, 836), word='cd'),
  WordNode(pos=(837, 838), word='/'),
])


5183) rm -r /usr/src/ruby

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 848), word='-r'),
  WordNode(pos=(849, 862), word='/usr/src/ruby'),
])


5184) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(867, 963), parts=[
  WordNode(pos=(867, 871), word='ruby'),
  WordNode(pos=(872, 874), word='-e'),
  WordNode(pos=(875, 963), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


5185) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(968, 1007), parts=[
  WordNode(pos=(968, 971), word='gem'),
  WordNode(pos=(972, 978), word='update'),
  WordNode(pos=(979, 987), word='--system'),
  WordNode(pos=(988, 1007), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(989, 1006), value='RUBYGEMS_VERSION'),
  ]),
])


5186) rm -r /root/.gem/

CommandNode(pos=(1011, 1028), parts=[
  WordNode(pos=(1011, 1013), word='rm'),
  WordNode(pos=(1014, 1016), word='-r'),
  WordNode(pos=(1017, 1028), word='/root/.gem/'),
])


5187) ruby --version

CommandNode(pos=(1033, 1047), parts=[
  WordNode(pos=(1033, 1037), word='ruby'),
  WordNode(pos=(1038, 1047), word='--version'),
])


5188) gem --version

CommandNode(pos=(1051, 1064), parts=[
  WordNode(pos=(1051, 1054), word='gem'),
  WordNode(pos=(1055, 1064), word='--version'),
])


5189) bundle --version

CommandNode(pos=(1068, 1084), parts=[
  WordNode(pos=(1068, 1074), word='bundle'),
  WordNode(pos=(1075, 1084), word='--version'),
])


5190) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


5191) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


5192) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


5193) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5194) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


5195) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


5196) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


5197) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


5198) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


5199) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


5200) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


5201) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


5202) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


5203) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


5204) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


5205) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


5206) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


5207) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


5208) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


5209) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


5210) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


5211) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


5212) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


5213) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


5214) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


5215) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


5216) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


5217) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


5218) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


5219) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


5220) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


5221) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


5222) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


5223) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


5224) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


5225) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


5226) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


5227) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


5228) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


5229) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


5230) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


5231) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


5232) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


5233) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


5234) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


5235) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


5236) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


5237) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


5238) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


5239) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


5240) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


5241) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


5242) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


5243) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


5244) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


5245) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


5246) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


5247) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


5248) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


5249) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


5250) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


5251) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


5252) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


5253) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


5254) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


5255) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


5256) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5257) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


5258) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


5259) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


5260) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


5261) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


5262) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


5263) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


5264) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


5265) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


5266) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


5267) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


5268) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


5269) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


5270) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


5271) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


5272) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


5273) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


5274) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


5275) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


5276) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


5277) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


5278) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


5279) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


5280) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


5281) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


5282) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


5283) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


5284) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


5285) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


5286) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


5287) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


5288) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


5289) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


5290) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


5291) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


5292) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


5293) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


5294) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


5295) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


5296) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


5297) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


5298) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


5299) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


5300) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


5301) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


5302) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


5303) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


5304) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


5305) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


5306) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


5307) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


5308) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


5309) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


5310) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


5311) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


5312) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


5313) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


5314) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


5315) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


5316) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


5317) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


5318) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5319) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


5320) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


5321) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5322) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


5323) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


5324) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


5325) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


5326) apk add --no-cache   gmp-dev

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 28), word='gmp-dev'),
])


5327) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


5328) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


5329) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


5330) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5331) apk add --no-cache --virtual .ruby-builddeps   autoconf   bison   bzip2   bzip2-dev   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gdbm-dev   glib-dev   libc-dev   libffi-dev   libxml2-dev   libxslt-dev   linux-headers   make   ncurses-dev   openssl   openssl-dev   procps   readline-dev   ruby   tar   xz   yaml-dev   zlib-dev

CommandNode(pos=(13, 347), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 57), word='.ruby-builddeps'),
  WordNode(pos=(60, 68), word='autoconf'),
  WordNode(pos=(71, 76), word='bison'),
  WordNode(pos=(79, 84), word='bzip2'),
  WordNode(pos=(87, 96), word='bzip2-dev'),
  WordNode(pos=(99, 114), word='ca-certificates'),
  WordNode(pos=(117, 126), word='coreutils'),
  WordNode(pos=(129, 137), word='dpkg-dev'),
  WordNode(pos=(138, 142), word='dpkg'),
  WordNode(pos=(145, 148), word='gcc'),
  WordNode(pos=(151, 159), word='gdbm-dev'),
  WordNode(pos=(162, 170), word='glib-dev'),
  WordNode(pos=(173, 181), word='libc-dev'),
  WordNode(pos=(184, 194), word='libffi-dev'),
  WordNode(pos=(197, 208), word='libxml2-dev'),
  WordNode(pos=(211, 222), word='libxslt-dev'),
  WordNode(pos=(225, 238), word='linux-headers'),
  WordNode(pos=(241, 245), word='make'),
  WordNode(pos=(248, 259), word='ncurses-dev'),
  WordNode(pos=(262, 269), word='openssl'),
  WordNode(pos=(272, 283), word='openssl-dev'),
  WordNode(pos=(286, 292), word='procps'),
  WordNode(pos=(295, 307), word='readline-dev'),
  WordNode(pos=(310, 314), word='ruby'),
  WordNode(pos=(317, 320), word='tar'),
  WordNode(pos=(323, 325), word='xz'),
  WordNode(pos=(328, 336), word='yaml-dev'),
  WordNode(pos=(339, 347), word='zlib-dev'),
])


5332) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


5333) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


5334) sha256sum -c -

CommandNode(pos=(504, 518), parts=[
  WordNode(pos=(504, 513), word='sha256sum'),
  WordNode(pos=(514, 516), word='-c'),
  WordNode(pos=(517, 518), word='-'),
])


5335) mkdir -p /usr/src/ruby

CommandNode(pos=(524, 546), parts=[
  WordNode(pos=(524, 529), word='mkdir'),
  WordNode(pos=(530, 532), word='-p'),
  WordNode(pos=(533, 546), word='/usr/src/ruby'),
])


5336) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(551, 609), parts=[
  WordNode(pos=(551, 554), word='tar'),
  WordNode(pos=(555, 559), word='-xJf'),
  WordNode(pos=(560, 571), word='ruby.tar.xz'),
  WordNode(pos=(572, 574), word='-C'),
  WordNode(pos=(575, 588), word='/usr/src/ruby'),
  WordNode(pos=(589, 609), word='--strip-components=1'),
])


5337) rm ruby.tar.xz

CommandNode(pos=(614, 628), parts=[
  WordNode(pos=(614, 616), word='rm'),
  WordNode(pos=(617, 628), word='ruby.tar.xz'),
])


5338) cd /usr/src/ruby

CommandNode(pos=(634, 650), parts=[
  WordNode(pos=(634, 636), word='cd'),
  WordNode(pos=(637, 650), word='/usr/src/ruby'),
])


5339) wget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'

CommandNode(pos=(656, 807), parts=[
  WordNode(pos=(656, 660), word='wget'),
  WordNode(pos=(661, 663), word='-O'),
  WordNode(pos=(664, 688), word='thread-stack-fix.patch'),
  WordNode(pos=(689, 807), word='https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'),
])


5340) echo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'

CommandNode(pos=(812, 907), parts=[
  WordNode(pos=(812, 816), word='echo'),
  WordNode(pos=(817, 907), word='3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'),
])


5341) sha256sum -c -

CommandNode(pos=(910, 924), parts=[
  WordNode(pos=(910, 919), word='sha256sum'),
  WordNode(pos=(920, 922), word='-c'),
  WordNode(pos=(923, 924), word='-'),
])


5342) patch -p1 -i thread-stack-fix.patch

CommandNode(pos=(929, 964), parts=[
  WordNode(pos=(929, 934), word='patch'),
  WordNode(pos=(935, 938), word='-p1'),
  WordNode(pos=(939, 941), word='-i'),
  WordNode(pos=(942, 964), word='thread-stack-fix.patch'),
])


5343) rm thread-stack-fix.patch

CommandNode(pos=(969, 994), parts=[
  WordNode(pos=(969, 971), word='rm'),
  WordNode(pos=(972, 994), word='thread-stack-fix.patch'),
])


5344) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(1004, 1038), parts=[
  WordNode(pos=(1004, 1008), word='echo'),
  WordNode(pos=(1009, 1038), word='#define ENABLE_PATH_CHECK 0'),
])


5345) echo

CommandNode(pos=(1042, 1046), parts=[
  WordNode(pos=(1042, 1046), word='echo'),
])


5346) cat file.c

CommandNode(pos=(1050, 1060), parts=[
  WordNode(pos=(1050, 1053), word='cat'),
  WordNode(pos=(1054, 1060), word='file.c'),
])


5347) mv file.c.new file.c

CommandNode(pos=(1082, 1102), parts=[
  WordNode(pos=(1082, 1084), word='mv'),
  WordNode(pos=(1085, 1095), word='file.c.new'),
  WordNode(pos=(1096, 1102), word='file.c'),
])


5348) autoconf

CommandNode(pos=(1108, 1116), parts=[
  WordNode(pos=(1108, 1116), word='autoconf'),
])


5349) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


5350) export ac_cv_func_isnan=yes ac_cv_func_isinf=yes

CommandNode(pos=(1183, 1231), parts=[
  WordNode(pos=(1183, 1189), word='export'),
  WordNode(pos=(1190, 1210), word='ac_cv_func_isnan=yes'),
  WordNode(pos=(1211, 1231), word='ac_cv_func_isinf=yes'),
])


5351) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


5352) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


5353) make install

CommandNode(pos=(1338, 1350), parts=[
  WordNode(pos=(1338, 1342), word='make'),
  WordNode(pos=(1343, 1350), word='install'),
])


5354) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


5355) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


5356) apk del --no-network .ruby-builddeps

CommandNode(pos=(1686, 1722), parts=[
  WordNode(pos=(1686, 1689), word='apk'),
  WordNode(pos=(1690, 1693), word='del'),
  WordNode(pos=(1694, 1706), word='--no-network'),
  WordNode(pos=(1707, 1722), word='.ruby-builddeps'),
])


5357) cd /

CommandNode(pos=(1727, 1731), parts=[
  WordNode(pos=(1727, 1729), word='cd'),
  WordNode(pos=(1730, 1731), word='/'),
])


5358) rm -r /usr/src/ruby

CommandNode(pos=(1736, 1755), parts=[
  WordNode(pos=(1736, 1738), word='rm'),
  WordNode(pos=(1739, 1741), word='-r'),
  WordNode(pos=(1742, 1755), word='/usr/src/ruby'),
])


5359) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(1760, 1856), parts=[
  WordNode(pos=(1760, 1764), word='ruby'),
  WordNode(pos=(1765, 1767), word='-e'),
  WordNode(pos=(1768, 1856), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


5360) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1861, 1900), parts=[
  WordNode(pos=(1861, 1864), word='gem'),
  WordNode(pos=(1865, 1871), word='update'),
  WordNode(pos=(1872, 1880), word='--system'),
  WordNode(pos=(1881, 1900), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1882, 1899), value='RUBYGEMS_VERSION'),
  ]),
])


5361) rm -r /root/.gem/

CommandNode(pos=(1904, 1921), parts=[
  WordNode(pos=(1904, 1906), word='rm'),
  WordNode(pos=(1907, 1909), word='-r'),
  WordNode(pos=(1910, 1921), word='/root/.gem/'),
])


5362) ruby --version

CommandNode(pos=(1926, 1940), parts=[
  WordNode(pos=(1926, 1930), word='ruby'),
  WordNode(pos=(1931, 1940), word='--version'),
])


5363) gem --version

CommandNode(pos=(1944, 1957), parts=[
  WordNode(pos=(1944, 1947), word='gem'),
  WordNode(pos=(1948, 1957), word='--version'),
])


5364) bundle --version

CommandNode(pos=(1961, 1977), parts=[
  WordNode(pos=(1961, 1967), word='bundle'),
  WordNode(pos=(1968, 1977), word='--version'),
])


5365) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


5366) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


5367) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


5368) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


5369) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


5370) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


5371) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5372) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


5373) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


5374) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


5375) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


5376) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


5377) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


5378) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


5379) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


5380) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


5381) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


5382) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


5383) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


5384) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


5385) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


5386) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


5387) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


5388) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


5389) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


5390) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


5391) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


5392) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


5393) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


5394) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


5395) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


5396) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


5397) pip install --no-cache-dir virtualenv

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 26), word='--no-cache-dir'),
  WordNode(pos=(27, 37), word='virtualenv'),
])


5398) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


5399) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


5400) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5401) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


5402) which gpg

CommandNode(pos=(32, 41), parts=[
  WordNode(pos=(32, 37), word='which'),
  WordNode(pos=(38, 41), word='gpg'),
])


5403) apt-get install -y --no-install-recommends gnupg

CommandNode(pos=(50, 98), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 65), word='install'),
  WordNode(pos=(66, 68), word='-y'),
  WordNode(pos=(69, 92), word='--no-install-recommends'),
  WordNode(pos=(93, 98), word='gnupg'),
])


5404) gpg --version

CommandNode(pos=(111, 124), parts=[
  WordNode(pos=(111, 114), word='gpg'),
  WordNode(pos=(115, 124), word='--version'),
])


5405) grep -q '^gpg (GnuPG) 1\.'

CommandNode(pos=(127, 153), parts=[
  WordNode(pos=(127, 131), word='grep'),
  WordNode(pos=(132, 134), word='-q'),
  WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
])


5406) apt-get install -y --no-install-recommends dirmngr

CommandNode(pos=(163, 213), parts=[
  WordNode(pos=(163, 170), word='apt-get'),
  WordNode(pos=(171, 178), word='install'),
  WordNode(pos=(179, 181), word='-y'),
  WordNode(pos=(182, 205), word='--no-install-recommends'),
  WordNode(pos=(206, 213), word='dirmngr'),
])


5407) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(221, 248), parts=[
  WordNode(pos=(221, 223), word='rm'),
  WordNode(pos=(224, 227), word='-rf'),
  WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
])


5408) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5409) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


5410) apt-get update

CommandNode(pos=(53, 67), parts=[
  WordNode(pos=(53, 60), word='apt-get'),
  WordNode(pos=(61, 67), word='update'),
])


5411) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


5412) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


5413) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


5414) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


5415) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


5416) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


5417) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(488, 591), parts=[
  WordNode(pos=(488, 491), word='gpg'),
  WordNode(pos=(492, 499), word='--batch'),
  WordNode(pos=(500, 511), word='--keyserver'),
  WordNode(pos=(512, 538), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(539, 550), word='--recv-keys'),
  WordNode(pos=(551, 591), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


5418) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(594, 658), parts=[
  WordNode(pos=(594, 597), word='gpg'),
  WordNode(pos=(598, 605), word='--batch'),
  WordNode(pos=(606, 614), word='--verify'),
  WordNode(pos=(615, 638), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(639, 658), word='/usr/local/bin/gosu'),
])


5419) command -v gpgconf > /dev/null

CommandNode(pos=(661, 691), parts=[
  WordNode(pos=(661, 668), word='command'),
  WordNode(pos=(669, 671), word='-v'),
  WordNode(pos=(672, 679), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(682, 691), word='/dev/null'), pos=(680, 691), type='>'),
])


5420) gpgconf --kill all

CommandNode(pos=(695, 713), parts=[
  WordNode(pos=(695, 702), word='gpgconf'),
  WordNode(pos=(703, 709), word='--kill'),
  WordNode(pos=(710, 713), word='all'),
])


5421) :

CommandNode(pos=(717, 718), parts=[
  WordNode(pos=(717, 718), word=':'),
])


5422) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


5423) chmod +x /usr/local/bin/gosu

CommandNode(pos=(767, 795), parts=[
  WordNode(pos=(767, 772), word='chmod'),
  WordNode(pos=(773, 775), word='+x'),
  WordNode(pos=(776, 795), word='/usr/local/bin/gosu'),
])


5424) gosu nobody true

CommandNode(pos=(798, 814), parts=[
  WordNode(pos=(798, 802), word='gosu'),
  WordNode(pos=(803, 809), word='nobody'),
  WordNode(pos=(810, 814), word='true'),
])


5425) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


5426) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


5427) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5428) apt-get install -y --no-install-recommends   apt-transport-https ca-certificates   pwgen

CommandNode(pos=(18, 106), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 82), word='apt-transport-https'),
  WordNode(pos=(83, 98), word='ca-certificates'),
  WordNode(pos=(101, 106), word='pwgen'),
])


5429) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(111, 138), parts=[
  WordNode(pos=(111, 113), word='rm'),
  WordNode(pos=(114, 117), word='-rf'),
  WordNode(pos=(118, 138), word='/var/lib/apt/lists/*'),
])


5430) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5431) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


5432) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


5433) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
])


5434) command -v gpgconf > /dev/null

CommandNode(pos=(220, 250), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
])


5435) gpgconf --kill all

CommandNode(pos=(254, 272), parts=[
  WordNode(pos=(254, 261), word='gpgconf'),
  WordNode(pos=(262, 268), word='--kill'),
  WordNode(pos=(269, 272), word='all'),
])


5436) :

CommandNode(pos=(276, 277), parts=[
  WordNode(pos=(276, 277), word=':'),
])


5437) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


5438) apt-key list

CommandNode(pos=(301, 313), parts=[
  WordNode(pos=(301, 308), word='apt-key'),
  WordNode(pos=(309, 313), word='list'),
])


5439) echo 'deb https://repo.percona.com/apt stretch main' > /etc/apt/sources.list.d/percona.list

CommandNode(pos=(0, 91), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 52), word='deb https://repo.percona.com/apt stretch main'),
  RedirectNode(output=
    WordNode(pos=(55, 91), word='/etc/apt/sources.list.d/percona.list'), pos=(53, 91), type='>'),
])


5440) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5441) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


5442) debconf-set-selections

CommandNode(pos=(309, 331), parts=[
  WordNode(pos=(309, 331), word='debconf-set-selections'),
])


5443) apt-get update

CommandNode(pos=(334, 348), parts=[
  WordNode(pos=(334, 341), word='apt-get'),
  WordNode(pos=(342, 348), word='update'),
])


5444) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


5445) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(430, 457), parts=[
  WordNode(pos=(430, 432), word='rm'),
  WordNode(pos=(433, 436), word='-rf'),
  WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
])


5446) sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 463), word='sed'),
  WordNode(pos=(464, 467), word='-ri'),
  WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
  WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
])


5447) rm -rf /var/lib/mysql

CommandNode(pos=(504, 525), parts=[
  WordNode(pos=(504, 506), word='rm'),
  WordNode(pos=(507, 510), word='-rf'),
  WordNode(pos=(511, 525), word='/var/lib/mysql'),
])


5448) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(528, 567), parts=[
  WordNode(pos=(528, 533), word='mkdir'),
  WordNode(pos=(534, 536), word='-p'),
  WordNode(pos=(537, 551), word='/var/lib/mysql'),
  WordNode(pos=(552, 567), word='/var/run/mysqld'),
])


5449) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(570, 621), parts=[
  WordNode(pos=(570, 575), word='chown'),
  WordNode(pos=(576, 578), word='-R'),
  WordNode(pos=(579, 590), word='mysql:mysql'),
  WordNode(pos=(591, 605), word='/var/lib/mysql'),
  WordNode(pos=(606, 621), word='/var/run/mysqld'),
])


5450) chmod 777 /var/run/mysqld

CommandNode(pos=(624, 649), parts=[
  WordNode(pos=(624, 629), word='chmod'),
  WordNode(pos=(630, 633), word='777'),
  WordNode(pos=(634, 649), word='/var/run/mysqld'),
])


5451) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(652, 690), parts=[
  WordNode(pos=(652, 656), word='find'),
  WordNode(pos=(657, 668), word='/etc/mysql/'),
  WordNode(pos=(669, 674), word='-name'),
  WordNode(pos=(675, 682), word='*.cnf'),
  WordNode(pos=(683, 690), word='-print0'),
])


5452) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(695, 735), parts=[
  WordNode(pos=(695, 700), word='xargs'),
  WordNode(pos=(701, 703), word='-0'),
  WordNode(pos=(704, 708), word='grep'),
  WordNode(pos=(709, 713), word='-lZE'),
  WordNode(pos=(714, 735), word='^(bind-address|log)'),
])


5453) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(740, 788), parts=[
  WordNode(pos=(740, 745), word='xargs'),
  WordNode(pos=(746, 749), word='-rt'),
  WordNode(pos=(750, 752), word='-0'),
  WordNode(pos=(753, 756), word='sed'),
  WordNode(pos=(757, 760), word='-Ei'),
  WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
])


5454) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(791, 873), parts=[
  WordNode(pos=(791, 795), word='echo'),
  WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
])


5455) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


5456) apk add --no-cache   ca-certificates

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
])


5457) [ ! -e /etc/nsswitch.conf ]

CommandNode(pos=(0, 27), parts=[
  WordNode(pos=(0, 1), word='['),
  WordNode(pos=(2, 3), word='!'),
  WordNode(pos=(4, 6), word='-e'),
  WordNode(pos=(7, 25), word='/etc/nsswitch.conf'),
  WordNode(pos=(26, 27), word=']'),
])


5458) echo 'hosts: files dns' > /etc/nsswitch.conf

CommandNode(pos=(31, 75), parts=[
  WordNode(pos=(31, 35), word='echo'),
  WordNode(pos=(36, 54), word='hosts: files dns'),
  RedirectNode(output=
    WordNode(pos=(57, 75), word='/etc/nsswitch.conf'), pos=(55, 75), type='>'),
])


5459) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


5460) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


5461) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5462) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


5463) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


5464) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


5465) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


5466) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


5467) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


5468) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


5469) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5470) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


5471) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


5472) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


5473) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


5474) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


5475) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


5476) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


5477) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


5478) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


5479) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


5480) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


5481) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


5482) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


5483) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5484) command -v a2enmod

CommandNode(pos=(14, 32), parts=[
  WordNode(pos=(14, 21), word='command'),
  WordNode(pos=(22, 24), word='-v'),
  WordNode(pos=(25, 32), word='a2enmod'),
])


5485) a2enmod rewrite

CommandNode(pos=(41, 56), parts=[
  WordNode(pos=(41, 48), word='a2enmod'),
  WordNode(pos=(49, 56), word='rewrite'),
])


5486) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


5487) apt-get update

CommandNode(pos=(106, 120), parts=[
  WordNode(pos=(106, 113), word='apt-get'),
  WordNode(pos=(114, 120), word='update'),
])


5488) apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev

CommandNode(pos=(123, 217), parts=[
  WordNode(pos=(123, 130), word='apt-get'),
  WordNode(pos=(131, 138), word='install'),
  WordNode(pos=(139, 141), word='-y'),
  WordNode(pos=(142, 165), word='--no-install-recommends'),
  WordNode(pos=(168, 179), word='libjpeg-dev'),
  WordNode(pos=(182, 192), word='libpng-dev'),
  WordNode(pos=(195, 204), word='libpq-dev'),
  WordNode(pos=(207, 217), word='libzip-dev'),
])


5489) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(223, 291), parts=[
  WordNode(pos=(223, 247), word='docker-php-ext-configure'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
  WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
])


5490) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


5491) apt-mark auto '.*' > /dev/null

CommandNode(pos=(381, 411), parts=[
  WordNode(pos=(381, 389), word='apt-mark'),
  WordNode(pos=(390, 394), word='auto'),
  WordNode(pos=(395, 399), word='.*'),
  RedirectNode(output=
    WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
])


5492) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


5493) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


5494) awk '/=>/ { print $3 }'

CommandNode(pos=(504, 527), parts=[
  WordNode(pos=(504, 507), word='awk'),
  WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
])


5495) sort -u

CommandNode(pos=(532, 539), parts=[
  WordNode(pos=(532, 536), word='sort'),
  WordNode(pos=(537, 539), word='-u'),
])


5496) xargs -r dpkg-query -S

CommandNode(pos=(544, 566), parts=[
  WordNode(pos=(544, 549), word='xargs'),
  WordNode(pos=(550, 552), word='-r'),
  WordNode(pos=(553, 563), word='dpkg-query'),
  WordNode(pos=(564, 566), word='-S'),
])


5497) cut -d: -f1

CommandNode(pos=(571, 582), parts=[
  WordNode(pos=(571, 574), word='cut'),
  WordNode(pos=(575, 578), word='-d:'),
  WordNode(pos=(579, 582), word='-f1'),
])


5498) sort -u

CommandNode(pos=(587, 594), parts=[
  WordNode(pos=(587, 591), word='sort'),
  WordNode(pos=(592, 594), word='-u'),
])


5499) xargs -rt apt-mark manual

CommandNode(pos=(599, 624), parts=[
  WordNode(pos=(599, 604), word='xargs'),
  WordNode(pos=(605, 608), word='-rt'),
  WordNode(pos=(609, 617), word='apt-mark'),
  WordNode(pos=(618, 624), word='manual'),
])


5500) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(628, 704), parts=[
  WordNode(pos=(628, 635), word='apt-get'),
  WordNode(pos=(636, 641), word='purge'),
  WordNode(pos=(642, 644), word='-y'),
  WordNode(pos=(645, 658), word='--auto-remove'),
  WordNode(pos=(659, 661), word='-o'),
  WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
])


5501) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(707, 734), parts=[
  WordNode(pos=(707, 709), word='rm'),
  WordNode(pos=(710, 713), word='-rf'),
  WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
])


5502) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


5503) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


5504) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


5505) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


5506) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


5507) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


5508) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


5509) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


5510) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


5511) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


5512) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


5513) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


5514) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


5515) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


5516) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


5517) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


5518) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5519) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


5520) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


5521) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


5522) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


5523) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


5524) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


5525) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


5526) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


5527) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


5528) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


5529) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


5530) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


5531) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


5532) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


5533) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


5534) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


5535) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


5536) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


5537) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


5538) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


5539) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


5540) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


5541) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


5542) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


5543) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


5544) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


5545) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5546) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev

CommandNode(pos=(11, 117), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
])


5547) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(123, 191), parts=[
  WordNode(pos=(123, 147), word='docker-php-ext-configure'),
  WordNode(pos=(148, 150), word='gd'),
  WordNode(pos=(151, 170), word='--with-png-dir=/usr'),
  WordNode(pos=(171, 191), word='--with-jpeg-dir=/usr'),
])


5548) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(194, 262), parts=[
  WordNode(pos=(194, 216), word='docker-php-ext-install'),
  WordNode(pos=(219, 225), word='bcmath'),
  WordNode(pos=(228, 232), word='exif'),
  WordNode(pos=(235, 237), word='gd'),
  WordNode(pos=(240, 246), word='mysqli'),
  WordNode(pos=(249, 256), word='opcache'),
  WordNode(pos=(259, 262), word='zip'),
])


5549) pecl install imagick-3.4.4

CommandNode(pos=(267, 293), parts=[
  WordNode(pos=(267, 271), word='pecl'),
  WordNode(pos=(272, 279), word='install'),
  WordNode(pos=(280, 293), word='imagick-3.4.4'),
])


5550) docker-php-ext-enable imagick

CommandNode(pos=(296, 325), parts=[
  WordNode(pos=(296, 317), word='docker-php-ext-enable'),
  WordNode(pos=(318, 325), word='imagick'),
])


5551) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


5552) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(548, 601), parts=[
  WordNode(pos=(548, 551), word='apk'),
  WordNode(pos=(552, 555), word='add'),
  WordNode(pos=(556, 565), word='--virtual'),
  WordNode(pos=(566, 592), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(593, 601), word='$runDeps', parts=[
    ParameterNode(pos=(593, 601), value='runDeps'),
  ]),
])


5553) apk del .build-deps

CommandNode(pos=(604, 623), parts=[
  WordNode(pos=(604, 607), word='apk'),
  WordNode(pos=(608, 611), word='del'),
  WordNode(pos=(612, 623), word='.build-deps'),
])


5554) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


5555) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


5556) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


5557) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


5558) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


5559) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


5560) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


5561) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


5562) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


5563) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


5564) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


5565) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


5566) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


5567) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


5568) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


5569) apk add --no-cache   bash   less   mysql-client

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='bash'),
  WordNode(pos=(28, 32), word='less'),
  WordNode(pos=(35, 47), word='mysql-client'),
])


5570) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5571) mkdir -p /var/www/html

CommandNode(pos=(10, 32), parts=[
  WordNode(pos=(10, 15), word='mkdir'),
  WordNode(pos=(16, 18), word='-p'),
  WordNode(pos=(19, 32), word='/var/www/html'),
])


5572) chown -R www-data:www-data /var/www/html

CommandNode(pos=(35, 75), parts=[
  WordNode(pos=(35, 40), word='chown'),
  WordNode(pos=(41, 43), word='-R'),
  WordNode(pos=(44, 61), word='www-data:www-data'),
  WordNode(pos=(62, 75), word='/var/www/html'),
])


5573) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5574) apk add --no-cache --virtual .fetch-deps   gnupg

CommandNode(pos=(11, 59), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
])


5575) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


5576) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(223, 254), parts=[
  WordNode(pos=(223, 229), word='export'),
  WordNode(pos=(230, 254), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(243, 252), parts=[
        WordNode(pos=(243, 249), word='mktemp'),
        WordNode(pos=(250, 252), word='-d'),
      ]), pos=(241, 253)),
  ]),
])


5577) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$WORDPRESS_CLI_GPG_KEY"

CommandNode(pos=(257, 344), parts=[
  WordNode(pos=(257, 260), word='gpg'),
  WordNode(pos=(261, 268), word='--batch'),
  WordNode(pos=(269, 280), word='--keyserver'),
  WordNode(pos=(281, 307), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(308, 319), word='--recv-keys'),
  WordNode(pos=(320, 344), word='$WORDPRESS_CLI_GPG_KEY', parts=[
    ParameterNode(pos=(321, 343), value='WORDPRESS_CLI_GPG_KEY'),
  ]),
])


5578) gpg --batch --decrypt --output /usr/local/bin/wp /usr/local/bin/wp.gpg

CommandNode(pos=(347, 417), parts=[
  WordNode(pos=(347, 350), word='gpg'),
  WordNode(pos=(351, 358), word='--batch'),
  WordNode(pos=(359, 368), word='--decrypt'),
  WordNode(pos=(369, 377), word='--output'),
  WordNode(pos=(378, 395), word='/usr/local/bin/wp'),
  WordNode(pos=(396, 417), word='/usr/local/bin/wp.gpg'),
])


5579) command -v gpgconf

CommandNode(pos=(420, 438), parts=[
  WordNode(pos=(420, 427), word='command'),
  WordNode(pos=(428, 430), word='-v'),
  WordNode(pos=(431, 438), word='gpgconf'),
])


5580) gpgconf --kill all

CommandNode(pos=(442, 460), parts=[
  WordNode(pos=(442, 449), word='gpgconf'),
  WordNode(pos=(450, 456), word='--kill'),
  WordNode(pos=(457, 460), word='all'),
])


5581) :

CommandNode(pos=(464, 465), parts=[
  WordNode(pos=(464, 465), word=':'),
])


5582) rm -rf "$GNUPGHOME" /usr/local/bin/wp.gpg

CommandNode(pos=(468, 509), parts=[
  WordNode(pos=(468, 470), word='rm'),
  WordNode(pos=(471, 474), word='-rf'),
  WordNode(pos=(475, 487), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(476, 486), value='GNUPGHOME'),
  ]),
  WordNode(pos=(488, 509), word='/usr/local/bin/wp.gpg'),
])


5583) echo "$WORDPRESS_CLI_SHA512 */usr/local/bin/wp"

CommandNode(pos=(513, 560), parts=[
  WordNode(pos=(513, 517), word='echo'),
  WordNode(pos=(518, 560), word='$WORDPRESS_CLI_SHA512 */usr/local/bin/wp', parts=[
    ParameterNode(pos=(519, 540), value='WORDPRESS_CLI_SHA512'),
  ]),
])


5584) sha512sum -c -

CommandNode(pos=(563, 577), parts=[
  WordNode(pos=(563, 572), word='sha512sum'),
  WordNode(pos=(573, 575), word='-c'),
  WordNode(pos=(576, 577), word='-'),
])


5585) chmod +x /usr/local/bin/wp

CommandNode(pos=(580, 606), parts=[
  WordNode(pos=(580, 585), word='chmod'),
  WordNode(pos=(586, 588), word='+x'),
  WordNode(pos=(589, 606), word='/usr/local/bin/wp'),
])


5586) apk del .fetch-deps

CommandNode(pos=(610, 629), parts=[
  WordNode(pos=(610, 613), word='apk'),
  WordNode(pos=(614, 617), word='del'),
  WordNode(pos=(618, 629), word='.fetch-deps'),
])


5587) wp --allow-root --version

CommandNode(pos=(633, 658), parts=[
  WordNode(pos=(633, 635), word='wp'),
  WordNode(pos=(636, 648), word='--allow-root'),
  WordNode(pos=(649, 658), word='--version'),
])


5588) rabbitmq-plugins enable --offline rabbitmq_management

CommandNode(pos=(0, 53), parts=[
  WordNode(pos=(0, 16), word='rabbitmq-plugins'),
  WordNode(pos=(17, 23), word='enable'),
  WordNode(pos=(24, 33), word='--offline'),
  WordNode(pos=(34, 53), word='rabbitmq_management'),
])


5589) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5590) erl -noinput -eval '   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  ' -- /plugins/rabbitmq_management-*.ez > /usr/local/bin/rabbitmqadmin

CommandNode(pos=(11, 422), parts=[
  WordNode(pos=(11, 14), word='erl'),
  WordNode(pos=(15, 23), word='-noinput'),
  WordNode(pos=(24, 29), word='-eval'),
  WordNode(pos=(30, 354), word='   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  '),
  WordNode(pos=(355, 357), word='--'),
  WordNode(pos=(358, 391), word='/plugins/rabbitmq_management-*.ez'),
  RedirectNode(output=
    WordNode(pos=(394, 422), word='/usr/local/bin/rabbitmqadmin'), pos=(392, 422), type='>'),
])


5591) [ -s /usr/local/bin/rabbitmqadmin ]

CommandNode(pos=(425, 460), parts=[
  WordNode(pos=(425, 426), word='['),
  WordNode(pos=(427, 429), word='-s'),
  WordNode(pos=(430, 458), word='/usr/local/bin/rabbitmqadmin'),
  WordNode(pos=(459, 460), word=']'),
])


5592) chmod +x /usr/local/bin/rabbitmqadmin

CommandNode(pos=(463, 500), parts=[
  WordNode(pos=(463, 468), word='chmod'),
  WordNode(pos=(469, 471), word='+x'),
  WordNode(pos=(472, 500), word='/usr/local/bin/rabbitmqadmin'),
])


5593) apk add --no-cache python

CommandNode(pos=(503, 528), parts=[
  WordNode(pos=(503, 506), word='apk'),
  WordNode(pos=(507, 510), word='add'),
  WordNode(pos=(511, 521), word='--no-cache'),
  WordNode(pos=(522, 528), word='python'),
])


5594) rabbitmqadmin --version

CommandNode(pos=(531, 554), parts=[
  WordNode(pos=(531, 544), word='rabbitmqadmin'),
  WordNode(pos=(545, 554), word='--version'),
])


5595) apk add --no-cache   git   openssh-client

CommandNode(pos=(0, 41), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 24), word='git'),
  WordNode(pos=(27, 41), word='openssh-client'),
])


5596) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5597) apt-get install -y --no-install-recommends   tk-dev

CommandNode(pos=(18, 69), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 69), word='tk-dev'),
])


5598) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(74, 101), parts=[
  WordNode(pos=(74, 76), word='rm'),
  WordNode(pos=(77, 80), word='-rf'),
  WordNode(pos=(81, 101), word='/var/lib/apt/lists/*'),
])


5599) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5600) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


5601) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


5602) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


5603) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


5604) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


5605) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


5606) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


5607) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


5608) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


5609) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


5610) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


5611) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


5612) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


5613) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


5614) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


5615) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


5616) make install

CommandNode(pos=(920, 932), parts=[
  WordNode(pos=(920, 924), word='make'),
  WordNode(pos=(925, 932), word='install'),
])


5617) ldconfig

CommandNode(pos=(937, 945), parts=[
  WordNode(pos=(937, 945), word='ldconfig'),
])


5618) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(951, 1118), parts=[
  WordNode(pos=(951, 955), word='find'),
  WordNode(pos=(956, 966), word='/usr/local'),
  WordNode(pos=(967, 973), word='-depth'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(982, 984), word='('),
  WordNode(pos=(985, 990), word='-type'),
  WordNode(pos=(991, 992), word='d'),
  WordNode(pos=(993, 995), word='-a'),
  WordNode(pos=(996, 998), word='('),
  WordNode(pos=(999, 1004), word='-name'),
  WordNode(pos=(1005, 1009), word='test'),
  WordNode(pos=(1010, 1012), word='-o'),
  WordNode(pos=(1013, 1018), word='-name'),
  WordNode(pos=(1019, 1024), word='tests'),
  WordNode(pos=(1025, 1027), word=')'),
  WordNode(pos=(1028, 1030), word=')'),
  WordNode(pos=(1034, 1036), word='-o'),
  WordNode(pos=(1040, 1042), word='('),
  WordNode(pos=(1043, 1048), word='-type'),
  WordNode(pos=(1049, 1050), word='f'),
  WordNode(pos=(1051, 1053), word='-a'),
  WordNode(pos=(1054, 1056), word='('),
  WordNode(pos=(1057, 1062), word='-name'),
  WordNode(pos=(1063, 1070), word='*.pyc'),
  WordNode(pos=(1071, 1073), word='-o'),
  WordNode(pos=(1074, 1079), word='-name'),
  WordNode(pos=(1080, 1087), word='*.pyo'),
  WordNode(pos=(1088, 1090), word=')'),
  WordNode(pos=(1091, 1093), word=')'),
  WordNode(pos=(1096, 1098), word=')'),
  WordNode(pos=(1099, 1104), word='-exec'),
  WordNode(pos=(1105, 1107), word='rm'),
  WordNode(pos=(1108, 1111), word='-rf'),
  WordNode(pos=(1112, 1116), word='{}'),
  WordNode(pos=(1117, 1118), word='+'),
])


5619) rm -rf /usr/src/python

CommandNode(pos=(1123, 1145), parts=[
  WordNode(pos=(1123, 1125), word='rm'),
  WordNode(pos=(1126, 1129), word='-rf'),
  WordNode(pos=(1130, 1145), word='/usr/src/python'),
])


5620) python3 --version

CommandNode(pos=(1151, 1168), parts=[
  WordNode(pos=(1151, 1158), word='python3'),
  WordNode(pos=(1159, 1168), word='--version'),
])


5621) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


5622) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


5623) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


5624) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


5625) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


5626) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5627) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


5628) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


5629) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


5630) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


5631) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


5632) groupadd -r redis

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='redis'),
])


5633) useradd -r -g redis redis

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='redis'),
  WordNode(pos=(41, 46), word='redis'),
])


5634) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5635) fetchDeps="   ca-certificates   dirmngr   gnupg   wget  "

CommandNode(pos=(11, 68), parts=[
  AssignmentNode(pos=(11, 68), word='fetchDeps=   ca-certificates   dirmngr   gnupg   wget  '),
])


5636) apt-get update

CommandNode(pos=(71, 85), parts=[
  WordNode(pos=(71, 78), word='apt-get'),
  WordNode(pos=(79, 85), word='update'),
])


5637) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(88, 141), parts=[
  WordNode(pos=(88, 95), word='apt-get'),
  WordNode(pos=(96, 103), word='install'),
  WordNode(pos=(104, 106), word='-y'),
  WordNode(pos=(107, 130), word='--no-install-recommends'),
  WordNode(pos=(131, 141), word='$fetchDeps', parts=[
    ParameterNode(pos=(131, 141), value='fetchDeps'),
  ]),
])


5638) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(144, 171), parts=[
  WordNode(pos=(144, 146), word='rm'),
  WordNode(pos=(147, 150), word='-rf'),
  WordNode(pos=(151, 171), word='/var/lib/apt/lists/*'),
])


5639) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


5640) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


5641) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


5642) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(471, 502), parts=[
  WordNode(pos=(471, 477), word='export'),
  WordNode(pos=(478, 502), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(491, 500), parts=[
        WordNode(pos=(491, 497), word='mktemp'),
        WordNode(pos=(498, 500), word='-d'),
      ]), pos=(489, 501)),
  ]),
])


5643) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(505, 608), parts=[
  WordNode(pos=(505, 508), word='gpg'),
  WordNode(pos=(509, 516), word='--batch'),
  WordNode(pos=(517, 528), word='--keyserver'),
  WordNode(pos=(529, 555), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(556, 567), word='--recv-keys'),
  WordNode(pos=(568, 608), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


5644) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(611, 675), parts=[
  WordNode(pos=(611, 614), word='gpg'),
  WordNode(pos=(615, 622), word='--batch'),
  WordNode(pos=(623, 631), word='--verify'),
  WordNode(pos=(632, 655), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(656, 675), word='/usr/local/bin/gosu'),
])


5645) gpgconf --kill all

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 685), word='gpgconf'),
  WordNode(pos=(686, 692), word='--kill'),
  WordNode(pos=(693, 696), word='all'),
])


5646) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(699, 741), parts=[
  WordNode(pos=(699, 701), word='rm'),
  WordNode(pos=(702, 704), word='-r'),
  WordNode(pos=(705, 717), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(706, 716), value='GNUPGHOME'),
  ]),
  WordNode(pos=(718, 741), word='/usr/local/bin/gosu.asc'),
])


5647) chmod +x /usr/local/bin/gosu

CommandNode(pos=(744, 772), parts=[
  WordNode(pos=(744, 749), word='chmod'),
  WordNode(pos=(750, 752), word='+x'),
  WordNode(pos=(753, 772), word='/usr/local/bin/gosu'),
])


5648) gosu nobody true

CommandNode(pos=(775, 791), parts=[
  WordNode(pos=(775, 779), word='gosu'),
  WordNode(pos=(780, 786), word='nobody'),
  WordNode(pos=(787, 791), word='true'),
])


5649) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(795, 836), parts=[
  WordNode(pos=(795, 802), word='apt-get'),
  WordNode(pos=(803, 808), word='purge'),
  WordNode(pos=(809, 811), word='-y'),
  WordNode(pos=(812, 825), word='--auto-remove'),
  WordNode(pos=(826, 836), word='$fetchDeps', parts=[
    ParameterNode(pos=(826, 836), value='fetchDeps'),
  ]),
])


5650) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5651) buildDeps='   ca-certificates   wget     gcc   libc6-dev   make  '

CommandNode(pos=(11, 77), parts=[
  AssignmentNode(pos=(11, 77), word='buildDeps=   ca-certificates   wget     gcc   libc6-dev   make  '),
])


5652) apt-get update

CommandNode(pos=(80, 94), parts=[
  WordNode(pos=(80, 87), word='apt-get'),
  WordNode(pos=(88, 94), word='update'),
])


5653) apt-get install -y $buildDeps --no-install-recommends

CommandNode(pos=(97, 150), parts=[
  WordNode(pos=(97, 104), word='apt-get'),
  WordNode(pos=(105, 112), word='install'),
  WordNode(pos=(113, 115), word='-y'),
  WordNode(pos=(116, 126), word='$buildDeps', parts=[
    ParameterNode(pos=(116, 126), value='buildDeps'),
  ]),
  WordNode(pos=(127, 150), word='--no-install-recommends'),
])


5654) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(153, 180), parts=[
  WordNode(pos=(153, 155), word='rm'),
  WordNode(pos=(156, 159), word='-rf'),
  WordNode(pos=(160, 180), word='/var/lib/apt/lists/*'),
])


5655) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(184, 226), parts=[
  WordNode(pos=(184, 188), word='wget'),
  WordNode(pos=(189, 191), word='-O'),
  WordNode(pos=(192, 204), word='redis.tar.gz'),
  WordNode(pos=(205, 226), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(206, 225), value='REDIS_DOWNLOAD_URL'),
  ]),
])


5656) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(229, 269), parts=[
  WordNode(pos=(229, 233), word='echo'),
  WordNode(pos=(234, 269), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(235, 254), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


5657) sha256sum -c -

CommandNode(pos=(272, 286), parts=[
  WordNode(pos=(272, 281), word='sha256sum'),
  WordNode(pos=(282, 284), word='-c'),
  WordNode(pos=(285, 286), word='-'),
])


5658) mkdir -p /usr/src/redis

CommandNode(pos=(289, 312), parts=[
  WordNode(pos=(289, 294), word='mkdir'),
  WordNode(pos=(295, 297), word='-p'),
  WordNode(pos=(298, 312), word='/usr/src/redis'),
])


5659) tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1

CommandNode(pos=(315, 375), parts=[
  WordNode(pos=(315, 318), word='tar'),
  WordNode(pos=(319, 323), word='-xzf'),
  WordNode(pos=(324, 336), word='redis.tar.gz'),
  WordNode(pos=(337, 339), word='-C'),
  WordNode(pos=(340, 354), word='/usr/src/redis'),
  WordNode(pos=(355, 375), word='--strip-components=1'),
])


5660) rm redis.tar.gz

CommandNode(pos=(378, 393), parts=[
  WordNode(pos=(378, 380), word='rm'),
  WordNode(pos=(381, 393), word='redis.tar.gz'),
])


5661) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h

CommandNode(pos=(397, 476), parts=[
  WordNode(pos=(397, 401), word='grep'),
  WordNode(pos=(402, 404), word='-q'),
  WordNode(pos=(405, 448), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 1$'),
  WordNode(pos=(449, 476), word='/usr/src/redis/src/server.h'),
])


5662) sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\1 0!' /usr/src/redis/src/server.h

CommandNode(pos=(479, 568), parts=[
  WordNode(pos=(479, 482), word='sed'),
  WordNode(pos=(483, 486), word='-ri'),
  WordNode(pos=(487, 540), word='s!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!'),
  WordNode(pos=(541, 568), word='/usr/src/redis/src/server.h'),
])


5663) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h

CommandNode(pos=(571, 650), parts=[
  WordNode(pos=(571, 575), word='grep'),
  WordNode(pos=(576, 578), word='-q'),
  WordNode(pos=(579, 622), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 0$'),
  WordNode(pos=(623, 650), word='/usr/src/redis/src/server.h'),
])


5664) make -C /usr/src/redis -j "$(nproc)"

CommandNode(pos=(654, 690), parts=[
  WordNode(pos=(654, 658), word='make'),
  WordNode(pos=(659, 661), word='-C'),
  WordNode(pos=(662, 676), word='/usr/src/redis'),
  WordNode(pos=(677, 679), word='-j'),
  WordNode(pos=(680, 690), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(683, 688), parts=[
        WordNode(pos=(683, 688), word='nproc'),
      ]), pos=(681, 689)),
  ]),
])


5665) make -C /usr/src/redis install

CommandNode(pos=(693, 723), parts=[
  WordNode(pos=(693, 697), word='make'),
  WordNode(pos=(698, 700), word='-C'),
  WordNode(pos=(701, 715), word='/usr/src/redis'),
  WordNode(pos=(716, 723), word='install'),
])


5666) rm -r /usr/src/redis

CommandNode(pos=(727, 747), parts=[
  WordNode(pos=(727, 729), word='rm'),
  WordNode(pos=(730, 732), word='-r'),
  WordNode(pos=(733, 747), word='/usr/src/redis'),
])


5667) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(751, 792), parts=[
  WordNode(pos=(751, 758), word='apt-get'),
  WordNode(pos=(759, 764), word='purge'),
  WordNode(pos=(765, 767), word='-y'),
  WordNode(pos=(768, 781), word='--auto-remove'),
  WordNode(pos=(782, 792), word='$buildDeps', parts=[
    ParameterNode(pos=(782, 792), value='buildDeps'),
  ]),
])


5668) mkdir /data

CommandNode(pos=(0, 11), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 11), word='/data'),
])


5669) chown redis:redis /data

CommandNode(pos=(15, 38), parts=[
  WordNode(pos=(15, 20), word='chown'),
  WordNode(pos=(21, 32), word='redis:redis'),
  WordNode(pos=(33, 38), word='/data'),
])


5670) groupadd -r cassandra --gid=999

CommandNode(pos=(0, 31), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 21), word='cassandra'),
  WordNode(pos=(22, 31), word='--gid=999'),
])


5671) useradd -r -g cassandra --uid=999 cassandra

CommandNode(pos=(35, 78), parts=[
  WordNode(pos=(35, 42), word='useradd'),
  WordNode(pos=(43, 45), word='-r'),
  WordNode(pos=(46, 48), word='-g'),
  WordNode(pos=(49, 58), word='cassandra'),
  WordNode(pos=(59, 68), word='--uid=999'),
  WordNode(pos=(69, 78), word='cassandra'),
])


5672) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5673) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


5674) apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2

CommandNode(pos=(27, 104), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 84), word='libjemalloc1'),
  WordNode(pos=(87, 93), word='procps'),
  WordNode(pos=(96, 104), word='iproute2'),
])


5675) command -v gpg > /dev/null

CommandNode(pos=(114, 140), parts=[
  WordNode(pos=(114, 121), word='command'),
  WordNode(pos=(122, 124), word='-v'),
  WordNode(pos=(125, 128), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
])


5676) apt-get install -y --no-install-recommends    dirmngr    gnupg

CommandNode(pos=(149, 211), parts=[
  WordNode(pos=(149, 156), word='apt-get'),
  WordNode(pos=(157, 164), word='install'),
  WordNode(pos=(165, 167), word='-y'),
  WordNode(pos=(168, 191), word='--no-install-recommends'),
  WordNode(pos=(195, 202), word='dirmngr'),
  WordNode(pos=(206, 211), word='gnupg'),
])


5677) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(222, 249), parts=[
  WordNode(pos=(222, 224), word='rm'),
  WordNode(pos=(225, 228), word='-rf'),
  WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
])


5678) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


5679) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


5680) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


5681) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


5682) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


5683) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


5684) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


5685) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


5686) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


5687) command -v gpgconf

CommandNode(pos=(613, 631), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
])


5688) gpgconf --kill all

CommandNode(pos=(635, 653), parts=[
  WordNode(pos=(635, 642), word='gpgconf'),
  WordNode(pos=(643, 649), word='--kill'),
  WordNode(pos=(650, 653), word='all'),
])


5689) :

CommandNode(pos=(657, 658), parts=[
  WordNode(pos=(657, 658), word=':'),
])


5690) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


5691) chmod +x /usr/local/bin/gosu

CommandNode(pos=(714, 742), parts=[
  WordNode(pos=(714, 719), word='chmod'),
  WordNode(pos=(720, 722), word='+x'),
  WordNode(pos=(723, 742), word='/usr/local/bin/gosu'),
])


5692) gosu nobody true

CommandNode(pos=(747, 763), parts=[
  WordNode(pos=(747, 751), word='gosu'),
  WordNode(pos=(752, 758), word='nobody'),
  WordNode(pos=(759, 763), word='true'),
])


5693) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(768, 819), parts=[
  WordNode(pos=(768, 775), word='apt-get'),
  WordNode(pos=(776, 781), word='purge'),
  WordNode(pos=(782, 784), word='-y'),
  WordNode(pos=(785, 798), word='--auto-remove'),
  WordNode(pos=(799, 814), word='ca-certificates'),
  WordNode(pos=(815, 819), word='wget'),
])


5694) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5695) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


5696) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


5697) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


5698) command -v gpgconf

CommandNode(pos=(222, 240), parts=[
  WordNode(pos=(222, 229), word='command'),
  WordNode(pos=(230, 232), word='-v'),
  WordNode(pos=(233, 240), word='gpgconf'),
])


5699) gpgconf --kill all

CommandNode(pos=(244, 262), parts=[
  WordNode(pos=(244, 251), word='gpgconf'),
  WordNode(pos=(252, 258), word='--kill'),
  WordNode(pos=(259, 262), word='all'),
])


5700) :

CommandNode(pos=(266, 267), parts=[
  WordNode(pos=(266, 267), word=':'),
])


5701) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


5702) apt-key list

CommandNode(pos=(292, 304), parts=[
  WordNode(pos=(292, 299), word='apt-key'),
  WordNode(pos=(300, 304), word='list'),
])


5703) ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh

CommandNode(pos=(0, 62), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 62), word='/docker-entrypoint.sh'),
])


5704) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


5705) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


5706) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


5707) rabbitmq-plugins enable --offline rabbitmq_management

CommandNode(pos=(0, 53), parts=[
  WordNode(pos=(0, 16), word='rabbitmq-plugins'),
  WordNode(pos=(17, 23), word='enable'),
  WordNode(pos=(24, 33), word='--offline'),
  WordNode(pos=(34, 53), word='rabbitmq_management'),
])


5708) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5709) erl -noinput -eval '   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  ' -- /plugins/rabbitmq_management-*.ez > /usr/local/bin/rabbitmqadmin

CommandNode(pos=(11, 422), parts=[
  WordNode(pos=(11, 14), word='erl'),
  WordNode(pos=(15, 23), word='-noinput'),
  WordNode(pos=(24, 29), word='-eval'),
  WordNode(pos=(30, 354), word='   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  '),
  WordNode(pos=(355, 357), word='--'),
  WordNode(pos=(358, 391), word='/plugins/rabbitmq_management-*.ez'),
  RedirectNode(output=
    WordNode(pos=(394, 422), word='/usr/local/bin/rabbitmqadmin'), pos=(392, 422), type='>'),
])


5710) [ -s /usr/local/bin/rabbitmqadmin ]

CommandNode(pos=(425, 460), parts=[
  WordNode(pos=(425, 426), word='['),
  WordNode(pos=(427, 429), word='-s'),
  WordNode(pos=(430, 458), word='/usr/local/bin/rabbitmqadmin'),
  WordNode(pos=(459, 460), word=']'),
])


5711) chmod +x /usr/local/bin/rabbitmqadmin

CommandNode(pos=(463, 500), parts=[
  WordNode(pos=(463, 468), word='chmod'),
  WordNode(pos=(469, 471), word='+x'),
  WordNode(pos=(472, 500), word='/usr/local/bin/rabbitmqadmin'),
])


5712) apk add --no-cache python

CommandNode(pos=(503, 528), parts=[
  WordNode(pos=(503, 506), word='apk'),
  WordNode(pos=(507, 510), word='add'),
  WordNode(pos=(511, 521), word='--no-cache'),
  WordNode(pos=(522, 528), word='python'),
])


5713) rabbitmqadmin --version

CommandNode(pos=(531, 554), parts=[
  WordNode(pos=(531, 544), word='rabbitmqadmin'),
  WordNode(pos=(545, 554), word='--version'),
])


5714) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5715) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


5716) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


5717) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


5718) apk add --no-cache   bash   sed

CommandNode(pos=(0, 31), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='bash'),
  WordNode(pos=(28, 31), word='sed'),
])


5719) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5720) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev

CommandNode(pos=(11, 117), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
])


5721) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(123, 191), parts=[
  WordNode(pos=(123, 147), word='docker-php-ext-configure'),
  WordNode(pos=(148, 150), word='gd'),
  WordNode(pos=(151, 170), word='--with-png-dir=/usr'),
  WordNode(pos=(171, 191), word='--with-jpeg-dir=/usr'),
])


5722) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(194, 262), parts=[
  WordNode(pos=(194, 216), word='docker-php-ext-install'),
  WordNode(pos=(219, 225), word='bcmath'),
  WordNode(pos=(228, 232), word='exif'),
  WordNode(pos=(235, 237), word='gd'),
  WordNode(pos=(240, 246), word='mysqli'),
  WordNode(pos=(249, 256), word='opcache'),
  WordNode(pos=(259, 262), word='zip'),
])


5723) pecl install imagick-3.4.4

CommandNode(pos=(267, 293), parts=[
  WordNode(pos=(267, 271), word='pecl'),
  WordNode(pos=(272, 279), word='install'),
  WordNode(pos=(280, 293), word='imagick-3.4.4'),
])


5724) docker-php-ext-enable imagick

CommandNode(pos=(296, 325), parts=[
  WordNode(pos=(296, 317), word='docker-php-ext-enable'),
  WordNode(pos=(318, 325), word='imagick'),
])


5725) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


5726) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(548, 601), parts=[
  WordNode(pos=(548, 551), word='apk'),
  WordNode(pos=(552, 555), word='add'),
  WordNode(pos=(556, 565), word='--virtual'),
  WordNode(pos=(566, 592), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(593, 601), word='$runDeps', parts=[
    ParameterNode(pos=(593, 601), value='runDeps'),
  ]),
])


5727) apk del .build-deps

CommandNode(pos=(604, 623), parts=[
  WordNode(pos=(604, 607), word='apk'),
  WordNode(pos=(608, 611), word='del'),
  WordNode(pos=(612, 623), word='.build-deps'),
])


5728) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


5729) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


5730) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


5731) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


5732) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


5733) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


5734) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


5735) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


5736) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


5737) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


5738) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


5739) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


5740) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


5741) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


5742) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


5743) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5744) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


5745) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


5746) sha1sum -c -

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 154), word='sha1sum'),
  WordNode(pos=(155, 157), word='-c'),
  WordNode(pos=(158, 159), word='-'),
])


5747) tar -xzf wordpress.tar.gz -C /usr/src/

CommandNode(pos=(162, 200), parts=[
  WordNode(pos=(162, 165), word='tar'),
  WordNode(pos=(166, 170), word='-xzf'),
  WordNode(pos=(171, 187), word='wordpress.tar.gz'),
  WordNode(pos=(188, 190), word='-C'),
  WordNode(pos=(191, 200), word='/usr/src/'),
])


5748) rm wordpress.tar.gz

CommandNode(pos=(203, 222), parts=[
  WordNode(pos=(203, 205), word='rm'),
  WordNode(pos=(206, 222), word='wordpress.tar.gz'),
])


5749) chown -R www-data:www-data /usr/src/wordpress

CommandNode(pos=(225, 270), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 233), word='-R'),
  WordNode(pos=(234, 251), word='www-data:www-data'),
  WordNode(pos=(252, 270), word='/usr/src/wordpress'),
])


5750) apk add --no-cache 'su-exec>=0.2'

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 33), word='su-exec>=0.2'),
])


5751) apk add --no-cache   bash

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='bash'),
])


5752) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5753) npm install -g "ghost-cli@$GHOST_CLI_VERSION"

CommandNode(pos=(11, 56), parts=[
  WordNode(pos=(11, 14), word='npm'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-g'),
  WordNode(pos=(26, 56), word='ghost-cli@$GHOST_CLI_VERSION', parts=[
    ParameterNode(pos=(37, 55), value='GHOST_CLI_VERSION'),
  ]),
])


5754) npm cache clean --force

CommandNode(pos=(59, 82), parts=[
  WordNode(pos=(59, 62), word='npm'),
  WordNode(pos=(63, 68), word='cache'),
  WordNode(pos=(69, 74), word='clean'),
  WordNode(pos=(75, 82), word='--force'),
])


5755) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5756) mkdir -p "$GHOST_INSTALL"

CommandNode(pos=(11, 36), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
  ]),
])


5757) chown node:node "$GHOST_INSTALL"

CommandNode(pos=(39, 71), parts=[
  WordNode(pos=(39, 44), word='chown'),
  WordNode(pos=(45, 54), word='node:node'),
  WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
  ]),
])


5758) su-exec node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 188), parts=[
  WordNode(pos=(75, 82), word='su-exec'),
  WordNode(pos=(83, 87), word='node'),
  WordNode(pos=(88, 93), word='ghost'),
  WordNode(pos=(94, 101), word='install'),
  WordNode(pos=(102, 118), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(103, 117), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(119, 123), word='--db'),
  WordNode(pos=(124, 131), word='sqlite3'),
  WordNode(pos=(132, 143), word='--no-prompt'),
  WordNode(pos=(144, 154), word='--no-stack'),
  WordNode(pos=(155, 165), word='--no-setup'),
  WordNode(pos=(166, 171), word='--dir'),
  WordNode(pos=(172, 188), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(173, 187), value='GHOST_INSTALL'),
  ]),
])


5759) cd "$GHOST_INSTALL"

CommandNode(pos=(192, 211), parts=[
  WordNode(pos=(192, 194), word='cd'),
  WordNode(pos=(195, 211), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(196, 210), value='GHOST_INSTALL'),
  ]),
])


5760) su-exec node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db"

CommandNode(pos=(214, 357), parts=[
  WordNode(pos=(214, 221), word='su-exec'),
  WordNode(pos=(222, 226), word='node'),
  WordNode(pos=(227, 232), word='ghost'),
  WordNode(pos=(233, 239), word='config'),
  WordNode(pos=(240, 244), word='--ip'),
  WordNode(pos=(245, 252), word='0.0.0.0'),
  WordNode(pos=(253, 259), word='--port'),
  WordNode(pos=(260, 264), word='2368'),
  WordNode(pos=(265, 276), word='--no-prompt'),
  WordNode(pos=(277, 281), word='--db'),
  WordNode(pos=(282, 289), word='sqlite3'),
  WordNode(pos=(290, 295), word='--url'),
  WordNode(pos=(296, 317), word='http://localhost:2368'),
  WordNode(pos=(318, 326), word='--dbpath'),
  WordNode(pos=(327, 357), word='$GHOST_CONTENT/data/ghost.db', parts=[
    ParameterNode(pos=(328, 342), value='GHOST_CONTENT'),
  ]),
])


5761) su-exec node ghost config paths.contentPath "$GHOST_CONTENT"

CommandNode(pos=(360, 420), parts=[
  WordNode(pos=(360, 367), word='su-exec'),
  WordNode(pos=(368, 372), word='node'),
  WordNode(pos=(373, 378), word='ghost'),
  WordNode(pos=(379, 385), word='config'),
  WordNode(pos=(386, 403), word='paths.contentPath'),
  WordNode(pos=(404, 420), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(405, 419), value='GHOST_CONTENT'),
  ]),
])


5762) su-exec node ln -s config.production.json "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(424, 506), parts=[
  WordNode(pos=(424, 431), word='su-exec'),
  WordNode(pos=(432, 436), word='node'),
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 442), word='-s'),
  WordNode(pos=(443, 465), word='config.production.json'),
  WordNode(pos=(466, 506), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(467, 481), value='GHOST_INSTALL'),
  ]),
])


5763) readlink -f "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(509, 561), parts=[
  WordNode(pos=(509, 517), word='readlink'),
  WordNode(pos=(518, 520), word='-f'),
  WordNode(pos=(521, 561), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(522, 536), value='GHOST_INSTALL'),
  ]),
])


5764) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(565, 614), parts=[
  WordNode(pos=(565, 567), word='mv'),
  WordNode(pos=(568, 584), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(569, 583), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(585, 614), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(586, 600), value='GHOST_INSTALL'),
  ]),
])


5765) mkdir -p "$GHOST_CONTENT"

CommandNode(pos=(617, 642), parts=[
  WordNode(pos=(617, 622), word='mkdir'),
  WordNode(pos=(623, 625), word='-p'),
  WordNode(pos=(626, 642), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(627, 641), value='GHOST_CONTENT'),
  ]),
])


5766) chown node:node "$GHOST_CONTENT"

CommandNode(pos=(645, 677), parts=[
  WordNode(pos=(645, 650), word='chown'),
  WordNode(pos=(651, 660), word='node:node'),
  WordNode(pos=(661, 677), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(662, 676), value='GHOST_CONTENT'),
  ]),
])


5767) "$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator" --version

CommandNode(pos=(681, 760), parts=[
  WordNode(pos=(681, 750), word='$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator', parts=[
    ParameterNode(pos=(682, 696), value='GHOST_INSTALL'),
  ]),
  WordNode(pos=(751, 760), word='--version'),
])


5768) cd "$GHOST_INSTALL/current"

CommandNode(pos=(764, 791), parts=[
  WordNode(pos=(764, 766), word='cd'),
  WordNode(pos=(767, 791), word='$GHOST_INSTALL/current', parts=[
    ParameterNode(pos=(768, 782), value='GHOST_INSTALL'),
  ]),
])


5769) sqlite3Version="$(npm view . optionalDependencies.sqlite3)"

CommandNode(pos=(794, 853), parts=[
  WordNode(pos=(794, 853), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(812, 851), parts=[
        WordNode(pos=(812, 815), word='npm'),
        WordNode(pos=(816, 820), word='view'),
        WordNode(pos=(821, 822), word='.'),
        WordNode(pos=(823, 851), word='optionalDependencies.sqlite3'),
      ]), pos=(810, 852)),
  ]),
])


5770) su-exec node yarn add "sqlite3@$sqlite3Version" --force

CommandNode(pos=(861, 916), parts=[
  WordNode(pos=(861, 868), word='su-exec'),
  WordNode(pos=(869, 873), word='node'),
  WordNode(pos=(874, 878), word='yarn'),
  WordNode(pos=(879, 882), word='add'),
  WordNode(pos=(883, 908), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(892, 907), value='sqlite3Version'),
  ]),
  WordNode(pos=(909, 916), word='--force'),
])


5771) apk add --no-cache --virtual .build-deps python make gcc g++ libc-dev

CommandNode(pos=(925, 994), parts=[
  WordNode(pos=(925, 928), word='apk'),
  WordNode(pos=(929, 932), word='add'),
  WordNode(pos=(933, 943), word='--no-cache'),
  WordNode(pos=(944, 953), word='--virtual'),
  WordNode(pos=(954, 965), word='.build-deps'),
  WordNode(pos=(966, 972), word='python'),
  WordNode(pos=(973, 977), word='make'),
  WordNode(pos=(978, 981), word='gcc'),
  WordNode(pos=(982, 985), word='g++'),
  WordNode(pos=(986, 994), word='libc-dev'),
])


5772) su-exec node yarn add "sqlite3@$sqlite3Version" --force --build-from-source

CommandNode(pos=(1000, 1075), parts=[
  WordNode(pos=(1000, 1007), word='su-exec'),
  WordNode(pos=(1008, 1012), word='node'),
  WordNode(pos=(1013, 1017), word='yarn'),
  WordNode(pos=(1018, 1021), word='add'),
  WordNode(pos=(1022, 1047), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(1031, 1046), value='sqlite3Version'),
  ]),
  WordNode(pos=(1048, 1055), word='--force'),
  WordNode(pos=(1056, 1075), word='--build-from-source'),
])


5773) apk del --no-network .build-deps

CommandNode(pos=(1081, 1113), parts=[
  WordNode(pos=(1081, 1084), word='apk'),
  WordNode(pos=(1085, 1088), word='del'),
  WordNode(pos=(1089, 1101), word='--no-network'),
  WordNode(pos=(1102, 1113), word='.build-deps'),
])


5774) su-exec node yarn cache clean

CommandNode(pos=(1122, 1151), parts=[
  WordNode(pos=(1122, 1129), word='su-exec'),
  WordNode(pos=(1130, 1134), word='node'),
  WordNode(pos=(1135, 1139), word='yarn'),
  WordNode(pos=(1140, 1145), word='cache'),
  WordNode(pos=(1146, 1151), word='clean'),
])


5775) su-exec node npm cache clean --force

CommandNode(pos=(1154, 1190), parts=[
  WordNode(pos=(1154, 1161), word='su-exec'),
  WordNode(pos=(1162, 1166), word='node'),
  WordNode(pos=(1167, 1170), word='npm'),
  WordNode(pos=(1171, 1176), word='cache'),
  WordNode(pos=(1177, 1182), word='clean'),
  WordNode(pos=(1183, 1190), word='--force'),
])


5776) npm cache clean --force

CommandNode(pos=(1193, 1216), parts=[
  WordNode(pos=(1193, 1196), word='npm'),
  WordNode(pos=(1197, 1202), word='cache'),
  WordNode(pos=(1203, 1208), word='clean'),
  WordNode(pos=(1209, 1216), word='--force'),
])


5777) rm -rv /tmp/yarn* /tmp/v8*

CommandNode(pos=(1219, 1245), parts=[
  WordNode(pos=(1219, 1221), word='rm'),
  WordNode(pos=(1222, 1225), word='-rv'),
  WordNode(pos=(1226, 1236), word='/tmp/yarn*'),
  WordNode(pos=(1237, 1245), word='/tmp/v8*'),
])


5778) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5779) apt-get install -y --no-install-recommends   libssl-dev   tk-dev   uuid-dev

CommandNode(pos=(18, 93), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 73), word='libssl-dev'),
  WordNode(pos=(76, 82), word='tk-dev'),
  WordNode(pos=(85, 93), word='uuid-dev'),
])


5780) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(98, 125), parts=[
  WordNode(pos=(98, 100), word='rm'),
  WordNode(pos=(101, 104), word='-rf'),
  WordNode(pos=(105, 125), word='/var/lib/apt/lists/*'),
])


5781) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5782) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


5783) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


5784) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


5785) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


5786) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


5787) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


5788) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


5789) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


5790) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


5791) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


5792) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


5793) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


5794) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


5795) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


5796) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


5797) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


5798) make install

CommandNode(pos=(920, 932), parts=[
  WordNode(pos=(920, 924), word='make'),
  WordNode(pos=(925, 932), word='install'),
])


5799) ldconfig

CommandNode(pos=(937, 945), parts=[
  WordNode(pos=(937, 945), word='ldconfig'),
])


5800) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(951, 1118), parts=[
  WordNode(pos=(951, 955), word='find'),
  WordNode(pos=(956, 966), word='/usr/local'),
  WordNode(pos=(967, 973), word='-depth'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(982, 984), word='('),
  WordNode(pos=(985, 990), word='-type'),
  WordNode(pos=(991, 992), word='d'),
  WordNode(pos=(993, 995), word='-a'),
  WordNode(pos=(996, 998), word='('),
  WordNode(pos=(999, 1004), word='-name'),
  WordNode(pos=(1005, 1009), word='test'),
  WordNode(pos=(1010, 1012), word='-o'),
  WordNode(pos=(1013, 1018), word='-name'),
  WordNode(pos=(1019, 1024), word='tests'),
  WordNode(pos=(1025, 1027), word=')'),
  WordNode(pos=(1028, 1030), word=')'),
  WordNode(pos=(1034, 1036), word='-o'),
  WordNode(pos=(1040, 1042), word='('),
  WordNode(pos=(1043, 1048), word='-type'),
  WordNode(pos=(1049, 1050), word='f'),
  WordNode(pos=(1051, 1053), word='-a'),
  WordNode(pos=(1054, 1056), word='('),
  WordNode(pos=(1057, 1062), word='-name'),
  WordNode(pos=(1063, 1070), word='*.pyc'),
  WordNode(pos=(1071, 1073), word='-o'),
  WordNode(pos=(1074, 1079), word='-name'),
  WordNode(pos=(1080, 1087), word='*.pyo'),
  WordNode(pos=(1088, 1090), word=')'),
  WordNode(pos=(1091, 1093), word=')'),
  WordNode(pos=(1096, 1098), word=')'),
  WordNode(pos=(1099, 1104), word='-exec'),
  WordNode(pos=(1105, 1107), word='rm'),
  WordNode(pos=(1108, 1111), word='-rf'),
  WordNode(pos=(1112, 1116), word='{}'),
  WordNode(pos=(1117, 1118), word='+'),
])


5801) rm -rf /usr/src/python

CommandNode(pos=(1123, 1145), parts=[
  WordNode(pos=(1123, 1125), word='rm'),
  WordNode(pos=(1126, 1129), word='-rf'),
  WordNode(pos=(1130, 1145), word='/usr/src/python'),
])


5802) python3 --version

CommandNode(pos=(1151, 1168), parts=[
  WordNode(pos=(1151, 1158), word='python3'),
  WordNode(pos=(1159, 1168), word='--version'),
])


5803) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


5804) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


5805) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


5806) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


5807) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


5808) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5809) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


5810) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


5811) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


5812) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


5813) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


5814) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5815) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


5816) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


5817) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5818) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


5819) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


5820) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


5821) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


5822) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


5823) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


5824) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


5825) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


5826) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


5827) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


5828) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


5829) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


5830) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


5831) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


5832) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5833) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


5834) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


5835) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


5836) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


5837) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


5838) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


5839) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


5840) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


5841) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


5842) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


5843) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


5844) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


5845) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


5846) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   zlib-dev

CommandNode(pos=(719, 1019), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1019), word='zlib-dev'),
])


5847) apk del .fetch-deps

CommandNode(pos=(1024, 1043), parts=[
  WordNode(pos=(1024, 1027), word='apk'),
  WordNode(pos=(1028, 1031), word='del'),
  WordNode(pos=(1032, 1043), word='.fetch-deps'),
])


5848) cd /usr/src/python

CommandNode(pos=(1049, 1067), parts=[
  WordNode(pos=(1049, 1051), word='cd'),
  WordNode(pos=(1052, 1067), word='/usr/src/python'),
])


5849) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1072, 1129), parts=[
  AssignmentNode(pos=(1072, 1129), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1083, 1127), parts=[
        WordNode(pos=(1083, 1100), word='dpkg-architecture'),
        WordNode(pos=(1101, 1108), word='--query'),
        WordNode(pos=(1109, 1127), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1081, 1128)),
  ]),
])


5850) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4   --with-system-expat   --with-system-ffi

CommandNode(pos=(1134, 1250), parts=[
  WordNode(pos=(1134, 1145), word='./configure'),
  WordNode(pos=(1148, 1166), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1157, 1165), value='gnuArch'),
  ]),
  WordNode(pos=(1169, 1184), word='--enable-shared'),
  WordNode(pos=(1187, 1208), word='--enable-unicode=ucs4'),
  WordNode(pos=(1211, 1230), word='--with-system-expat'),
  WordNode(pos=(1233, 1250), word='--with-system-ffi'),
])


5851) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1255, 1319), parts=[
  WordNode(pos=(1255, 1259), word='make'),
  WordNode(pos=(1260, 1262), word='-j'),
  WordNode(pos=(1263, 1273), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1266, 1271), parts=[
        WordNode(pos=(1266, 1271), word='nproc'),
      ]), pos=(1264, 1272)),
  ]),
  WordNode(pos=(1276, 1319), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


5852) make install

CommandNode(pos=(1324, 1336), parts=[
  WordNode(pos=(1324, 1328), word='make'),
  WordNode(pos=(1329, 1336), word='install'),
])


5853) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1342, 1465), parts=[
  WordNode(pos=(1342, 1346), word='find'),
  WordNode(pos=(1347, 1357), word='/usr/local'),
  WordNode(pos=(1358, 1363), word='-type'),
  WordNode(pos=(1364, 1365), word='f'),
  WordNode(pos=(1366, 1377), word='-executable'),
  WordNode(pos=(1378, 1382), word='-not'),
  WordNode(pos=(1383, 1385), word='('),
  WordNode(pos=(1386, 1391), word='-name'),
  WordNode(pos=(1392, 1403), word='*tkinter*'),
  WordNode(pos=(1404, 1406), word=')'),
  WordNode(pos=(1407, 1412), word='-exec'),
  WordNode(pos=(1413, 1420), word='scanelf'),
  WordNode(pos=(1421, 1429), word='--needed'),
  WordNode(pos=(1430, 1440), word='--nobanner'),
  WordNode(pos=(1441, 1449), word='--format'),
  WordNode(pos=(1450, 1456), word='%n#p'),
  WordNode(pos=(1457, 1461), word='{}'),
  WordNode(pos=(1462, 1465), word=';'),
])


5854) tr ',' '\n'

CommandNode(pos=(1470, 1481), parts=[
  WordNode(pos=(1470, 1472), word='tr'),
  WordNode(pos=(1473, 1476), word=','),
  WordNode(pos=(1477, 1481), word='\\n'),
])


5855) sort -u

CommandNode(pos=(1486, 1493), parts=[
  WordNode(pos=(1486, 1490), word='sort'),
  WordNode(pos=(1491, 1493), word='-u'),
])


5856) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1498, 1575), parts=[
  WordNode(pos=(1498, 1501), word='awk'),
  WordNode(pos=(1502, 1575), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


5857) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1580, 1634), parts=[
  WordNode(pos=(1580, 1585), word='xargs'),
  WordNode(pos=(1586, 1589), word='-rt'),
  WordNode(pos=(1590, 1593), word='apk'),
  WordNode(pos=(1594, 1597), word='add'),
  WordNode(pos=(1598, 1608), word='--no-cache'),
  WordNode(pos=(1609, 1618), word='--virtual'),
  WordNode(pos=(1619, 1634), word='.python-rundeps'),
])


5858) apk del .build-deps

CommandNode(pos=(1639, 1658), parts=[
  WordNode(pos=(1639, 1642), word='apk'),
  WordNode(pos=(1643, 1646), word='del'),
  WordNode(pos=(1647, 1658), word='.build-deps'),
])


5859) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1664, 1831), parts=[
  WordNode(pos=(1664, 1668), word='find'),
  WordNode(pos=(1669, 1679), word='/usr/local'),
  WordNode(pos=(1680, 1686), word='-depth'),
  WordNode(pos=(1689, 1691), word='('),
  WordNode(pos=(1695, 1697), word='('),
  WordNode(pos=(1698, 1703), word='-type'),
  WordNode(pos=(1704, 1705), word='d'),
  WordNode(pos=(1706, 1708), word='-a'),
  WordNode(pos=(1709, 1711), word='('),
  WordNode(pos=(1712, 1717), word='-name'),
  WordNode(pos=(1718, 1722), word='test'),
  WordNode(pos=(1723, 1725), word='-o'),
  WordNode(pos=(1726, 1731), word='-name'),
  WordNode(pos=(1732, 1737), word='tests'),
  WordNode(pos=(1738, 1740), word=')'),
  WordNode(pos=(1741, 1743), word=')'),
  WordNode(pos=(1747, 1749), word='-o'),
  WordNode(pos=(1753, 1755), word='('),
  WordNode(pos=(1756, 1761), word='-type'),
  WordNode(pos=(1762, 1763), word='f'),
  WordNode(pos=(1764, 1766), word='-a'),
  WordNode(pos=(1767, 1769), word='('),
  WordNode(pos=(1770, 1775), word='-name'),
  WordNode(pos=(1776, 1783), word='*.pyc'),
  WordNode(pos=(1784, 1786), word='-o'),
  WordNode(pos=(1787, 1792), word='-name'),
  WordNode(pos=(1793, 1800), word='*.pyo'),
  WordNode(pos=(1801, 1803), word=')'),
  WordNode(pos=(1804, 1806), word=')'),
  WordNode(pos=(1809, 1811), word=')'),
  WordNode(pos=(1812, 1817), word='-exec'),
  WordNode(pos=(1818, 1820), word='rm'),
  WordNode(pos=(1821, 1824), word='-rf'),
  WordNode(pos=(1825, 1829), word='{}'),
  WordNode(pos=(1830, 1831), word='+'),
])


5860) rm -rf /usr/src/python

CommandNode(pos=(1836, 1858), parts=[
  WordNode(pos=(1836, 1838), word='rm'),
  WordNode(pos=(1839, 1842), word='-rf'),
  WordNode(pos=(1843, 1858), word='/usr/src/python'),
])


5861) python2 --version

CommandNode(pos=(1864, 1881), parts=[
  WordNode(pos=(1864, 1871), word='python2'),
  WordNode(pos=(1872, 1881), word='--version'),
])


5862) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5863) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


5864) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


5865) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


5866) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


5867) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


5868) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5869) apt-get install -y --no-install-recommends   tcl   tk

CommandNode(pos=(18, 71), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='tcl'),
  WordNode(pos=(69, 71), word='tk'),
])


5870) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(76, 103), parts=[
  WordNode(pos=(76, 78), word='rm'),
  WordNode(pos=(79, 82), word='-rf'),
  WordNode(pos=(83, 103), word='/var/lib/apt/lists/*'),
])


5871) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5872) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


5873) pypy3 get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 164), parts=[
  WordNode(pos=(72, 77), word='pypy3'),
  WordNode(pos=(78, 88), word='get-pip.py'),
  WordNode(pos=(91, 118), word='--disable-pip-version-check'),
  WordNode(pos=(121, 135), word='--no-cache-dir'),
  WordNode(pos=(138, 164), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(144, 163), value='PYTHON_PIP_VERSION'),
  ]),
])


5874) pip --version

CommandNode(pos=(169, 182), parts=[
  WordNode(pos=(169, 172), word='pip'),
  WordNode(pos=(173, 182), word='--version'),
])


5875) rm -f get-pip.py

CommandNode(pos=(186, 202), parts=[
  WordNode(pos=(186, 188), word='rm'),
  WordNode(pos=(189, 191), word='-f'),
  WordNode(pos=(192, 202), word='get-pip.py'),
])


5876) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5877) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


5878) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


5879) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5880) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


5881) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


5882) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


5883) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


5884) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5885) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


5886) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


5887) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5888) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


5889) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


5890) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


5891) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


5892) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5893) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


5894) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


5895) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


5896) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


5897) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


5898) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


5899) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5900) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


5901) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


5902) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


5903) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


5904) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


5905) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


5906) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


5907) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


5908) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


5909) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


5910) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


5911) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


5912) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


5913) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


5914) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


5915) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


5916) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


5917) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


5918) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


5919) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


5920) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


5921) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


5922) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


5923) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


5924) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


5925) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


5926) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


5927) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


5928) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


5929) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


5930) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5931) cd /usr/local/etc

CommandNode(pos=(12, 29), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 29), word='/usr/local/etc'),
])


5932) [ -d php-fpm.d ]

CommandNode(pos=(37, 53), parts=[
  WordNode(pos=(37, 38), word='['),
  WordNode(pos=(39, 41), word='-d'),
  WordNode(pos=(42, 51), word='php-fpm.d'),
  WordNode(pos=(52, 53), word=']'),
])


5933) sed 's!=NONE/!=!g' php-fpm.conf.default

CommandNode(pos=(62, 101), parts=[
  WordNode(pos=(62, 65), word='sed'),
  WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
  WordNode(pos=(81, 101), word='php-fpm.conf.default'),
])


5934) tee php-fpm.conf > /dev/null

CommandNode(pos=(104, 132), parts=[
  WordNode(pos=(104, 107), word='tee'),
  WordNode(pos=(108, 120), word='php-fpm.conf'),
  RedirectNode(output=
    WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
])


5935) cp php-fpm.d/www.conf.default php-fpm.d/www.conf

CommandNode(pos=(136, 184), parts=[
  WordNode(pos=(136, 138), word='cp'),
  WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
  WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
])


5936) mkdir php-fpm.d

CommandNode(pos=(194, 209), parts=[
  WordNode(pos=(194, 199), word='mkdir'),
  WordNode(pos=(200, 209), word='php-fpm.d'),
])


5937) cp php-fpm.conf.default php-fpm.d/www.conf

CommandNode(pos=(213, 255), parts=[
  WordNode(pos=(213, 215), word='cp'),
  WordNode(pos=(216, 236), word='php-fpm.conf.default'),
  WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
])


5938) echo '[global]'

CommandNode(pos=(264, 279), parts=[
  WordNode(pos=(264, 268), word='echo'),
  WordNode(pos=(269, 279), word='[global]'),
])


5939) echo 'include=etc/php-fpm.d/*.conf'

CommandNode(pos=(284, 319), parts=[
  WordNode(pos=(284, 288), word='echo'),
  WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
])


5940) tee php-fpm.conf

CommandNode(pos=(327, 343), parts=[
  WordNode(pos=(327, 330), word='tee'),
  WordNode(pos=(331, 343), word='php-fpm.conf'),
])


5941) echo '[global]'

CommandNode(pos=(357, 372), parts=[
  WordNode(pos=(357, 361), word='echo'),
  WordNode(pos=(362, 372), word='[global]'),
])


5942) echo 'error_log = /proc/self/fd/2'

CommandNode(pos=(376, 410), parts=[
  WordNode(pos=(376, 380), word='echo'),
  WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
])


5943) echo

CommandNode(pos=(414, 418), parts=[
  WordNode(pos=(414, 418), word='echo'),
])


5944) echo '[www]'

CommandNode(pos=(422, 434), parts=[
  WordNode(pos=(422, 426), word='echo'),
  WordNode(pos=(427, 434), word='[www]'),
])


5945) echo '; if we send this to /proc/self/fd/1, it never appears'

CommandNode(pos=(438, 499), parts=[
  WordNode(pos=(438, 442), word='echo'),
  WordNode(pos=(443, 499), word='; if we send this to /proc/self/fd/1, it never appears'),
])


5946) echo 'access.log = /proc/self/fd/2'

CommandNode(pos=(503, 538), parts=[
  WordNode(pos=(503, 507), word='echo'),
  WordNode(pos=(508, 538), word='access.log = /proc/self/fd/2'),
])


5947) echo

CommandNode(pos=(542, 546), parts=[
  WordNode(pos=(542, 546), word='echo'),
])


5948) echo 'clear_env = no'

CommandNode(pos=(550, 571), parts=[
  WordNode(pos=(550, 554), word='echo'),
  WordNode(pos=(555, 571), word='clear_env = no'),
])


5949) echo

CommandNode(pos=(575, 579), parts=[
  WordNode(pos=(575, 579), word='echo'),
])


5950) echo '; Ensure worker stdout and stderr are sent to the main error log.'

CommandNode(pos=(583, 655), parts=[
  WordNode(pos=(583, 587), word='echo'),
  WordNode(pos=(588, 655), word='; Ensure worker stdout and stderr are sent to the main error log.'),
])


5951) echo 'catch_workers_output = yes'

CommandNode(pos=(659, 692), parts=[
  WordNode(pos=(659, 663), word='echo'),
  WordNode(pos=(664, 692), word='catch_workers_output = yes'),
])


5952) tee php-fpm.d/docker.conf

CommandNode(pos=(699, 724), parts=[
  WordNode(pos=(699, 702), word='tee'),
  WordNode(pos=(703, 724), word='php-fpm.d/docker.conf'),
])


5953) echo '[global]'

CommandNode(pos=(733, 748), parts=[
  WordNode(pos=(733, 737), word='echo'),
  WordNode(pos=(738, 748), word='[global]'),
])


5954) echo 'daemonize = no'

CommandNode(pos=(752, 773), parts=[
  WordNode(pos=(752, 756), word='echo'),
  WordNode(pos=(757, 773), word='daemonize = no'),
])


5955) echo

CommandNode(pos=(777, 781), parts=[
  WordNode(pos=(777, 781), word='echo'),
])


5956) echo '[www]'

CommandNode(pos=(785, 797), parts=[
  WordNode(pos=(785, 789), word='echo'),
  WordNode(pos=(790, 797), word='[www]'),
])


5957) echo 'listen = 9000'

CommandNode(pos=(801, 821), parts=[
  WordNode(pos=(801, 805), word='echo'),
  WordNode(pos=(806, 821), word='listen = 9000'),
])


5958) tee php-fpm.d/zz-docker.conf

CommandNode(pos=(828, 856), parts=[
  WordNode(pos=(828, 831), word='tee'),
  WordNode(pos=(832, 856), word='php-fpm.d/zz-docker.conf'),
])


5959) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


5960) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


5961) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


5962) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


5963) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


5964) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5965) groupadd -r postgres --gid=999

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 22), word='-r'),
  WordNode(pos=(23, 31), word='postgres'),
  WordNode(pos=(32, 41), word='--gid=999'),
])


5966) useradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres

CommandNode(pos=(44, 134), parts=[
  WordNode(pos=(44, 51), word='useradd'),
  WordNode(pos=(52, 54), word='-r'),
  WordNode(pos=(55, 57), word='-g'),
  WordNode(pos=(58, 66), word='postgres'),
  WordNode(pos=(67, 76), word='--uid=999'),
  WordNode(pos=(77, 107), word='--home-dir=/var/lib/postgresql'),
  WordNode(pos=(108, 125), word='--shell=/bin/bash'),
  WordNode(pos=(126, 134), word='postgres'),
])


5967) mkdir -p /var/lib/postgresql

CommandNode(pos=(137, 165), parts=[
  WordNode(pos=(137, 142), word='mkdir'),
  WordNode(pos=(143, 145), word='-p'),
  WordNode(pos=(146, 165), word='/var/lib/postgresql'),
])


5968) chown -R postgres:postgres /var/lib/postgresql

CommandNode(pos=(168, 214), parts=[
  WordNode(pos=(168, 173), word='chown'),
  WordNode(pos=(174, 176), word='-R'),
  WordNode(pos=(177, 194), word='postgres:postgres'),
  WordNode(pos=(195, 214), word='/var/lib/postgresql'),
])


5969) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


5970) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


5971) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


5972) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


5973) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


5974) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


5975) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


5976) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


5977) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


5978) command -v gpgconf > /dev/null

CommandNode(pos=(613, 643), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(634, 643), word='/dev/null'), pos=(632, 643), type='>'),
])


5979) gpgconf --kill all

CommandNode(pos=(647, 665), parts=[
  WordNode(pos=(647, 654), word='gpgconf'),
  WordNode(pos=(655, 661), word='--kill'),
  WordNode(pos=(662, 665), word='all'),
])


5980) :

CommandNode(pos=(669, 670), parts=[
  WordNode(pos=(669, 670), word=':'),
])


5981) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


5982) chmod +x /usr/local/bin/gosu

CommandNode(pos=(726, 754), parts=[
  WordNode(pos=(726, 731), word='chmod'),
  WordNode(pos=(732, 734), word='+x'),
  WordNode(pos=(735, 754), word='/usr/local/bin/gosu'),
])


5983) gosu nobody true

CommandNode(pos=(759, 775), parts=[
  WordNode(pos=(759, 763), word='gosu'),
  WordNode(pos=(764, 770), word='nobody'),
  WordNode(pos=(771, 775), word='true'),
])


5984) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(780, 831), parts=[
  WordNode(pos=(780, 787), word='apt-get'),
  WordNode(pos=(788, 793), word='purge'),
  WordNode(pos=(794, 796), word='-y'),
  WordNode(pos=(797, 810), word='--auto-remove'),
  WordNode(pos=(811, 826), word='ca-certificates'),
  WordNode(pos=(827, 831), word='wget'),
])


5985) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5986) [ -f /etc/dpkg/dpkg.cfg.d/docker ]

CommandNode(pos=(14, 48), parts=[
  WordNode(pos=(14, 15), word='['),
  WordNode(pos=(16, 18), word='-f'),
  WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
  WordNode(pos=(47, 48), word=']'),
])


5987) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(57, 112), parts=[
  WordNode(pos=(57, 61), word='grep'),
  WordNode(pos=(62, 64), word='-q'),
  WordNode(pos=(65, 84), word='/usr/share/locale'),
  WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


5988) sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(116, 177), parts=[
  WordNode(pos=(116, 119), word='sed'),
  WordNode(pos=(120, 123), word='-ri'),
  WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
  WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


5989) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(183, 238), parts=[
  WordNode(pos=(183, 187), word='grep'),
  WordNode(pos=(188, 190), word='-q'),
  WordNode(pos=(191, 210), word='/usr/share/locale'),
  WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


5990) apt-get update

CommandNode(pos=(246, 260), parts=[
  WordNode(pos=(246, 253), word='apt-get'),
  WordNode(pos=(254, 260), word='update'),
])


5991) apt-get install -y locales

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 269), word='apt-get'),
  WordNode(pos=(270, 277), word='install'),
  WordNode(pos=(278, 280), word='-y'),
  WordNode(pos=(281, 288), word='locales'),
])


5992) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(290, 317), parts=[
  WordNode(pos=(290, 292), word='rm'),
  WordNode(pos=(293, 296), word='-rf'),
  WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
])


5993) localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

CommandNode(pos=(320, 396), parts=[
  WordNode(pos=(320, 329), word='localedef'),
  WordNode(pos=(330, 332), word='-i'),
  WordNode(pos=(333, 338), word='en_US'),
  WordNode(pos=(339, 341), word='-c'),
  WordNode(pos=(342, 344), word='-f'),
  WordNode(pos=(345, 350), word='UTF-8'),
  WordNode(pos=(351, 353), word='-A'),
  WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
  WordNode(pos=(385, 396), word='en_US.UTF-8'),
])


5994) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


5995) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


5996) apt-get install -y --no-install-recommends libnss-wrapper

CommandNode(pos=(28, 85), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 85), word='libnss-wrapper'),
])


5997) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(88, 115), parts=[
  WordNode(pos=(88, 90), word='rm'),
  WordNode(pos=(91, 94), word='-rf'),
  WordNode(pos=(95, 115), word='/var/lib/apt/lists/*'),
])


5998) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


5999) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6000) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


6001) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


6002) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


6003) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


6004) command -v gpgconf > /dev/null

CommandNode(pos=(233, 263), parts=[
  WordNode(pos=(233, 240), word='command'),
  WordNode(pos=(241, 243), word='-v'),
  WordNode(pos=(244, 251), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(254, 263), word='/dev/null'), pos=(252, 263), type='>'),
])


6005) gpgconf --kill all

CommandNode(pos=(267, 285), parts=[
  WordNode(pos=(267, 274), word='gpgconf'),
  WordNode(pos=(275, 281), word='--kill'),
  WordNode(pos=(282, 285), word='all'),
])


6006) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


6007) apt-key list

CommandNode(pos=(310, 322), parts=[
  WordNode(pos=(310, 317), word='apt-key'),
  WordNode(pos=(318, 322), word='list'),
])


6008) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6009) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


6010) cp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(158, 258), parts=[
  WordNode(pos=(158, 160), word='cp'),
  WordNode(pos=(161, 163), word='-v'),
  WordNode(pos=(164, 213), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(214, 258), word='/usr/share/postgresql/postgresql.conf.sample'),
])


6011) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


6012) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(331, 431), parts=[
  WordNode(pos=(331, 334), word='sed'),
  WordNode(pos=(335, 338), word='-ri'),
  WordNode(pos=(339, 386), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(387, 431), word='/usr/share/postgresql/postgresql.conf.sample'),
])


6013) grep -F "listen_addresses = '*'" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(434, 511), parts=[
  WordNode(pos=(434, 438), word='grep'),
  WordNode(pos=(439, 441), word='-F'),
  WordNode(pos=(442, 466), word="listen_addresses = '*'"),
  WordNode(pos=(467, 511), word='/usr/share/postgresql/postgresql.conf.sample'),
])


6014) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


6015) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


6016) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


6017) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


6018) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


6019) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


6020) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


6021) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6022) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


6023) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


6024) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


6025) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


6026) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


6027) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


6028) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6029) apk add --no-cache --virtual .fetch-deps   ca-certificates   openssl   tar

CommandNode(pos=(13, 87), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 53), word='.fetch-deps'),
  WordNode(pos=(56, 71), word='ca-certificates'),
  WordNode(pos=(74, 81), word='openssl'),
  WordNode(pos=(84, 87), word='tar'),
])


6030) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


6031) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


6032) sha256sum -c -

CommandNode(pos=(248, 262), parts=[
  WordNode(pos=(248, 257), word='sha256sum'),
  WordNode(pos=(258, 260), word='-c'),
  WordNode(pos=(261, 262), word='-'),
])


6033) mkdir -p /usr/src/postgresql

CommandNode(pos=(267, 295), parts=[
  WordNode(pos=(267, 272), word='mkdir'),
  WordNode(pos=(273, 275), word='-p'),
  WordNode(pos=(276, 295), word='/usr/src/postgresql'),
])


6034) tar   --extract   --file postgresql.tar.bz2   --directory /usr/src/postgresql   --strip-components 1

CommandNode(pos=(300, 400), parts=[
  WordNode(pos=(300, 303), word='tar'),
  WordNode(pos=(306, 315), word='--extract'),
  WordNode(pos=(318, 324), word='--file'),
  WordNode(pos=(325, 343), word='postgresql.tar.bz2'),
  WordNode(pos=(346, 357), word='--directory'),
  WordNode(pos=(358, 377), word='/usr/src/postgresql'),
  WordNode(pos=(380, 398), word='--strip-components'),
  WordNode(pos=(399, 400), word='1'),
])


6035) rm postgresql.tar.bz2

CommandNode(pos=(405, 426), parts=[
  WordNode(pos=(405, 407), word='rm'),
  WordNode(pos=(408, 426), word='postgresql.tar.bz2'),
])


6036) apk add --no-cache --virtual .build-deps   bison   coreutils   dpkg-dev dpkg   flex   gcc   libc-dev   libedit-dev   libxml2-dev   libxslt-dev   linux-headers   make   openssl-dev   perl-utils   perl-ipc-run   util-linux-dev   zlib-dev

CommandNode(pos=(432, 667), parts=[
  WordNode(pos=(432, 435), word='apk'),
  WordNode(pos=(436, 439), word='add'),
  WordNode(pos=(440, 450), word='--no-cache'),
  WordNode(pos=(451, 460), word='--virtual'),
  WordNode(pos=(461, 472), word='.build-deps'),
  WordNode(pos=(475, 480), word='bison'),
  WordNode(pos=(483, 492), word='coreutils'),
  WordNode(pos=(495, 503), word='dpkg-dev'),
  WordNode(pos=(504, 508), word='dpkg'),
  WordNode(pos=(511, 515), word='flex'),
  WordNode(pos=(518, 521), word='gcc'),
  WordNode(pos=(524, 532), word='libc-dev'),
  WordNode(pos=(535, 546), word='libedit-dev'),
  WordNode(pos=(549, 560), word='libxml2-dev'),
  WordNode(pos=(563, 574), word='libxslt-dev'),
  WordNode(pos=(577, 590), word='linux-headers'),
  WordNode(pos=(593, 597), word='make'),
  WordNode(pos=(600, 611), word='openssl-dev'),
  WordNode(pos=(614, 624), word='perl-utils'),
  WordNode(pos=(627, 639), word='perl-ipc-run'),
  WordNode(pos=(642, 656), word='util-linux-dev'),
  WordNode(pos=(659, 667), word='zlib-dev'),
])


6037) cd /usr/src/postgresql

CommandNode(pos=(673, 695), parts=[
  WordNode(pos=(673, 675), word='cd'),
  WordNode(pos=(676, 695), word='/usr/src/postgresql'),
])


6038) awk '$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\"/tmp\"" { $3 = "\"/var/run/postgresql\""; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new

CommandNode(pos=(700, 899), parts=[
  WordNode(pos=(700, 703), word='awk'),
  WordNode(pos=(704, 831), word='$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\\"/tmp\\"" { $3 = "\\"/var/run/postgresql\\""; print; next } { print }'),
  WordNode(pos=(832, 862), word='src/include/pg_config_manual.h'),
  RedirectNode(output=
    WordNode(pos=(865, 899), word='src/include/pg_config_manual.h.new'), pos=(863, 899), type='>'),
])


6039) grep '/var/run/postgresql' src/include/pg_config_manual.h.new

CommandNode(pos=(904, 965), parts=[
  WordNode(pos=(904, 908), word='grep'),
  WordNode(pos=(909, 930), word='/var/run/postgresql'),
  WordNode(pos=(931, 965), word='src/include/pg_config_manual.h.new'),
])


6040) mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h

CommandNode(pos=(970, 1038), parts=[
  WordNode(pos=(970, 972), word='mv'),
  WordNode(pos=(973, 1007), word='src/include/pg_config_manual.h.new'),
  WordNode(pos=(1008, 1038), word='src/include/pg_config_manual.h'),
])


6041) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1043, 1100), parts=[
  AssignmentNode(pos=(1043, 1100), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1054, 1098), parts=[
        WordNode(pos=(1054, 1071), word='dpkg-architecture'),
        WordNode(pos=(1072, 1079), word='--query'),
        WordNode(pos=(1080, 1098), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1052, 1099)),
  ]),
])


6042) wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1105, 1242), parts=[
  WordNode(pos=(1105, 1109), word='wget'),
  WordNode(pos=(1110, 1112), word='-O'),
  WordNode(pos=(1113, 1132), word='config/config.guess'),
  WordNode(pos=(1133, 1242), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


6043) wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1247, 1380), parts=[
  WordNode(pos=(1247, 1251), word='wget'),
  WordNode(pos=(1252, 1254), word='-O'),
  WordNode(pos=(1255, 1272), word='config/config.sub'),
  WordNode(pos=(1273, 1380), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


6044) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt

CommandNode(pos=(1385, 1754), parts=[
  WordNode(pos=(1385, 1396), word='./configure'),
  WordNode(pos=(1399, 1417), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1408, 1416), value='gnuArch'),
  ]),
  WordNode(pos=(1420, 1446), word='--enable-integer-datetimes'),
  WordNode(pos=(1449, 1471), word='--enable-thread-safety'),
  WordNode(pos=(1474, 1492), word='--enable-tap-tests'),
  WordNode(pos=(1495, 1510), word='--disable-rpath'),
  WordNode(pos=(1513, 1529), word='--with-uuid=e2fs'),
  WordNode(pos=(1532, 1545), word='--with-gnu-ld'),
  WordNode(pos=(1548, 1566), word='--with-pgport=5432'),
  WordNode(pos=(1569, 1609), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1612, 1631), word='--prefix=/usr/local'),
  WordNode(pos=(1634, 1668), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1671, 1702), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1707, 1721), word='--with-openssl'),
  WordNode(pos=(1724, 1737), word='--with-libxml'),
  WordNode(pos=(1740, 1754), word='--with-libxslt'),
])


6045) make -j "$(nproc)" world

CommandNode(pos=(1759, 1783), parts=[
  WordNode(pos=(1759, 1763), word='make'),
  WordNode(pos=(1764, 1766), word='-j'),
  WordNode(pos=(1767, 1777), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1770, 1775), parts=[
        WordNode(pos=(1770, 1775), word='nproc'),
      ]), pos=(1768, 1776)),
  ]),
  WordNode(pos=(1778, 1783), word='world'),
])


6046) make install-world

CommandNode(pos=(1788, 1806), parts=[
  WordNode(pos=(1788, 1792), word='make'),
  WordNode(pos=(1793, 1806), word='install-world'),
])


6047) make -C contrib install

CommandNode(pos=(1811, 1834), parts=[
  WordNode(pos=(1811, 1815), word='make'),
  WordNode(pos=(1816, 1818), word='-C'),
  WordNode(pos=(1819, 1826), word='contrib'),
  WordNode(pos=(1827, 1834), word='install'),
])


6048) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1840, 2037), parts=[
  AssignmentNode(pos=(1840, 2037), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1854, 2033), parts=[
        CommandNode(pos=(1854, 1920), parts=[
          WordNode(pos=(1854, 1861), word='scanelf'),
          WordNode(pos=(1862, 1870), word='--needed'),
          WordNode(pos=(1871, 1881), word='--nobanner'),
          WordNode(pos=(1882, 1890), word='--format'),
          WordNode(pos=(1891, 1897), word='%n#p'),
          WordNode(pos=(1898, 1909), word='--recursive'),
          WordNode(pos=(1910, 1920), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1924, 1925)),
        CommandNode(pos=(1926, 1937), parts=[
          WordNode(pos=(1926, 1928), word='tr'),
          WordNode(pos=(1929, 1932), word=','),
          WordNode(pos=(1933, 1937), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1941, 1942)),
        CommandNode(pos=(1943, 1950), parts=[
          WordNode(pos=(1943, 1947), word='sort'),
          WordNode(pos=(1948, 1950), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1954, 1955)),
        CommandNode(pos=(1956, 2033), parts=[
          WordNode(pos=(1956, 1959), word='awk'),
          WordNode(pos=(1960, 2033), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1849, 2034)),
  ]),
])


6049) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2042, 2127), parts=[
  WordNode(pos=(2042, 2045), word='apk'),
  WordNode(pos=(2046, 2049), word='add'),
  WordNode(pos=(2050, 2060), word='--no-cache'),
  WordNode(pos=(2061, 2070), word='--virtual'),
  WordNode(pos=(2071, 2090), word='.postgresql-rundeps'),
  WordNode(pos=(2093, 2101), word='$runDeps', parts=[
    ParameterNode(pos=(2093, 2101), value='runDeps'),
  ]),
  WordNode(pos=(2104, 2108), word='bash'),
  WordNode(pos=(2111, 2118), word='su-exec'),
  WordNode(pos=(2121, 2127), word='tzdata'),
])


6050) apk del .fetch-deps .build-deps

CommandNode(pos=(2132, 2163), parts=[
  WordNode(pos=(2132, 2135), word='apk'),
  WordNode(pos=(2136, 2139), word='del'),
  WordNode(pos=(2140, 2151), word='.fetch-deps'),
  WordNode(pos=(2152, 2163), word='.build-deps'),
])


6051) cd /

CommandNode(pos=(2168, 2172), parts=[
  WordNode(pos=(2168, 2170), word='cd'),
  WordNode(pos=(2171, 2172), word='/'),
])


6052) rm -rf   /usr/src/postgresql   /usr/local/share/doc   /usr/local/share/man

CommandNode(pos=(2177, 2251), parts=[
  WordNode(pos=(2177, 2179), word='rm'),
  WordNode(pos=(2180, 2183), word='-rf'),
  WordNode(pos=(2186, 2205), word='/usr/src/postgresql'),
  WordNode(pos=(2208, 2228), word='/usr/local/share/doc'),
  WordNode(pos=(2231, 2251), word='/usr/local/share/man'),
])


6053) find /usr/local -name '*.a' -delete

CommandNode(pos=(2256, 2291), parts=[
  WordNode(pos=(2256, 2260), word='find'),
  WordNode(pos=(2261, 2271), word='/usr/local'),
  WordNode(pos=(2272, 2277), word='-name'),
  WordNode(pos=(2278, 2283), word='*.a'),
  WordNode(pos=(2284, 2291), word='-delete'),
])


6054) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample

CommandNode(pos=(0, 106), parts=[
  WordNode(pos=(0, 3), word='sed'),
  WordNode(pos=(4, 7), word='-ri'),
  WordNode(pos=(8, 55), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(56, 106), word='/usr/local/share/postgresql/postgresql.conf.sample'),
])


6055) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


6056) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


6057) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


6058) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


6059) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


6060) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


6061) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


6062) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


6063) apk add --no-cache --virtual .build-deps   ca-certificates   gcc   libc-dev   linux-headers   lua5.3-dev   make   openssl   openssl-dev   pcre2-dev   readline-dev   tar   zlib-dev

CommandNode(pos=(12, 191), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 76), word='gcc'),
  WordNode(pos=(79, 87), word='libc-dev'),
  WordNode(pos=(90, 103), word='linux-headers'),
  WordNode(pos=(106, 116), word='lua5.3-dev'),
  WordNode(pos=(119, 123), word='make'),
  WordNode(pos=(126, 133), word='openssl'),
  WordNode(pos=(136, 147), word='openssl-dev'),
  WordNode(pos=(150, 159), word='pcre2-dev'),
  WordNode(pos=(162, 174), word='readline-dev'),
  WordNode(pos=(177, 180), word='tar'),
  WordNode(pos=(183, 191), word='zlib-dev'),
])


6064) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


6065) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


6066) sha256sum -c

CommandNode(pos=(280, 292), parts=[
  WordNode(pos=(280, 289), word='sha256sum'),
  WordNode(pos=(290, 292), word='-c'),
])


6067) mkdir -p /usr/src/haproxy

CommandNode(pos=(297, 322), parts=[
  WordNode(pos=(297, 302), word='mkdir'),
  WordNode(pos=(303, 305), word='-p'),
  WordNode(pos=(306, 322), word='/usr/src/haproxy'),
])


6068) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(327, 391), parts=[
  WordNode(pos=(327, 330), word='tar'),
  WordNode(pos=(331, 335), word='-xzf'),
  WordNode(pos=(336, 350), word='haproxy.tar.gz'),
  WordNode(pos=(351, 353), word='-C'),
  WordNode(pos=(354, 370), word='/usr/src/haproxy'),
  WordNode(pos=(371, 391), word='--strip-components=1'),
])


6069) rm haproxy.tar.gz

CommandNode(pos=(396, 413), parts=[
  WordNode(pos=(396, 398), word='rm'),
  WordNode(pos=(399, 413), word='haproxy.tar.gz'),
])


6070) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 594), parts=[
  AssignmentNode(pos=(419, 594), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


6071) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


6072) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(676, 722), parts=[
  WordNode(pos=(676, 680), word='make'),
  WordNode(pos=(681, 683), word='-C'),
  WordNode(pos=(684, 700), word='/usr/src/haproxy'),
  WordNode(pos=(701, 712), word='install-bin'),
  WordNode(pos=(713, 722), word='$makeOpts', parts=[
    ParameterNode(pos=(713, 722), value='makeOpts'),
  ]),
])


6073) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(728, 759), parts=[
  WordNode(pos=(728, 733), word='mkdir'),
  WordNode(pos=(734, 736), word='-p'),
  WordNode(pos=(737, 759), word='/usr/local/etc/haproxy'),
])


6074) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(764, 836), parts=[
  WordNode(pos=(764, 766), word='cp'),
  WordNode(pos=(767, 769), word='-R'),
  WordNode(pos=(770, 806), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(807, 836), word='/usr/local/etc/haproxy/errors'),
])


6075) rm -rf /usr/src/haproxy

CommandNode(pos=(841, 864), parts=[
  WordNode(pos=(841, 843), word='rm'),
  WordNode(pos=(844, 847), word='-rf'),
  WordNode(pos=(848, 864), word='/usr/src/haproxy'),
])


6076) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


6077) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1072, 1115), parts=[
  WordNode(pos=(1072, 1075), word='apk'),
  WordNode(pos=(1076, 1079), word='add'),
  WordNode(pos=(1080, 1089), word='--virtual'),
  WordNode(pos=(1090, 1106), word='.haproxy-rundeps'),
  WordNode(pos=(1107, 1115), word='$runDeps', parts=[
    ParameterNode(pos=(1107, 1115), value='runDeps'),
  ]),
])


6078) apk del .build-deps

CommandNode(pos=(1120, 1139), parts=[
  WordNode(pos=(1120, 1123), word='apk'),
  WordNode(pos=(1124, 1127), word='del'),
  WordNode(pos=(1128, 1139), word='.build-deps'),
])


6079) apk add --no-cache   ca-certificates

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
])


6080) [ ! -e /etc/nsswitch.conf ]

CommandNode(pos=(0, 27), parts=[
  WordNode(pos=(0, 1), word='['),
  WordNode(pos=(2, 3), word='!'),
  WordNode(pos=(4, 6), word='-e'),
  WordNode(pos=(7, 25), word='/etc/nsswitch.conf'),
  WordNode(pos=(26, 27), word=']'),
])


6081) echo 'hosts: files dns' > /etc/nsswitch.conf

CommandNode(pos=(31, 75), parts=[
  WordNode(pos=(31, 35), word='echo'),
  WordNode(pos=(36, 54), word='hosts: files dns'),
  RedirectNode(output=
    WordNode(pos=(57, 75), word='/etc/nsswitch.conf'), pos=(55, 75), type='>'),
])


6082) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6083) %%ARCH-CASE%%

CommandNode(pos=(12, 25), parts=[
  WordNode(pos=(12, 25), word='%%ARCH-CASE%%'),
])


6084) wget -O docker.tgz "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz"

CommandNode(pos=(34, 156), parts=[
  WordNode(pos=(34, 38), word='wget'),
  WordNode(pos=(39, 41), word='-O'),
  WordNode(pos=(42, 52), word='docker.tgz'),
  WordNode(pos=(53, 156), word='https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz', parts=[
    ParameterNode(pos=(95, 112), value='DOCKER_CHANNEL'),
    ParameterNode(pos=(113, 126), value='dockerArch'),
    ParameterNode(pos=(134, 151), value='DOCKER_VERSION'),
  ]),
])


6085) echo >&2 "error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'"

CommandNode(pos=(165, 273), parts=[
  WordNode(pos=(165, 169), word='echo'),
  RedirectNode(output=2, pos=(170, 173), type='>&'),
  WordNode(pos=(174, 273), word="error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'", parts=[
    ParameterNode(pos=(209, 226), value='DOCKER_VERSION'),
    ParameterNode(pos=(234, 251), value='DOCKER_CHANNEL'),
    ParameterNode(pos=(258, 271), value='dockerArch'),
  ]),
])


6086) exit 1

CommandNode(pos=(277, 283), parts=[
  WordNode(pos=(277, 281), word='exit'),
  WordNode(pos=(282, 283), word='1'),
])


6087) tar --extract   --file docker.tgz   --strip-components 1   --directory /usr/local/bin/

CommandNode(pos=(292, 378), parts=[
  WordNode(pos=(292, 295), word='tar'),
  WordNode(pos=(296, 305), word='--extract'),
  WordNode(pos=(308, 314), word='--file'),
  WordNode(pos=(315, 325), word='docker.tgz'),
  WordNode(pos=(328, 346), word='--strip-components'),
  WordNode(pos=(347, 348), word='1'),
  WordNode(pos=(351, 362), word='--directory'),
  WordNode(pos=(363, 378), word='/usr/local/bin/'),
])


6088) rm docker.tgz

CommandNode(pos=(383, 396), parts=[
  WordNode(pos=(383, 385), word='rm'),
  WordNode(pos=(386, 396), word='docker.tgz'),
])


6089) dockerd --version

CommandNode(pos=(400, 417), parts=[
  WordNode(pos=(400, 407), word='dockerd'),
  WordNode(pos=(408, 417), word='--version'),
])


6090) docker --version

CommandNode(pos=(420, 436), parts=[
  WordNode(pos=(420, 426), word='docker'),
  WordNode(pos=(427, 436), word='--version'),
])


6091) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6092) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


6093) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


6094) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


6095) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


6096) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


6097) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


6098) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6099) apk add --no-cache --virtual .fetch-deps   ca-certificates   openssl   tar

CommandNode(pos=(13, 87), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 53), word='.fetch-deps'),
  WordNode(pos=(56, 71), word='ca-certificates'),
  WordNode(pos=(74, 81), word='openssl'),
  WordNode(pos=(84, 87), word='tar'),
])


6100) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


6101) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


6102) sha256sum -c -

CommandNode(pos=(248, 262), parts=[
  WordNode(pos=(248, 257), word='sha256sum'),
  WordNode(pos=(258, 260), word='-c'),
  WordNode(pos=(261, 262), word='-'),
])


6103) mkdir -p /usr/src/postgresql

CommandNode(pos=(267, 295), parts=[
  WordNode(pos=(267, 272), word='mkdir'),
  WordNode(pos=(273, 275), word='-p'),
  WordNode(pos=(276, 295), word='/usr/src/postgresql'),
])


6104) tar   --extract   --file postgresql.tar.bz2   --directory /usr/src/postgresql   --strip-components 1

CommandNode(pos=(300, 400), parts=[
  WordNode(pos=(300, 303), word='tar'),
  WordNode(pos=(306, 315), word='--extract'),
  WordNode(pos=(318, 324), word='--file'),
  WordNode(pos=(325, 343), word='postgresql.tar.bz2'),
  WordNode(pos=(346, 357), word='--directory'),
  WordNode(pos=(358, 377), word='/usr/src/postgresql'),
  WordNode(pos=(380, 398), word='--strip-components'),
  WordNode(pos=(399, 400), word='1'),
])


6105) rm postgresql.tar.bz2

CommandNode(pos=(405, 426), parts=[
  WordNode(pos=(405, 407), word='rm'),
  WordNode(pos=(408, 426), word='postgresql.tar.bz2'),
])


6106) apk add --no-cache --virtual .build-deps   bison   coreutils   dpkg-dev dpkg   flex   gcc   libc-dev   libedit-dev   libxml2-dev   libxslt-dev   linux-headers   make   openssl-dev   perl-utils   perl-ipc-run   util-linux-dev   zlib-dev   icu-dev

CommandNode(pos=(432, 677), parts=[
  WordNode(pos=(432, 435), word='apk'),
  WordNode(pos=(436, 439), word='add'),
  WordNode(pos=(440, 450), word='--no-cache'),
  WordNode(pos=(451, 460), word='--virtual'),
  WordNode(pos=(461, 472), word='.build-deps'),
  WordNode(pos=(475, 480), word='bison'),
  WordNode(pos=(483, 492), word='coreutils'),
  WordNode(pos=(495, 503), word='dpkg-dev'),
  WordNode(pos=(504, 508), word='dpkg'),
  WordNode(pos=(511, 515), word='flex'),
  WordNode(pos=(518, 521), word='gcc'),
  WordNode(pos=(524, 532), word='libc-dev'),
  WordNode(pos=(535, 546), word='libedit-dev'),
  WordNode(pos=(549, 560), word='libxml2-dev'),
  WordNode(pos=(563, 574), word='libxslt-dev'),
  WordNode(pos=(577, 590), word='linux-headers'),
  WordNode(pos=(593, 597), word='make'),
  WordNode(pos=(600, 611), word='openssl-dev'),
  WordNode(pos=(614, 624), word='perl-utils'),
  WordNode(pos=(627, 639), word='perl-ipc-run'),
  WordNode(pos=(642, 656), word='util-linux-dev'),
  WordNode(pos=(659, 667), word='zlib-dev'),
  WordNode(pos=(670, 677), word='icu-dev'),
])


6107) cd /usr/src/postgresql

CommandNode(pos=(683, 705), parts=[
  WordNode(pos=(683, 685), word='cd'),
  WordNode(pos=(686, 705), word='/usr/src/postgresql'),
])


6108) awk '$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\"/tmp\"" { $3 = "\"/var/run/postgresql\""; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new

CommandNode(pos=(710, 909), parts=[
  WordNode(pos=(710, 713), word='awk'),
  WordNode(pos=(714, 841), word='$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\\"/tmp\\"" { $3 = "\\"/var/run/postgresql\\""; print; next } { print }'),
  WordNode(pos=(842, 872), word='src/include/pg_config_manual.h'),
  RedirectNode(output=
    WordNode(pos=(875, 909), word='src/include/pg_config_manual.h.new'), pos=(873, 909), type='>'),
])


6109) grep '/var/run/postgresql' src/include/pg_config_manual.h.new

CommandNode(pos=(914, 975), parts=[
  WordNode(pos=(914, 918), word='grep'),
  WordNode(pos=(919, 940), word='/var/run/postgresql'),
  WordNode(pos=(941, 975), word='src/include/pg_config_manual.h.new'),
])


6110) mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h

CommandNode(pos=(980, 1048), parts=[
  WordNode(pos=(980, 982), word='mv'),
  WordNode(pos=(983, 1017), word='src/include/pg_config_manual.h.new'),
  WordNode(pos=(1018, 1048), word='src/include/pg_config_manual.h'),
])


6111) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


6112) wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1115, 1252), parts=[
  WordNode(pos=(1115, 1119), word='wget'),
  WordNode(pos=(1120, 1122), word='-O'),
  WordNode(pos=(1123, 1142), word='config/config.guess'),
  WordNode(pos=(1143, 1252), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


6113) wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1257, 1390), parts=[
  WordNode(pos=(1257, 1261), word='wget'),
  WordNode(pos=(1262, 1264), word='-O'),
  WordNode(pos=(1265, 1282), word='config/config.sub'),
  WordNode(pos=(1283, 1390), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


6114) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt   --with-icu

CommandNode(pos=(1395, 1777), parts=[
  WordNode(pos=(1395, 1406), word='./configure'),
  WordNode(pos=(1409, 1427), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1418, 1426), value='gnuArch'),
  ]),
  WordNode(pos=(1430, 1456), word='--enable-integer-datetimes'),
  WordNode(pos=(1459, 1481), word='--enable-thread-safety'),
  WordNode(pos=(1484, 1502), word='--enable-tap-tests'),
  WordNode(pos=(1505, 1520), word='--disable-rpath'),
  WordNode(pos=(1523, 1539), word='--with-uuid=e2fs'),
  WordNode(pos=(1542, 1555), word='--with-gnu-ld'),
  WordNode(pos=(1558, 1576), word='--with-pgport=5432'),
  WordNode(pos=(1579, 1619), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1622, 1641), word='--prefix=/usr/local'),
  WordNode(pos=(1644, 1678), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1681, 1712), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1717, 1731), word='--with-openssl'),
  WordNode(pos=(1734, 1747), word='--with-libxml'),
  WordNode(pos=(1750, 1764), word='--with-libxslt'),
  WordNode(pos=(1767, 1777), word='--with-icu'),
])


6115) make -j "$(nproc)" world

CommandNode(pos=(1782, 1806), parts=[
  WordNode(pos=(1782, 1786), word='make'),
  WordNode(pos=(1787, 1789), word='-j'),
  WordNode(pos=(1790, 1800), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1793, 1798), parts=[
        WordNode(pos=(1793, 1798), word='nproc'),
      ]), pos=(1791, 1799)),
  ]),
  WordNode(pos=(1801, 1806), word='world'),
])


6116) make install-world

CommandNode(pos=(1811, 1829), parts=[
  WordNode(pos=(1811, 1815), word='make'),
  WordNode(pos=(1816, 1829), word='install-world'),
])


6117) make -C contrib install

CommandNode(pos=(1834, 1857), parts=[
  WordNode(pos=(1834, 1838), word='make'),
  WordNode(pos=(1839, 1841), word='-C'),
  WordNode(pos=(1842, 1849), word='contrib'),
  WordNode(pos=(1850, 1857), word='install'),
])


6118) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


6119) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2065, 2150), parts=[
  WordNode(pos=(2065, 2068), word='apk'),
  WordNode(pos=(2069, 2072), word='add'),
  WordNode(pos=(2073, 2083), word='--no-cache'),
  WordNode(pos=(2084, 2093), word='--virtual'),
  WordNode(pos=(2094, 2113), word='.postgresql-rundeps'),
  WordNode(pos=(2116, 2124), word='$runDeps', parts=[
    ParameterNode(pos=(2116, 2124), value='runDeps'),
  ]),
  WordNode(pos=(2127, 2131), word='bash'),
  WordNode(pos=(2134, 2141), word='su-exec'),
  WordNode(pos=(2144, 2150), word='tzdata'),
])


6120) apk del .fetch-deps .build-deps

CommandNode(pos=(2155, 2186), parts=[
  WordNode(pos=(2155, 2158), word='apk'),
  WordNode(pos=(2159, 2162), word='del'),
  WordNode(pos=(2163, 2174), word='.fetch-deps'),
  WordNode(pos=(2175, 2186), word='.build-deps'),
])


6121) cd /

CommandNode(pos=(2191, 2195), parts=[
  WordNode(pos=(2191, 2193), word='cd'),
  WordNode(pos=(2194, 2195), word='/'),
])


6122) rm -rf   /usr/src/postgresql   /usr/local/share/doc   /usr/local/share/man

CommandNode(pos=(2200, 2274), parts=[
  WordNode(pos=(2200, 2202), word='rm'),
  WordNode(pos=(2203, 2206), word='-rf'),
  WordNode(pos=(2209, 2228), word='/usr/src/postgresql'),
  WordNode(pos=(2231, 2251), word='/usr/local/share/doc'),
  WordNode(pos=(2254, 2274), word='/usr/local/share/man'),
])


6123) find /usr/local -name '*.a' -delete

CommandNode(pos=(2279, 2314), parts=[
  WordNode(pos=(2279, 2283), word='find'),
  WordNode(pos=(2284, 2294), word='/usr/local'),
  WordNode(pos=(2295, 2300), word='-name'),
  WordNode(pos=(2301, 2306), word='*.a'),
  WordNode(pos=(2307, 2314), word='-delete'),
])


6124) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample

CommandNode(pos=(0, 106), parts=[
  WordNode(pos=(0, 3), word='sed'),
  WordNode(pos=(4, 7), word='-ri'),
  WordNode(pos=(8, 55), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(56, 106), word='/usr/local/share/postgresql/postgresql.conf.sample'),
])


6125) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


6126) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


6127) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


6128) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


6129) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


6130) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


6131) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6132) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


6133) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


6134) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


6135) groupadd -r redmine

CommandNode(pos=(0, 19), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 19), word='redmine'),
])


6136) useradd -r -g redmine redmine

CommandNode(pos=(23, 52), parts=[
  WordNode(pos=(23, 30), word='useradd'),
  WordNode(pos=(31, 33), word='-r'),
  WordNode(pos=(34, 36), word='-g'),
  WordNode(pos=(37, 44), word='redmine'),
  WordNode(pos=(45, 52), word='redmine'),
])


6137) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6138) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


6139) apt-get install -y --no-install-recommends   ca-certificates   wget     bzr   git   mercurial   openssh-client   subversion     gsfonts   imagemagick

CommandNode(pos=(28, 177), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 95), word='wget'),
  WordNode(pos=(100, 103), word='bzr'),
  WordNode(pos=(106, 109), word='git'),
  WordNode(pos=(112, 121), word='mercurial'),
  WordNode(pos=(124, 138), word='openssh-client'),
  WordNode(pos=(141, 151), word='subversion'),
  WordNode(pos=(156, 163), word='gsfonts'),
  WordNode(pos=(166, 177), word='imagemagick'),
])


6140) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(182, 209), parts=[
  WordNode(pos=(182, 184), word='rm'),
  WordNode(pos=(185, 188), word='-rf'),
  WordNode(pos=(189, 209), word='/var/lib/apt/lists/*'),
])


6141) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6142) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


6143) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


6144) apt-get install -y --no-install-recommends   dirmngr   gnupg

CommandNode(pos=(68, 128), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(113, 120), word='dirmngr'),
  WordNode(pos=(123, 128), word='gnupg'),
])


6145) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(133, 160), parts=[
  WordNode(pos=(133, 135), word='rm'),
  WordNode(pos=(136, 139), word='-rf'),
  WordNode(pos=(140, 160), word='/var/lib/apt/lists/*'),
])


6146) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(164, 229), parts=[
  AssignmentNode(pos=(164, 229), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(176, 227), parts=[
        CommandNode(pos=(176, 201), parts=[
          WordNode(pos=(176, 180), word='dpkg'),
          WordNode(pos=(181, 201), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(202, 203)),
        CommandNode(pos=(204, 227), parts=[
          WordNode(pos=(204, 207), word='awk'),
          WordNode(pos=(208, 211), word='-F-'),
          WordNode(pos=(212, 227), word='{ print $NF }'),
        ]),
      ]), pos=(174, 228)),
  ]),
])


6147) export GOSU_VERSION='1.11'

CommandNode(pos=(233, 259), parts=[
  WordNode(pos=(233, 239), word='export'),
  WordNode(pos=(240, 259), word='GOSU_VERSION=1.11'),
])


6148) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(262, 369), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 289), word='/usr/local/bin/gosu'),
  WordNode(pos=(290, 369), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(340, 353), value='GOSU_VERSION'),
    ParameterNode(pos=(359, 368), value='dpkgArch'),
  ]),
])


6149) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(372, 487), parts=[
  WordNode(pos=(372, 376), word='wget'),
  WordNode(pos=(377, 379), word='-O'),
  WordNode(pos=(380, 403), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(404, 487), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(454, 467), value='GOSU_VERSION'),
    ParameterNode(pos=(473, 482), value='dpkgArch'),
  ]),
])


6150) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(490, 521), parts=[
  WordNode(pos=(490, 496), word='export'),
  WordNode(pos=(497, 521), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(510, 519), parts=[
        WordNode(pos=(510, 516), word='mktemp'),
        WordNode(pos=(517, 519), word='-d'),
      ]), pos=(508, 520)),
  ]),
])


6151) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(524, 627), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 547), word='--keyserver'),
  WordNode(pos=(548, 574), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(575, 586), word='--recv-keys'),
  WordNode(pos=(587, 627), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


6152) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(630, 694), parts=[
  WordNode(pos=(630, 633), word='gpg'),
  WordNode(pos=(634, 641), word='--batch'),
  WordNode(pos=(642, 650), word='--verify'),
  WordNode(pos=(651, 674), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(675, 694), word='/usr/local/bin/gosu'),
])


6153) gpgconf --kill all

CommandNode(pos=(697, 715), parts=[
  WordNode(pos=(697, 704), word='gpgconf'),
  WordNode(pos=(705, 711), word='--kill'),
  WordNode(pos=(712, 715), word='all'),
])


6154) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(718, 760), parts=[
  WordNode(pos=(718, 720), word='rm'),
  WordNode(pos=(721, 723), word='-r'),
  WordNode(pos=(724, 736), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(725, 735), value='GNUPGHOME'),
  ]),
  WordNode(pos=(737, 760), word='/usr/local/bin/gosu.asc'),
])


6155) chmod +x /usr/local/bin/gosu

CommandNode(pos=(763, 791), parts=[
  WordNode(pos=(763, 768), word='chmod'),
  WordNode(pos=(769, 771), word='+x'),
  WordNode(pos=(772, 791), word='/usr/local/bin/gosu'),
])


6156) gosu nobody true

CommandNode(pos=(794, 810), parts=[
  WordNode(pos=(794, 798), word='gosu'),
  WordNode(pos=(799, 805), word='nobody'),
  WordNode(pos=(806, 810), word='true'),
])


6157) export TINI_VERSION='0.18.0'

CommandNode(pos=(814, 842), parts=[
  WordNode(pos=(814, 820), word='export'),
  WordNode(pos=(821, 842), word='TINI_VERSION=0.18.0'),
])


6158) wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"

CommandNode(pos=(845, 954), parts=[
  WordNode(pos=(845, 849), word='wget'),
  WordNode(pos=(850, 852), word='-O'),
  WordNode(pos=(853, 872), word='/usr/local/bin/tini'),
  WordNode(pos=(873, 954), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch', parts=[
    ParameterNode(pos=(925, 938), value='TINI_VERSION'),
    ParameterNode(pos=(944, 953), value='dpkgArch'),
  ]),
])


6159) wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"

CommandNode(pos=(957, 1074), parts=[
  WordNode(pos=(957, 961), word='wget'),
  WordNode(pos=(962, 964), word='-O'),
  WordNode(pos=(965, 988), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(989, 1074), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc', parts=[
    ParameterNode(pos=(1041, 1054), value='TINI_VERSION'),
    ParameterNode(pos=(1060, 1069), value='dpkgArch'),
  ]),
])


6160) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(1077, 1108), parts=[
  WordNode(pos=(1077, 1083), word='export'),
  WordNode(pos=(1084, 1108), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1097, 1106), parts=[
        WordNode(pos=(1097, 1103), word='mktemp'),
        WordNode(pos=(1104, 1106), word='-d'),
      ]), pos=(1095, 1107)),
  ]),
])


6161) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5

CommandNode(pos=(1111, 1214), parts=[
  WordNode(pos=(1111, 1114), word='gpg'),
  WordNode(pos=(1115, 1122), word='--batch'),
  WordNode(pos=(1123, 1134), word='--keyserver'),
  WordNode(pos=(1135, 1161), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(1162, 1173), word='--recv-keys'),
  WordNode(pos=(1174, 1214), word='6380DC428747F6C393FEACA59A84159D7001A4E5'),
])


6162) gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini

CommandNode(pos=(1217, 1281), parts=[
  WordNode(pos=(1217, 1220), word='gpg'),
  WordNode(pos=(1221, 1228), word='--batch'),
  WordNode(pos=(1229, 1237), word='--verify'),
  WordNode(pos=(1238, 1261), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(1262, 1281), word='/usr/local/bin/tini'),
])


6163) gpgconf --kill all

CommandNode(pos=(1284, 1302), parts=[
  WordNode(pos=(1284, 1291), word='gpgconf'),
  WordNode(pos=(1292, 1298), word='--kill'),
  WordNode(pos=(1299, 1302), word='all'),
])


6164) rm -r "$GNUPGHOME" /usr/local/bin/tini.asc

CommandNode(pos=(1305, 1347), parts=[
  WordNode(pos=(1305, 1307), word='rm'),
  WordNode(pos=(1308, 1310), word='-r'),
  WordNode(pos=(1311, 1323), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1312, 1322), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1324, 1347), word='/usr/local/bin/tini.asc'),
])


6165) chmod +x /usr/local/bin/tini

CommandNode(pos=(1350, 1378), parts=[
  WordNode(pos=(1350, 1355), word='chmod'),
  WordNode(pos=(1356, 1358), word='+x'),
  WordNode(pos=(1359, 1378), word='/usr/local/bin/tini'),
])


6166) tini -h

CommandNode(pos=(1381, 1388), parts=[
  WordNode(pos=(1381, 1385), word='tini'),
  WordNode(pos=(1386, 1388), word='-h'),
])


6167) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1392, 1422), parts=[
  WordNode(pos=(1392, 1400), word='apt-mark'),
  WordNode(pos=(1401, 1405), word='auto'),
  WordNode(pos=(1406, 1410), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1413, 1422), word='/dev/null'), pos=(1411, 1422), type='>'),
])


6168) [ -z "$savedAptMark" ]

CommandNode(pos=(1425, 1447), parts=[
  WordNode(pos=(1425, 1426), word='['),
  WordNode(pos=(1427, 1429), word='-z'),
  WordNode(pos=(1430, 1445), word='$savedAptMark', parts=[
    ParameterNode(pos=(1431, 1444), value='savedAptMark'),
  ]),
  WordNode(pos=(1446, 1447), word=']'),
])


6169) apt-mark manual $savedAptMark

CommandNode(pos=(1451, 1480), parts=[
  WordNode(pos=(1451, 1459), word='apt-mark'),
  WordNode(pos=(1460, 1466), word='manual'),
  WordNode(pos=(1467, 1480), word='$savedAptMark', parts=[
    ParameterNode(pos=(1467, 1480), value='savedAptMark'),
  ]),
])


6170) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1483, 1559), parts=[
  WordNode(pos=(1483, 1490), word='apt-get'),
  WordNode(pos=(1491, 1496), word='purge'),
  WordNode(pos=(1497, 1499), word='-y'),
  WordNode(pos=(1500, 1513), word='--auto-remove'),
  WordNode(pos=(1514, 1516), word='-o'),
  WordNode(pos=(1517, 1559), word='APT::AutoRemove::RecommendsImportant=false'),
])


6171) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6172) [ ! -d "$HOME" ]

CommandNode(pos=(11, 27), parts=[
  WordNode(pos=(11, 12), word='['),
  WordNode(pos=(13, 14), word='!'),
  WordNode(pos=(15, 17), word='-d'),
  WordNode(pos=(18, 25), word='$HOME', parts=[
    ParameterNode(pos=(19, 24), value='HOME'),
  ]),
  WordNode(pos=(26, 27), word=']'),
])


6173) mkdir -p "$HOME"

CommandNode(pos=(30, 46), parts=[
  WordNode(pos=(30, 35), word='mkdir'),
  WordNode(pos=(36, 38), word='-p'),
  WordNode(pos=(39, 46), word='$HOME', parts=[
    ParameterNode(pos=(40, 45), value='HOME'),
  ]),
])


6174) chown redmine:redmine "$HOME"

CommandNode(pos=(49, 78), parts=[
  WordNode(pos=(49, 54), word='chown'),
  WordNode(pos=(55, 70), word='redmine:redmine'),
  WordNode(pos=(71, 78), word='$HOME', parts=[
    ParameterNode(pos=(72, 77), value='HOME'),
  ]),
])


6175) chmod 1777 "$HOME"

CommandNode(pos=(81, 99), parts=[
  WordNode(pos=(81, 86), word='chmod'),
  WordNode(pos=(87, 91), word='1777'),
  WordNode(pos=(92, 99), word='$HOME', parts=[
    ParameterNode(pos=(93, 98), value='HOME'),
  ]),
])


6176) wget -O redmine.tar.gz "https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz"

CommandNode(pos=(0, 91), parts=[
  WordNode(pos=(0, 4), word='wget'),
  WordNode(pos=(5, 7), word='-O'),
  WordNode(pos=(8, 22), word='redmine.tar.gz'),
  WordNode(pos=(23, 91), word='https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(65, 83), value='REDMINE_VERSION'),
  ]),
])


6177) echo "$REDMINE_DOWNLOAD_MD5 redmine.tar.gz"

CommandNode(pos=(96, 139), parts=[
  WordNode(pos=(96, 100), word='echo'),
  WordNode(pos=(101, 139), word='$REDMINE_DOWNLOAD_MD5 redmine.tar.gz', parts=[
    ParameterNode(pos=(102, 123), value='REDMINE_DOWNLOAD_MD5'),
  ]),
])


6178) md5sum -c -

CommandNode(pos=(142, 153), parts=[
  WordNode(pos=(142, 148), word='md5sum'),
  WordNode(pos=(149, 151), word='-c'),
  WordNode(pos=(152, 153), word='-'),
])


6179) tar -xvf redmine.tar.gz --strip-components=1

CommandNode(pos=(158, 202), parts=[
  WordNode(pos=(158, 161), word='tar'),
  WordNode(pos=(162, 166), word='-xvf'),
  WordNode(pos=(167, 181), word='redmine.tar.gz'),
  WordNode(pos=(182, 202), word='--strip-components=1'),
])


6180) rm redmine.tar.gz files/delete.me log/delete.me

CommandNode(pos=(207, 254), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 224), word='redmine.tar.gz'),
  WordNode(pos=(225, 240), word='files/delete.me'),
  WordNode(pos=(241, 254), word='log/delete.me'),
])


6181) mkdir -p log public/plugin_assets sqlite tmp/pdf tmp/pids

CommandNode(pos=(259, 316), parts=[
  WordNode(pos=(259, 264), word='mkdir'),
  WordNode(pos=(265, 267), word='-p'),
  WordNode(pos=(268, 271), word='log'),
  WordNode(pos=(272, 292), word='public/plugin_assets'),
  WordNode(pos=(293, 299), word='sqlite'),
  WordNode(pos=(300, 307), word='tmp/pdf'),
  WordNode(pos=(308, 316), word='tmp/pids'),
])


6182) chown -R redmine:redmine ./

CommandNode(pos=(321, 348), parts=[
  WordNode(pos=(321, 326), word='chown'),
  WordNode(pos=(327, 329), word='-R'),
  WordNode(pos=(330, 345), word='redmine:redmine'),
  WordNode(pos=(346, 348), word='./'),
])


6183) echo 'config.logger = Logger.new(STDOUT)' > config/additional_environment.rb

CommandNode(pos=(353, 429), parts=[
  WordNode(pos=(353, 357), word='echo'),
  WordNode(pos=(358, 394), word='config.logger = Logger.new(STDOUT)'),
  RedirectNode(output=
    WordNode(pos=(397, 429), word='config/additional_environment.rb'), pos=(395, 429), type='>'),
])


6184) chmod -R ugo=rwX config db sqlite

CommandNode(pos=(434, 467), parts=[
  WordNode(pos=(434, 439), word='chmod'),
  WordNode(pos=(440, 442), word='-R'),
  WordNode(pos=(443, 450), word='ugo=rwX'),
  WordNode(pos=(451, 457), word='config'),
  WordNode(pos=(458, 460), word='db'),
  WordNode(pos=(461, 467), word='sqlite'),
])


6185) find log tmp -type d -exec chmod 1777 '{}' +

CommandNode(pos=(472, 516), parts=[
  WordNode(pos=(472, 476), word='find'),
  WordNode(pos=(477, 480), word='log'),
  WordNode(pos=(481, 484), word='tmp'),
  WordNode(pos=(485, 490), word='-type'),
  WordNode(pos=(491, 492), word='d'),
  WordNode(pos=(493, 498), word='-exec'),
  WordNode(pos=(499, 504), word='chmod'),
  WordNode(pos=(505, 509), word='1777'),
  WordNode(pos=(510, 514), word='{}'),
  WordNode(pos=(515, 516), word='+'),
])


6186) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6187) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


6188) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


6189) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libmagickcore-dev   libmagickwand-dev   libmariadbclient-dev   libpq-dev   libsqlite3-dev   make   patch     libssl1.0-dev

CommandNode(pos=(69, 253), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 122), word='dpkg-dev'),
  WordNode(pos=(125, 128), word='gcc'),
  WordNode(pos=(131, 148), word='libmagickcore-dev'),
  WordNode(pos=(151, 168), word='libmagickwand-dev'),
  WordNode(pos=(171, 191), word='libmariadbclient-dev'),
  WordNode(pos=(194, 203), word='libpq-dev'),
  WordNode(pos=(206, 220), word='libsqlite3-dev'),
  WordNode(pos=(223, 227), word='make'),
  WordNode(pos=(230, 235), word='patch'),
  WordNode(pos=(240, 253), word='libssl1.0-dev'),
])


6190) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(258, 285), parts=[
  WordNode(pos=(258, 260), word='rm'),
  WordNode(pos=(261, 264), word='-rf'),
  WordNode(pos=(265, 285), word='/var/lib/apt/lists/*'),
])


6191) wget -O freetds.tar.bz2 'http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'

CommandNode(pos=(289, 374), parts=[
  WordNode(pos=(289, 293), word='wget'),
  WordNode(pos=(294, 296), word='-O'),
  WordNode(pos=(297, 312), word='freetds.tar.bz2'),
  WordNode(pos=(313, 374), word='http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'),
])


6192) echo '8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2'

CommandNode(pos=(377, 433), parts=[
  WordNode(pos=(377, 381), word='echo'),
  WordNode(pos=(382, 433), word='8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2'),
])


6193) md5sum -c -

CommandNode(pos=(436, 447), parts=[
  WordNode(pos=(436, 442), word='md5sum'),
  WordNode(pos=(443, 445), word='-c'),
  WordNode(pos=(446, 447), word='-'),
])


6194) mkdir freetds

CommandNode(pos=(450, 463), parts=[
  WordNode(pos=(450, 455), word='mkdir'),
  WordNode(pos=(456, 463), word='freetds'),
])


6195) tar -xf freetds.tar.bz2 -C freetds --strip-components=1

CommandNode(pos=(466, 521), parts=[
  WordNode(pos=(466, 469), word='tar'),
  WordNode(pos=(470, 473), word='-xf'),
  WordNode(pos=(474, 489), word='freetds.tar.bz2'),
  WordNode(pos=(490, 492), word='-C'),
  WordNode(pos=(493, 500), word='freetds'),
  WordNode(pos=(501, 521), word='--strip-components=1'),
])


6196) rm freetds.tar.bz2

CommandNode(pos=(524, 542), parts=[
  WordNode(pos=(524, 526), word='rm'),
  WordNode(pos=(527, 542), word='freetds.tar.bz2'),
])


6197) cd freetds

CommandNode(pos=(547, 557), parts=[
  WordNode(pos=(547, 549), word='cd'),
  WordNode(pos=(550, 557), word='freetds'),
])


6198) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(561, 618), parts=[
  AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(572, 616), parts=[
        WordNode(pos=(572, 589), word='dpkg-architecture'),
        WordNode(pos=(590, 597), word='--query'),
        WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(570, 617)),
  ]),
])


6199) ./configure --build="$gnuArch" --enable-silent-rules

CommandNode(pos=(622, 674), parts=[
  WordNode(pos=(622, 633), word='./configure'),
  WordNode(pos=(634, 652), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(643, 651), value='gnuArch'),
  ]),
  WordNode(pos=(653, 674), word='--enable-silent-rules'),
])


6200) make -j "$(nproc)"

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-j'),
  WordNode(pos=(686, 696), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 694), parts=[
        WordNode(pos=(689, 694), word='nproc'),
      ]), pos=(687, 695)),
  ]),
])


6201) make -C src install

CommandNode(pos=(700, 719), parts=[
  WordNode(pos=(700, 704), word='make'),
  WordNode(pos=(705, 707), word='-C'),
  WordNode(pos=(708, 711), word='src'),
  WordNode(pos=(712, 719), word='install'),
])


6202) make -C include install

CommandNode(pos=(723, 746), parts=[
  WordNode(pos=(723, 727), word='make'),
  WordNode(pos=(728, 730), word='-C'),
  WordNode(pos=(731, 738), word='include'),
  WordNode(pos=(739, 746), word='install'),
])


6203) rm -rf freetds

CommandNode(pos=(751, 765), parts=[
  WordNode(pos=(751, 753), word='rm'),
  WordNode(pos=(754, 757), word='-rf'),
  WordNode(pos=(758, 765), word='freetds'),
])


6204) gosu redmine bundle config build.tiny_tds --enable-system-freetds

CommandNode(pos=(768, 833), parts=[
  WordNode(pos=(768, 772), word='gosu'),
  WordNode(pos=(773, 780), word='redmine'),
  WordNode(pos=(781, 787), word='bundle'),
  WordNode(pos=(788, 794), word='config'),
  WordNode(pos=(795, 809), word='build.tiny_tds'),
  WordNode(pos=(810, 833), word='--enable-system-freetds'),
])


6205) gosu redmine bundle install --without development test

CommandNode(pos=(837, 891), parts=[
  WordNode(pos=(837, 841), word='gosu'),
  WordNode(pos=(842, 849), word='redmine'),
  WordNode(pos=(850, 856), word='bundle'),
  WordNode(pos=(857, 864), word='install'),
  WordNode(pos=(865, 874), word='--without'),
  WordNode(pos=(875, 886), word='development'),
  WordNode(pos=(887, 891), word='test'),
])


6206) echo "$RAILS_ENV:" > ./config/database.yml

CommandNode(pos=(951, 993), parts=[
  WordNode(pos=(951, 955), word='echo'),
  WordNode(pos=(956, 969), word='$RAILS_ENV:', parts=[
    ParameterNode(pos=(957, 967), value='RAILS_ENV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(972, 993), word='./config/database.yml'), pos=(970, 993), type='>'),
])


6207) echo "  adapter: $adapter" >> ./config/database.yml

CommandNode(pos=(997, 1048), parts=[
  WordNode(pos=(997, 1001), word='echo'),
  WordNode(pos=(1002, 1023), word='  adapter: $adapter', parts=[
    ParameterNode(pos=(1014, 1022), value='adapter'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1027, 1048), word='./config/database.yml'), pos=(1024, 1048), type='>>'),
])


6208) gosu redmine bundle install --without development test

CommandNode(pos=(1052, 1106), parts=[
  WordNode(pos=(1052, 1056), word='gosu'),
  WordNode(pos=(1057, 1064), word='redmine'),
  WordNode(pos=(1065, 1071), word='bundle'),
  WordNode(pos=(1072, 1079), word='install'),
  WordNode(pos=(1080, 1089), word='--without'),
  WordNode(pos=(1090, 1101), word='development'),
  WordNode(pos=(1102, 1106), word='test'),
])


6209) cp Gemfile.lock "Gemfile.lock.${adapter}"

CommandNode(pos=(1110, 1151), parts=[
  WordNode(pos=(1110, 1112), word='cp'),
  WordNode(pos=(1113, 1125), word='Gemfile.lock'),
  WordNode(pos=(1126, 1151), word='Gemfile.lock.${adapter}', parts=[
    ParameterNode(pos=(1140, 1150), value='adapter'),
  ]),
])


6210) rm ./config/database.yml

CommandNode(pos=(1161, 1185), parts=[
  WordNode(pos=(1161, 1163), word='rm'),
  WordNode(pos=(1164, 1185), word='./config/database.yml'),
])


6211) chmod -R ugo=rwX Gemfile.lock "$GEM_HOME"

CommandNode(pos=(1188, 1229), parts=[
  WordNode(pos=(1188, 1193), word='chmod'),
  WordNode(pos=(1194, 1196), word='-R'),
  WordNode(pos=(1197, 1204), word='ugo=rwX'),
  WordNode(pos=(1205, 1217), word='Gemfile.lock'),
  WordNode(pos=(1218, 1229), word='$GEM_HOME', parts=[
    ParameterNode(pos=(1219, 1228), value='GEM_HOME'),
  ]),
])


6212) rm -rf ~redmine/.bundle

CommandNode(pos=(1232, 1255), parts=[
  WordNode(pos=(1232, 1234), word='rm'),
  WordNode(pos=(1235, 1238), word='-rf'),
  WordNode(pos=(1239, 1255), word='~redmine/.bundle', parts=[
    TildeNode(pos=(1239, 1247), value='~redmine'),
  ]),
])


6213) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1259, 1289), parts=[
  WordNode(pos=(1259, 1267), word='apt-mark'),
  WordNode(pos=(1268, 1272), word='auto'),
  WordNode(pos=(1273, 1277), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1280, 1289), word='/dev/null'), pos=(1278, 1289), type='>'),
])


6214) [ -z "$savedAptMark" ]

CommandNode(pos=(1292, 1314), parts=[
  WordNode(pos=(1292, 1293), word='['),
  WordNode(pos=(1294, 1296), word='-z'),
  WordNode(pos=(1297, 1312), word='$savedAptMark', parts=[
    ParameterNode(pos=(1298, 1311), value='savedAptMark'),
  ]),
  WordNode(pos=(1313, 1314), word=']'),
])


6215) apt-mark manual $savedAptMark

CommandNode(pos=(1318, 1347), parts=[
  WordNode(pos=(1318, 1326), word='apt-mark'),
  WordNode(pos=(1327, 1333), word='manual'),
  WordNode(pos=(1334, 1347), word='$savedAptMark', parts=[
    ParameterNode(pos=(1334, 1347), value='savedAptMark'),
  ]),
])


6216) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1350, 1404), parts=[
  WordNode(pos=(1350, 1354), word='find'),
  WordNode(pos=(1355, 1365), word='/usr/local'),
  WordNode(pos=(1366, 1371), word='-type'),
  WordNode(pos=(1372, 1373), word='f'),
  WordNode(pos=(1374, 1385), word='-executable'),
  WordNode(pos=(1386, 1391), word='-exec'),
  WordNode(pos=(1392, 1395), word='ldd'),
  WordNode(pos=(1396, 1400), word='{}'),
  WordNode(pos=(1401, 1404), word=';'),
])


6217) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1409, 1437), parts=[
  WordNode(pos=(1409, 1412), word='awk'),
  WordNode(pos=(1413, 1437), word='/=>/ { print $(NF-1) }'),
])


6218) sort -u

CommandNode(pos=(1442, 1449), parts=[
  WordNode(pos=(1442, 1446), word='sort'),
  WordNode(pos=(1447, 1449), word='-u'),
])


6219) grep -v '^/usr/local/'

CommandNode(pos=(1454, 1476), parts=[
  WordNode(pos=(1454, 1458), word='grep'),
  WordNode(pos=(1459, 1461), word='-v'),
  WordNode(pos=(1462, 1476), word='^/usr/local/'),
])


6220) xargs -r dpkg-query --search

CommandNode(pos=(1481, 1509), parts=[
  WordNode(pos=(1481, 1486), word='xargs'),
  WordNode(pos=(1487, 1489), word='-r'),
  WordNode(pos=(1490, 1500), word='dpkg-query'),
  WordNode(pos=(1501, 1509), word='--search'),
])


6221) cut -d: -f1

CommandNode(pos=(1514, 1525), parts=[
  WordNode(pos=(1514, 1517), word='cut'),
  WordNode(pos=(1518, 1521), word='-d:'),
  WordNode(pos=(1522, 1525), word='-f1'),
])


6222) sort -u

CommandNode(pos=(1530, 1537), parts=[
  WordNode(pos=(1530, 1534), word='sort'),
  WordNode(pos=(1535, 1537), word='-u'),
])


6223) xargs -r apt-mark manual

CommandNode(pos=(1542, 1566), parts=[
  WordNode(pos=(1542, 1547), word='xargs'),
  WordNode(pos=(1548, 1550), word='-r'),
  WordNode(pos=(1551, 1559), word='apt-mark'),
  WordNode(pos=(1560, 1566), word='manual'),
])


6224) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1571, 1647), parts=[
  WordNode(pos=(1571, 1578), word='apt-get'),
  WordNode(pos=(1579, 1584), word='purge'),
  WordNode(pos=(1585, 1587), word='-y'),
  WordNode(pos=(1588, 1601), word='--auto-remove'),
  WordNode(pos=(1602, 1604), word='-o'),
  WordNode(pos=(1605, 1647), word='APT::AutoRemove::RecommendsImportant=false'),
])


6225) mkdir -p /usr/src/app

CommandNode(pos=(0, 21), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 21), word='/usr/src/app'),
])


6226) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


6227) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6228) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


6229) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


6230) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


6231) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


6232) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


6233) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


6234) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


6235) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


6236) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


6237) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


6238) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


6239) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


6240) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


6241) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


6242) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


6243) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


6244) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


6245) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


6246) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


6247) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


6248) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


6249) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


6250) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


6251) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


6252) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


6253) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


6254) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


6255) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


6256) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


6257) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


6258) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


6259) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


6260) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


6261) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


6262) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


6263) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


6264) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


6265) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


6266) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


6267) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


6268) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


6269) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


6270) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


6271) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


6272) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


6273) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


6274) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


6275) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


6276) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


6277) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


6278) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


6279) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


6280) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


6281) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


6282) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


6283) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


6284) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


6285) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


6286) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


6287) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


6288) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


6289) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


6290) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


6291) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6292) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


6293) which gpg

CommandNode(pos=(32, 41), parts=[
  WordNode(pos=(32, 37), word='which'),
  WordNode(pos=(38, 41), word='gpg'),
])


6294) apt-get install -y --no-install-recommends gnupg

CommandNode(pos=(50, 98), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 65), word='install'),
  WordNode(pos=(66, 68), word='-y'),
  WordNode(pos=(69, 92), word='--no-install-recommends'),
  WordNode(pos=(93, 98), word='gnupg'),
])


6295) gpg --version

CommandNode(pos=(111, 124), parts=[
  WordNode(pos=(111, 114), word='gpg'),
  WordNode(pos=(115, 124), word='--version'),
])


6296) grep -q '^gpg (GnuPG) 1\.'

CommandNode(pos=(127, 153), parts=[
  WordNode(pos=(127, 131), word='grep'),
  WordNode(pos=(132, 134), word='-q'),
  WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
])


6297) apt-get install -y --no-install-recommends dirmngr

CommandNode(pos=(163, 213), parts=[
  WordNode(pos=(163, 170), word='apt-get'),
  WordNode(pos=(171, 178), word='install'),
  WordNode(pos=(179, 181), word='-y'),
  WordNode(pos=(182, 205), word='--no-install-recommends'),
  WordNode(pos=(206, 213), word='dirmngr'),
])


6298) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(221, 248), parts=[
  WordNode(pos=(221, 223), word='rm'),
  WordNode(pos=(224, 227), word='-rf'),
  WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
])


6299) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6300) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


6301) apt-get update

CommandNode(pos=(53, 67), parts=[
  WordNode(pos=(53, 60), word='apt-get'),
  WordNode(pos=(61, 67), word='update'),
])


6302) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


6303) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


6304) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


6305) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


6306) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


6307) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


6308) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(488, 591), parts=[
  WordNode(pos=(488, 491), word='gpg'),
  WordNode(pos=(492, 499), word='--batch'),
  WordNode(pos=(500, 511), word='--keyserver'),
  WordNode(pos=(512, 538), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(539, 550), word='--recv-keys'),
  WordNode(pos=(551, 591), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


6309) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(594, 658), parts=[
  WordNode(pos=(594, 597), word='gpg'),
  WordNode(pos=(598, 605), word='--batch'),
  WordNode(pos=(606, 614), word='--verify'),
  WordNode(pos=(615, 638), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(639, 658), word='/usr/local/bin/gosu'),
])


6310) command -v gpgconf > /dev/null

CommandNode(pos=(661, 691), parts=[
  WordNode(pos=(661, 668), word='command'),
  WordNode(pos=(669, 671), word='-v'),
  WordNode(pos=(672, 679), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(682, 691), word='/dev/null'), pos=(680, 691), type='>'),
])


6311) gpgconf --kill all

CommandNode(pos=(695, 713), parts=[
  WordNode(pos=(695, 702), word='gpgconf'),
  WordNode(pos=(703, 709), word='--kill'),
  WordNode(pos=(710, 713), word='all'),
])


6312) :

CommandNode(pos=(717, 718), parts=[
  WordNode(pos=(717, 718), word=':'),
])


6313) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


6314) chmod +x /usr/local/bin/gosu

CommandNode(pos=(767, 795), parts=[
  WordNode(pos=(767, 772), word='chmod'),
  WordNode(pos=(773, 775), word='+x'),
  WordNode(pos=(776, 795), word='/usr/local/bin/gosu'),
])


6315) gosu nobody true

CommandNode(pos=(798, 814), parts=[
  WordNode(pos=(798, 802), word='gosu'),
  WordNode(pos=(803, 809), word='nobody'),
  WordNode(pos=(810, 814), word='true'),
])


6316) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


6317) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


6318) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6319) apt-get install -y --no-install-recommends   apt-transport-https ca-certificates   pwgen   tzdata

CommandNode(pos=(18, 115), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 82), word='apt-transport-https'),
  WordNode(pos=(83, 98), word='ca-certificates'),
  WordNode(pos=(101, 106), word='pwgen'),
  WordNode(pos=(109, 115), word='tzdata'),
])


6320) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(120, 147), parts=[
  WordNode(pos=(120, 122), word='rm'),
  WordNode(pos=(123, 126), word='-rf'),
  WordNode(pos=(127, 147), word='/var/lib/apt/lists/*'),
])


6321) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6322) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


6323) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


6324) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


6325) command -v gpgconf > /dev/null

CommandNode(pos=(220, 250), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
])


6326) gpgconf --kill all

CommandNode(pos=(254, 272), parts=[
  WordNode(pos=(254, 261), word='gpgconf'),
  WordNode(pos=(262, 268), word='--kill'),
  WordNode(pos=(269, 272), word='all'),
])


6327) :

CommandNode(pos=(276, 277), parts=[
  WordNode(pos=(276, 277), word=':'),
])


6328) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


6329) apt-key list

CommandNode(pos=(301, 313), parts=[
  WordNode(pos=(301, 308), word='apt-key'),
  WordNode(pos=(309, 313), word='list'),
])


6330) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


6331) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 130), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 91), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(94, 130), word='/etc/apt/sources.list.d/mariadb.list'), pos=(92, 130), type='>'),
])


6332) echo 'Package: *'

CommandNode(pos=(137, 154), parts=[
  WordNode(pos=(137, 141), word='echo'),
  WordNode(pos=(142, 154), word='Package: *'),
])


6333) echo 'Pin: release o=MariaDB'

CommandNode(pos=(158, 187), parts=[
  WordNode(pos=(158, 162), word='echo'),
  WordNode(pos=(163, 187), word='Pin: release o=MariaDB'),
])


6334) echo 'Pin-Priority: 999'

CommandNode(pos=(191, 215), parts=[
  WordNode(pos=(191, 195), word='echo'),
  WordNode(pos=(196, 215), word='Pin-Priority: 999'),
])


6335) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6336) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


6337) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


6338) debconf-set-selections

CommandNode(pos=(193, 215), parts=[
  WordNode(pos=(193, 215), word='debconf-set-selections'),
])


6339) apt-get update

CommandNode(pos=(218, 232), parts=[
  WordNode(pos=(218, 225), word='apt-get'),
  WordNode(pos=(226, 232), word='update'),
])


6340) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   mariadb-backup-10.2   socat

CommandNode(pos=(235, 319), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 311), word='mariadb-backup-10.2'),
  WordNode(pos=(314, 319), word='socat'),
])


6341) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(324, 351), parts=[
  WordNode(pos=(324, 326), word='rm'),
  WordNode(pos=(327, 330), word='-rf'),
  WordNode(pos=(331, 351), word='/var/lib/apt/lists/*'),
])


6342) sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*

CommandNode(pos=(354, 415), parts=[
  WordNode(pos=(354, 357), word='sed'),
  WordNode(pos=(358, 361), word='-ri'),
  WordNode(pos=(362, 377), word='s/^user\\s/#&/'),
  WordNode(pos=(378, 395), word='/etc/mysql/my.cnf'),
  WordNode(pos=(396, 415), word='/etc/mysql/conf.d/*'),
])


6343) rm -rf /var/lib/mysql

CommandNode(pos=(418, 439), parts=[
  WordNode(pos=(418, 420), word='rm'),
  WordNode(pos=(421, 424), word='-rf'),
  WordNode(pos=(425, 439), word='/var/lib/mysql'),
])


6344) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(442, 481), parts=[
  WordNode(pos=(442, 447), word='mkdir'),
  WordNode(pos=(448, 450), word='-p'),
  WordNode(pos=(451, 465), word='/var/lib/mysql'),
  WordNode(pos=(466, 481), word='/var/run/mysqld'),
])


6345) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(484, 535), parts=[
  WordNode(pos=(484, 489), word='chown'),
  WordNode(pos=(490, 492), word='-R'),
  WordNode(pos=(493, 504), word='mysql:mysql'),
  WordNode(pos=(505, 519), word='/var/lib/mysql'),
  WordNode(pos=(520, 535), word='/var/run/mysqld'),
])


6346) chmod 777 /var/run/mysqld

CommandNode(pos=(538, 563), parts=[
  WordNode(pos=(538, 543), word='chmod'),
  WordNode(pos=(544, 547), word='777'),
  WordNode(pos=(548, 563), word='/var/run/mysqld'),
])


6347) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(566, 604), parts=[
  WordNode(pos=(566, 570), word='find'),
  WordNode(pos=(571, 582), word='/etc/mysql/'),
  WordNode(pos=(583, 588), word='-name'),
  WordNode(pos=(589, 596), word='*.cnf'),
  WordNode(pos=(597, 604), word='-print0'),
])


6348) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(609, 649), parts=[
  WordNode(pos=(609, 614), word='xargs'),
  WordNode(pos=(615, 617), word='-0'),
  WordNode(pos=(618, 622), word='grep'),
  WordNode(pos=(623, 627), word='-lZE'),
  WordNode(pos=(628, 649), word='^(bind-address|log)'),
])


6349) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(654, 702), parts=[
  WordNode(pos=(654, 659), word='xargs'),
  WordNode(pos=(660, 663), word='-rt'),
  WordNode(pos=(664, 666), word='-0'),
  WordNode(pos=(667, 670), word='sed'),
  WordNode(pos=(671, 674), word='-Ei'),
  WordNode(pos=(675, 702), word='s/^(bind-address|log)/#&/'),
])


6350) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(705, 787), parts=[
  WordNode(pos=(705, 709), word='echo'),
  WordNode(pos=(710, 756), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(759, 787), word='/etc/mysql/conf.d/docker.cnf'), pos=(757, 787), type='>'),
])


6351) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


6352) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6353) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


6354) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


6355) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


6356) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6357) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


6358) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


6359) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6360) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


6361) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


6362) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


6363) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


6364) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


6365) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


6366) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


6367) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


6368) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


6369) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


6370) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


6371) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


6372) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


6373) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


6374) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


6375) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


6376) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


6377) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


6378) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


6379) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


6380) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


6381) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


6382) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


6383) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


6384) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


6385) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


6386) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


6387) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


6388) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


6389) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


6390) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6391) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


6392) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


6393) apt-get install -y --no-install-recommends   libjpeg-dev   libmagickwand-dev   libpng-dev

CommandNode(pos=(69, 158), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 125), word='libjpeg-dev'),
  WordNode(pos=(128, 145), word='libmagickwand-dev'),
  WordNode(pos=(148, 158), word='libpng-dev'),
])


6394) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(164, 232), parts=[
  WordNode(pos=(164, 188), word='docker-php-ext-configure'),
  WordNode(pos=(189, 191), word='gd'),
  WordNode(pos=(192, 211), word='--with-png-dir=/usr'),
  WordNode(pos=(212, 232), word='--with-jpeg-dir=/usr'),
])


6395) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(235, 303), parts=[
  WordNode(pos=(235, 257), word='docker-php-ext-install'),
  WordNode(pos=(260, 266), word='bcmath'),
  WordNode(pos=(269, 273), word='exif'),
  WordNode(pos=(276, 278), word='gd'),
  WordNode(pos=(281, 287), word='mysqli'),
  WordNode(pos=(290, 297), word='opcache'),
  WordNode(pos=(300, 303), word='zip'),
])


6396) pecl install imagick-3.4.4

CommandNode(pos=(308, 334), parts=[
  WordNode(pos=(308, 312), word='pecl'),
  WordNode(pos=(313, 320), word='install'),
  WordNode(pos=(321, 334), word='imagick-3.4.4'),
])


6397) docker-php-ext-enable imagick

CommandNode(pos=(337, 366), parts=[
  WordNode(pos=(337, 358), word='docker-php-ext-enable'),
  WordNode(pos=(359, 366), word='imagick'),
])


6398) apt-mark auto '.*' > /dev/null

CommandNode(pos=(370, 400), parts=[
  WordNode(pos=(370, 378), word='apt-mark'),
  WordNode(pos=(379, 383), word='auto'),
  WordNode(pos=(384, 388), word='.*'),
  RedirectNode(output=
    WordNode(pos=(391, 400), word='/dev/null'), pos=(389, 400), type='>'),
])


6399) apt-mark manual $savedAptMark

CommandNode(pos=(403, 432), parts=[
  WordNode(pos=(403, 411), word='apt-mark'),
  WordNode(pos=(412, 418), word='manual'),
  WordNode(pos=(419, 432), word='$savedAptMark', parts=[
    ParameterNode(pos=(419, 432), value='savedAptMark'),
  ]),
])


6400) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(435, 488), parts=[
  WordNode(pos=(435, 438), word='ldd'),
  WordNode(pos=(439, 488), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(442, 481), parts=[
        WordNode(pos=(442, 445), word='php'),
        WordNode(pos=(446, 448), word='-r'),
        WordNode(pos=(449, 481), word='echo ini_get("extension_dir");'),
      ]), pos=(440, 482)),
  ]),
])


6401) awk '/=>/ { print $3 }'

CommandNode(pos=(493, 516), parts=[
  WordNode(pos=(493, 496), word='awk'),
  WordNode(pos=(497, 516), word='/=>/ { print $3 }'),
])


6402) sort -u

CommandNode(pos=(521, 528), parts=[
  WordNode(pos=(521, 525), word='sort'),
  WordNode(pos=(526, 528), word='-u'),
])


6403) xargs -r dpkg-query -S

CommandNode(pos=(533, 555), parts=[
  WordNode(pos=(533, 538), word='xargs'),
  WordNode(pos=(539, 541), word='-r'),
  WordNode(pos=(542, 552), word='dpkg-query'),
  WordNode(pos=(553, 555), word='-S'),
])


6404) cut -d: -f1

CommandNode(pos=(560, 571), parts=[
  WordNode(pos=(560, 563), word='cut'),
  WordNode(pos=(564, 567), word='-d:'),
  WordNode(pos=(568, 571), word='-f1'),
])


6405) sort -u

CommandNode(pos=(576, 583), parts=[
  WordNode(pos=(576, 580), word='sort'),
  WordNode(pos=(581, 583), word='-u'),
])


6406) xargs -rt apt-mark manual

CommandNode(pos=(588, 613), parts=[
  WordNode(pos=(588, 593), word='xargs'),
  WordNode(pos=(594, 597), word='-rt'),
  WordNode(pos=(598, 606), word='apt-mark'),
  WordNode(pos=(607, 613), word='manual'),
])


6407) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(617, 693), parts=[
  WordNode(pos=(617, 624), word='apt-get'),
  WordNode(pos=(625, 630), word='purge'),
  WordNode(pos=(631, 633), word='-y'),
  WordNode(pos=(634, 647), word='--auto-remove'),
  WordNode(pos=(648, 650), word='-o'),
  WordNode(pos=(651, 693), word='APT::AutoRemove::RecommendsImportant=false'),
])


6408) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(696, 723), parts=[
  WordNode(pos=(696, 698), word='rm'),
  WordNode(pos=(699, 702), word='-rf'),
  WordNode(pos=(703, 723), word='/var/lib/apt/lists/*'),
])


6409) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


6410) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


6411) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


6412) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


6413) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


6414) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


6415) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


6416) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


6417) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


6418) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


6419) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


6420) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


6421) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


6422) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


6423) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


6424) a2enmod rewrite expires

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 7), word='a2enmod'),
  WordNode(pos=(8, 15), word='rewrite'),
  WordNode(pos=(16, 23), word='expires'),
])


6425) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6426) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


6427) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


6428) sha1sum -c -

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 154), word='sha1sum'),
  WordNode(pos=(155, 157), word='-c'),
  WordNode(pos=(158, 159), word='-'),
])


6429) tar -xzf wordpress.tar.gz -C /usr/src/

CommandNode(pos=(162, 200), parts=[
  WordNode(pos=(162, 165), word='tar'),
  WordNode(pos=(166, 170), word='-xzf'),
  WordNode(pos=(171, 187), word='wordpress.tar.gz'),
  WordNode(pos=(188, 190), word='-C'),
  WordNode(pos=(191, 200), word='/usr/src/'),
])


6430) rm wordpress.tar.gz

CommandNode(pos=(203, 222), parts=[
  WordNode(pos=(203, 205), word='rm'),
  WordNode(pos=(206, 222), word='wordpress.tar.gz'),
])


6431) chown -R www-data:www-data /usr/src/wordpress

CommandNode(pos=(225, 270), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 233), word='-R'),
  WordNode(pos=(234, 251), word='www-data:www-data'),
  WordNode(pos=(252, 270), word='/usr/src/wordpress'),
])


6432) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6433) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


6434) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


6435) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


6436) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


6437) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


6438) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


6439) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


6440) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6441) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


6442) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


6443) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


6444) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


6445) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


6446) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


6447) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


6448) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


6449) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


6450) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


6451) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


6452) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


6453) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


6454) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6455) apt-get install -y --no-install-recommends   ca-certificates   curl   build-essential   pkg-config   git   python

CommandNode(pos=(18, 131), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 103), word='build-essential'),
  WordNode(pos=(106, 116), word='pkg-config'),
  WordNode(pos=(119, 122), word='git'),
  WordNode(pos=(125, 131), word='python'),
])


6456) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(136, 163), parts=[
  WordNode(pos=(136, 138), word='rm'),
  WordNode(pos=(139, 142), word='-rf'),
  WordNode(pos=(143, 163), word='/var/lib/apt/lists/*'),
])


6457) gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D

CommandNode(pos=(0, 92), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 15), word='--keyserver'),
  WordNode(pos=(16, 39), word='pool.sks-keyservers.net'),
  WordNode(pos=(40, 51), word='--recv-keys'),
  WordNode(pos=(52, 92), word='7937DFD2AB06298B2293C3187D33FF9D0246406D'),
])


6458) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


6459) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


6460) gpg --verify SHASUMS256.txt.asc

CommandNode(pos=(164, 195), parts=[
  WordNode(pos=(164, 167), word='gpg'),
  WordNode(pos=(168, 176), word='--verify'),
  WordNode(pos=(177, 195), word='SHASUMS256.txt.asc'),
])


6461) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


6462) sha256sum -c -

CommandNode(pos=(268, 282), parts=[
  WordNode(pos=(268, 277), word='sha256sum'),
  WordNode(pos=(278, 280), word='-c'),
  WordNode(pos=(281, 282), word='-'),
])


6463) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


6464) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


6465) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(439, 472), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 472), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(459, 471), value='NPM_VERSION'),
  ]),
])


6466) npm cache clear

CommandNode(pos=(477, 492), parts=[
  WordNode(pos=(477, 480), word='npm'),
  WordNode(pos=(481, 486), word='cache'),
  WordNode(pos=(487, 492), word='clear'),
])


6467) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6468) apt-get install -y --no-install-recommends   bzr   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 125), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='bzr'),
  WordNode(pos=(69, 72), word='git'),
  WordNode(pos=(75, 84), word='mercurial'),
  WordNode(pos=(87, 101), word='openssh-client'),
  WordNode(pos=(104, 114), word='subversion'),
  WordNode(pos=(119, 125), word='procps'),
])


6469) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(130, 157), parts=[
  WordNode(pos=(130, 132), word='rm'),
  WordNode(pos=(133, 136), word='-rf'),
  WordNode(pos=(137, 157), word='/var/lib/apt/lists/*'),
])


6470) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6471) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev

CommandNode(pos=(11, 117), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
])


6472) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(123, 191), parts=[
  WordNode(pos=(123, 147), word='docker-php-ext-configure'),
  WordNode(pos=(148, 150), word='gd'),
  WordNode(pos=(151, 170), word='--with-png-dir=/usr'),
  WordNode(pos=(171, 191), word='--with-jpeg-dir=/usr'),
])


6473) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(194, 262), parts=[
  WordNode(pos=(194, 216), word='docker-php-ext-install'),
  WordNode(pos=(219, 225), word='bcmath'),
  WordNode(pos=(228, 232), word='exif'),
  WordNode(pos=(235, 237), word='gd'),
  WordNode(pos=(240, 246), word='mysqli'),
  WordNode(pos=(249, 256), word='opcache'),
  WordNode(pos=(259, 262), word='zip'),
])


6474) pecl install imagick-3.4.4

CommandNode(pos=(267, 293), parts=[
  WordNode(pos=(267, 271), word='pecl'),
  WordNode(pos=(272, 279), word='install'),
  WordNode(pos=(280, 293), word='imagick-3.4.4'),
])


6475) docker-php-ext-enable imagick

CommandNode(pos=(296, 325), parts=[
  WordNode(pos=(296, 317), word='docker-php-ext-enable'),
  WordNode(pos=(318, 325), word='imagick'),
])


6476) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


6477) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(548, 601), parts=[
  WordNode(pos=(548, 551), word='apk'),
  WordNode(pos=(552, 555), word='add'),
  WordNode(pos=(556, 565), word='--virtual'),
  WordNode(pos=(566, 592), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(593, 601), word='$runDeps', parts=[
    ParameterNode(pos=(593, 601), value='runDeps'),
  ]),
])


6478) apk del .build-deps

CommandNode(pos=(604, 623), parts=[
  WordNode(pos=(604, 607), word='apk'),
  WordNode(pos=(608, 611), word='del'),
  WordNode(pos=(612, 623), word='.build-deps'),
])


6479) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


6480) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


6481) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


6482) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


6483) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


6484) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


6485) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


6486) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


6487) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


6488) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


6489) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


6490) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


6491) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


6492) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


6493) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


6494) apk add --no-cache   bash   less   mysql-client

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 25), word='bash'),
  WordNode(pos=(28, 32), word='less'),
  WordNode(pos=(35, 47), word='mysql-client'),
])


6495) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6496) mkdir -p /var/www/html

CommandNode(pos=(10, 32), parts=[
  WordNode(pos=(10, 15), word='mkdir'),
  WordNode(pos=(16, 18), word='-p'),
  WordNode(pos=(19, 32), word='/var/www/html'),
])


6497) chown -R www-data:www-data /var/www/html

CommandNode(pos=(35, 75), parts=[
  WordNode(pos=(35, 40), word='chown'),
  WordNode(pos=(41, 43), word='-R'),
  WordNode(pos=(44, 61), word='www-data:www-data'),
  WordNode(pos=(62, 75), word='/var/www/html'),
])


6498) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6499) apk add --no-cache --virtual .fetch-deps   gnupg

CommandNode(pos=(11, 59), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
])


6500) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


6501) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(223, 254), parts=[
  WordNode(pos=(223, 229), word='export'),
  WordNode(pos=(230, 254), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(243, 252), parts=[
        WordNode(pos=(243, 249), word='mktemp'),
        WordNode(pos=(250, 252), word='-d'),
      ]), pos=(241, 253)),
  ]),
])


6502) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$WORDPRESS_CLI_GPG_KEY"

CommandNode(pos=(257, 344), parts=[
  WordNode(pos=(257, 260), word='gpg'),
  WordNode(pos=(261, 268), word='--batch'),
  WordNode(pos=(269, 280), word='--keyserver'),
  WordNode(pos=(281, 307), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(308, 319), word='--recv-keys'),
  WordNode(pos=(320, 344), word='$WORDPRESS_CLI_GPG_KEY', parts=[
    ParameterNode(pos=(321, 343), value='WORDPRESS_CLI_GPG_KEY'),
  ]),
])


6503) gpg --batch --decrypt --output /usr/local/bin/wp /usr/local/bin/wp.gpg

CommandNode(pos=(347, 417), parts=[
  WordNode(pos=(347, 350), word='gpg'),
  WordNode(pos=(351, 358), word='--batch'),
  WordNode(pos=(359, 368), word='--decrypt'),
  WordNode(pos=(369, 377), word='--output'),
  WordNode(pos=(378, 395), word='/usr/local/bin/wp'),
  WordNode(pos=(396, 417), word='/usr/local/bin/wp.gpg'),
])


6504) command -v gpgconf

CommandNode(pos=(420, 438), parts=[
  WordNode(pos=(420, 427), word='command'),
  WordNode(pos=(428, 430), word='-v'),
  WordNode(pos=(431, 438), word='gpgconf'),
])


6505) gpgconf --kill all

CommandNode(pos=(442, 460), parts=[
  WordNode(pos=(442, 449), word='gpgconf'),
  WordNode(pos=(450, 456), word='--kill'),
  WordNode(pos=(457, 460), word='all'),
])


6506) :

CommandNode(pos=(464, 465), parts=[
  WordNode(pos=(464, 465), word=':'),
])


6507) rm -rf "$GNUPGHOME" /usr/local/bin/wp.gpg

CommandNode(pos=(468, 509), parts=[
  WordNode(pos=(468, 470), word='rm'),
  WordNode(pos=(471, 474), word='-rf'),
  WordNode(pos=(475, 487), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(476, 486), value='GNUPGHOME'),
  ]),
  WordNode(pos=(488, 509), word='/usr/local/bin/wp.gpg'),
])


6508) echo "$WORDPRESS_CLI_SHA512 */usr/local/bin/wp"

CommandNode(pos=(513, 560), parts=[
  WordNode(pos=(513, 517), word='echo'),
  WordNode(pos=(518, 560), word='$WORDPRESS_CLI_SHA512 */usr/local/bin/wp', parts=[
    ParameterNode(pos=(519, 540), value='WORDPRESS_CLI_SHA512'),
  ]),
])


6509) sha512sum -c -

CommandNode(pos=(563, 577), parts=[
  WordNode(pos=(563, 572), word='sha512sum'),
  WordNode(pos=(573, 575), word='-c'),
  WordNode(pos=(576, 577), word='-'),
])


6510) chmod +x /usr/local/bin/wp

CommandNode(pos=(580, 606), parts=[
  WordNode(pos=(580, 585), word='chmod'),
  WordNode(pos=(586, 588), word='+x'),
  WordNode(pos=(589, 606), word='/usr/local/bin/wp'),
])


6511) apk del .fetch-deps

CommandNode(pos=(610, 629), parts=[
  WordNode(pos=(610, 613), word='apk'),
  WordNode(pos=(614, 617), word='del'),
  WordNode(pos=(618, 629), word='.fetch-deps'),
])


6512) wp --allow-root --version

CommandNode(pos=(633, 658), parts=[
  WordNode(pos=(633, 635), word='wp'),
  WordNode(pos=(636, 648), word='--allow-root'),
  WordNode(pos=(649, 658), word='--version'),
])


6513) apk add --no-cache   gmp-dev

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 28), word='gmp-dev'),
])


6514) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


6515) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


6516) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


6517) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6518) apk add --no-cache --virtual .ruby-builddeps   autoconf   bison   bzip2   bzip2-dev   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gdbm-dev   glib-dev   libc-dev   libffi-dev   libxml2-dev   libxslt-dev   linux-headers   make   ncurses-dev   openssl   openssl-dev   procps   readline-dev   ruby   tar   xz   yaml-dev   zlib-dev

CommandNode(pos=(13, 347), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 57), word='.ruby-builddeps'),
  WordNode(pos=(60, 68), word='autoconf'),
  WordNode(pos=(71, 76), word='bison'),
  WordNode(pos=(79, 84), word='bzip2'),
  WordNode(pos=(87, 96), word='bzip2-dev'),
  WordNode(pos=(99, 114), word='ca-certificates'),
  WordNode(pos=(117, 126), word='coreutils'),
  WordNode(pos=(129, 137), word='dpkg-dev'),
  WordNode(pos=(138, 142), word='dpkg'),
  WordNode(pos=(145, 148), word='gcc'),
  WordNode(pos=(151, 159), word='gdbm-dev'),
  WordNode(pos=(162, 170), word='glib-dev'),
  WordNode(pos=(173, 181), word='libc-dev'),
  WordNode(pos=(184, 194), word='libffi-dev'),
  WordNode(pos=(197, 208), word='libxml2-dev'),
  WordNode(pos=(211, 222), word='libxslt-dev'),
  WordNode(pos=(225, 238), word='linux-headers'),
  WordNode(pos=(241, 245), word='make'),
  WordNode(pos=(248, 259), word='ncurses-dev'),
  WordNode(pos=(262, 269), word='openssl'),
  WordNode(pos=(272, 283), word='openssl-dev'),
  WordNode(pos=(286, 292), word='procps'),
  WordNode(pos=(295, 307), word='readline-dev'),
  WordNode(pos=(310, 314), word='ruby'),
  WordNode(pos=(317, 320), word='tar'),
  WordNode(pos=(323, 325), word='xz'),
  WordNode(pos=(328, 336), word='yaml-dev'),
  WordNode(pos=(339, 347), word='zlib-dev'),
])


6519) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


6520) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


6521) sha256sum -c -

CommandNode(pos=(504, 518), parts=[
  WordNode(pos=(504, 513), word='sha256sum'),
  WordNode(pos=(514, 516), word='-c'),
  WordNode(pos=(517, 518), word='-'),
])


6522) mkdir -p /usr/src/ruby

CommandNode(pos=(524, 546), parts=[
  WordNode(pos=(524, 529), word='mkdir'),
  WordNode(pos=(530, 532), word='-p'),
  WordNode(pos=(533, 546), word='/usr/src/ruby'),
])


6523) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(551, 609), parts=[
  WordNode(pos=(551, 554), word='tar'),
  WordNode(pos=(555, 559), word='-xJf'),
  WordNode(pos=(560, 571), word='ruby.tar.xz'),
  WordNode(pos=(572, 574), word='-C'),
  WordNode(pos=(575, 588), word='/usr/src/ruby'),
  WordNode(pos=(589, 609), word='--strip-components=1'),
])


6524) rm ruby.tar.xz

CommandNode(pos=(614, 628), parts=[
  WordNode(pos=(614, 616), word='rm'),
  WordNode(pos=(617, 628), word='ruby.tar.xz'),
])


6525) cd /usr/src/ruby

CommandNode(pos=(634, 650), parts=[
  WordNode(pos=(634, 636), word='cd'),
  WordNode(pos=(637, 650), word='/usr/src/ruby'),
])


6526) wget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'

CommandNode(pos=(656, 807), parts=[
  WordNode(pos=(656, 660), word='wget'),
  WordNode(pos=(661, 663), word='-O'),
  WordNode(pos=(664, 688), word='thread-stack-fix.patch'),
  WordNode(pos=(689, 807), word='https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'),
])


6527) echo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'

CommandNode(pos=(812, 907), parts=[
  WordNode(pos=(812, 816), word='echo'),
  WordNode(pos=(817, 907), word='3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'),
])


6528) sha256sum -c -

CommandNode(pos=(910, 924), parts=[
  WordNode(pos=(910, 919), word='sha256sum'),
  WordNode(pos=(920, 922), word='-c'),
  WordNode(pos=(923, 924), word='-'),
])


6529) patch -p1 -i thread-stack-fix.patch

CommandNode(pos=(929, 964), parts=[
  WordNode(pos=(929, 934), word='patch'),
  WordNode(pos=(935, 938), word='-p1'),
  WordNode(pos=(939, 941), word='-i'),
  WordNode(pos=(942, 964), word='thread-stack-fix.patch'),
])


6530) rm thread-stack-fix.patch

CommandNode(pos=(969, 994), parts=[
  WordNode(pos=(969, 971), word='rm'),
  WordNode(pos=(972, 994), word='thread-stack-fix.patch'),
])


6531) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(1004, 1038), parts=[
  WordNode(pos=(1004, 1008), word='echo'),
  WordNode(pos=(1009, 1038), word='#define ENABLE_PATH_CHECK 0'),
])


6532) echo

CommandNode(pos=(1042, 1046), parts=[
  WordNode(pos=(1042, 1046), word='echo'),
])


6533) cat file.c

CommandNode(pos=(1050, 1060), parts=[
  WordNode(pos=(1050, 1053), word='cat'),
  WordNode(pos=(1054, 1060), word='file.c'),
])


6534) mv file.c.new file.c

CommandNode(pos=(1082, 1102), parts=[
  WordNode(pos=(1082, 1084), word='mv'),
  WordNode(pos=(1085, 1095), word='file.c.new'),
  WordNode(pos=(1096, 1102), word='file.c'),
])


6535) autoconf

CommandNode(pos=(1108, 1116), parts=[
  WordNode(pos=(1108, 1116), word='autoconf'),
])


6536) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


6537) export ac_cv_func_isnan=yes ac_cv_func_isinf=yes

CommandNode(pos=(1183, 1231), parts=[
  WordNode(pos=(1183, 1189), word='export'),
  WordNode(pos=(1190, 1210), word='ac_cv_func_isnan=yes'),
  WordNode(pos=(1211, 1231), word='ac_cv_func_isinf=yes'),
])


6538) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


6539) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


6540) make install

CommandNode(pos=(1338, 1350), parts=[
  WordNode(pos=(1338, 1342), word='make'),
  WordNode(pos=(1343, 1350), word='install'),
])


6541) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


6542) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


6543) apk del --no-network .ruby-builddeps

CommandNode(pos=(1686, 1722), parts=[
  WordNode(pos=(1686, 1689), word='apk'),
  WordNode(pos=(1690, 1693), word='del'),
  WordNode(pos=(1694, 1706), word='--no-network'),
  WordNode(pos=(1707, 1722), word='.ruby-builddeps'),
])


6544) cd /

CommandNode(pos=(1727, 1731), parts=[
  WordNode(pos=(1727, 1729), word='cd'),
  WordNode(pos=(1730, 1731), word='/'),
])


6545) rm -r /usr/src/ruby

CommandNode(pos=(1736, 1755), parts=[
  WordNode(pos=(1736, 1738), word='rm'),
  WordNode(pos=(1739, 1741), word='-r'),
  WordNode(pos=(1742, 1755), word='/usr/src/ruby'),
])


6546) ruby --version

CommandNode(pos=(1760, 1774), parts=[
  WordNode(pos=(1760, 1764), word='ruby'),
  WordNode(pos=(1765, 1774), word='--version'),
])


6547) gem --version

CommandNode(pos=(1778, 1791), parts=[
  WordNode(pos=(1778, 1781), word='gem'),
  WordNode(pos=(1782, 1791), word='--version'),
])


6548) bundle --version

CommandNode(pos=(1795, 1811), parts=[
  WordNode(pos=(1795, 1801), word='bundle'),
  WordNode(pos=(1802, 1811), word='--version'),
])


6549) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


6550) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


6551) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


6552) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6553) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


6554) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


6555) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


6556) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


6557) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


6558) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


6559) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


6560) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


6561) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


6562) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


6563) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


6564) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


6565) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


6566) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   util-linux-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1045), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1025), word='util-linux-dev'),
  WordNode(pos=(1028, 1034), word='xz-dev'),
  WordNode(pos=(1037, 1045), word='zlib-dev'),
])


6567) apk del .fetch-deps

CommandNode(pos=(1050, 1069), parts=[
  WordNode(pos=(1050, 1053), word='apk'),
  WordNode(pos=(1054, 1057), word='del'),
  WordNode(pos=(1058, 1069), word='.fetch-deps'),
])


6568) cd /usr/src/python

CommandNode(pos=(1075, 1093), parts=[
  WordNode(pos=(1075, 1077), word='cd'),
  WordNode(pos=(1078, 1093), word='/usr/src/python'),
])


6569) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


6570) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


6571) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


6572) make install

CommandNode(pos=(1386, 1398), parts=[
  WordNode(pos=(1386, 1390), word='make'),
  WordNode(pos=(1391, 1398), word='install'),
])


6573) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1404, 1527), parts=[
  WordNode(pos=(1404, 1408), word='find'),
  WordNode(pos=(1409, 1419), word='/usr/local'),
  WordNode(pos=(1420, 1425), word='-type'),
  WordNode(pos=(1426, 1427), word='f'),
  WordNode(pos=(1428, 1439), word='-executable'),
  WordNode(pos=(1440, 1444), word='-not'),
  WordNode(pos=(1445, 1447), word='('),
  WordNode(pos=(1448, 1453), word='-name'),
  WordNode(pos=(1454, 1465), word='*tkinter*'),
  WordNode(pos=(1466, 1468), word=')'),
  WordNode(pos=(1469, 1474), word='-exec'),
  WordNode(pos=(1475, 1482), word='scanelf'),
  WordNode(pos=(1483, 1491), word='--needed'),
  WordNode(pos=(1492, 1502), word='--nobanner'),
  WordNode(pos=(1503, 1511), word='--format'),
  WordNode(pos=(1512, 1518), word='%n#p'),
  WordNode(pos=(1519, 1523), word='{}'),
  WordNode(pos=(1524, 1527), word=';'),
])


6574) tr ',' '\n'

CommandNode(pos=(1532, 1543), parts=[
  WordNode(pos=(1532, 1534), word='tr'),
  WordNode(pos=(1535, 1538), word=','),
  WordNode(pos=(1539, 1543), word='\\n'),
])


6575) sort -u

CommandNode(pos=(1548, 1555), parts=[
  WordNode(pos=(1548, 1552), word='sort'),
  WordNode(pos=(1553, 1555), word='-u'),
])


6576) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1560, 1637), parts=[
  WordNode(pos=(1560, 1563), word='awk'),
  WordNode(pos=(1564, 1637), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


6577) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1642, 1696), parts=[
  WordNode(pos=(1642, 1647), word='xargs'),
  WordNode(pos=(1648, 1651), word='-rt'),
  WordNode(pos=(1652, 1655), word='apk'),
  WordNode(pos=(1656, 1659), word='add'),
  WordNode(pos=(1660, 1670), word='--no-cache'),
  WordNode(pos=(1671, 1680), word='--virtual'),
  WordNode(pos=(1681, 1696), word='.python-rundeps'),
])


6578) apk del .build-deps

CommandNode(pos=(1701, 1720), parts=[
  WordNode(pos=(1701, 1704), word='apk'),
  WordNode(pos=(1705, 1708), word='del'),
  WordNode(pos=(1709, 1720), word='.build-deps'),
])


6579) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1726, 1893), parts=[
  WordNode(pos=(1726, 1730), word='find'),
  WordNode(pos=(1731, 1741), word='/usr/local'),
  WordNode(pos=(1742, 1748), word='-depth'),
  WordNode(pos=(1751, 1753), word='('),
  WordNode(pos=(1757, 1759), word='('),
  WordNode(pos=(1760, 1765), word='-type'),
  WordNode(pos=(1766, 1767), word='d'),
  WordNode(pos=(1768, 1770), word='-a'),
  WordNode(pos=(1771, 1773), word='('),
  WordNode(pos=(1774, 1779), word='-name'),
  WordNode(pos=(1780, 1784), word='test'),
  WordNode(pos=(1785, 1787), word='-o'),
  WordNode(pos=(1788, 1793), word='-name'),
  WordNode(pos=(1794, 1799), word='tests'),
  WordNode(pos=(1800, 1802), word=')'),
  WordNode(pos=(1803, 1805), word=')'),
  WordNode(pos=(1809, 1811), word='-o'),
  WordNode(pos=(1815, 1817), word='('),
  WordNode(pos=(1818, 1823), word='-type'),
  WordNode(pos=(1824, 1825), word='f'),
  WordNode(pos=(1826, 1828), word='-a'),
  WordNode(pos=(1829, 1831), word='('),
  WordNode(pos=(1832, 1837), word='-name'),
  WordNode(pos=(1838, 1845), word='*.pyc'),
  WordNode(pos=(1846, 1848), word='-o'),
  WordNode(pos=(1849, 1854), word='-name'),
  WordNode(pos=(1855, 1862), word='*.pyo'),
  WordNode(pos=(1863, 1865), word=')'),
  WordNode(pos=(1866, 1868), word=')'),
  WordNode(pos=(1871, 1873), word=')'),
  WordNode(pos=(1874, 1879), word='-exec'),
  WordNode(pos=(1880, 1882), word='rm'),
  WordNode(pos=(1883, 1886), word='-rf'),
  WordNode(pos=(1887, 1891), word='{}'),
  WordNode(pos=(1892, 1893), word='+'),
])


6580) rm -rf /usr/src/python

CommandNode(pos=(1898, 1920), parts=[
  WordNode(pos=(1898, 1900), word='rm'),
  WordNode(pos=(1901, 1904), word='-rf'),
  WordNode(pos=(1905, 1920), word='/usr/src/python'),
])


6581) python3 --version

CommandNode(pos=(1926, 1943), parts=[
  WordNode(pos=(1926, 1933), word='python3'),
  WordNode(pos=(1934, 1943), word='--version'),
])


6582) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


6583) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


6584) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


6585) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


6586) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


6587) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6588) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


6589) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


6590) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


6591) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


6592) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


6593) pip install --no-cache-dir virtualenv

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 26), word='--no-cache-dir'),
  WordNode(pos=(27, 37), word='virtualenv'),
])


6594) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6595) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


6596) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


6597) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


6598) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


6599) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


6600) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


6601) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


6602) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6603) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


6604) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


6605) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


6606) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


6607) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


6608) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


6609) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


6610) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


6611) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


6612) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


6613) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


6614) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


6615) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


6616) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6617) apt-get install -y --no-install-recommends   tk-dev

CommandNode(pos=(18, 69), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 69), word='tk-dev'),
])


6618) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(74, 101), parts=[
  WordNode(pos=(74, 76), word='rm'),
  WordNode(pos=(77, 80), word='-rf'),
  WordNode(pos=(81, 101), word='/var/lib/apt/lists/*'),
])


6619) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6620) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


6621) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


6622) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


6623) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


6624) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


6625) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


6626) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


6627) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


6628) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


6629) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


6630) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


6631) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


6632) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


6633) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


6634) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4

CommandNode(pos=(740, 814), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 790), word='--enable-shared'),
  WordNode(pos=(793, 814), word='--enable-unicode=ucs4'),
])


6635) make -j "$(nproc)"

CommandNode(pos=(819, 837), parts=[
  WordNode(pos=(819, 823), word='make'),
  WordNode(pos=(824, 826), word='-j'),
  WordNode(pos=(827, 837), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(830, 835), parts=[
        WordNode(pos=(830, 835), word='nproc'),
      ]), pos=(828, 836)),
  ]),
])


6636) make install

CommandNode(pos=(842, 854), parts=[
  WordNode(pos=(842, 846), word='make'),
  WordNode(pos=(847, 854), word='install'),
])


6637) ldconfig

CommandNode(pos=(859, 867), parts=[
  WordNode(pos=(859, 867), word='ldconfig'),
])


6638) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(873, 1040), parts=[
  WordNode(pos=(873, 877), word='find'),
  WordNode(pos=(878, 888), word='/usr/local'),
  WordNode(pos=(889, 895), word='-depth'),
  WordNode(pos=(898, 900), word='('),
  WordNode(pos=(904, 906), word='('),
  WordNode(pos=(907, 912), word='-type'),
  WordNode(pos=(913, 914), word='d'),
  WordNode(pos=(915, 917), word='-a'),
  WordNode(pos=(918, 920), word='('),
  WordNode(pos=(921, 926), word='-name'),
  WordNode(pos=(927, 931), word='test'),
  WordNode(pos=(932, 934), word='-o'),
  WordNode(pos=(935, 940), word='-name'),
  WordNode(pos=(941, 946), word='tests'),
  WordNode(pos=(947, 949), word=')'),
  WordNode(pos=(950, 952), word=')'),
  WordNode(pos=(956, 958), word='-o'),
  WordNode(pos=(962, 964), word='('),
  WordNode(pos=(965, 970), word='-type'),
  WordNode(pos=(971, 972), word='f'),
  WordNode(pos=(973, 975), word='-a'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(979, 984), word='-name'),
  WordNode(pos=(985, 992), word='*.pyc'),
  WordNode(pos=(993, 995), word='-o'),
  WordNode(pos=(996, 1001), word='-name'),
  WordNode(pos=(1002, 1009), word='*.pyo'),
  WordNode(pos=(1010, 1012), word=')'),
  WordNode(pos=(1013, 1015), word=')'),
  WordNode(pos=(1018, 1020), word=')'),
  WordNode(pos=(1021, 1026), word='-exec'),
  WordNode(pos=(1027, 1029), word='rm'),
  WordNode(pos=(1030, 1033), word='-rf'),
  WordNode(pos=(1034, 1038), word='{}'),
  WordNode(pos=(1039, 1040), word='+'),
])


6639) rm -rf /usr/src/python

CommandNode(pos=(1045, 1067), parts=[
  WordNode(pos=(1045, 1047), word='rm'),
  WordNode(pos=(1048, 1051), word='-rf'),
  WordNode(pos=(1052, 1067), word='/usr/src/python'),
])


6640) python2 --version

CommandNode(pos=(1073, 1090), parts=[
  WordNode(pos=(1073, 1080), word='python2'),
  WordNode(pos=(1081, 1090), word='--version'),
])


6641) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6642) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


6643) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


6644) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


6645) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


6646) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


6647) pip install --no-cache-dir virtualenv

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 26), word='--no-cache-dir'),
  WordNode(pos=(27, 37), word='virtualenv'),
])


6648) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


6649) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6650) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


6651) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


6652) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


6653) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


6654) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


6655) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


6656) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


6657) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


6658) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


6659) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


6660) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


6661) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


6662) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


6663) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   libressl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   zlib-dev

CommandNode(pos=(719, 1020), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 945), word='libressl-dev'),
  WordNode(pos=(948, 957), word='pax-utils'),
  WordNode(pos=(960, 972), word='readline-dev'),
  WordNode(pos=(975, 985), word='sqlite-dev'),
  WordNode(pos=(988, 995), word='tcl-dev'),
  WordNode(pos=(998, 1000), word='tk'),
  WordNode(pos=(1003, 1009), word='tk-dev'),
  WordNode(pos=(1012, 1020), word='zlib-dev'),
])


6664) apk del .fetch-deps

CommandNode(pos=(1025, 1044), parts=[
  WordNode(pos=(1025, 1028), word='apk'),
  WordNode(pos=(1029, 1032), word='del'),
  WordNode(pos=(1033, 1044), word='.fetch-deps'),
])


6665) cd /usr/src/python

CommandNode(pos=(1050, 1068), parts=[
  WordNode(pos=(1050, 1052), word='cd'),
  WordNode(pos=(1053, 1068), word='/usr/src/python'),
])


6666) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1073, 1130), parts=[
  AssignmentNode(pos=(1073, 1130), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1084, 1128), parts=[
        WordNode(pos=(1084, 1101), word='dpkg-architecture'),
        WordNode(pos=(1102, 1109), word='--query'),
        WordNode(pos=(1110, 1128), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1082, 1129)),
  ]),
])


6667) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4   --with-system-expat   --with-system-ffi

CommandNode(pos=(1135, 1251), parts=[
  WordNode(pos=(1135, 1146), word='./configure'),
  WordNode(pos=(1149, 1167), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1158, 1166), value='gnuArch'),
  ]),
  WordNode(pos=(1170, 1185), word='--enable-shared'),
  WordNode(pos=(1188, 1209), word='--enable-unicode=ucs4'),
  WordNode(pos=(1212, 1231), word='--with-system-expat'),
  WordNode(pos=(1234, 1251), word='--with-system-ffi'),
])


6668) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1256, 1320), parts=[
  WordNode(pos=(1256, 1260), word='make'),
  WordNode(pos=(1261, 1263), word='-j'),
  WordNode(pos=(1264, 1274), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1267, 1272), parts=[
        WordNode(pos=(1267, 1272), word='nproc'),
      ]), pos=(1265, 1273)),
  ]),
  WordNode(pos=(1277, 1320), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


6669) make install

CommandNode(pos=(1325, 1337), parts=[
  WordNode(pos=(1325, 1329), word='make'),
  WordNode(pos=(1330, 1337), word='install'),
])


6670) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1343, 1466), parts=[
  WordNode(pos=(1343, 1347), word='find'),
  WordNode(pos=(1348, 1358), word='/usr/local'),
  WordNode(pos=(1359, 1364), word='-type'),
  WordNode(pos=(1365, 1366), word='f'),
  WordNode(pos=(1367, 1378), word='-executable'),
  WordNode(pos=(1379, 1383), word='-not'),
  WordNode(pos=(1384, 1386), word='('),
  WordNode(pos=(1387, 1392), word='-name'),
  WordNode(pos=(1393, 1404), word='*tkinter*'),
  WordNode(pos=(1405, 1407), word=')'),
  WordNode(pos=(1408, 1413), word='-exec'),
  WordNode(pos=(1414, 1421), word='scanelf'),
  WordNode(pos=(1422, 1430), word='--needed'),
  WordNode(pos=(1431, 1441), word='--nobanner'),
  WordNode(pos=(1442, 1450), word='--format'),
  WordNode(pos=(1451, 1457), word='%n#p'),
  WordNode(pos=(1458, 1462), word='{}'),
  WordNode(pos=(1463, 1466), word=';'),
])


6671) tr ',' '\n'

CommandNode(pos=(1471, 1482), parts=[
  WordNode(pos=(1471, 1473), word='tr'),
  WordNode(pos=(1474, 1477), word=','),
  WordNode(pos=(1478, 1482), word='\\n'),
])


6672) sort -u

CommandNode(pos=(1487, 1494), parts=[
  WordNode(pos=(1487, 1491), word='sort'),
  WordNode(pos=(1492, 1494), word='-u'),
])


6673) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1499, 1576), parts=[
  WordNode(pos=(1499, 1502), word='awk'),
  WordNode(pos=(1503, 1576), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


6674) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1581, 1635), parts=[
  WordNode(pos=(1581, 1586), word='xargs'),
  WordNode(pos=(1587, 1590), word='-rt'),
  WordNode(pos=(1591, 1594), word='apk'),
  WordNode(pos=(1595, 1598), word='add'),
  WordNode(pos=(1599, 1609), word='--no-cache'),
  WordNode(pos=(1610, 1619), word='--virtual'),
  WordNode(pos=(1620, 1635), word='.python-rundeps'),
])


6675) apk del .build-deps

CommandNode(pos=(1640, 1659), parts=[
  WordNode(pos=(1640, 1643), word='apk'),
  WordNode(pos=(1644, 1647), word='del'),
  WordNode(pos=(1648, 1659), word='.build-deps'),
])


6676) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1665, 1832), parts=[
  WordNode(pos=(1665, 1669), word='find'),
  WordNode(pos=(1670, 1680), word='/usr/local'),
  WordNode(pos=(1681, 1687), word='-depth'),
  WordNode(pos=(1690, 1692), word='('),
  WordNode(pos=(1696, 1698), word='('),
  WordNode(pos=(1699, 1704), word='-type'),
  WordNode(pos=(1705, 1706), word='d'),
  WordNode(pos=(1707, 1709), word='-a'),
  WordNode(pos=(1710, 1712), word='('),
  WordNode(pos=(1713, 1718), word='-name'),
  WordNode(pos=(1719, 1723), word='test'),
  WordNode(pos=(1724, 1726), word='-o'),
  WordNode(pos=(1727, 1732), word='-name'),
  WordNode(pos=(1733, 1738), word='tests'),
  WordNode(pos=(1739, 1741), word=')'),
  WordNode(pos=(1742, 1744), word=')'),
  WordNode(pos=(1748, 1750), word='-o'),
  WordNode(pos=(1754, 1756), word='('),
  WordNode(pos=(1757, 1762), word='-type'),
  WordNode(pos=(1763, 1764), word='f'),
  WordNode(pos=(1765, 1767), word='-a'),
  WordNode(pos=(1768, 1770), word='('),
  WordNode(pos=(1771, 1776), word='-name'),
  WordNode(pos=(1777, 1784), word='*.pyc'),
  WordNode(pos=(1785, 1787), word='-o'),
  WordNode(pos=(1788, 1793), word='-name'),
  WordNode(pos=(1794, 1801), word='*.pyo'),
  WordNode(pos=(1802, 1804), word=')'),
  WordNode(pos=(1805, 1807), word=')'),
  WordNode(pos=(1810, 1812), word=')'),
  WordNode(pos=(1813, 1818), word='-exec'),
  WordNode(pos=(1819, 1821), word='rm'),
  WordNode(pos=(1822, 1825), word='-rf'),
  WordNode(pos=(1826, 1830), word='{}'),
  WordNode(pos=(1831, 1832), word='+'),
])


6677) rm -rf /usr/src/python

CommandNode(pos=(1837, 1859), parts=[
  WordNode(pos=(1837, 1839), word='rm'),
  WordNode(pos=(1840, 1843), word='-rf'),
  WordNode(pos=(1844, 1859), word='/usr/src/python'),
])


6678) python2 --version

CommandNode(pos=(1865, 1882), parts=[
  WordNode(pos=(1865, 1872), word='python2'),
  WordNode(pos=(1873, 1882), word='--version'),
])


6679) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6680) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


6681) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


6682) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


6683) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


6684) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


6685) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6686) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


6687) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


6688) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


6689) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


6690) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6691) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


6692) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6693) echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 14), word='echo'),
  WordNode(pos=(15, 33), word='/usr/local/lib64'),
  RedirectNode(output=
    WordNode(pos=(36, 70), word='/etc/ld.so.conf.d/local-lib64.conf'), pos=(34, 70), type='>'),
])


6694) ldconfig -v

CommandNode(pos=(73, 84), parts=[
  WordNode(pos=(73, 81), word='ldconfig'),
  WordNode(pos=(82, 84), word='-v'),
])


6695) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6696) dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 21), word='dpkg-divert'),
  WordNode(pos=(22, 30), word='--divert'),
  WordNode(pos=(31, 48), word='/usr/bin/gcc.orig'),
  WordNode(pos=(49, 57), word='--rename'),
  WordNode(pos=(58, 70), word='/usr/bin/gcc'),
])


6697) dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++

CommandNode(pos=(73, 133), parts=[
  WordNode(pos=(73, 84), word='dpkg-divert'),
  WordNode(pos=(85, 93), word='--divert'),
  WordNode(pos=(94, 111), word='/usr/bin/g++.orig'),
  WordNode(pos=(112, 120), word='--rename'),
  WordNode(pos=(121, 133), word='/usr/bin/g++'),
])


6698) dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran

CommandNode(pos=(136, 206), parts=[
  WordNode(pos=(136, 147), word='dpkg-divert'),
  WordNode(pos=(148, 156), word='--divert'),
  WordNode(pos=(157, 179), word='/usr/bin/gfortran.orig'),
  WordNode(pos=(180, 188), word='--rename'),
  WordNode(pos=(189, 206), word='/usr/bin/gfortran'),
])


6699) update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999

CommandNode(pos=(209, 276), parts=[
  WordNode(pos=(209, 228), word='update-alternatives'),
  WordNode(pos=(229, 238), word='--install'),
  WordNode(pos=(239, 250), word='/usr/bin/cc'),
  WordNode(pos=(251, 253), word='cc'),
  WordNode(pos=(254, 272), word='/usr/local/bin/gcc'),
  WordNode(pos=(273, 276), word='999'),
])


6700) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6701) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


6702) apt-get install -y --no-install-recommends   ca-certificates   wget

CommandNode(pos=(28, 95), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 95), word='wget'),
])


6703) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(100, 127), parts=[
  WordNode(pos=(100, 102), word='rm'),
  WordNode(pos=(103, 106), word='-rf'),
  WordNode(pos=(107, 127), word='/var/lib/apt/lists/*'),
])


6704) cpanm App::cpanminus

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 20), word='App::cpanminus'),
])


6705) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6706) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


6707) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


6708) apt-get install -y --no-install-recommends   gcc   libc-dev   libssl-dev   zlib1g-dev

CommandNode(pos=(68, 153), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(113, 116), word='gcc'),
  WordNode(pos=(119, 127), word='libc-dev'),
  WordNode(pos=(130, 140), word='libssl-dev'),
  WordNode(pos=(143, 153), word='zlib1g-dev'),
])


6709) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(158, 185), parts=[
  WordNode(pos=(158, 160), word='rm'),
  WordNode(pos=(161, 164), word='-rf'),
  WordNode(pos=(165, 185), word='/var/lib/apt/lists/*'),
])


6710) cpanm   EV   IO::Socket::IP   IO::Socket::Socks   Net::DNS::Native

CommandNode(pos=(188, 254), parts=[
  WordNode(pos=(188, 193), word='cpanm'),
  WordNode(pos=(196, 198), word='EV'),
  WordNode(pos=(201, 215), word='IO::Socket::IP'),
  WordNode(pos=(218, 235), word='IO::Socket::Socks'),
  WordNode(pos=(238, 254), word='Net::DNS::Native'),
])


6711) cpanm --notest IO::Socket::SSL

CommandNode(pos=(259, 289), parts=[
  WordNode(pos=(259, 264), word='cpanm'),
  WordNode(pos=(265, 273), word='--notest'),
  WordNode(pos=(274, 289), word='IO::Socket::SSL'),
])


6712) apt-mark auto '.*' > /dev/null

CommandNode(pos=(292, 322), parts=[
  WordNode(pos=(292, 300), word='apt-mark'),
  WordNode(pos=(301, 305), word='auto'),
  WordNode(pos=(306, 310), word='.*'),
  RedirectNode(output=
    WordNode(pos=(313, 322), word='/dev/null'), pos=(311, 322), type='>'),
])


6713) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(325, 366), parts=[
  WordNode(pos=(325, 333), word='apt-mark'),
  WordNode(pos=(334, 340), word='manual'),
  WordNode(pos=(341, 354), word='$savedAptMark', parts=[
    ParameterNode(pos=(341, 354), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(357, 366), word='/dev/null'), pos=(355, 366), type='>'),
])


6714) apt-get purge -y --auto-remove

CommandNode(pos=(369, 399), parts=[
  WordNode(pos=(369, 376), word='apt-get'),
  WordNode(pos=(377, 382), word='purge'),
  WordNode(pos=(383, 385), word='-y'),
  WordNode(pos=(386, 399), word='--auto-remove'),
])


6715) cpanm Mojolicious@8.15

CommandNode(pos=(0, 22), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 22), word='Mojolicious@8.15'),
])


6716) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


6717) apk add --no-cache --virtual .build-deps   ca-certificates   gcc   libc-dev   linux-headers   lua5.3-dev   make   openssl   openssl-dev   pcre2-dev   readline-dev   tar   zlib-dev

CommandNode(pos=(12, 191), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 76), word='gcc'),
  WordNode(pos=(79, 87), word='libc-dev'),
  WordNode(pos=(90, 103), word='linux-headers'),
  WordNode(pos=(106, 116), word='lua5.3-dev'),
  WordNode(pos=(119, 123), word='make'),
  WordNode(pos=(126, 133), word='openssl'),
  WordNode(pos=(136, 147), word='openssl-dev'),
  WordNode(pos=(150, 159), word='pcre2-dev'),
  WordNode(pos=(162, 174), word='readline-dev'),
  WordNode(pos=(177, 180), word='tar'),
  WordNode(pos=(183, 191), word='zlib-dev'),
])


6718) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


6719) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


6720) sha256sum -c

CommandNode(pos=(280, 292), parts=[
  WordNode(pos=(280, 289), word='sha256sum'),
  WordNode(pos=(290, 292), word='-c'),
])


6721) mkdir -p /usr/src/haproxy

CommandNode(pos=(297, 322), parts=[
  WordNode(pos=(297, 302), word='mkdir'),
  WordNode(pos=(303, 305), word='-p'),
  WordNode(pos=(306, 322), word='/usr/src/haproxy'),
])


6722) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(327, 391), parts=[
  WordNode(pos=(327, 330), word='tar'),
  WordNode(pos=(331, 335), word='-xzf'),
  WordNode(pos=(336, 350), word='haproxy.tar.gz'),
  WordNode(pos=(351, 353), word='-C'),
  WordNode(pos=(354, 370), word='/usr/src/haproxy'),
  WordNode(pos=(371, 391), word='--strip-components=1'),
])


6723) rm haproxy.tar.gz

CommandNode(pos=(396, 413), parts=[
  WordNode(pos=(396, 398), word='rm'),
  WordNode(pos=(399, 413), word='haproxy.tar.gz'),
])


6724) makeOpts='   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 596), parts=[
  AssignmentNode(pos=(419, 596), word='makeOpts=   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


6725) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(601, 673), parts=[
  WordNode(pos=(601, 605), word='make'),
  WordNode(pos=(606, 608), word='-C'),
  WordNode(pos=(609, 625), word='/usr/src/haproxy'),
  WordNode(pos=(626, 628), word='-j'),
  WordNode(pos=(629, 659), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(632, 657), parts=[
        WordNode(pos=(632, 639), word='getconf'),
        WordNode(pos=(640, 657), word='_NPROCESSORS_ONLN'),
      ]), pos=(630, 658)),
  ]),
  WordNode(pos=(660, 663), word='all'),
  WordNode(pos=(664, 673), word='$makeOpts', parts=[
    ParameterNode(pos=(664, 673), value='makeOpts'),
  ]),
])


6726) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(678, 724), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-C'),
  WordNode(pos=(686, 702), word='/usr/src/haproxy'),
  WordNode(pos=(703, 714), word='install-bin'),
  WordNode(pos=(715, 724), word='$makeOpts', parts=[
    ParameterNode(pos=(715, 724), value='makeOpts'),
  ]),
])


6727) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(730, 761), parts=[
  WordNode(pos=(730, 735), word='mkdir'),
  WordNode(pos=(736, 738), word='-p'),
  WordNode(pos=(739, 761), word='/usr/local/etc/haproxy'),
])


6728) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(766, 838), parts=[
  WordNode(pos=(766, 768), word='cp'),
  WordNode(pos=(769, 771), word='-R'),
  WordNode(pos=(772, 808), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(809, 838), word='/usr/local/etc/haproxy/errors'),
])


6729) rm -rf /usr/src/haproxy

CommandNode(pos=(843, 866), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 866), word='/usr/src/haproxy'),
])


6730) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(872, 1069), parts=[
  AssignmentNode(pos=(872, 1069), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(886, 1065), parts=[
        CommandNode(pos=(886, 952), parts=[
          WordNode(pos=(886, 893), word='scanelf'),
          WordNode(pos=(894, 902), word='--needed'),
          WordNode(pos=(903, 913), word='--nobanner'),
          WordNode(pos=(914, 922), word='--format'),
          WordNode(pos=(923, 929), word='%n#p'),
          WordNode(pos=(930, 941), word='--recursive'),
          WordNode(pos=(942, 952), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(956, 957)),
        CommandNode(pos=(958, 969), parts=[
          WordNode(pos=(958, 960), word='tr'),
          WordNode(pos=(961, 964), word=','),
          WordNode(pos=(965, 969), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(973, 974)),
        CommandNode(pos=(975, 982), parts=[
          WordNode(pos=(975, 979), word='sort'),
          WordNode(pos=(980, 982), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(986, 987)),
        CommandNode(pos=(988, 1065), parts=[
          WordNode(pos=(988, 991), word='awk'),
          WordNode(pos=(992, 1065), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(881, 1066)),
  ]),
])


6731) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1074, 1117), parts=[
  WordNode(pos=(1074, 1077), word='apk'),
  WordNode(pos=(1078, 1081), word='add'),
  WordNode(pos=(1082, 1091), word='--virtual'),
  WordNode(pos=(1092, 1108), word='.haproxy-rundeps'),
  WordNode(pos=(1109, 1117), word='$runDeps', parts=[
    ParameterNode(pos=(1109, 1117), value='runDeps'),
  ]),
])


6732) apk del .build-deps

CommandNode(pos=(1122, 1141), parts=[
  WordNode(pos=(1122, 1125), word='apk'),
  WordNode(pos=(1126, 1129), word='del'),
  WordNode(pos=(1130, 1141), word='.build-deps'),
])


6733) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6734) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


6735) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


6736) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


6737) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


6738) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


6739) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


6740) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


6741) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6742) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


6743) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


6744) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


6745) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


6746) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


6747) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


6748) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


6749) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


6750) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


6751) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


6752) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


6753) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


6754) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


6755) mkdir -p /usr/src/app

CommandNode(pos=(0, 21), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 21), word='/usr/src/app'),
])


6756) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6757) apt-get install -y   gcc   gettext   mysql-client libmysqlclient-dev   postgresql-client libpq-dev   sqlite3  --no-install-recommends

CommandNode(pos=(18, 151), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 42), word='gcc'),
  WordNode(pos=(45, 52), word='gettext'),
  WordNode(pos=(55, 67), word='mysql-client'),
  WordNode(pos=(68, 86), word='libmysqlclient-dev'),
  WordNode(pos=(89, 106), word='postgresql-client'),
  WordNode(pos=(107, 116), word='libpq-dev'),
  WordNode(pos=(119, 126), word='sqlite3'),
  WordNode(pos=(128, 151), word='--no-install-recommends'),
])


6758) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(155, 182), parts=[
  WordNode(pos=(155, 157), word='rm'),
  WordNode(pos=(158, 161), word='-rf'),
  WordNode(pos=(162, 182), word='/var/lib/apt/lists/*'),
])


6759) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6760) command -v a2enmod

CommandNode(pos=(14, 32), parts=[
  WordNode(pos=(14, 21), word='command'),
  WordNode(pos=(22, 24), word='-v'),
  WordNode(pos=(25, 32), word='a2enmod'),
])


6761) a2enmod rewrite

CommandNode(pos=(41, 56), parts=[
  WordNode(pos=(41, 48), word='a2enmod'),
  WordNode(pos=(49, 56), word='rewrite'),
])


6762) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


6763) apt-get update

CommandNode(pos=(106, 120), parts=[
  WordNode(pos=(106, 113), word='apt-get'),
  WordNode(pos=(114, 120), word='update'),
])


6764) apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev

CommandNode(pos=(123, 217), parts=[
  WordNode(pos=(123, 130), word='apt-get'),
  WordNode(pos=(131, 138), word='install'),
  WordNode(pos=(139, 141), word='-y'),
  WordNode(pos=(142, 165), word='--no-install-recommends'),
  WordNode(pos=(168, 179), word='libjpeg-dev'),
  WordNode(pos=(182, 192), word='libpng-dev'),
  WordNode(pos=(195, 204), word='libpq-dev'),
  WordNode(pos=(207, 217), word='libzip-dev'),
])


6765) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(223, 291), parts=[
  WordNode(pos=(223, 247), word='docker-php-ext-configure'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
  WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
])


6766) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


6767) apt-mark auto '.*' > /dev/null

CommandNode(pos=(381, 411), parts=[
  WordNode(pos=(381, 389), word='apt-mark'),
  WordNode(pos=(390, 394), word='auto'),
  WordNode(pos=(395, 399), word='.*'),
  RedirectNode(output=
    WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
])


6768) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


6769) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


6770) awk '/=>/ { print $3 }'

CommandNode(pos=(504, 527), parts=[
  WordNode(pos=(504, 507), word='awk'),
  WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
])


6771) sort -u

CommandNode(pos=(532, 539), parts=[
  WordNode(pos=(532, 536), word='sort'),
  WordNode(pos=(537, 539), word='-u'),
])


6772) xargs -r dpkg-query -S

CommandNode(pos=(544, 566), parts=[
  WordNode(pos=(544, 549), word='xargs'),
  WordNode(pos=(550, 552), word='-r'),
  WordNode(pos=(553, 563), word='dpkg-query'),
  WordNode(pos=(564, 566), word='-S'),
])


6773) cut -d: -f1

CommandNode(pos=(571, 582), parts=[
  WordNode(pos=(571, 574), word='cut'),
  WordNode(pos=(575, 578), word='-d:'),
  WordNode(pos=(579, 582), word='-f1'),
])


6774) sort -u

CommandNode(pos=(587, 594), parts=[
  WordNode(pos=(587, 591), word='sort'),
  WordNode(pos=(592, 594), word='-u'),
])


6775) xargs -rt apt-mark manual

CommandNode(pos=(599, 624), parts=[
  WordNode(pos=(599, 604), word='xargs'),
  WordNode(pos=(605, 608), word='-rt'),
  WordNode(pos=(609, 617), word='apt-mark'),
  WordNode(pos=(618, 624), word='manual'),
])


6776) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(628, 704), parts=[
  WordNode(pos=(628, 635), word='apt-get'),
  WordNode(pos=(636, 641), word='purge'),
  WordNode(pos=(642, 644), word='-y'),
  WordNode(pos=(645, 658), word='--auto-remove'),
  WordNode(pos=(659, 661), word='-o'),
  WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
])


6777) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(707, 734), parts=[
  WordNode(pos=(707, 709), word='rm'),
  WordNode(pos=(710, 713), word='-rf'),
  WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
])


6778) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


6779) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


6780) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


6781) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


6782) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


6783) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


6784) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


6785) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


6786) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


6787) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


6788) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


6789) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


6790) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6791) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


6792) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


6793) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


6794) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


6795) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


6796) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


6797) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


6798) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6799) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


6800) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


6801) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


6802) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


6803) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


6804) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


6805) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


6806) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


6807) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


6808) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


6809) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


6810) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


6811) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


6812) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6813) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


6814) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


6815) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


6816) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


6817) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6818) groupadd -r postgres --gid=999

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 22), word='-r'),
  WordNode(pos=(23, 31), word='postgres'),
  WordNode(pos=(32, 41), word='--gid=999'),
])


6819) useradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres

CommandNode(pos=(44, 134), parts=[
  WordNode(pos=(44, 51), word='useradd'),
  WordNode(pos=(52, 54), word='-r'),
  WordNode(pos=(55, 57), word='-g'),
  WordNode(pos=(58, 66), word='postgres'),
  WordNode(pos=(67, 76), word='--uid=999'),
  WordNode(pos=(77, 107), word='--home-dir=/var/lib/postgresql'),
  WordNode(pos=(108, 125), word='--shell=/bin/bash'),
  WordNode(pos=(126, 134), word='postgres'),
])


6820) mkdir -p /var/lib/postgresql

CommandNode(pos=(137, 165), parts=[
  WordNode(pos=(137, 142), word='mkdir'),
  WordNode(pos=(143, 145), word='-p'),
  WordNode(pos=(146, 165), word='/var/lib/postgresql'),
])


6821) chown -R postgres:postgres /var/lib/postgresql

CommandNode(pos=(168, 214), parts=[
  WordNode(pos=(168, 173), word='chown'),
  WordNode(pos=(174, 176), word='-R'),
  WordNode(pos=(177, 194), word='postgres:postgres'),
  WordNode(pos=(195, 214), word='/var/lib/postgresql'),
])


6822) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


6823) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


6824) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


6825) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


6826) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


6827) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


6828) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


6829) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


6830) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


6831) command -v gpgconf > /dev/null

CommandNode(pos=(613, 643), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(634, 643), word='/dev/null'), pos=(632, 643), type='>'),
])


6832) gpgconf --kill all

CommandNode(pos=(647, 665), parts=[
  WordNode(pos=(647, 654), word='gpgconf'),
  WordNode(pos=(655, 661), word='--kill'),
  WordNode(pos=(662, 665), word='all'),
])


6833) :

CommandNode(pos=(669, 670), parts=[
  WordNode(pos=(669, 670), word=':'),
])


6834) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


6835) chmod +x /usr/local/bin/gosu

CommandNode(pos=(726, 754), parts=[
  WordNode(pos=(726, 731), word='chmod'),
  WordNode(pos=(732, 734), word='+x'),
  WordNode(pos=(735, 754), word='/usr/local/bin/gosu'),
])


6836) gosu nobody true

CommandNode(pos=(759, 775), parts=[
  WordNode(pos=(759, 763), word='gosu'),
  WordNode(pos=(764, 770), word='nobody'),
  WordNode(pos=(771, 775), word='true'),
])


6837) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(780, 831), parts=[
  WordNode(pos=(780, 787), word='apt-get'),
  WordNode(pos=(788, 793), word='purge'),
  WordNode(pos=(794, 796), word='-y'),
  WordNode(pos=(797, 810), word='--auto-remove'),
  WordNode(pos=(811, 826), word='ca-certificates'),
  WordNode(pos=(827, 831), word='wget'),
])


6838) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6839) [ -f /etc/dpkg/dpkg.cfg.d/docker ]

CommandNode(pos=(14, 48), parts=[
  WordNode(pos=(14, 15), word='['),
  WordNode(pos=(16, 18), word='-f'),
  WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
  WordNode(pos=(47, 48), word=']'),
])


6840) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(57, 112), parts=[
  WordNode(pos=(57, 61), word='grep'),
  WordNode(pos=(62, 64), word='-q'),
  WordNode(pos=(65, 84), word='/usr/share/locale'),
  WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


6841) sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(116, 177), parts=[
  WordNode(pos=(116, 119), word='sed'),
  WordNode(pos=(120, 123), word='-ri'),
  WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
  WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


6842) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(183, 238), parts=[
  WordNode(pos=(183, 187), word='grep'),
  WordNode(pos=(188, 190), word='-q'),
  WordNode(pos=(191, 210), word='/usr/share/locale'),
  WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


6843) apt-get update

CommandNode(pos=(246, 260), parts=[
  WordNode(pos=(246, 253), word='apt-get'),
  WordNode(pos=(254, 260), word='update'),
])


6844) apt-get install -y locales

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 269), word='apt-get'),
  WordNode(pos=(270, 277), word='install'),
  WordNode(pos=(278, 280), word='-y'),
  WordNode(pos=(281, 288), word='locales'),
])


6845) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(290, 317), parts=[
  WordNode(pos=(290, 292), word='rm'),
  WordNode(pos=(293, 296), word='-rf'),
  WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
])


6846) localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

CommandNode(pos=(320, 396), parts=[
  WordNode(pos=(320, 329), word='localedef'),
  WordNode(pos=(330, 332), word='-i'),
  WordNode(pos=(333, 338), word='en_US'),
  WordNode(pos=(339, 341), word='-c'),
  WordNode(pos=(342, 344), word='-f'),
  WordNode(pos=(345, 350), word='UTF-8'),
  WordNode(pos=(351, 353), word='-A'),
  WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
  WordNode(pos=(385, 396), word='en_US.UTF-8'),
])


6847) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6848) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


6849) apt-get install -y --no-install-recommends libnss-wrapper

CommandNode(pos=(28, 85), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 85), word='libnss-wrapper'),
])


6850) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(88, 115), parts=[
  WordNode(pos=(88, 90), word='rm'),
  WordNode(pos=(91, 94), word='-rf'),
  WordNode(pos=(95, 115), word='/var/lib/apt/lists/*'),
])


6851) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


6852) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6853) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


6854) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


6855) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


6856) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


6857) command -v gpgconf > /dev/null

CommandNode(pos=(233, 263), parts=[
  WordNode(pos=(233, 240), word='command'),
  WordNode(pos=(241, 243), word='-v'),
  WordNode(pos=(244, 251), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(254, 263), word='/dev/null'), pos=(252, 263), type='>'),
])


6858) gpgconf --kill all

CommandNode(pos=(267, 285), parts=[
  WordNode(pos=(267, 274), word='gpgconf'),
  WordNode(pos=(275, 281), word='--kill'),
  WordNode(pos=(282, 285), word='all'),
])


6859) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


6860) apt-key list

CommandNode(pos=(310, 322), parts=[
  WordNode(pos=(310, 317), word='apt-key'),
  WordNode(pos=(318, 322), word='list'),
])


6861) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


6862) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


6863) cp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(158, 258), parts=[
  WordNode(pos=(158, 160), word='cp'),
  WordNode(pos=(161, 163), word='-v'),
  WordNode(pos=(164, 213), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(214, 258), word='/usr/share/postgresql/postgresql.conf.sample'),
])


6864) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


6865) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(331, 431), parts=[
  WordNode(pos=(331, 334), word='sed'),
  WordNode(pos=(335, 338), word='-ri'),
  WordNode(pos=(339, 386), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(387, 431), word='/usr/share/postgresql/postgresql.conf.sample'),
])


6866) grep -F "listen_addresses = '*'" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(434, 511), parts=[
  WordNode(pos=(434, 438), word='grep'),
  WordNode(pos=(439, 441), word='-F'),
  WordNode(pos=(442, 466), word="listen_addresses = '*'"),
  WordNode(pos=(467, 511), word='/usr/share/postgresql/postgresql.conf.sample'),
])


6867) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


6868) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


6869) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


6870) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


6871) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


6872) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


6873) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


6874) groupadd -r redis

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='redis'),
])


6875) useradd -r -g redis redis

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='redis'),
  WordNode(pos=(41, 46), word='redis'),
])


6876) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6877) fetchDeps="   ca-certificates   dirmngr   gnupg   wget  "

CommandNode(pos=(11, 68), parts=[
  AssignmentNode(pos=(11, 68), word='fetchDeps=   ca-certificates   dirmngr   gnupg   wget  '),
])


6878) apt-get update

CommandNode(pos=(71, 85), parts=[
  WordNode(pos=(71, 78), word='apt-get'),
  WordNode(pos=(79, 85), word='update'),
])


6879) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(88, 141), parts=[
  WordNode(pos=(88, 95), word='apt-get'),
  WordNode(pos=(96, 103), word='install'),
  WordNode(pos=(104, 106), word='-y'),
  WordNode(pos=(107, 130), word='--no-install-recommends'),
  WordNode(pos=(131, 141), word='$fetchDeps', parts=[
    ParameterNode(pos=(131, 141), value='fetchDeps'),
  ]),
])


6880) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(144, 171), parts=[
  WordNode(pos=(144, 146), word='rm'),
  WordNode(pos=(147, 150), word='-rf'),
  WordNode(pos=(151, 171), word='/var/lib/apt/lists/*'),
])


6881) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


6882) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


6883) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


6884) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(471, 502), parts=[
  WordNode(pos=(471, 477), word='export'),
  WordNode(pos=(478, 502), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(491, 500), parts=[
        WordNode(pos=(491, 497), word='mktemp'),
        WordNode(pos=(498, 500), word='-d'),
      ]), pos=(489, 501)),
  ]),
])


6885) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(505, 608), parts=[
  WordNode(pos=(505, 508), word='gpg'),
  WordNode(pos=(509, 516), word='--batch'),
  WordNode(pos=(517, 528), word='--keyserver'),
  WordNode(pos=(529, 555), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(556, 567), word='--recv-keys'),
  WordNode(pos=(568, 608), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


6886) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(611, 675), parts=[
  WordNode(pos=(611, 614), word='gpg'),
  WordNode(pos=(615, 622), word='--batch'),
  WordNode(pos=(623, 631), word='--verify'),
  WordNode(pos=(632, 655), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(656, 675), word='/usr/local/bin/gosu'),
])


6887) gpgconf --kill all

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 685), word='gpgconf'),
  WordNode(pos=(686, 692), word='--kill'),
  WordNode(pos=(693, 696), word='all'),
])


6888) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(699, 741), parts=[
  WordNode(pos=(699, 701), word='rm'),
  WordNode(pos=(702, 704), word='-r'),
  WordNode(pos=(705, 717), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(706, 716), value='GNUPGHOME'),
  ]),
  WordNode(pos=(718, 741), word='/usr/local/bin/gosu.asc'),
])


6889) chmod +x /usr/local/bin/gosu

CommandNode(pos=(744, 772), parts=[
  WordNode(pos=(744, 749), word='chmod'),
  WordNode(pos=(750, 752), word='+x'),
  WordNode(pos=(753, 772), word='/usr/local/bin/gosu'),
])


6890) gosu nobody true

CommandNode(pos=(775, 791), parts=[
  WordNode(pos=(775, 779), word='gosu'),
  WordNode(pos=(780, 786), word='nobody'),
  WordNode(pos=(787, 791), word='true'),
])


6891) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(795, 836), parts=[
  WordNode(pos=(795, 802), word='apt-get'),
  WordNode(pos=(803, 808), word='purge'),
  WordNode(pos=(809, 811), word='-y'),
  WordNode(pos=(812, 825), word='--auto-remove'),
  WordNode(pos=(826, 836), word='$fetchDeps', parts=[
    ParameterNode(pos=(826, 836), value='fetchDeps'),
  ]),
])


6892) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


6893) apt-get install -y --no-install-recommends   libc6-i386

CommandNode(pos=(18, 73), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 73), word='libc6-i386'),
])


6894) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(78, 105), parts=[
  WordNode(pos=(78, 80), word='rm'),
  WordNode(pos=(81, 84), word='-rf'),
  WordNode(pos=(85, 105), word='/var/lib/apt/lists/*'),
])


6895) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6896) buildDeps='   ca-certificates   wget     gcc   gcc-multilib   libc6-dev-i386   make  '

CommandNode(pos=(11, 97), parts=[
  AssignmentNode(pos=(11, 97), word='buildDeps=   ca-certificates   wget     gcc   gcc-multilib   libc6-dev-i386   make  '),
])


6897) apt-get update

CommandNode(pos=(100, 114), parts=[
  WordNode(pos=(100, 107), word='apt-get'),
  WordNode(pos=(108, 114), word='update'),
])


6898) apt-get install -y $buildDeps --no-install-recommends

CommandNode(pos=(117, 170), parts=[
  WordNode(pos=(117, 124), word='apt-get'),
  WordNode(pos=(125, 132), word='install'),
  WordNode(pos=(133, 135), word='-y'),
  WordNode(pos=(136, 146), word='$buildDeps', parts=[
    ParameterNode(pos=(136, 146), value='buildDeps'),
  ]),
  WordNode(pos=(147, 170), word='--no-install-recommends'),
])


6899) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(173, 200), parts=[
  WordNode(pos=(173, 175), word='rm'),
  WordNode(pos=(176, 179), word='-rf'),
  WordNode(pos=(180, 200), word='/var/lib/apt/lists/*'),
])


6900) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(204, 246), parts=[
  WordNode(pos=(204, 208), word='wget'),
  WordNode(pos=(209, 211), word='-O'),
  WordNode(pos=(212, 224), word='redis.tar.gz'),
  WordNode(pos=(225, 246), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(226, 245), value='REDIS_DOWNLOAD_URL'),
  ]),
])


6901) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(249, 289), parts=[
  WordNode(pos=(249, 253), word='echo'),
  WordNode(pos=(254, 289), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(255, 274), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


6902) sha256sum -c -

CommandNode(pos=(292, 306), parts=[
  WordNode(pos=(292, 301), word='sha256sum'),
  WordNode(pos=(302, 304), word='-c'),
  WordNode(pos=(305, 306), word='-'),
])


6903) mkdir -p /usr/src/redis

CommandNode(pos=(309, 332), parts=[
  WordNode(pos=(309, 314), word='mkdir'),
  WordNode(pos=(315, 317), word='-p'),
  WordNode(pos=(318, 332), word='/usr/src/redis'),
])


6904) tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1

CommandNode(pos=(335, 395), parts=[
  WordNode(pos=(335, 338), word='tar'),
  WordNode(pos=(339, 343), word='-xzf'),
  WordNode(pos=(344, 356), word='redis.tar.gz'),
  WordNode(pos=(357, 359), word='-C'),
  WordNode(pos=(360, 374), word='/usr/src/redis'),
  WordNode(pos=(375, 395), word='--strip-components=1'),
])


6905) rm redis.tar.gz

CommandNode(pos=(398, 413), parts=[
  WordNode(pos=(398, 400), word='rm'),
  WordNode(pos=(401, 413), word='redis.tar.gz'),
])


6906) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h

CommandNode(pos=(417, 496), parts=[
  WordNode(pos=(417, 421), word='grep'),
  WordNode(pos=(422, 424), word='-q'),
  WordNode(pos=(425, 468), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 1$'),
  WordNode(pos=(469, 496), word='/usr/src/redis/src/server.h'),
])


6907) sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\1 0!' /usr/src/redis/src/server.h

CommandNode(pos=(499, 588), parts=[
  WordNode(pos=(499, 502), word='sed'),
  WordNode(pos=(503, 506), word='-ri'),
  WordNode(pos=(507, 560), word='s!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!'),
  WordNode(pos=(561, 588), word='/usr/src/redis/src/server.h'),
])


6908) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h

CommandNode(pos=(591, 670), parts=[
  WordNode(pos=(591, 595), word='grep'),
  WordNode(pos=(596, 598), word='-q'),
  WordNode(pos=(599, 642), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 0$'),
  WordNode(pos=(643, 670), word='/usr/src/redis/src/server.h'),
])


6909) make -C /usr/src/redis -j "$(nproc)" 32bit

CommandNode(pos=(674, 716), parts=[
  WordNode(pos=(674, 678), word='make'),
  WordNode(pos=(679, 681), word='-C'),
  WordNode(pos=(682, 696), word='/usr/src/redis'),
  WordNode(pos=(697, 699), word='-j'),
  WordNode(pos=(700, 710), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(703, 708), parts=[
        WordNode(pos=(703, 708), word='nproc'),
      ]), pos=(701, 709)),
  ]),
  WordNode(pos=(711, 716), word='32bit'),
])


6910) make -C /usr/src/redis install

CommandNode(pos=(719, 749), parts=[
  WordNode(pos=(719, 723), word='make'),
  WordNode(pos=(724, 726), word='-C'),
  WordNode(pos=(727, 741), word='/usr/src/redis'),
  WordNode(pos=(742, 749), word='install'),
])


6911) rm -r /usr/src/redis

CommandNode(pos=(753, 773), parts=[
  WordNode(pos=(753, 755), word='rm'),
  WordNode(pos=(756, 758), word='-r'),
  WordNode(pos=(759, 773), word='/usr/src/redis'),
])


6912) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(777, 818), parts=[
  WordNode(pos=(777, 784), word='apt-get'),
  WordNode(pos=(785, 790), word='purge'),
  WordNode(pos=(791, 793), word='-y'),
  WordNode(pos=(794, 807), word='--auto-remove'),
  WordNode(pos=(808, 818), word='$buildDeps', parts=[
    ParameterNode(pos=(808, 818), value='buildDeps'),
  ]),
])


6913) mkdir /data

CommandNode(pos=(0, 11), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 11), word='/data'),
])


6914) chown redis:redis /data

CommandNode(pos=(15, 38), parts=[
  WordNode(pos=(15, 20), word='chown'),
  WordNode(pos=(21, 32), word='redis:redis'),
  WordNode(pos=(33, 38), word='/data'),
])


6915) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6916) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


6917) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


6918) apt-get install -y --no-install-recommends   libjpeg-dev   libmagickwand-dev   libpng-dev   libzip-dev

CommandNode(pos=(69, 171), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 87), word='-y'),
  WordNode(pos=(88, 111), word='--no-install-recommends'),
  WordNode(pos=(114, 125), word='libjpeg-dev'),
  WordNode(pos=(128, 145), word='libmagickwand-dev'),
  WordNode(pos=(148, 158), word='libpng-dev'),
  WordNode(pos=(161, 171), word='libzip-dev'),
])


6919) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(177, 245), parts=[
  WordNode(pos=(177, 201), word='docker-php-ext-configure'),
  WordNode(pos=(202, 204), word='gd'),
  WordNode(pos=(205, 224), word='--with-png-dir=/usr'),
  WordNode(pos=(225, 245), word='--with-jpeg-dir=/usr'),
])


6920) docker-php-ext-install   bcmath   exif   gd   mysqli   opcache   zip

CommandNode(pos=(248, 316), parts=[
  WordNode(pos=(248, 270), word='docker-php-ext-install'),
  WordNode(pos=(273, 279), word='bcmath'),
  WordNode(pos=(282, 286), word='exif'),
  WordNode(pos=(289, 291), word='gd'),
  WordNode(pos=(294, 300), word='mysqli'),
  WordNode(pos=(303, 310), word='opcache'),
  WordNode(pos=(313, 316), word='zip'),
])


6921) pecl install imagick-3.4.4

CommandNode(pos=(321, 347), parts=[
  WordNode(pos=(321, 325), word='pecl'),
  WordNode(pos=(326, 333), word='install'),
  WordNode(pos=(334, 347), word='imagick-3.4.4'),
])


6922) docker-php-ext-enable imagick

CommandNode(pos=(350, 379), parts=[
  WordNode(pos=(350, 371), word='docker-php-ext-enable'),
  WordNode(pos=(372, 379), word='imagick'),
])


6923) apt-mark auto '.*' > /dev/null

CommandNode(pos=(383, 413), parts=[
  WordNode(pos=(383, 391), word='apt-mark'),
  WordNode(pos=(392, 396), word='auto'),
  WordNode(pos=(397, 401), word='.*'),
  RedirectNode(output=
    WordNode(pos=(404, 413), word='/dev/null'), pos=(402, 413), type='>'),
])


6924) apt-mark manual $savedAptMark

CommandNode(pos=(416, 445), parts=[
  WordNode(pos=(416, 424), word='apt-mark'),
  WordNode(pos=(425, 431), word='manual'),
  WordNode(pos=(432, 445), word='$savedAptMark', parts=[
    ParameterNode(pos=(432, 445), value='savedAptMark'),
  ]),
])


6925) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(448, 501), parts=[
  WordNode(pos=(448, 451), word='ldd'),
  WordNode(pos=(452, 501), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(455, 494), parts=[
        WordNode(pos=(455, 458), word='php'),
        WordNode(pos=(459, 461), word='-r'),
        WordNode(pos=(462, 494), word='echo ini_get("extension_dir");'),
      ]), pos=(453, 495)),
  ]),
])


6926) awk '/=>/ { print $3 }'

CommandNode(pos=(506, 529), parts=[
  WordNode(pos=(506, 509), word='awk'),
  WordNode(pos=(510, 529), word='/=>/ { print $3 }'),
])


6927) sort -u

CommandNode(pos=(534, 541), parts=[
  WordNode(pos=(534, 538), word='sort'),
  WordNode(pos=(539, 541), word='-u'),
])


6928) xargs -r dpkg-query -S

CommandNode(pos=(546, 568), parts=[
  WordNode(pos=(546, 551), word='xargs'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 565), word='dpkg-query'),
  WordNode(pos=(566, 568), word='-S'),
])


6929) cut -d: -f1

CommandNode(pos=(573, 584), parts=[
  WordNode(pos=(573, 576), word='cut'),
  WordNode(pos=(577, 580), word='-d:'),
  WordNode(pos=(581, 584), word='-f1'),
])


6930) sort -u

CommandNode(pos=(589, 596), parts=[
  WordNode(pos=(589, 593), word='sort'),
  WordNode(pos=(594, 596), word='-u'),
])


6931) xargs -rt apt-mark manual

CommandNode(pos=(601, 626), parts=[
  WordNode(pos=(601, 606), word='xargs'),
  WordNode(pos=(607, 610), word='-rt'),
  WordNode(pos=(611, 619), word='apt-mark'),
  WordNode(pos=(620, 626), word='manual'),
])


6932) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(630, 706), parts=[
  WordNode(pos=(630, 637), word='apt-get'),
  WordNode(pos=(638, 643), word='purge'),
  WordNode(pos=(644, 646), word='-y'),
  WordNode(pos=(647, 660), word='--auto-remove'),
  WordNode(pos=(661, 663), word='-o'),
  WordNode(pos=(664, 706), word='APT::AutoRemove::RecommendsImportant=false'),
])


6933) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(709, 736), parts=[
  WordNode(pos=(709, 711), word='rm'),
  WordNode(pos=(712, 715), word='-rf'),
  WordNode(pos=(716, 736), word='/var/lib/apt/lists/*'),
])


6934) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


6935) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


6936) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


6937) echo 'opcache.revalidate_freq=2'

CommandNode(pos=(134, 166), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 166), word='opcache.revalidate_freq=2'),
])


6938) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(170, 200), parts=[
  WordNode(pos=(170, 174), word='echo'),
  WordNode(pos=(175, 200), word='opcache.fast_shutdown=1'),
])


6939) echo 'opcache.enable_cli=1'

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 208), word='echo'),
  WordNode(pos=(209, 231), word='opcache.enable_cli=1'),
])


6940) echo 'error_reporting = 4339'

CommandNode(pos=(4, 33), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 33), word='error_reporting = 4339'),
])


6941) echo 'display_errors = Off'

CommandNode(pos=(37, 64), parts=[
  WordNode(pos=(37, 41), word='echo'),
  WordNode(pos=(42, 64), word='display_errors = Off'),
])


6942) echo 'display_startup_errors = Off'

CommandNode(pos=(68, 103), parts=[
  WordNode(pos=(68, 72), word='echo'),
  WordNode(pos=(73, 103), word='display_startup_errors = Off'),
])


6943) echo 'log_errors = On'

CommandNode(pos=(107, 129), parts=[
  WordNode(pos=(107, 111), word='echo'),
  WordNode(pos=(112, 129), word='log_errors = On'),
])


6944) echo 'error_log = /dev/stderr'

CommandNode(pos=(133, 163), parts=[
  WordNode(pos=(133, 137), word='echo'),
  WordNode(pos=(138, 163), word='error_log = /dev/stderr'),
])


6945) echo 'log_errors_max_len = 1024'

CommandNode(pos=(167, 199), parts=[
  WordNode(pos=(167, 171), word='echo'),
  WordNode(pos=(172, 199), word='log_errors_max_len = 1024'),
])


6946) echo 'ignore_repeated_errors = On'

CommandNode(pos=(203, 237), parts=[
  WordNode(pos=(203, 207), word='echo'),
  WordNode(pos=(208, 237), word='ignore_repeated_errors = On'),
])


6947) echo 'ignore_repeated_source = Off'

CommandNode(pos=(241, 276), parts=[
  WordNode(pos=(241, 245), word='echo'),
  WordNode(pos=(246, 276), word='ignore_repeated_source = Off'),
])


6948) echo 'html_errors = Off'

CommandNode(pos=(280, 304), parts=[
  WordNode(pos=(280, 284), word='echo'),
  WordNode(pos=(285, 304), word='html_errors = Off'),
])


6949) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6950) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


6951) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


6952) sha1sum -c -

CommandNode(pos=(147, 159), parts=[
  WordNode(pos=(147, 154), word='sha1sum'),
  WordNode(pos=(155, 157), word='-c'),
  WordNode(pos=(158, 159), word='-'),
])


6953) tar -xzf wordpress.tar.gz -C /usr/src/

CommandNode(pos=(162, 200), parts=[
  WordNode(pos=(162, 165), word='tar'),
  WordNode(pos=(166, 170), word='-xzf'),
  WordNode(pos=(171, 187), word='wordpress.tar.gz'),
  WordNode(pos=(188, 190), word='-C'),
  WordNode(pos=(191, 200), word='/usr/src/'),
])


6954) rm wordpress.tar.gz

CommandNode(pos=(203, 222), parts=[
  WordNode(pos=(203, 205), word='rm'),
  WordNode(pos=(206, 222), word='wordpress.tar.gz'),
])


6955) chown -R www-data:www-data /usr/src/wordpress

CommandNode(pos=(225, 270), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 233), word='-R'),
  WordNode(pos=(234, 251), word='www-data:www-data'),
  WordNode(pos=(252, 270), word='/usr/src/wordpress'),
])


6956) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


6957) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


6958) apt-get update

CommandNode(pos=(54, 68), parts=[
  WordNode(pos=(54, 61), word='apt-get'),
  WordNode(pos=(62, 68), word='update'),
])


6959) apt-get install -y --no-install-recommends   ca-certificates   gcc   libc6-dev   liblua5.3-dev   libpcre2-dev   libssl1.0-dev   make   wget   zlib1g-dev

CommandNode(pos=(72, 224), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 87), word='install'),
  WordNode(pos=(88, 90), word='-y'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 138), word='gcc'),
  WordNode(pos=(141, 150), word='libc6-dev'),
  WordNode(pos=(153, 166), word='liblua5.3-dev'),
  WordNode(pos=(169, 181), word='libpcre2-dev'),
  WordNode(pos=(184, 197), word='libssl1.0-dev'),
  WordNode(pos=(200, 204), word='make'),
  WordNode(pos=(207, 211), word='wget'),
  WordNode(pos=(214, 224), word='zlib1g-dev'),
])


6960) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(229, 256), parts=[
  WordNode(pos=(229, 231), word='rm'),
  WordNode(pos=(232, 235), word='-rf'),
  WordNode(pos=(236, 256), word='/var/lib/apt/lists/*'),
])


6961) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(262, 299), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 284), word='haproxy.tar.gz'),
  WordNode(pos=(285, 299), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(286, 298), value='HAPROXY_URL'),
  ]),
])


6962) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(304, 342), parts=[
  WordNode(pos=(304, 308), word='echo'),
  WordNode(pos=(309, 342), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(310, 325), value='HAPROXY_SHA256'),
  ]),
])


6963) sha256sum -c

CommandNode(pos=(345, 357), parts=[
  WordNode(pos=(345, 354), word='sha256sum'),
  WordNode(pos=(355, 357), word='-c'),
])


6964) mkdir -p /usr/src/haproxy

CommandNode(pos=(362, 387), parts=[
  WordNode(pos=(362, 367), word='mkdir'),
  WordNode(pos=(368, 370), word='-p'),
  WordNode(pos=(371, 387), word='/usr/src/haproxy'),
])


6965) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(392, 456), parts=[
  WordNode(pos=(392, 395), word='tar'),
  WordNode(pos=(396, 400), word='-xzf'),
  WordNode(pos=(401, 415), word='haproxy.tar.gz'),
  WordNode(pos=(416, 418), word='-C'),
  WordNode(pos=(419, 435), word='/usr/src/haproxy'),
  WordNode(pos=(436, 456), word='--strip-components=1'),
])


6966) rm haproxy.tar.gz

CommandNode(pos=(461, 478), parts=[
  WordNode(pos=(461, 463), word='rm'),
  WordNode(pos=(464, 478), word='haproxy.tar.gz'),
])


6967) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(484, 635), parts=[
  AssignmentNode(pos=(484, 635), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


6968) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(640, 692), parts=[
  WordNode(pos=(640, 644), word='make'),
  WordNode(pos=(645, 647), word='-C'),
  WordNode(pos=(648, 664), word='/usr/src/haproxy'),
  WordNode(pos=(665, 667), word='-j'),
  WordNode(pos=(668, 678), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(671, 676), parts=[
        WordNode(pos=(671, 676), word='nproc'),
      ]), pos=(669, 677)),
  ]),
  WordNode(pos=(679, 682), word='all'),
  WordNode(pos=(683, 692), word='$makeOpts', parts=[
    ParameterNode(pos=(683, 692), value='makeOpts'),
  ]),
])


6969) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(697, 743), parts=[
  WordNode(pos=(697, 701), word='make'),
  WordNode(pos=(702, 704), word='-C'),
  WordNode(pos=(705, 721), word='/usr/src/haproxy'),
  WordNode(pos=(722, 733), word='install-bin'),
  WordNode(pos=(734, 743), word='$makeOpts', parts=[
    ParameterNode(pos=(734, 743), value='makeOpts'),
  ]),
])


6970) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(749, 780), parts=[
  WordNode(pos=(749, 754), word='mkdir'),
  WordNode(pos=(755, 757), word='-p'),
  WordNode(pos=(758, 780), word='/usr/local/etc/haproxy'),
])


6971) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(785, 857), parts=[
  WordNode(pos=(785, 787), word='cp'),
  WordNode(pos=(788, 790), word='-R'),
  WordNode(pos=(791, 827), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(828, 857), word='/usr/local/etc/haproxy/errors'),
])


6972) rm -rf /usr/src/haproxy

CommandNode(pos=(862, 885), parts=[
  WordNode(pos=(862, 864), word='rm'),
  WordNode(pos=(865, 868), word='-rf'),
  WordNode(pos=(869, 885), word='/usr/src/haproxy'),
])


6973) apt-mark auto '.*' > /dev/null

CommandNode(pos=(891, 921), parts=[
  WordNode(pos=(891, 899), word='apt-mark'),
  WordNode(pos=(900, 904), word='auto'),
  WordNode(pos=(905, 909), word='.*'),
  RedirectNode(output=
    WordNode(pos=(912, 921), word='/dev/null'), pos=(910, 921), type='>'),
])


6974) [ -z "$savedAptMark" ]

CommandNode(pos=(928, 950), parts=[
  WordNode(pos=(928, 929), word='['),
  WordNode(pos=(930, 932), word='-z'),
  WordNode(pos=(933, 948), word='$savedAptMark', parts=[
    ParameterNode(pos=(934, 947), value='savedAptMark'),
  ]),
  WordNode(pos=(949, 950), word=']'),
])


6975) apt-mark manual $savedAptMark

CommandNode(pos=(954, 983), parts=[
  WordNode(pos=(954, 962), word='apt-mark'),
  WordNode(pos=(963, 969), word='manual'),
  WordNode(pos=(970, 983), word='$savedAptMark', parts=[
    ParameterNode(pos=(970, 983), value='savedAptMark'),
  ]),
])


6976) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(991, 1045), parts=[
  WordNode(pos=(991, 995), word='find'),
  WordNode(pos=(996, 1006), word='/usr/local'),
  WordNode(pos=(1007, 1012), word='-type'),
  WordNode(pos=(1013, 1014), word='f'),
  WordNode(pos=(1015, 1026), word='-executable'),
  WordNode(pos=(1027, 1032), word='-exec'),
  WordNode(pos=(1033, 1036), word='ldd'),
  WordNode(pos=(1037, 1041), word='{}'),
  WordNode(pos=(1042, 1045), word=';'),
])


6977) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1050, 1078), parts=[
  WordNode(pos=(1050, 1053), word='awk'),
  WordNode(pos=(1054, 1078), word='/=>/ { print $(NF-1) }'),
])


6978) sort -u

CommandNode(pos=(1083, 1090), parts=[
  WordNode(pos=(1083, 1087), word='sort'),
  WordNode(pos=(1088, 1090), word='-u'),
])


6979) xargs -r dpkg-query --search

CommandNode(pos=(1095, 1123), parts=[
  WordNode(pos=(1095, 1100), word='xargs'),
  WordNode(pos=(1101, 1103), word='-r'),
  WordNode(pos=(1104, 1114), word='dpkg-query'),
  WordNode(pos=(1115, 1123), word='--search'),
])


6980) cut -d: -f1

CommandNode(pos=(1128, 1139), parts=[
  WordNode(pos=(1128, 1131), word='cut'),
  WordNode(pos=(1132, 1135), word='-d:'),
  WordNode(pos=(1136, 1139), word='-f1'),
])


6981) sort -u

CommandNode(pos=(1144, 1151), parts=[
  WordNode(pos=(1144, 1148), word='sort'),
  WordNode(pos=(1149, 1151), word='-u'),
])


6982) xargs -r apt-mark manual

CommandNode(pos=(1156, 1180), parts=[
  WordNode(pos=(1156, 1161), word='xargs'),
  WordNode(pos=(1162, 1164), word='-r'),
  WordNode(pos=(1165, 1173), word='apt-mark'),
  WordNode(pos=(1174, 1180), word='manual'),
])


6983) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1185, 1261), parts=[
  WordNode(pos=(1185, 1192), word='apt-get'),
  WordNode(pos=(1193, 1198), word='purge'),
  WordNode(pos=(1199, 1201), word='-y'),
  WordNode(pos=(1202, 1215), word='--auto-remove'),
  WordNode(pos=(1216, 1218), word='-o'),
  WordNode(pos=(1219, 1261), word='APT::AutoRemove::RecommendsImportant=false'),
])


6984) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6985) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


6986) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


6987) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


6988) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


6989) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6990) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


6991) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6992) echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 14), word='echo'),
  WordNode(pos=(15, 33), word='/usr/local/lib64'),
  RedirectNode(output=
    WordNode(pos=(36, 70), word='/etc/ld.so.conf.d/local-lib64.conf'), pos=(34, 70), type='>'),
])


6993) ldconfig -v

CommandNode(pos=(73, 84), parts=[
  WordNode(pos=(73, 81), word='ldconfig'),
  WordNode(pos=(82, 84), word='-v'),
])


6994) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


6995) dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc

CommandNode(pos=(10, 70), parts=[
  WordNode(pos=(10, 21), word='dpkg-divert'),
  WordNode(pos=(22, 30), word='--divert'),
  WordNode(pos=(31, 48), word='/usr/bin/gcc.orig'),
  WordNode(pos=(49, 57), word='--rename'),
  WordNode(pos=(58, 70), word='/usr/bin/gcc'),
])


6996) dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++

CommandNode(pos=(73, 133), parts=[
  WordNode(pos=(73, 84), word='dpkg-divert'),
  WordNode(pos=(85, 93), word='--divert'),
  WordNode(pos=(94, 111), word='/usr/bin/g++.orig'),
  WordNode(pos=(112, 120), word='--rename'),
  WordNode(pos=(121, 133), word='/usr/bin/g++'),
])


6997) dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran

CommandNode(pos=(136, 206), parts=[
  WordNode(pos=(136, 147), word='dpkg-divert'),
  WordNode(pos=(148, 156), word='--divert'),
  WordNode(pos=(157, 179), word='/usr/bin/gfortran.orig'),
  WordNode(pos=(180, 188), word='--rename'),
  WordNode(pos=(189, 206), word='/usr/bin/gfortran'),
])


6998) update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999

CommandNode(pos=(209, 276), parts=[
  WordNode(pos=(209, 228), word='update-alternatives'),
  WordNode(pos=(229, 238), word='--install'),
  WordNode(pos=(239, 250), word='/usr/bin/cc'),
  WordNode(pos=(251, 253), word='cc'),
  WordNode(pos=(254, 272), word='/usr/local/bin/gcc'),
  WordNode(pos=(273, 276), word='999'),
])


6999) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7000) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7001) apt-get install -y --no-install-recommends   ca-certificates p11-kit

CommandNode(pos=(28, 96), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(89, 96), word='p11-kit'),
])


7002) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(101, 128), parts=[
  WordNode(pos=(101, 103), word='rm'),
  WordNode(pos=(104, 107), word='-rf'),
  WordNode(pos=(108, 128), word='/var/lib/apt/lists/*'),
])


7003) echo '#/bin/sh'

CommandNode(pos=(2, 17), parts=[
  WordNode(pos=(2, 6), word='echo'),
  WordNode(pos=(7, 17), word='#/bin/sh'),
])


7004) echo 'echo "$JAVA_HOME"'

CommandNode(pos=(19, 43), parts=[
  WordNode(pos=(19, 23), word='echo'),
  WordNode(pos=(24, 43), word='echo "$JAVA_HOME"'),
])


7005) chmod +x /usr/local/bin/docker-java-home

CommandNode(pos=(84, 124), parts=[
  WordNode(pos=(84, 89), word='chmod'),
  WordNode(pos=(90, 92), word='+x'),
  WordNode(pos=(93, 124), word='/usr/local/bin/docker-java-home'),
])


7006) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


7007) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


7008) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(11, 137), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/gosu'),
  WordNode(pos=(39, 137), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(89, 102), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(110, 135), parts=[
        WordNode(pos=(110, 114), word='dpkg'),
        WordNode(pos=(115, 135), word='--print-architecture'),
      ]), pos=(108, 136)),
  ]),
])


7009) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(142, 276), parts=[
  WordNode(pos=(142, 146), word='wget'),
  WordNode(pos=(147, 149), word='-O'),
  WordNode(pos=(150, 173), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(174, 276), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(224, 237), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(245, 270), parts=[
        WordNode(pos=(245, 249), word='dpkg'),
        WordNode(pos=(250, 270), word='--print-architecture'),
      ]), pos=(243, 271)),
  ]),
])


7010) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(281, 312), parts=[
  WordNode(pos=(281, 287), word='export'),
  WordNode(pos=(288, 312), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(301, 310), parts=[
        WordNode(pos=(301, 307), word='mktemp'),
        WordNode(pos=(308, 310), word='-d'),
      ]), pos=(299, 311)),
  ]),
])


7011) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(317, 420), parts=[
  WordNode(pos=(317, 320), word='gpg'),
  WordNode(pos=(321, 328), word='--batch'),
  WordNode(pos=(329, 340), word='--keyserver'),
  WordNode(pos=(341, 367), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(368, 379), word='--recv-keys'),
  WordNode(pos=(380, 420), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


7012) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(425, 489), parts=[
  WordNode(pos=(425, 428), word='gpg'),
  WordNode(pos=(429, 436), word='--batch'),
  WordNode(pos=(437, 445), word='--verify'),
  WordNode(pos=(446, 469), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(470, 489), word='/usr/local/bin/gosu'),
])


7013) command -v gpgconf

CommandNode(pos=(496, 514), parts=[
  WordNode(pos=(496, 503), word='command'),
  WordNode(pos=(504, 506), word='-v'),
  WordNode(pos=(507, 514), word='gpgconf'),
])


7014) gpgconf --kill all

CommandNode(pos=(518, 536), parts=[
  WordNode(pos=(518, 525), word='gpgconf'),
  WordNode(pos=(526, 532), word='--kill'),
  WordNode(pos=(533, 536), word='all'),
])


7015) :

CommandNode(pos=(540, 541), parts=[
  WordNode(pos=(540, 541), word=':'),
])


7016) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(549, 591), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 591), word='/usr/local/bin/gosu.asc'),
])


7017) chmod +x /usr/local/bin/gosu

CommandNode(pos=(596, 624), parts=[
  WordNode(pos=(596, 601), word='chmod'),
  WordNode(pos=(602, 604), word='+x'),
  WordNode(pos=(605, 624), word='/usr/local/bin/gosu'),
])


7018) gosu nobody true

CommandNode(pos=(629, 645), parts=[
  WordNode(pos=(629, 633), word='gosu'),
  WordNode(pos=(634, 640), word='nobody'),
  WordNode(pos=(641, 645), word='true'),
])


7019) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7020) npm install -g "ghost-cli@$GHOST_CLI_VERSION"

CommandNode(pos=(11, 56), parts=[
  WordNode(pos=(11, 14), word='npm'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-g'),
  WordNode(pos=(26, 56), word='ghost-cli@$GHOST_CLI_VERSION', parts=[
    ParameterNode(pos=(37, 55), value='GHOST_CLI_VERSION'),
  ]),
])


7021) npm cache clean --force

CommandNode(pos=(59, 82), parts=[
  WordNode(pos=(59, 62), word='npm'),
  WordNode(pos=(63, 68), word='cache'),
  WordNode(pos=(69, 74), word='clean'),
  WordNode(pos=(75, 82), word='--force'),
])


7022) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7023) mkdir -p "$GHOST_INSTALL"

CommandNode(pos=(11, 36), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
  ]),
])


7024) chown node:node "$GHOST_INSTALL"

CommandNode(pos=(39, 71), parts=[
  WordNode(pos=(39, 44), word='chown'),
  WordNode(pos=(45, 54), word='node:node'),
  WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
  ]),
])


7025) gosu node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 185), parts=[
  WordNode(pos=(75, 79), word='gosu'),
  WordNode(pos=(80, 84), word='node'),
  WordNode(pos=(85, 90), word='ghost'),
  WordNode(pos=(91, 98), word='install'),
  WordNode(pos=(99, 115), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(100, 114), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(116, 120), word='--db'),
  WordNode(pos=(121, 128), word='sqlite3'),
  WordNode(pos=(129, 140), word='--no-prompt'),
  WordNode(pos=(141, 151), word='--no-stack'),
  WordNode(pos=(152, 162), word='--no-setup'),
  WordNode(pos=(163, 168), word='--dir'),
  WordNode(pos=(169, 185), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(170, 184), value='GHOST_INSTALL'),
  ]),
])


7026) cd "$GHOST_INSTALL"

CommandNode(pos=(189, 208), parts=[
  WordNode(pos=(189, 191), word='cd'),
  WordNode(pos=(192, 208), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(193, 207), value='GHOST_INSTALL'),
  ]),
])


7027) gosu node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db"

CommandNode(pos=(211, 351), parts=[
  WordNode(pos=(211, 215), word='gosu'),
  WordNode(pos=(216, 220), word='node'),
  WordNode(pos=(221, 226), word='ghost'),
  WordNode(pos=(227, 233), word='config'),
  WordNode(pos=(234, 238), word='--ip'),
  WordNode(pos=(239, 246), word='0.0.0.0'),
  WordNode(pos=(247, 253), word='--port'),
  WordNode(pos=(254, 258), word='2368'),
  WordNode(pos=(259, 270), word='--no-prompt'),
  WordNode(pos=(271, 275), word='--db'),
  WordNode(pos=(276, 283), word='sqlite3'),
  WordNode(pos=(284, 289), word='--url'),
  WordNode(pos=(290, 311), word='http://localhost:2368'),
  WordNode(pos=(312, 320), word='--dbpath'),
  WordNode(pos=(321, 351), word='$GHOST_CONTENT/data/ghost.db', parts=[
    ParameterNode(pos=(322, 336), value='GHOST_CONTENT'),
  ]),
])


7028) gosu node ghost config paths.contentPath "$GHOST_CONTENT"

CommandNode(pos=(354, 411), parts=[
  WordNode(pos=(354, 358), word='gosu'),
  WordNode(pos=(359, 363), word='node'),
  WordNode(pos=(364, 369), word='ghost'),
  WordNode(pos=(370, 376), word='config'),
  WordNode(pos=(377, 394), word='paths.contentPath'),
  WordNode(pos=(395, 411), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(396, 410), value='GHOST_CONTENT'),
  ]),
])


7029) gosu node ln -s config.production.json "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(415, 494), parts=[
  WordNode(pos=(415, 419), word='gosu'),
  WordNode(pos=(420, 424), word='node'),
  WordNode(pos=(425, 427), word='ln'),
  WordNode(pos=(428, 430), word='-s'),
  WordNode(pos=(431, 453), word='config.production.json'),
  WordNode(pos=(454, 494), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(455, 469), value='GHOST_INSTALL'),
  ]),
])


7030) readlink -f "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(497, 549), parts=[
  WordNode(pos=(497, 505), word='readlink'),
  WordNode(pos=(506, 508), word='-f'),
  WordNode(pos=(509, 549), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(510, 524), value='GHOST_INSTALL'),
  ]),
])


7031) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(553, 602), parts=[
  WordNode(pos=(553, 555), word='mv'),
  WordNode(pos=(556, 572), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(557, 571), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(573, 602), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(574, 588), value='GHOST_INSTALL'),
  ]),
])


7032) mkdir -p "$GHOST_CONTENT"

CommandNode(pos=(605, 630), parts=[
  WordNode(pos=(605, 610), word='mkdir'),
  WordNode(pos=(611, 613), word='-p'),
  WordNode(pos=(614, 630), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(615, 629), value='GHOST_CONTENT'),
  ]),
])


7033) chown node:node "$GHOST_CONTENT"

CommandNode(pos=(633, 665), parts=[
  WordNode(pos=(633, 638), word='chown'),
  WordNode(pos=(639, 648), word='node:node'),
  WordNode(pos=(649, 665), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(650, 664), value='GHOST_CONTENT'),
  ]),
])


7034) "$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator" --version

CommandNode(pos=(669, 748), parts=[
  WordNode(pos=(669, 738), word='$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator', parts=[
    ParameterNode(pos=(670, 684), value='GHOST_INSTALL'),
  ]),
  WordNode(pos=(739, 748), word='--version'),
])


7035) cd "$GHOST_INSTALL/current"

CommandNode(pos=(752, 779), parts=[
  WordNode(pos=(752, 754), word='cd'),
  WordNode(pos=(755, 779), word='$GHOST_INSTALL/current', parts=[
    ParameterNode(pos=(756, 770), value='GHOST_INSTALL'),
  ]),
])


7036) sqlite3Version="$(npm view . optionalDependencies.sqlite3)"

CommandNode(pos=(782, 841), parts=[
  WordNode(pos=(782, 841), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(800, 839), parts=[
        WordNode(pos=(800, 803), word='npm'),
        WordNode(pos=(804, 808), word='view'),
        WordNode(pos=(809, 810), word='.'),
        WordNode(pos=(811, 839), word='optionalDependencies.sqlite3'),
      ]), pos=(798, 840)),
  ]),
])


7037) gosu node yarn add "sqlite3@$sqlite3Version" --force

CommandNode(pos=(849, 901), parts=[
  WordNode(pos=(849, 853), word='gosu'),
  WordNode(pos=(854, 858), word='node'),
  WordNode(pos=(859, 863), word='yarn'),
  WordNode(pos=(864, 867), word='add'),
  WordNode(pos=(868, 893), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(877, 892), value='sqlite3Version'),
  ]),
  WordNode(pos=(894, 901), word='--force'),
])


7038) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(910, 947), parts=[
  AssignmentNode(pos=(910, 947), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(926, 945), parts=[
        WordNode(pos=(926, 934), word='apt-mark'),
        WordNode(pos=(935, 945), word='showmanual'),
      ]), pos=(924, 946)),
  ]),
])


7039) apt-get update

CommandNode(pos=(951, 965), parts=[
  WordNode(pos=(951, 958), word='apt-get'),
  WordNode(pos=(959, 965), word='update'),
])


7040) apt-get install -y --no-install-recommends python make gcc g++ libc-dev

CommandNode(pos=(969, 1040), parts=[
  WordNode(pos=(969, 976), word='apt-get'),
  WordNode(pos=(977, 984), word='install'),
  WordNode(pos=(985, 987), word='-y'),
  WordNode(pos=(988, 1011), word='--no-install-recommends'),
  WordNode(pos=(1012, 1018), word='python'),
  WordNode(pos=(1019, 1023), word='make'),
  WordNode(pos=(1024, 1027), word='gcc'),
  WordNode(pos=(1028, 1031), word='g++'),
  WordNode(pos=(1032, 1040), word='libc-dev'),
])


7041) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1044, 1071), parts=[
  WordNode(pos=(1044, 1046), word='rm'),
  WordNode(pos=(1047, 1050), word='-rf'),
  WordNode(pos=(1051, 1071), word='/var/lib/apt/lists/*'),
])


7042) gosu node yarn add "sqlite3@$sqlite3Version" --force --build-from-source

CommandNode(pos=(1077, 1149), parts=[
  WordNode(pos=(1077, 1081), word='gosu'),
  WordNode(pos=(1082, 1086), word='node'),
  WordNode(pos=(1087, 1091), word='yarn'),
  WordNode(pos=(1092, 1095), word='add'),
  WordNode(pos=(1096, 1121), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(1105, 1120), value='sqlite3Version'),
  ]),
  WordNode(pos=(1122, 1129), word='--force'),
  WordNode(pos=(1130, 1149), word='--build-from-source'),
])


7043) apt-mark showmanual

CommandNode(pos=(1155, 1174), parts=[
  WordNode(pos=(1155, 1163), word='apt-mark'),
  WordNode(pos=(1164, 1174), word='showmanual'),
])


7044) xargs apt-mark auto > /dev/null

CommandNode(pos=(1177, 1208), parts=[
  WordNode(pos=(1177, 1182), word='xargs'),
  WordNode(pos=(1183, 1191), word='apt-mark'),
  WordNode(pos=(1192, 1196), word='auto'),
  RedirectNode(output=
    WordNode(pos=(1199, 1208), word='/dev/null'), pos=(1197, 1208), type='>'),
])


7045) [ -z "$savedAptMark" ]

CommandNode(pos=(1212, 1234), parts=[
  WordNode(pos=(1212, 1213), word='['),
  WordNode(pos=(1214, 1216), word='-z'),
  WordNode(pos=(1217, 1232), word='$savedAptMark', parts=[
    ParameterNode(pos=(1218, 1231), value='savedAptMark'),
  ]),
  WordNode(pos=(1233, 1234), word=']'),
])


7046) apt-mark manual $savedAptMark

CommandNode(pos=(1238, 1267), parts=[
  WordNode(pos=(1238, 1246), word='apt-mark'),
  WordNode(pos=(1247, 1253), word='manual'),
  WordNode(pos=(1254, 1267), word='$savedAptMark', parts=[
    ParameterNode(pos=(1254, 1267), value='savedAptMark'),
  ]),
])


7047) apt-get purge -y --auto-remove

CommandNode(pos=(1271, 1301), parts=[
  WordNode(pos=(1271, 1278), word='apt-get'),
  WordNode(pos=(1279, 1284), word='purge'),
  WordNode(pos=(1285, 1287), word='-y'),
  WordNode(pos=(1288, 1301), word='--auto-remove'),
])


7048) gosu node yarn cache clean

CommandNode(pos=(1310, 1336), parts=[
  WordNode(pos=(1310, 1314), word='gosu'),
  WordNode(pos=(1315, 1319), word='node'),
  WordNode(pos=(1320, 1324), word='yarn'),
  WordNode(pos=(1325, 1330), word='cache'),
  WordNode(pos=(1331, 1336), word='clean'),
])


7049) gosu node npm cache clean --force

CommandNode(pos=(1339, 1372), parts=[
  WordNode(pos=(1339, 1343), word='gosu'),
  WordNode(pos=(1344, 1348), word='node'),
  WordNode(pos=(1349, 1352), word='npm'),
  WordNode(pos=(1353, 1358), word='cache'),
  WordNode(pos=(1359, 1364), word='clean'),
  WordNode(pos=(1365, 1372), word='--force'),
])


7050) npm cache clean --force

CommandNode(pos=(1375, 1398), parts=[
  WordNode(pos=(1375, 1378), word='npm'),
  WordNode(pos=(1379, 1384), word='cache'),
  WordNode(pos=(1385, 1390), word='clean'),
  WordNode(pos=(1391, 1398), word='--force'),
])


7051) rm -rv /tmp/yarn* /tmp/v8*

CommandNode(pos=(1401, 1427), parts=[
  WordNode(pos=(1401, 1403), word='rm'),
  WordNode(pos=(1404, 1407), word='-rv'),
  WordNode(pos=(1408, 1418), word='/tmp/yarn*'),
  WordNode(pos=(1419, 1427), word='/tmp/v8*'),
])


7052) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7053) command -v a2enmod

CommandNode(pos=(14, 32), parts=[
  WordNode(pos=(14, 21), word='command'),
  WordNode(pos=(22, 24), word='-v'),
  WordNode(pos=(25, 32), word='a2enmod'),
])


7054) a2enmod rewrite

CommandNode(pos=(41, 56), parts=[
  WordNode(pos=(41, 48), word='a2enmod'),
  WordNode(pos=(49, 56), word='rewrite'),
])


7055) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


7056) apt-get update

CommandNode(pos=(106, 120), parts=[
  WordNode(pos=(106, 113), word='apt-get'),
  WordNode(pos=(114, 120), word='update'),
])


7057) apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev

CommandNode(pos=(123, 217), parts=[
  WordNode(pos=(123, 130), word='apt-get'),
  WordNode(pos=(131, 138), word='install'),
  WordNode(pos=(139, 141), word='-y'),
  WordNode(pos=(142, 165), word='--no-install-recommends'),
  WordNode(pos=(168, 179), word='libjpeg-dev'),
  WordNode(pos=(182, 192), word='libpng-dev'),
  WordNode(pos=(195, 204), word='libpq-dev'),
  WordNode(pos=(207, 217), word='libzip-dev'),
])


7058) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(223, 291), parts=[
  WordNode(pos=(223, 247), word='docker-php-ext-configure'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
  WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
])


7059) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


7060) apt-mark auto '.*' > /dev/null

CommandNode(pos=(381, 411), parts=[
  WordNode(pos=(381, 389), word='apt-mark'),
  WordNode(pos=(390, 394), word='auto'),
  WordNode(pos=(395, 399), word='.*'),
  RedirectNode(output=
    WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
])


7061) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


7062) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


7063) awk '/=>/ { print $3 }'

CommandNode(pos=(504, 527), parts=[
  WordNode(pos=(504, 507), word='awk'),
  WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
])


7064) sort -u

CommandNode(pos=(532, 539), parts=[
  WordNode(pos=(532, 536), word='sort'),
  WordNode(pos=(537, 539), word='-u'),
])


7065) xargs -r dpkg-query -S

CommandNode(pos=(544, 566), parts=[
  WordNode(pos=(544, 549), word='xargs'),
  WordNode(pos=(550, 552), word='-r'),
  WordNode(pos=(553, 563), word='dpkg-query'),
  WordNode(pos=(564, 566), word='-S'),
])


7066) cut -d: -f1

CommandNode(pos=(571, 582), parts=[
  WordNode(pos=(571, 574), word='cut'),
  WordNode(pos=(575, 578), word='-d:'),
  WordNode(pos=(579, 582), word='-f1'),
])


7067) sort -u

CommandNode(pos=(587, 594), parts=[
  WordNode(pos=(587, 591), word='sort'),
  WordNode(pos=(592, 594), word='-u'),
])


7068) xargs -rt apt-mark manual

CommandNode(pos=(599, 624), parts=[
  WordNode(pos=(599, 604), word='xargs'),
  WordNode(pos=(605, 608), word='-rt'),
  WordNode(pos=(609, 617), word='apt-mark'),
  WordNode(pos=(618, 624), word='manual'),
])


7069) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(628, 704), parts=[
  WordNode(pos=(628, 635), word='apt-get'),
  WordNode(pos=(636, 641), word='purge'),
  WordNode(pos=(642, 644), word='-y'),
  WordNode(pos=(645, 658), word='--auto-remove'),
  WordNode(pos=(659, 661), word='-o'),
  WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
])


7070) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(707, 734), parts=[
  WordNode(pos=(707, 709), word='rm'),
  WordNode(pos=(710, 713), word='-rf'),
  WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
])


7071) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


7072) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


7073) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


7074) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


7075) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


7076) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


7077) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


7078) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


7079) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


7080) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


7081) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


7082) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


7083) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7084) apt-get install -y --no-install-recommends   bzr   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 125), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='bzr'),
  WordNode(pos=(69, 72), word='git'),
  WordNode(pos=(75, 84), word='mercurial'),
  WordNode(pos=(87, 101), word='openssh-client'),
  WordNode(pos=(104, 114), word='subversion'),
  WordNode(pos=(119, 125), word='procps'),
])


7085) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(130, 157), parts=[
  WordNode(pos=(130, 132), word='rm'),
  WordNode(pos=(133, 136), word='-rf'),
  WordNode(pos=(137, 157), word='/var/lib/apt/lists/*'),
])


7086) addgroup -S redis

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='addgroup'),
  WordNode(pos=(9, 11), word='-S'),
  WordNode(pos=(12, 17), word='redis'),
])


7087) adduser -S -G redis redis

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='adduser'),
  WordNode(pos=(29, 31), word='-S'),
  WordNode(pos=(32, 34), word='-G'),
  WordNode(pos=(35, 40), word='redis'),
  WordNode(pos=(41, 46), word='redis'),
])


7088) apk add --no-cache   'su-exec>=0.2'   tzdata

CommandNode(pos=(0, 44), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 35), word='su-exec>=0.2'),
  WordNode(pos=(38, 44), word='tzdata'),
])


7089) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7090) apk add --no-cache --virtual .build-deps   coreutils   gcc   linux-headers   make   musl-dev

CommandNode(pos=(11, 103), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 63), word='coreutils'),
  WordNode(pos=(66, 69), word='gcc'),
  WordNode(pos=(72, 85), word='linux-headers'),
  WordNode(pos=(88, 92), word='make'),
  WordNode(pos=(95, 103), word='musl-dev'),
])


7091) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(109, 151), parts=[
  WordNode(pos=(109, 113), word='wget'),
  WordNode(pos=(114, 116), word='-O'),
  WordNode(pos=(117, 129), word='redis.tar.gz'),
  WordNode(pos=(130, 151), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(131, 150), value='REDIS_DOWNLOAD_URL'),
  ]),
])


7092) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(154, 194), parts=[
  WordNode(pos=(154, 158), word='echo'),
  WordNode(pos=(159, 194), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(160, 179), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


7093) sha256sum -c -

CommandNode(pos=(197, 211), parts=[
  WordNode(pos=(197, 206), word='sha256sum'),
  WordNode(pos=(207, 209), word='-c'),
  WordNode(pos=(210, 211), word='-'),
])


7094) mkdir -p /usr/src/redis

CommandNode(pos=(214, 237), parts=[
  WordNode(pos=(214, 219), word='mkdir'),
  WordNode(pos=(220, 222), word='-p'),
  WordNode(pos=(223, 237), word='/usr/src/redis'),
])


7095) tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1

CommandNode(pos=(240, 300), parts=[
  WordNode(pos=(240, 243), word='tar'),
  WordNode(pos=(244, 248), word='-xzf'),
  WordNode(pos=(249, 261), word='redis.tar.gz'),
  WordNode(pos=(262, 264), word='-C'),
  WordNode(pos=(265, 279), word='/usr/src/redis'),
  WordNode(pos=(280, 300), word='--strip-components=1'),
])


7096) rm redis.tar.gz

CommandNode(pos=(303, 318), parts=[
  WordNode(pos=(303, 305), word='rm'),
  WordNode(pos=(306, 318), word='redis.tar.gz'),
])


7097) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h

CommandNode(pos=(322, 401), parts=[
  WordNode(pos=(322, 326), word='grep'),
  WordNode(pos=(327, 329), word='-q'),
  WordNode(pos=(330, 373), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 1$'),
  WordNode(pos=(374, 401), word='/usr/src/redis/src/server.h'),
])


7098) sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\1 0!' /usr/src/redis/src/server.h

CommandNode(pos=(404, 493), parts=[
  WordNode(pos=(404, 407), word='sed'),
  WordNode(pos=(408, 411), word='-ri'),
  WordNode(pos=(412, 465), word='s!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!'),
  WordNode(pos=(466, 493), word='/usr/src/redis/src/server.h'),
])


7099) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h

CommandNode(pos=(496, 575), parts=[
  WordNode(pos=(496, 500), word='grep'),
  WordNode(pos=(501, 503), word='-q'),
  WordNode(pos=(504, 547), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 0$'),
  WordNode(pos=(548, 575), word='/usr/src/redis/src/server.h'),
])


7100) make -C /usr/src/redis -j "$(nproc)"

CommandNode(pos=(579, 615), parts=[
  WordNode(pos=(579, 583), word='make'),
  WordNode(pos=(584, 586), word='-C'),
  WordNode(pos=(587, 601), word='/usr/src/redis'),
  WordNode(pos=(602, 604), word='-j'),
  WordNode(pos=(605, 615), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(608, 613), parts=[
        WordNode(pos=(608, 613), word='nproc'),
      ]), pos=(606, 614)),
  ]),
])


7101) make -C /usr/src/redis install

CommandNode(pos=(618, 648), parts=[
  WordNode(pos=(618, 622), word='make'),
  WordNode(pos=(623, 625), word='-C'),
  WordNode(pos=(626, 640), word='/usr/src/redis'),
  WordNode(pos=(641, 648), word='install'),
])


7102) rm -r /usr/src/redis

CommandNode(pos=(652, 672), parts=[
  WordNode(pos=(652, 654), word='rm'),
  WordNode(pos=(655, 657), word='-r'),
  WordNode(pos=(658, 672), word='/usr/src/redis'),
])


7103) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(676, 873), parts=[
  AssignmentNode(pos=(676, 873), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(690, 869), parts=[
        CommandNode(pos=(690, 756), parts=[
          WordNode(pos=(690, 697), word='scanelf'),
          WordNode(pos=(698, 706), word='--needed'),
          WordNode(pos=(707, 717), word='--nobanner'),
          WordNode(pos=(718, 726), word='--format'),
          WordNode(pos=(727, 733), word='%n#p'),
          WordNode(pos=(734, 745), word='--recursive'),
          WordNode(pos=(746, 756), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(760, 761)),
        CommandNode(pos=(762, 773), parts=[
          WordNode(pos=(762, 764), word='tr'),
          WordNode(pos=(765, 768), word=','),
          WordNode(pos=(769, 773), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(777, 778)),
        CommandNode(pos=(779, 786), parts=[
          WordNode(pos=(779, 783), word='sort'),
          WordNode(pos=(784, 786), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(790, 791)),
        CommandNode(pos=(792, 869), parts=[
          WordNode(pos=(792, 795), word='awk'),
          WordNode(pos=(796, 869), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(685, 870)),
  ]),
])


7104) apk add --virtual .redis-rundeps $runDeps

CommandNode(pos=(876, 917), parts=[
  WordNode(pos=(876, 879), word='apk'),
  WordNode(pos=(880, 883), word='add'),
  WordNode(pos=(884, 893), word='--virtual'),
  WordNode(pos=(894, 908), word='.redis-rundeps'),
  WordNode(pos=(909, 917), word='$runDeps', parts=[
    ParameterNode(pos=(909, 917), value='runDeps'),
  ]),
])


7105) apk del .build-deps

CommandNode(pos=(920, 939), parts=[
  WordNode(pos=(920, 923), word='apk'),
  WordNode(pos=(924, 927), word='del'),
  WordNode(pos=(928, 939), word='.build-deps'),
])


7106) redis-server --version

CommandNode(pos=(943, 965), parts=[
  WordNode(pos=(943, 955), word='redis-server'),
  WordNode(pos=(956, 965), word='--version'),
])


7107) mkdir /data

CommandNode(pos=(0, 11), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 11), word='/data'),
])


7108) chown redis:redis /data

CommandNode(pos=(15, 38), parts=[
  WordNode(pos=(15, 20), word='chown'),
  WordNode(pos=(21, 32), word='redis:redis'),
  WordNode(pos=(33, 38), word='/data'),
])


7109) groupadd -r redis

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='redis'),
])


7110) useradd -r -g redis redis

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='redis'),
  WordNode(pos=(41, 46), word='redis'),
])


7111) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7112) fetchDeps="   ca-certificates   dirmngr   gnupg   wget  "

CommandNode(pos=(11, 68), parts=[
  AssignmentNode(pos=(11, 68), word='fetchDeps=   ca-certificates   dirmngr   gnupg   wget  '),
])


7113) apt-get update

CommandNode(pos=(71, 85), parts=[
  WordNode(pos=(71, 78), word='apt-get'),
  WordNode(pos=(79, 85), word='update'),
])


7114) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(88, 141), parts=[
  WordNode(pos=(88, 95), word='apt-get'),
  WordNode(pos=(96, 103), word='install'),
  WordNode(pos=(104, 106), word='-y'),
  WordNode(pos=(107, 130), word='--no-install-recommends'),
  WordNode(pos=(131, 141), word='$fetchDeps', parts=[
    ParameterNode(pos=(131, 141), value='fetchDeps'),
  ]),
])


7115) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(144, 171), parts=[
  WordNode(pos=(144, 146), word='rm'),
  WordNode(pos=(147, 150), word='-rf'),
  WordNode(pos=(151, 171), word='/var/lib/apt/lists/*'),
])


7116) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


7117) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


7118) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


7119) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(471, 502), parts=[
  WordNode(pos=(471, 477), word='export'),
  WordNode(pos=(478, 502), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(491, 500), parts=[
        WordNode(pos=(491, 497), word='mktemp'),
        WordNode(pos=(498, 500), word='-d'),
      ]), pos=(489, 501)),
  ]),
])


7120) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(505, 608), parts=[
  WordNode(pos=(505, 508), word='gpg'),
  WordNode(pos=(509, 516), word='--batch'),
  WordNode(pos=(517, 528), word='--keyserver'),
  WordNode(pos=(529, 555), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(556, 567), word='--recv-keys'),
  WordNode(pos=(568, 608), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


7121) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(611, 675), parts=[
  WordNode(pos=(611, 614), word='gpg'),
  WordNode(pos=(615, 622), word='--batch'),
  WordNode(pos=(623, 631), word='--verify'),
  WordNode(pos=(632, 655), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(656, 675), word='/usr/local/bin/gosu'),
])


7122) gpgconf --kill all

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 685), word='gpgconf'),
  WordNode(pos=(686, 692), word='--kill'),
  WordNode(pos=(693, 696), word='all'),
])


7123) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(699, 741), parts=[
  WordNode(pos=(699, 701), word='rm'),
  WordNode(pos=(702, 704), word='-r'),
  WordNode(pos=(705, 717), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(706, 716), value='GNUPGHOME'),
  ]),
  WordNode(pos=(718, 741), word='/usr/local/bin/gosu.asc'),
])


7124) chmod +x /usr/local/bin/gosu

CommandNode(pos=(744, 772), parts=[
  WordNode(pos=(744, 749), word='chmod'),
  WordNode(pos=(750, 752), word='+x'),
  WordNode(pos=(753, 772), word='/usr/local/bin/gosu'),
])


7125) gosu nobody true

CommandNode(pos=(775, 791), parts=[
  WordNode(pos=(775, 779), word='gosu'),
  WordNode(pos=(780, 786), word='nobody'),
  WordNode(pos=(787, 791), word='true'),
])


7126) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(795, 836), parts=[
  WordNode(pos=(795, 802), word='apt-get'),
  WordNode(pos=(803, 808), word='purge'),
  WordNode(pos=(809, 811), word='-y'),
  WordNode(pos=(812, 825), word='--auto-remove'),
  WordNode(pos=(826, 836), word='$fetchDeps', parts=[
    ParameterNode(pos=(826, 836), value='fetchDeps'),
  ]),
])


7127) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7128) buildDeps='   wget     gcc   libc6-dev   make  '

CommandNode(pos=(11, 59), parts=[
  AssignmentNode(pos=(11, 59), word='buildDeps=   wget     gcc   libc6-dev   make  '),
])


7129) apt-get update

CommandNode(pos=(62, 76), parts=[
  WordNode(pos=(62, 69), word='apt-get'),
  WordNode(pos=(70, 76), word='update'),
])


7130) apt-get install -y $buildDeps --no-install-recommends

CommandNode(pos=(79, 132), parts=[
  WordNode(pos=(79, 86), word='apt-get'),
  WordNode(pos=(87, 94), word='install'),
  WordNode(pos=(95, 97), word='-y'),
  WordNode(pos=(98, 108), word='$buildDeps', parts=[
    ParameterNode(pos=(98, 108), value='buildDeps'),
  ]),
  WordNode(pos=(109, 132), word='--no-install-recommends'),
])


7131) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(135, 162), parts=[
  WordNode(pos=(135, 137), word='rm'),
  WordNode(pos=(138, 141), word='-rf'),
  WordNode(pos=(142, 162), word='/var/lib/apt/lists/*'),
])


7132) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(166, 208), parts=[
  WordNode(pos=(166, 170), word='wget'),
  WordNode(pos=(171, 173), word='-O'),
  WordNode(pos=(174, 186), word='redis.tar.gz'),
  WordNode(pos=(187, 208), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(188, 207), value='REDIS_DOWNLOAD_URL'),
  ]),
])


7133) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(211, 251), parts=[
  WordNode(pos=(211, 215), word='echo'),
  WordNode(pos=(216, 251), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(217, 236), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


7134) sha256sum -c -

CommandNode(pos=(254, 268), parts=[
  WordNode(pos=(254, 263), word='sha256sum'),
  WordNode(pos=(264, 266), word='-c'),
  WordNode(pos=(267, 268), word='-'),
])


7135) mkdir -p /usr/src/redis

CommandNode(pos=(271, 294), parts=[
  WordNode(pos=(271, 276), word='mkdir'),
  WordNode(pos=(277, 279), word='-p'),
  WordNode(pos=(280, 294), word='/usr/src/redis'),
])


7136) tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1

CommandNode(pos=(297, 357), parts=[
  WordNode(pos=(297, 300), word='tar'),
  WordNode(pos=(301, 305), word='-xzf'),
  WordNode(pos=(306, 318), word='redis.tar.gz'),
  WordNode(pos=(319, 321), word='-C'),
  WordNode(pos=(322, 336), word='/usr/src/redis'),
  WordNode(pos=(337, 357), word='--strip-components=1'),
])


7137) rm redis.tar.gz

CommandNode(pos=(360, 375), parts=[
  WordNode(pos=(360, 362), word='rm'),
  WordNode(pos=(363, 375), word='redis.tar.gz'),
])


7138) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h

CommandNode(pos=(379, 458), parts=[
  WordNode(pos=(379, 383), word='grep'),
  WordNode(pos=(384, 386), word='-q'),
  WordNode(pos=(387, 430), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 1$'),
  WordNode(pos=(431, 458), word='/usr/src/redis/src/server.h'),
])


7139) sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\1 0!' /usr/src/redis/src/server.h

CommandNode(pos=(461, 550), parts=[
  WordNode(pos=(461, 464), word='sed'),
  WordNode(pos=(465, 468), word='-ri'),
  WordNode(pos=(469, 522), word='s!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!'),
  WordNode(pos=(523, 550), word='/usr/src/redis/src/server.h'),
])


7140) grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h

CommandNode(pos=(553, 632), parts=[
  WordNode(pos=(553, 557), word='grep'),
  WordNode(pos=(558, 560), word='-q'),
  WordNode(pos=(561, 604), word='^#define CONFIG_DEFAULT_PROTECTED_MODE 0$'),
  WordNode(pos=(605, 632), word='/usr/src/redis/src/server.h'),
])


7141) make -C /usr/src/redis -j "$(nproc)"

CommandNode(pos=(636, 672), parts=[
  WordNode(pos=(636, 640), word='make'),
  WordNode(pos=(641, 643), word='-C'),
  WordNode(pos=(644, 658), word='/usr/src/redis'),
  WordNode(pos=(659, 661), word='-j'),
  WordNode(pos=(662, 672), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(665, 670), parts=[
        WordNode(pos=(665, 670), word='nproc'),
      ]), pos=(663, 671)),
  ]),
])


7142) make -C /usr/src/redis install

CommandNode(pos=(675, 705), parts=[
  WordNode(pos=(675, 679), word='make'),
  WordNode(pos=(680, 682), word='-C'),
  WordNode(pos=(683, 697), word='/usr/src/redis'),
  WordNode(pos=(698, 705), word='install'),
])


7143) rm -r /usr/src/redis

CommandNode(pos=(709, 729), parts=[
  WordNode(pos=(709, 711), word='rm'),
  WordNode(pos=(712, 714), word='-r'),
  WordNode(pos=(715, 729), word='/usr/src/redis'),
])


7144) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(733, 774), parts=[
  WordNode(pos=(733, 740), word='apt-get'),
  WordNode(pos=(741, 746), word='purge'),
  WordNode(pos=(747, 749), word='-y'),
  WordNode(pos=(750, 763), word='--auto-remove'),
  WordNode(pos=(764, 774), word='$buildDeps', parts=[
    ParameterNode(pos=(764, 774), value='buildDeps'),
  ]),
])


7145) mkdir /data

CommandNode(pos=(0, 11), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 11), word='/data'),
])


7146) chown redis:redis /data

CommandNode(pos=(15, 38), parts=[
  WordNode(pos=(15, 20), word='chown'),
  WordNode(pos=(21, 32), word='redis:redis'),
  WordNode(pos=(33, 38), word='/data'),
])


7147) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


7148) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7149) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


7150) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


7151) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


7152) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


7153) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


7154) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


7155) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


7156) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


7157) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


7158) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


7159) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


7160) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


7161) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


7162) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


7163) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


7164) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


7165) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


7166) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


7167) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


7168) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


7169) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


7170) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


7171) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


7172) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


7173) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


7174) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


7175) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


7176) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


7177) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


7178) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


7179) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


7180) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


7181) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


7182) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


7183) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


7184) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


7185) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


7186) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


7187) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


7188) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


7189) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


7190) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


7191) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


7192) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


7193) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


7194) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


7195) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


7196) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


7197) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


7198) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


7199) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


7200) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


7201) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


7202) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


7203) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


7204) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


7205) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


7206) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


7207) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


7208) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


7209) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


7210) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


7211) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


7212) apt-get update

CommandNode(pos=(54, 68), parts=[
  WordNode(pos=(54, 61), word='apt-get'),
  WordNode(pos=(62, 68), word='update'),
])


7213) apt-get install -y --no-install-recommends   ca-certificates   gcc   libc6-dev   liblua5.3-dev   libpcre2-dev   libssl-dev   make   wget   zlib1g-dev

CommandNode(pos=(72, 221), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 87), word='install'),
  WordNode(pos=(88, 90), word='-y'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 138), word='gcc'),
  WordNode(pos=(141, 150), word='libc6-dev'),
  WordNode(pos=(153, 166), word='liblua5.3-dev'),
  WordNode(pos=(169, 181), word='libpcre2-dev'),
  WordNode(pos=(184, 194), word='libssl-dev'),
  WordNode(pos=(197, 201), word='make'),
  WordNode(pos=(204, 208), word='wget'),
  WordNode(pos=(211, 221), word='zlib1g-dev'),
])


7214) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(226, 253), parts=[
  WordNode(pos=(226, 228), word='rm'),
  WordNode(pos=(229, 232), word='-rf'),
  WordNode(pos=(233, 253), word='/var/lib/apt/lists/*'),
])


7215) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


7216) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


7217) sha256sum -c

CommandNode(pos=(342, 354), parts=[
  WordNode(pos=(342, 351), word='sha256sum'),
  WordNode(pos=(352, 354), word='-c'),
])


7218) mkdir -p /usr/src/haproxy

CommandNode(pos=(359, 384), parts=[
  WordNode(pos=(359, 364), word='mkdir'),
  WordNode(pos=(365, 367), word='-p'),
  WordNode(pos=(368, 384), word='/usr/src/haproxy'),
])


7219) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(389, 453), parts=[
  WordNode(pos=(389, 392), word='tar'),
  WordNode(pos=(393, 397), word='-xzf'),
  WordNode(pos=(398, 412), word='haproxy.tar.gz'),
  WordNode(pos=(413, 415), word='-C'),
  WordNode(pos=(416, 432), word='/usr/src/haproxy'),
  WordNode(pos=(433, 453), word='--strip-components=1'),
])


7220) rm haproxy.tar.gz

CommandNode(pos=(458, 475), parts=[
  WordNode(pos=(458, 460), word='rm'),
  WordNode(pos=(461, 475), word='haproxy.tar.gz'),
])


7221) makeOpts='   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 634), parts=[
  AssignmentNode(pos=(481, 634), word='makeOpts=   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


7222) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(639, 691), parts=[
  WordNode(pos=(639, 643), word='make'),
  WordNode(pos=(644, 646), word='-C'),
  WordNode(pos=(647, 663), word='/usr/src/haproxy'),
  WordNode(pos=(664, 666), word='-j'),
  WordNode(pos=(667, 677), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(670, 675), parts=[
        WordNode(pos=(670, 675), word='nproc'),
      ]), pos=(668, 676)),
  ]),
  WordNode(pos=(678, 681), word='all'),
  WordNode(pos=(682, 691), word='$makeOpts', parts=[
    ParameterNode(pos=(682, 691), value='makeOpts'),
  ]),
])


7223) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(696, 742), parts=[
  WordNode(pos=(696, 700), word='make'),
  WordNode(pos=(701, 703), word='-C'),
  WordNode(pos=(704, 720), word='/usr/src/haproxy'),
  WordNode(pos=(721, 732), word='install-bin'),
  WordNode(pos=(733, 742), word='$makeOpts', parts=[
    ParameterNode(pos=(733, 742), value='makeOpts'),
  ]),
])


7224) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(748, 779), parts=[
  WordNode(pos=(748, 753), word='mkdir'),
  WordNode(pos=(754, 756), word='-p'),
  WordNode(pos=(757, 779), word='/usr/local/etc/haproxy'),
])


7225) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(784, 856), parts=[
  WordNode(pos=(784, 786), word='cp'),
  WordNode(pos=(787, 789), word='-R'),
  WordNode(pos=(790, 826), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(827, 856), word='/usr/local/etc/haproxy/errors'),
])


7226) rm -rf /usr/src/haproxy

CommandNode(pos=(861, 884), parts=[
  WordNode(pos=(861, 863), word='rm'),
  WordNode(pos=(864, 867), word='-rf'),
  WordNode(pos=(868, 884), word='/usr/src/haproxy'),
])


7227) apt-mark auto '.*' > /dev/null

CommandNode(pos=(890, 920), parts=[
  WordNode(pos=(890, 898), word='apt-mark'),
  WordNode(pos=(899, 903), word='auto'),
  WordNode(pos=(904, 908), word='.*'),
  RedirectNode(output=
    WordNode(pos=(911, 920), word='/dev/null'), pos=(909, 920), type='>'),
])


7228) [ -z "$savedAptMark" ]

CommandNode(pos=(927, 949), parts=[
  WordNode(pos=(927, 928), word='['),
  WordNode(pos=(929, 931), word='-z'),
  WordNode(pos=(932, 947), word='$savedAptMark', parts=[
    ParameterNode(pos=(933, 946), value='savedAptMark'),
  ]),
  WordNode(pos=(948, 949), word=']'),
])


7229) apt-mark manual $savedAptMark

CommandNode(pos=(953, 982), parts=[
  WordNode(pos=(953, 961), word='apt-mark'),
  WordNode(pos=(962, 968), word='manual'),
  WordNode(pos=(969, 982), word='$savedAptMark', parts=[
    ParameterNode(pos=(969, 982), value='savedAptMark'),
  ]),
])


7230) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(990, 1044), parts=[
  WordNode(pos=(990, 994), word='find'),
  WordNode(pos=(995, 1005), word='/usr/local'),
  WordNode(pos=(1006, 1011), word='-type'),
  WordNode(pos=(1012, 1013), word='f'),
  WordNode(pos=(1014, 1025), word='-executable'),
  WordNode(pos=(1026, 1031), word='-exec'),
  WordNode(pos=(1032, 1035), word='ldd'),
  WordNode(pos=(1036, 1040), word='{}'),
  WordNode(pos=(1041, 1044), word=';'),
])


7231) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1049, 1077), parts=[
  WordNode(pos=(1049, 1052), word='awk'),
  WordNode(pos=(1053, 1077), word='/=>/ { print $(NF-1) }'),
])


7232) sort -u

CommandNode(pos=(1082, 1089), parts=[
  WordNode(pos=(1082, 1086), word='sort'),
  WordNode(pos=(1087, 1089), word='-u'),
])


7233) xargs -r dpkg-query --search

CommandNode(pos=(1094, 1122), parts=[
  WordNode(pos=(1094, 1099), word='xargs'),
  WordNode(pos=(1100, 1102), word='-r'),
  WordNode(pos=(1103, 1113), word='dpkg-query'),
  WordNode(pos=(1114, 1122), word='--search'),
])


7234) cut -d: -f1

CommandNode(pos=(1127, 1138), parts=[
  WordNode(pos=(1127, 1130), word='cut'),
  WordNode(pos=(1131, 1134), word='-d:'),
  WordNode(pos=(1135, 1138), word='-f1'),
])


7235) sort -u

CommandNode(pos=(1143, 1150), parts=[
  WordNode(pos=(1143, 1147), word='sort'),
  WordNode(pos=(1148, 1150), word='-u'),
])


7236) xargs -r apt-mark manual

CommandNode(pos=(1155, 1179), parts=[
  WordNode(pos=(1155, 1160), word='xargs'),
  WordNode(pos=(1161, 1163), word='-r'),
  WordNode(pos=(1164, 1172), word='apt-mark'),
  WordNode(pos=(1173, 1179), word='manual'),
])


7237) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1184, 1260), parts=[
  WordNode(pos=(1184, 1191), word='apt-get'),
  WordNode(pos=(1192, 1197), word='purge'),
  WordNode(pos=(1198, 1200), word='-y'),
  WordNode(pos=(1201, 1214), word='--auto-remove'),
  WordNode(pos=(1215, 1217), word='-o'),
  WordNode(pos=(1218, 1260), word='APT::AutoRemove::RecommendsImportant=false'),
])


7238) rabbitmq-plugins enable --offline rabbitmq_management

CommandNode(pos=(0, 53), parts=[
  WordNode(pos=(0, 16), word='rabbitmq-plugins'),
  WordNode(pos=(17, 23), word='enable'),
  WordNode(pos=(24, 33), word='--offline'),
  WordNode(pos=(34, 53), word='rabbitmq_management'),
])


7239) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7240) erl -noinput -eval '   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  ' -- /plugins/rabbitmq_management-*.ez > /usr/local/bin/rabbitmqadmin

CommandNode(pos=(11, 422), parts=[
  WordNode(pos=(11, 14), word='erl'),
  WordNode(pos=(15, 23), word='-noinput'),
  WordNode(pos=(24, 29), word='-eval'),
  WordNode(pos=(30, 354), word='   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  '),
  WordNode(pos=(355, 357), word='--'),
  WordNode(pos=(358, 391), word='/plugins/rabbitmq_management-*.ez'),
  RedirectNode(output=
    WordNode(pos=(394, 422), word='/usr/local/bin/rabbitmqadmin'), pos=(392, 422), type='>'),
])


7241) [ -s /usr/local/bin/rabbitmqadmin ]

CommandNode(pos=(425, 460), parts=[
  WordNode(pos=(425, 426), word='['),
  WordNode(pos=(427, 429), word='-s'),
  WordNode(pos=(430, 458), word='/usr/local/bin/rabbitmqadmin'),
  WordNode(pos=(459, 460), word=']'),
])


7242) chmod +x /usr/local/bin/rabbitmqadmin

CommandNode(pos=(463, 500), parts=[
  WordNode(pos=(463, 468), word='chmod'),
  WordNode(pos=(469, 471), word='+x'),
  WordNode(pos=(472, 500), word='/usr/local/bin/rabbitmqadmin'),
])


7243) apk add --no-cache python

CommandNode(pos=(503, 528), parts=[
  WordNode(pos=(503, 506), word='apk'),
  WordNode(pos=(507, 510), word='add'),
  WordNode(pos=(511, 521), word='--no-cache'),
  WordNode(pos=(522, 528), word='python'),
])


7244) rabbitmqadmin --version

CommandNode(pos=(531, 554), parts=[
  WordNode(pos=(531, 544), word='rabbitmqadmin'),
  WordNode(pos=(545, 554), word='--version'),
])


7245) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7246) apt-get install -y --no-install-recommends   ca-certificates   curl   build-essential   pkg-config   git   python

CommandNode(pos=(18, 131), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 103), word='build-essential'),
  WordNode(pos=(106, 116), word='pkg-config'),
  WordNode(pos=(119, 122), word='git'),
  WordNode(pos=(125, 131), word='python'),
])


7247) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(136, 163), parts=[
  WordNode(pos=(136, 138), word='rm'),
  WordNode(pos=(139, 142), word='-rf'),
  WordNode(pos=(143, 163), word='/var/lib/apt/lists/*'),
])


7248) gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D

CommandNode(pos=(0, 92), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 15), word='--keyserver'),
  WordNode(pos=(16, 39), word='pool.sks-keyservers.net'),
  WordNode(pos=(40, 51), word='--recv-keys'),
  WordNode(pos=(52, 92), word='7937DFD2AB06298B2293C3187D33FF9D0246406D'),
])


7249) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


7250) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


7251) gpg --verify SHASUMS256.txt.asc

CommandNode(pos=(164, 195), parts=[
  WordNode(pos=(164, 167), word='gpg'),
  WordNode(pos=(168, 176), word='--verify'),
  WordNode(pos=(177, 195), word='SHASUMS256.txt.asc'),
])


7252) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


7253) sha256sum -c -

CommandNode(pos=(268, 282), parts=[
  WordNode(pos=(268, 277), word='sha256sum'),
  WordNode(pos=(278, 280), word='-c'),
  WordNode(pos=(281, 282), word='-'),
])


7254) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


7255) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


7256) npm install -g npm@1.4.28

CommandNode(pos=(439, 464), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 464), word='npm@1.4.28'),
])


7257) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(469, 502), parts=[
  WordNode(pos=(469, 472), word='npm'),
  WordNode(pos=(473, 480), word='install'),
  WordNode(pos=(481, 483), word='-g'),
  WordNode(pos=(484, 502), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(489, 501), value='NPM_VERSION'),
  ]),
])


7258) npm cache clear

CommandNode(pos=(507, 522), parts=[
  WordNode(pos=(507, 510), word='npm'),
  WordNode(pos=(511, 516), word='cache'),
  WordNode(pos=(517, 522), word='clear'),
])


7259) groupadd -r mongodb

CommandNode(pos=(0, 19), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 19), word='mongodb'),
])


7260) useradd -r -g mongodb mongodb

CommandNode(pos=(23, 52), parts=[
  WordNode(pos=(23, 30), word='useradd'),
  WordNode(pos=(31, 33), word='-r'),
  WordNode(pos=(34, 36), word='-g'),
  WordNode(pos=(37, 44), word='mongodb'),
  WordNode(pos=(45, 52), word='mongodb'),
])


7261) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7262) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7263) apt-get install -y --no-install-recommends   ca-certificates   jq   numactl

CommandNode(pos=(28, 103), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 93), word='jq'),
  WordNode(pos=(96, 103), word='numactl'),
])


7264) command -v ps > /dev/null

CommandNode(pos=(113, 138), parts=[
  WordNode(pos=(113, 120), word='command'),
  WordNode(pos=(121, 123), word='-v'),
  WordNode(pos=(124, 126), word='ps'),
  RedirectNode(output=
    WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
])


7265) apt-get install -y --no-install-recommends procps

CommandNode(pos=(147, 196), parts=[
  WordNode(pos=(147, 154), word='apt-get'),
  WordNode(pos=(155, 162), word='install'),
  WordNode(pos=(163, 165), word='-y'),
  WordNode(pos=(166, 189), word='--no-install-recommends'),
  WordNode(pos=(190, 196), word='procps'),
])


7266) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 206), word='rm'),
  WordNode(pos=(207, 210), word='-rf'),
  WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
])


7267) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7268) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7269) apt-get install -y --no-install-recommends   wget

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='wget'),
])


7270) command -v gpg > /dev/null

CommandNode(pos=(87, 113), parts=[
  WordNode(pos=(87, 94), word='command'),
  WordNode(pos=(95, 97), word='-v'),
  WordNode(pos=(98, 101), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
])


7271) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(122, 178), parts=[
  WordNode(pos=(122, 129), word='apt-get'),
  WordNode(pos=(130, 137), word='install'),
  WordNode(pos=(138, 140), word='-y'),
  WordNode(pos=(141, 164), word='--no-install-recommends'),
  WordNode(pos=(165, 170), word='gnupg'),
  WordNode(pos=(171, 178), word='dirmngr'),
])


7272) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(186, 213), parts=[
  WordNode(pos=(186, 188), word='rm'),
  WordNode(pos=(189, 192), word='-rf'),
  WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
])


7273) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


7274) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


7275) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


7276) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


7277) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(547, 650), parts=[
  WordNode(pos=(547, 550), word='gpg'),
  WordNode(pos=(551, 558), word='--batch'),
  WordNode(pos=(559, 570), word='--keyserver'),
  WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(598, 609), word='--recv-keys'),
  WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


7278) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(653, 717), parts=[
  WordNode(pos=(653, 656), word='gpg'),
  WordNode(pos=(657, 664), word='--batch'),
  WordNode(pos=(665, 673), word='--verify'),
  WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
])


7279) command -v gpgconf

CommandNode(pos=(720, 738), parts=[
  WordNode(pos=(720, 727), word='command'),
  WordNode(pos=(728, 730), word='-v'),
  WordNode(pos=(731, 738), word='gpgconf'),
])


7280) gpgconf --kill all

CommandNode(pos=(742, 760), parts=[
  WordNode(pos=(742, 749), word='gpgconf'),
  WordNode(pos=(750, 756), word='--kill'),
  WordNode(pos=(757, 760), word='all'),
])


7281) :

CommandNode(pos=(764, 765), parts=[
  WordNode(pos=(764, 765), word=':'),
])


7282) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


7283) chmod +x /usr/local/bin/gosu

CommandNode(pos=(813, 841), parts=[
  WordNode(pos=(813, 818), word='chmod'),
  WordNode(pos=(819, 821), word='+x'),
  WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
])


7284) gosu --version

CommandNode(pos=(844, 858), parts=[
  WordNode(pos=(844, 848), word='gosu'),
  WordNode(pos=(849, 858), word='--version'),
])


7285) gosu nobody true

CommandNode(pos=(861, 877), parts=[
  WordNode(pos=(861, 865), word='gosu'),
  WordNode(pos=(866, 872), word='nobody'),
  WordNode(pos=(873, 877), word='true'),
])


7286) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


7287) apt-get purge -y --auto-remove wget

CommandNode(pos=(978, 1013), parts=[
  WordNode(pos=(978, 985), word='apt-get'),
  WordNode(pos=(986, 991), word='purge'),
  WordNode(pos=(992, 994), word='-y'),
  WordNode(pos=(995, 1008), word='--auto-remove'),
  WordNode(pos=(1009, 1013), word='wget'),
])


7288) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


7289) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7290) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


7291) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


7292) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


7293) command -v gpgconf

CommandNode(pos=(220, 238), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
])


7294) gpgconf --kill all

CommandNode(pos=(242, 260), parts=[
  WordNode(pos=(242, 249), word='gpgconf'),
  WordNode(pos=(250, 256), word='--kill'),
  WordNode(pos=(257, 260), word='all'),
])


7295) :

CommandNode(pos=(264, 265), parts=[
  WordNode(pos=(264, 265), word=':'),
])


7296) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


7297) apt-key list

CommandNode(pos=(289, 301), parts=[
  WordNode(pos=(289, 296), word='apt-key'),
  WordNode(pos=(297, 301), word='list'),
])


7298) echo "deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


7299) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


7300) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


7301) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7302) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


7303) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(249, 276), parts=[
  WordNode(pos=(249, 251), word='rm'),
  WordNode(pos=(252, 255), word='-rf'),
  WordNode(pos=(256, 276), word='/var/lib/apt/lists/*'),
])


7304) rm -rf /var/lib/mongodb

CommandNode(pos=(281, 304), parts=[
  WordNode(pos=(281, 283), word='rm'),
  WordNode(pos=(284, 287), word='-rf'),
  WordNode(pos=(288, 304), word='/var/lib/mongodb'),
])


7305) mv /etc/mongod.conf /etc/mongod.conf.orig

CommandNode(pos=(309, 350), parts=[
  WordNode(pos=(309, 311), word='mv'),
  WordNode(pos=(312, 328), word='/etc/mongod.conf'),
  WordNode(pos=(329, 350), word='/etc/mongod.conf.orig'),
])


7306) mkdir -p /data/db /data/configdb

CommandNode(pos=(0, 32), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 17), word='/data/db'),
  WordNode(pos=(18, 32), word='/data/configdb'),
])


7307) chown -R mongodb:mongodb /data/db /data/configdb

CommandNode(pos=(37, 85), parts=[
  WordNode(pos=(37, 42), word='chown'),
  WordNode(pos=(43, 45), word='-R'),
  WordNode(pos=(46, 61), word='mongodb:mongodb'),
  WordNode(pos=(62, 70), word='/data/db'),
  WordNode(pos=(71, 85), word='/data/configdb'),
])


7308) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


7309) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7310) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


7311) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


7312) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


7313) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


7314) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


7315) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


7316) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


7317) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


7318) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


7319) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


7320) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


7321) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


7322) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


7323) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


7324) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


7325) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


7326) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


7327) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


7328) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


7329) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


7330) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


7331) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


7332) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


7333) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


7334) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


7335) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


7336) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


7337) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


7338) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


7339) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


7340) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


7341) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


7342) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


7343) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


7344) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


7345) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


7346) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


7347) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


7348) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


7349) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


7350) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


7351) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


7352) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


7353) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


7354) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


7355) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


7356) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


7357) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


7358) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


7359) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


7360) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


7361) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


7362) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


7363) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


7364) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


7365) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


7366) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


7367) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


7368) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


7369) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


7370) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


7371) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7372) apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget

CommandNode(pos=(18, 102), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 95), word='netbase'),
  WordNode(pos=(98, 102), word='wget'),
])


7373) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(107, 134), parts=[
  WordNode(pos=(107, 109), word='rm'),
  WordNode(pos=(110, 113), word='-rf'),
  WordNode(pos=(114, 134), word='/var/lib/apt/lists/*'),
])


7374) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7375) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


7376) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


7377) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


7378) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


7379) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7380) apt-get install -y --no-install-recommends   tk-dev

CommandNode(pos=(18, 69), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 69), word='tk-dev'),
])


7381) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(74, 101), parts=[
  WordNode(pos=(74, 76), word='rm'),
  WordNode(pos=(77, 80), word='-rf'),
  WordNode(pos=(81, 101), word='/var/lib/apt/lists/*'),
])


7382) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7383) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


7384) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


7385) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


7386) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


7387) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


7388) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


7389) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


7390) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


7391) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


7392) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


7393) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


7394) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


7395) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


7396) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


7397) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


7398) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


7399) make install

CommandNode(pos=(920, 932), parts=[
  WordNode(pos=(920, 924), word='make'),
  WordNode(pos=(925, 932), word='install'),
])


7400) ldconfig

CommandNode(pos=(937, 945), parts=[
  WordNode(pos=(937, 945), word='ldconfig'),
])


7401) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(951, 1118), parts=[
  WordNode(pos=(951, 955), word='find'),
  WordNode(pos=(956, 966), word='/usr/local'),
  WordNode(pos=(967, 973), word='-depth'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(982, 984), word='('),
  WordNode(pos=(985, 990), word='-type'),
  WordNode(pos=(991, 992), word='d'),
  WordNode(pos=(993, 995), word='-a'),
  WordNode(pos=(996, 998), word='('),
  WordNode(pos=(999, 1004), word='-name'),
  WordNode(pos=(1005, 1009), word='test'),
  WordNode(pos=(1010, 1012), word='-o'),
  WordNode(pos=(1013, 1018), word='-name'),
  WordNode(pos=(1019, 1024), word='tests'),
  WordNode(pos=(1025, 1027), word=')'),
  WordNode(pos=(1028, 1030), word=')'),
  WordNode(pos=(1034, 1036), word='-o'),
  WordNode(pos=(1040, 1042), word='('),
  WordNode(pos=(1043, 1048), word='-type'),
  WordNode(pos=(1049, 1050), word='f'),
  WordNode(pos=(1051, 1053), word='-a'),
  WordNode(pos=(1054, 1056), word='('),
  WordNode(pos=(1057, 1062), word='-name'),
  WordNode(pos=(1063, 1070), word='*.pyc'),
  WordNode(pos=(1071, 1073), word='-o'),
  WordNode(pos=(1074, 1079), word='-name'),
  WordNode(pos=(1080, 1087), word='*.pyo'),
  WordNode(pos=(1088, 1090), word=')'),
  WordNode(pos=(1091, 1093), word=')'),
  WordNode(pos=(1096, 1098), word=')'),
  WordNode(pos=(1099, 1104), word='-exec'),
  WordNode(pos=(1105, 1107), word='rm'),
  WordNode(pos=(1108, 1111), word='-rf'),
  WordNode(pos=(1112, 1116), word='{}'),
  WordNode(pos=(1117, 1118), word='+'),
])


7402) rm -rf /usr/src/python

CommandNode(pos=(1123, 1145), parts=[
  WordNode(pos=(1123, 1125), word='rm'),
  WordNode(pos=(1126, 1129), word='-rf'),
  WordNode(pos=(1130, 1145), word='/usr/src/python'),
])


7403) python3 --version

CommandNode(pos=(1151, 1168), parts=[
  WordNode(pos=(1151, 1158), word='python3'),
  WordNode(pos=(1159, 1168), word='--version'),
])


7404) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


7405) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


7406) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


7407) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


7408) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


7409) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7410) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


7411) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


7412) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


7413) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


7414) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


7415) apk add --no-cache   git   openssh-client

CommandNode(pos=(0, 41), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 24), word='git'),
  WordNode(pos=(27, 41), word='openssh-client'),
])


7416) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


7417) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


7418) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


7419) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


7420) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7421) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


7422) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


7423) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


7424) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


7425) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


7426) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


7427) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


7428) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


7429) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


7430) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


7431) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


7432) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


7433) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


7434) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


7435) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


7436) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


7437) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


7438) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


7439) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


7440) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


7441) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


7442) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


7443) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


7444) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


7445) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


7446) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7447) cd /usr/local/etc

CommandNode(pos=(12, 29), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 29), word='/usr/local/etc'),
])


7448) [ -d php-fpm.d ]

CommandNode(pos=(37, 53), parts=[
  WordNode(pos=(37, 38), word='['),
  WordNode(pos=(39, 41), word='-d'),
  WordNode(pos=(42, 51), word='php-fpm.d'),
  WordNode(pos=(52, 53), word=']'),
])


7449) sed 's!=NONE/!=!g' php-fpm.conf.default

CommandNode(pos=(62, 101), parts=[
  WordNode(pos=(62, 65), word='sed'),
  WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
  WordNode(pos=(81, 101), word='php-fpm.conf.default'),
])


7450) tee php-fpm.conf > /dev/null

CommandNode(pos=(104, 132), parts=[
  WordNode(pos=(104, 107), word='tee'),
  WordNode(pos=(108, 120), word='php-fpm.conf'),
  RedirectNode(output=
    WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
])


7451) cp php-fpm.d/www.conf.default php-fpm.d/www.conf

CommandNode(pos=(136, 184), parts=[
  WordNode(pos=(136, 138), word='cp'),
  WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
  WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
])


7452) mkdir php-fpm.d

CommandNode(pos=(194, 209), parts=[
  WordNode(pos=(194, 199), word='mkdir'),
  WordNode(pos=(200, 209), word='php-fpm.d'),
])


7453) cp php-fpm.conf.default php-fpm.d/www.conf

CommandNode(pos=(213, 255), parts=[
  WordNode(pos=(213, 215), word='cp'),
  WordNode(pos=(216, 236), word='php-fpm.conf.default'),
  WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
])


7454) echo '[global]'

CommandNode(pos=(264, 279), parts=[
  WordNode(pos=(264, 268), word='echo'),
  WordNode(pos=(269, 279), word='[global]'),
])


7455) echo 'include=etc/php-fpm.d/*.conf'

CommandNode(pos=(284, 319), parts=[
  WordNode(pos=(284, 288), word='echo'),
  WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
])


7456) tee php-fpm.conf

CommandNode(pos=(327, 343), parts=[
  WordNode(pos=(327, 330), word='tee'),
  WordNode(pos=(331, 343), word='php-fpm.conf'),
])


7457) echo '[global]'

CommandNode(pos=(357, 372), parts=[
  WordNode(pos=(357, 361), word='echo'),
  WordNode(pos=(362, 372), word='[global]'),
])


7458) echo 'error_log = /proc/self/fd/2'

CommandNode(pos=(376, 410), parts=[
  WordNode(pos=(376, 380), word='echo'),
  WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
])


7459) echo

CommandNode(pos=(414, 418), parts=[
  WordNode(pos=(414, 418), word='echo'),
])


7460) echo '[www]'

CommandNode(pos=(422, 434), parts=[
  WordNode(pos=(422, 426), word='echo'),
  WordNode(pos=(427, 434), word='[www]'),
])


7461) echo '; if we send this to /proc/self/fd/1, it never appears'

CommandNode(pos=(438, 499), parts=[
  WordNode(pos=(438, 442), word='echo'),
  WordNode(pos=(443, 499), word='; if we send this to /proc/self/fd/1, it never appears'),
])


7462) echo 'access.log = /proc/self/fd/2'

CommandNode(pos=(503, 538), parts=[
  WordNode(pos=(503, 507), word='echo'),
  WordNode(pos=(508, 538), word='access.log = /proc/self/fd/2'),
])


7463) echo

CommandNode(pos=(542, 546), parts=[
  WordNode(pos=(542, 546), word='echo'),
])


7464) echo 'clear_env = no'

CommandNode(pos=(550, 571), parts=[
  WordNode(pos=(550, 554), word='echo'),
  WordNode(pos=(555, 571), word='clear_env = no'),
])


7465) echo

CommandNode(pos=(575, 579), parts=[
  WordNode(pos=(575, 579), word='echo'),
])


7466) echo '; Ensure worker stdout and stderr are sent to the main error log.'

CommandNode(pos=(583, 655), parts=[
  WordNode(pos=(583, 587), word='echo'),
  WordNode(pos=(588, 655), word='; Ensure worker stdout and stderr are sent to the main error log.'),
])


7467) echo 'catch_workers_output = yes'

CommandNode(pos=(659, 692), parts=[
  WordNode(pos=(659, 663), word='echo'),
  WordNode(pos=(664, 692), word='catch_workers_output = yes'),
])


7468) tee php-fpm.d/docker.conf

CommandNode(pos=(699, 724), parts=[
  WordNode(pos=(699, 702), word='tee'),
  WordNode(pos=(703, 724), word='php-fpm.d/docker.conf'),
])


7469) echo '[global]'

CommandNode(pos=(733, 748), parts=[
  WordNode(pos=(733, 737), word='echo'),
  WordNode(pos=(738, 748), word='[global]'),
])


7470) echo 'daemonize = no'

CommandNode(pos=(752, 773), parts=[
  WordNode(pos=(752, 756), word='echo'),
  WordNode(pos=(757, 773), word='daemonize = no'),
])


7471) echo

CommandNode(pos=(777, 781), parts=[
  WordNode(pos=(777, 781), word='echo'),
])


7472) echo '[www]'

CommandNode(pos=(785, 797), parts=[
  WordNode(pos=(785, 789), word='echo'),
  WordNode(pos=(790, 797), word='[www]'),
])


7473) echo 'listen = 9000'

CommandNode(pos=(801, 821), parts=[
  WordNode(pos=(801, 805), word='echo'),
  WordNode(pos=(806, 821), word='listen = 9000'),
])


7474) tee php-fpm.d/zz-docker.conf

CommandNode(pos=(828, 856), parts=[
  WordNode(pos=(828, 831), word='tee'),
  WordNode(pos=(832, 856), word='php-fpm.d/zz-docker.conf'),
])


7475) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7476) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


7477) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


7478) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


7479) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7480) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


7481) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


7482) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7483) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


7484) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


7485) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


7486) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


7487) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


7488) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


7489) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


7490) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


7491) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


7492) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


7493) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


7494) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


7495) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


7496) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


7497) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


7498) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


7499) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


7500) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


7501) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


7502) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


7503) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


7504) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


7505) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


7506) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


7507) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


7508) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


7509) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


7510) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


7511) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


7512) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


7513) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


7514) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7515) cd /usr/local/etc

CommandNode(pos=(12, 29), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 29), word='/usr/local/etc'),
])


7516) [ -d php-fpm.d ]

CommandNode(pos=(37, 53), parts=[
  WordNode(pos=(37, 38), word='['),
  WordNode(pos=(39, 41), word='-d'),
  WordNode(pos=(42, 51), word='php-fpm.d'),
  WordNode(pos=(52, 53), word=']'),
])


7517) sed 's!=NONE/!=!g' php-fpm.conf.default

CommandNode(pos=(62, 101), parts=[
  WordNode(pos=(62, 65), word='sed'),
  WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
  WordNode(pos=(81, 101), word='php-fpm.conf.default'),
])


7518) tee php-fpm.conf > /dev/null

CommandNode(pos=(104, 132), parts=[
  WordNode(pos=(104, 107), word='tee'),
  WordNode(pos=(108, 120), word='php-fpm.conf'),
  RedirectNode(output=
    WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
])


7519) cp php-fpm.d/www.conf.default php-fpm.d/www.conf

CommandNode(pos=(136, 184), parts=[
  WordNode(pos=(136, 138), word='cp'),
  WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
  WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
])


7520) mkdir php-fpm.d

CommandNode(pos=(194, 209), parts=[
  WordNode(pos=(194, 199), word='mkdir'),
  WordNode(pos=(200, 209), word='php-fpm.d'),
])


7521) cp php-fpm.conf.default php-fpm.d/www.conf

CommandNode(pos=(213, 255), parts=[
  WordNode(pos=(213, 215), word='cp'),
  WordNode(pos=(216, 236), word='php-fpm.conf.default'),
  WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
])


7522) echo '[global]'

CommandNode(pos=(264, 279), parts=[
  WordNode(pos=(264, 268), word='echo'),
  WordNode(pos=(269, 279), word='[global]'),
])


7523) echo 'include=etc/php-fpm.d/*.conf'

CommandNode(pos=(284, 319), parts=[
  WordNode(pos=(284, 288), word='echo'),
  WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
])


7524) tee php-fpm.conf

CommandNode(pos=(327, 343), parts=[
  WordNode(pos=(327, 330), word='tee'),
  WordNode(pos=(331, 343), word='php-fpm.conf'),
])


7525) echo '[global]'

CommandNode(pos=(357, 372), parts=[
  WordNode(pos=(357, 361), word='echo'),
  WordNode(pos=(362, 372), word='[global]'),
])


7526) echo 'error_log = /proc/self/fd/2'

CommandNode(pos=(376, 410), parts=[
  WordNode(pos=(376, 380), word='echo'),
  WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
])


7527) echo

CommandNode(pos=(414, 418), parts=[
  WordNode(pos=(414, 418), word='echo'),
])


7528) echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'

CommandNode(pos=(420, 498), parts=[
  WordNode(pos=(420, 424), word='echo'),
  WordNode(pos=(425, 498), word='; https://github.com/docker-library/php/pull/725#issuecomment-443540114'),
])


7529) echo 'log_limit = 8192'

CommandNode(pos=(500, 523), parts=[
  WordNode(pos=(500, 504), word='echo'),
  WordNode(pos=(505, 523), word='log_limit = 8192'),
])


7530) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


7531) echo '[www]'

CommandNode(pos=(535, 547), parts=[
  WordNode(pos=(535, 539), word='echo'),
  WordNode(pos=(540, 547), word='[www]'),
])


7532) echo '; if we send this to /proc/self/fd/1, it never appears'

CommandNode(pos=(551, 612), parts=[
  WordNode(pos=(551, 555), word='echo'),
  WordNode(pos=(556, 612), word='; if we send this to /proc/self/fd/1, it never appears'),
])


7533) echo 'access.log = /proc/self/fd/2'

CommandNode(pos=(616, 651), parts=[
  WordNode(pos=(616, 620), word='echo'),
  WordNode(pos=(621, 651), word='access.log = /proc/self/fd/2'),
])


7534) echo

CommandNode(pos=(655, 659), parts=[
  WordNode(pos=(655, 659), word='echo'),
])


7535) echo 'clear_env = no'

CommandNode(pos=(663, 684), parts=[
  WordNode(pos=(663, 667), word='echo'),
  WordNode(pos=(668, 684), word='clear_env = no'),
])


7536) echo

CommandNode(pos=(688, 692), parts=[
  WordNode(pos=(688, 692), word='echo'),
])


7537) echo '; Ensure worker stdout and stderr are sent to the main error log.'

CommandNode(pos=(696, 768), parts=[
  WordNode(pos=(696, 700), word='echo'),
  WordNode(pos=(701, 768), word='; Ensure worker stdout and stderr are sent to the main error log.'),
])


7538) echo 'catch_workers_output = yes'

CommandNode(pos=(772, 805), parts=[
  WordNode(pos=(772, 776), word='echo'),
  WordNode(pos=(777, 805), word='catch_workers_output = yes'),
])


7539) echo 'decorate_workers_output = no'

CommandNode(pos=(809, 844), parts=[
  WordNode(pos=(809, 813), word='echo'),
  WordNode(pos=(814, 844), word='decorate_workers_output = no'),
])


7540) tee php-fpm.d/docker.conf

CommandNode(pos=(851, 876), parts=[
  WordNode(pos=(851, 854), word='tee'),
  WordNode(pos=(855, 876), word='php-fpm.d/docker.conf'),
])


7541) echo '[global]'

CommandNode(pos=(885, 900), parts=[
  WordNode(pos=(885, 889), word='echo'),
  WordNode(pos=(890, 900), word='[global]'),
])


7542) echo 'daemonize = no'

CommandNode(pos=(904, 925), parts=[
  WordNode(pos=(904, 908), word='echo'),
  WordNode(pos=(909, 925), word='daemonize = no'),
])


7543) echo

CommandNode(pos=(929, 933), parts=[
  WordNode(pos=(929, 933), word='echo'),
])


7544) echo '[www]'

CommandNode(pos=(937, 949), parts=[
  WordNode(pos=(937, 941), word='echo'),
  WordNode(pos=(942, 949), word='[www]'),
])


7545) echo 'listen = 9000'

CommandNode(pos=(953, 973), parts=[
  WordNode(pos=(953, 957), word='echo'),
  WordNode(pos=(958, 973), word='listen = 9000'),
])


7546) tee php-fpm.d/zz-docker.conf

CommandNode(pos=(980, 1008), parts=[
  WordNode(pos=(980, 983), word='tee'),
  WordNode(pos=(984, 1008), word='php-fpm.d/zz-docker.conf'),
])


7547) pip install --no-cache-dir virtualenv

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 26), word='--no-cache-dir'),
  WordNode(pos=(27, 37), word='virtualenv'),
])


7548) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7549) apt-get install -y --no-install-recommends   bzip2   ca-certificates   libffi-dev   libgdbm3   libgmp-dev   libssl-dev   libyaml-dev   procps   zlib1g-dev

CommandNode(pos=(19, 173), parts=[
  WordNode(pos=(19, 26), word='apt-get'),
  WordNode(pos=(27, 34), word='install'),
  WordNode(pos=(35, 37), word='-y'),
  WordNode(pos=(38, 61), word='--no-install-recommends'),
  WordNode(pos=(64, 69), word='bzip2'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(90, 100), word='libffi-dev'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 124), word='libgmp-dev'),
  WordNode(pos=(127, 137), word='libssl-dev'),
  WordNode(pos=(140, 151), word='libyaml-dev'),
  WordNode(pos=(154, 160), word='procps'),
  WordNode(pos=(163, 173), word='zlib1g-dev'),
])


7550) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(178, 205), parts=[
  WordNode(pos=(178, 180), word='rm'),
  WordNode(pos=(181, 184), word='-rf'),
  WordNode(pos=(185, 205), word='/var/lib/apt/lists/*'),
])


7551) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


7552) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


7553) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


7554) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7555) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


7556) apt-get update

CommandNode(pos=(55, 69), parts=[
  WordNode(pos=(55, 62), word='apt-get'),
  WordNode(pos=(63, 69), word='update'),
])


7557) apt-get install -y --no-install-recommends   autoconf   bison   dpkg-dev   gcc   libbz2-dev   libgdbm-dev   libglib2.0-dev   libncurses-dev   libreadline-dev   libxml2-dev   libxslt-dev   make   ruby   wget   xz-utils

CommandNode(pos=(73, 290), parts=[
  WordNode(pos=(73, 80), word='apt-get'),
  WordNode(pos=(81, 88), word='install'),
  WordNode(pos=(89, 91), word='-y'),
  WordNode(pos=(92, 115), word='--no-install-recommends'),
  WordNode(pos=(118, 126), word='autoconf'),
  WordNode(pos=(129, 134), word='bison'),
  WordNode(pos=(137, 145), word='dpkg-dev'),
  WordNode(pos=(148, 151), word='gcc'),
  WordNode(pos=(154, 164), word='libbz2-dev'),
  WordNode(pos=(167, 178), word='libgdbm-dev'),
  WordNode(pos=(181, 195), word='libglib2.0-dev'),
  WordNode(pos=(198, 212), word='libncurses-dev'),
  WordNode(pos=(215, 230), word='libreadline-dev'),
  WordNode(pos=(233, 244), word='libxml2-dev'),
  WordNode(pos=(247, 258), word='libxslt-dev'),
  WordNode(pos=(261, 265), word='make'),
  WordNode(pos=(268, 272), word='ruby'),
  WordNode(pos=(275, 279), word='wget'),
  WordNode(pos=(282, 290), word='xz-utils'),
])


7558) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(295, 322), parts=[
  WordNode(pos=(295, 297), word='rm'),
  WordNode(pos=(298, 301), word='-rf'),
  WordNode(pos=(302, 322), word='/var/lib/apt/lists/*'),
])


7559) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


7560) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


7561) sha256sum -c -

CommandNode(pos=(479, 493), parts=[
  WordNode(pos=(479, 488), word='sha256sum'),
  WordNode(pos=(489, 491), word='-c'),
  WordNode(pos=(492, 493), word='-'),
])


7562) mkdir -p /usr/src/ruby

CommandNode(pos=(499, 521), parts=[
  WordNode(pos=(499, 504), word='mkdir'),
  WordNode(pos=(505, 507), word='-p'),
  WordNode(pos=(508, 521), word='/usr/src/ruby'),
])


7563) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(526, 584), parts=[
  WordNode(pos=(526, 529), word='tar'),
  WordNode(pos=(530, 534), word='-xJf'),
  WordNode(pos=(535, 546), word='ruby.tar.xz'),
  WordNode(pos=(547, 549), word='-C'),
  WordNode(pos=(550, 563), word='/usr/src/ruby'),
  WordNode(pos=(564, 584), word='--strip-components=1'),
])


7564) rm ruby.tar.xz

CommandNode(pos=(589, 603), parts=[
  WordNode(pos=(589, 591), word='rm'),
  WordNode(pos=(592, 603), word='ruby.tar.xz'),
])


7565) cd /usr/src/ruby

CommandNode(pos=(609, 625), parts=[
  WordNode(pos=(609, 611), word='cd'),
  WordNode(pos=(612, 625), word='/usr/src/ruby'),
])


7566) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(635, 669), parts=[
  WordNode(pos=(635, 639), word='echo'),
  WordNode(pos=(640, 669), word='#define ENABLE_PATH_CHECK 0'),
])


7567) echo

CommandNode(pos=(673, 677), parts=[
  WordNode(pos=(673, 677), word='echo'),
])


7568) cat file.c

CommandNode(pos=(681, 691), parts=[
  WordNode(pos=(681, 684), word='cat'),
  WordNode(pos=(685, 691), word='file.c'),
])


7569) mv file.c.new file.c

CommandNode(pos=(713, 733), parts=[
  WordNode(pos=(713, 715), word='mv'),
  WordNode(pos=(716, 726), word='file.c.new'),
  WordNode(pos=(727, 733), word='file.c'),
])


7570) autoconf

CommandNode(pos=(739, 747), parts=[
  WordNode(pos=(739, 747), word='autoconf'),
])


7571) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


7572) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


7573) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


7574) make install

CommandNode(pos=(916, 928), parts=[
  WordNode(pos=(916, 920), word='make'),
  WordNode(pos=(921, 928), word='install'),
])


7575) apt-mark auto '.*' > /dev/null

CommandNode(pos=(934, 964), parts=[
  WordNode(pos=(934, 942), word='apt-mark'),
  WordNode(pos=(943, 947), word='auto'),
  WordNode(pos=(948, 952), word='.*'),
  RedirectNode(output=
    WordNode(pos=(955, 964), word='/dev/null'), pos=(953, 964), type='>'),
])


7576) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


7577) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec ldd '{}' ';'

CommandNode(pos=(1003, 1086), parts=[
  WordNode(pos=(1003, 1007), word='find'),
  WordNode(pos=(1008, 1018), word='/usr/local'),
  WordNode(pos=(1019, 1024), word='-type'),
  WordNode(pos=(1025, 1026), word='f'),
  WordNode(pos=(1027, 1038), word='-executable'),
  WordNode(pos=(1039, 1043), word='-not'),
  WordNode(pos=(1044, 1046), word='('),
  WordNode(pos=(1047, 1052), word='-name'),
  WordNode(pos=(1053, 1064), word='*tkinter*'),
  WordNode(pos=(1065, 1067), word=')'),
  WordNode(pos=(1068, 1073), word='-exec'),
  WordNode(pos=(1074, 1077), word='ldd'),
  WordNode(pos=(1078, 1082), word='{}'),
  WordNode(pos=(1083, 1086), word=';'),
])


7578) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1091, 1119), parts=[
  WordNode(pos=(1091, 1094), word='awk'),
  WordNode(pos=(1095, 1119), word='/=>/ { print $(NF-1) }'),
])


7579) sort -u

CommandNode(pos=(1124, 1131), parts=[
  WordNode(pos=(1124, 1128), word='sort'),
  WordNode(pos=(1129, 1131), word='-u'),
])


7580) xargs -r dpkg-query --search

CommandNode(pos=(1136, 1164), parts=[
  WordNode(pos=(1136, 1141), word='xargs'),
  WordNode(pos=(1142, 1144), word='-r'),
  WordNode(pos=(1145, 1155), word='dpkg-query'),
  WordNode(pos=(1156, 1164), word='--search'),
])


7581) cut -d: -f1

CommandNode(pos=(1169, 1180), parts=[
  WordNode(pos=(1169, 1172), word='cut'),
  WordNode(pos=(1173, 1176), word='-d:'),
  WordNode(pos=(1177, 1180), word='-f1'),
])


7582) sort -u

CommandNode(pos=(1185, 1192), parts=[
  WordNode(pos=(1185, 1189), word='sort'),
  WordNode(pos=(1190, 1192), word='-u'),
])


7583) xargs -r apt-mark manual

CommandNode(pos=(1197, 1221), parts=[
  WordNode(pos=(1197, 1202), word='xargs'),
  WordNode(pos=(1203, 1205), word='-r'),
  WordNode(pos=(1206, 1214), word='apt-mark'),
  WordNode(pos=(1215, 1221), word='manual'),
])


7584) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1226, 1302), parts=[
  WordNode(pos=(1226, 1233), word='apt-get'),
  WordNode(pos=(1234, 1239), word='purge'),
  WordNode(pos=(1240, 1242), word='-y'),
  WordNode(pos=(1243, 1256), word='--auto-remove'),
  WordNode(pos=(1257, 1259), word='-o'),
  WordNode(pos=(1260, 1302), word='APT::AutoRemove::RecommendsImportant=false'),
])


7585) cd /

CommandNode(pos=(1308, 1312), parts=[
  WordNode(pos=(1308, 1310), word='cd'),
  WordNode(pos=(1311, 1312), word='/'),
])


7586) rm -r /usr/src/ruby

CommandNode(pos=(1317, 1336), parts=[
  WordNode(pos=(1317, 1319), word='rm'),
  WordNode(pos=(1320, 1322), word='-r'),
  WordNode(pos=(1323, 1336), word='/usr/src/ruby'),
])


7587) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(1341, 1437), parts=[
  WordNode(pos=(1341, 1345), word='ruby'),
  WordNode(pos=(1346, 1348), word='-e'),
  WordNode(pos=(1349, 1437), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


7588) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1442, 1481), parts=[
  WordNode(pos=(1442, 1445), word='gem'),
  WordNode(pos=(1446, 1452), word='update'),
  WordNode(pos=(1453, 1461), word='--system'),
  WordNode(pos=(1462, 1481), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1463, 1480), value='RUBYGEMS_VERSION'),
  ]),
])


7589) rm -r /root/.gem/

CommandNode(pos=(1485, 1502), parts=[
  WordNode(pos=(1485, 1487), word='rm'),
  WordNode(pos=(1488, 1490), word='-r'),
  WordNode(pos=(1491, 1502), word='/root/.gem/'),
])


7590) ruby --version

CommandNode(pos=(1507, 1521), parts=[
  WordNode(pos=(1507, 1511), word='ruby'),
  WordNode(pos=(1512, 1521), word='--version'),
])


7591) gem --version

CommandNode(pos=(1525, 1538), parts=[
  WordNode(pos=(1525, 1528), word='gem'),
  WordNode(pos=(1529, 1538), word='--version'),
])


7592) bundle --version

CommandNode(pos=(1542, 1558), parts=[
  WordNode(pos=(1542, 1548), word='bundle'),
  WordNode(pos=(1549, 1558), word='--version'),
])


7593) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


7594) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


7595) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7596) command -v a2enmod

CommandNode(pos=(14, 32), parts=[
  WordNode(pos=(14, 21), word='command'),
  WordNode(pos=(22, 24), word='-v'),
  WordNode(pos=(25, 32), word='a2enmod'),
])


7597) a2enmod rewrite

CommandNode(pos=(41, 56), parts=[
  WordNode(pos=(41, 48), word='a2enmod'),
  WordNode(pos=(49, 56), word='rewrite'),
])


7598) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


7599) apt-get update

CommandNode(pos=(106, 120), parts=[
  WordNode(pos=(106, 113), word='apt-get'),
  WordNode(pos=(114, 120), word='update'),
])


7600) apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev

CommandNode(pos=(123, 217), parts=[
  WordNode(pos=(123, 130), word='apt-get'),
  WordNode(pos=(131, 138), word='install'),
  WordNode(pos=(139, 141), word='-y'),
  WordNode(pos=(142, 165), word='--no-install-recommends'),
  WordNode(pos=(168, 179), word='libjpeg-dev'),
  WordNode(pos=(182, 192), word='libpng-dev'),
  WordNode(pos=(195, 204), word='libpq-dev'),
  WordNode(pos=(207, 217), word='libzip-dev'),
])


7601) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(223, 291), parts=[
  WordNode(pos=(223, 247), word='docker-php-ext-configure'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
  WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
])


7602) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


7603) apt-mark auto '.*' > /dev/null

CommandNode(pos=(381, 411), parts=[
  WordNode(pos=(381, 389), word='apt-mark'),
  WordNode(pos=(390, 394), word='auto'),
  WordNode(pos=(395, 399), word='.*'),
  RedirectNode(output=
    WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
])


7604) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


7605) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


7606) awk '/=>/ { print $3 }'

CommandNode(pos=(504, 527), parts=[
  WordNode(pos=(504, 507), word='awk'),
  WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
])


7607) sort -u

CommandNode(pos=(532, 539), parts=[
  WordNode(pos=(532, 536), word='sort'),
  WordNode(pos=(537, 539), word='-u'),
])


7608) xargs -r dpkg-query -S

CommandNode(pos=(544, 566), parts=[
  WordNode(pos=(544, 549), word='xargs'),
  WordNode(pos=(550, 552), word='-r'),
  WordNode(pos=(553, 563), word='dpkg-query'),
  WordNode(pos=(564, 566), word='-S'),
])


7609) cut -d: -f1

CommandNode(pos=(571, 582), parts=[
  WordNode(pos=(571, 574), word='cut'),
  WordNode(pos=(575, 578), word='-d:'),
  WordNode(pos=(579, 582), word='-f1'),
])


7610) sort -u

CommandNode(pos=(587, 594), parts=[
  WordNode(pos=(587, 591), word='sort'),
  WordNode(pos=(592, 594), word='-u'),
])


7611) xargs -rt apt-mark manual

CommandNode(pos=(599, 624), parts=[
  WordNode(pos=(599, 604), word='xargs'),
  WordNode(pos=(605, 608), word='-rt'),
  WordNode(pos=(609, 617), word='apt-mark'),
  WordNode(pos=(618, 624), word='manual'),
])


7612) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(628, 704), parts=[
  WordNode(pos=(628, 635), word='apt-get'),
  WordNode(pos=(636, 641), word='purge'),
  WordNode(pos=(642, 644), word='-y'),
  WordNode(pos=(645, 658), word='--auto-remove'),
  WordNode(pos=(659, 661), word='-o'),
  WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
])


7613) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(707, 734), parts=[
  WordNode(pos=(707, 709), word='rm'),
  WordNode(pos=(710, 713), word='-rf'),
  WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
])


7614) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


7615) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


7616) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


7617) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


7618) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


7619) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


7620) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


7621) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


7622) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


7623) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


7624) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


7625) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


7626) groupadd user

CommandNode(pos=(0, 13), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 13), word='user'),
])


7627) useradd --create-home --home-dir /home/user -g user user

CommandNode(pos=(17, 73), parts=[
  WordNode(pos=(17, 24), word='useradd'),
  WordNode(pos=(25, 38), word='--create-home'),
  WordNode(pos=(39, 49), word='--home-dir'),
  WordNode(pos=(50, 60), word='/home/user'),
  WordNode(pos=(61, 63), word='-g'),
  WordNode(pos=(64, 68), word='user'),
  WordNode(pos=(69, 73), word='user'),
])


7628) pip install redis

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 17), word='redis'),
])


7629) pip install celery=="$CELERY_VERSION"

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 37), word='celery==$CELERY_VERSION', parts=[
    ParameterNode(pos=(21, 36), value='CELERY_VERSION'),
  ]),
])


7630) echo 'import os'

CommandNode(pos=(3, 19), parts=[
  WordNode(pos=(3, 7), word='echo'),
  WordNode(pos=(8, 19), word='import os'),
])


7631) echo "BROKER_URL = os.environ.get('CELERY_BROKER_URL', 'amqp://')"

CommandNode(pos=(22, 88), parts=[
  WordNode(pos=(22, 26), word='echo'),
  WordNode(pos=(27, 88), word="BROKER_URL = os.environ.get('CELERY_BROKER_URL', 'amqp://')"),
])


7632) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7633) apt-get install -y --no-install-recommends   ca-certificates   curl   build-essential   pkg-config   git   python

CommandNode(pos=(18, 131), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 85), word='curl'),
  WordNode(pos=(88, 103), word='build-essential'),
  WordNode(pos=(106, 116), word='pkg-config'),
  WordNode(pos=(119, 122), word='git'),
  WordNode(pos=(125, 131), word='python'),
])


7634) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(136, 163), parts=[
  WordNode(pos=(136, 138), word='rm'),
  WordNode(pos=(139, 142), word='-rf'),
  WordNode(pos=(143, 163), word='/var/lib/apt/lists/*'),
])


7635) gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D

CommandNode(pos=(0, 92), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 15), word='--keyserver'),
  WordNode(pos=(16, 39), word='pool.sks-keyservers.net'),
  WordNode(pos=(40, 51), word='--recv-keys'),
  WordNode(pos=(52, 92), word='7937DFD2AB06298B2293C3187D33FF9D0246406D'),
])


7636) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


7637) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


7638) gpg --verify SHASUMS256.txt.asc

CommandNode(pos=(164, 195), parts=[
  WordNode(pos=(164, 167), word='gpg'),
  WordNode(pos=(168, 176), word='--verify'),
  WordNode(pos=(177, 195), word='SHASUMS256.txt.asc'),
])


7639) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


7640) sha256sum -c -

CommandNode(pos=(268, 282), parts=[
  WordNode(pos=(268, 277), word='sha256sum'),
  WordNode(pos=(278, 280), word='-c'),
  WordNode(pos=(281, 282), word='-'),
])


7641) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


7642) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


7643) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(439, 472), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 472), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(459, 471), value='NPM_VERSION'),
  ]),
])


7644) npm cache clear

CommandNode(pos=(477, 492), parts=[
  WordNode(pos=(477, 480), word='npm'),
  WordNode(pos=(481, 486), word='cache'),
  WordNode(pos=(487, 492), word='clear'),
])


7645) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7646) yum install -y   gzip   tar     freetype fontconfig

CommandNode(pos=(11, 62), parts=[
  WordNode(pos=(11, 14), word='yum'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-y'),
  WordNode(pos=(28, 32), word='gzip'),
  WordNode(pos=(35, 38), word='tar'),
  WordNode(pos=(43, 51), word='freetype'),
  WordNode(pos=(52, 62), word='fontconfig'),
])


7647) rm -rf /var/cache/yum

CommandNode(pos=(67, 88), parts=[
  WordNode(pos=(67, 69), word='rm'),
  WordNode(pos=(70, 73), word='-rf'),
  WordNode(pos=(74, 88), word='/var/cache/yum'),
])


7648) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7649) curl -fL -o /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 48), parts=[
  WordNode(pos=(12, 16), word='curl'),
  WordNode(pos=(17, 20), word='-fL'),
  WordNode(pos=(21, 23), word='-o'),
  WordNode(pos=(24, 36), word='/openjdk.tgz'),
  WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
    ParameterNode(pos=(38, 47), value='JAVA_URL'),
  ]),
])


7650) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(51, 84), parts=[
  WordNode(pos=(51, 55), word='echo'),
  WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
  ]),
])


7651) sha256sum -c -

CommandNode(pos=(87, 101), parts=[
  WordNode(pos=(87, 96), word='sha256sum'),
  WordNode(pos=(97, 99), word='-c'),
  WordNode(pos=(100, 101), word='-'),
])


7652) mkdir -p "$JAVA_HOME"

CommandNode(pos=(104, 125), parts=[
  WordNode(pos=(104, 109), word='mkdir'),
  WordNode(pos=(110, 112), word='-p'),
  WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(114, 124), value='JAVA_HOME'),
  ]),
])


7653) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(128, 207), parts=[
  WordNode(pos=(128, 131), word='tar'),
  WordNode(pos=(132, 141), word='--extract'),
  WordNode(pos=(142, 148), word='--file'),
  WordNode(pos=(149, 161), word='/openjdk.tgz'),
  WordNode(pos=(162, 173), word='--directory'),
  WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(175, 185), value='JAVA_HOME'),
  ]),
  WordNode(pos=(187, 205), word='--strip-components'),
  WordNode(pos=(206, 207), word='1'),
])


7654) rm /openjdk.tgz

CommandNode(pos=(210, 225), parts=[
  WordNode(pos=(210, 212), word='rm'),
  WordNode(pos=(213, 225), word='/openjdk.tgz'),
])


7655) ln -sfT "$JAVA_HOME" /usr/java/default

CommandNode(pos=(229, 267), parts=[
  WordNode(pos=(229, 231), word='ln'),
  WordNode(pos=(232, 236), word='-sfT'),
  WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(238, 248), value='JAVA_HOME'),
  ]),
  WordNode(pos=(250, 267), word='/usr/java/default'),
])


7656) ln -sfT "$JAVA_HOME" /usr/java/latest

CommandNode(pos=(270, 307), parts=[
  WordNode(pos=(270, 272), word='ln'),
  WordNode(pos=(273, 277), word='-sfT'),
  WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(279, 289), value='JAVA_HOME'),
  ]),
  WordNode(pos=(291, 307), word='/usr/java/latest'),
])


7657) base="$(basename "$bin")"

CommandNode(pos=(346, 371), parts=[
  AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(354, 369), parts=[
        WordNode(pos=(354, 362), word='basename'),
        WordNode(pos=(363, 369), word='$bin', parts=[
          ParameterNode(pos=(364, 368), value='bin'),
        ]),
      ]), pos=(352, 370)),
  ]),
])


7658) [ ! -e "/usr/bin/$base" ]

CommandNode(pos=(375, 400), parts=[
  WordNode(pos=(375, 376), word='['),
  WordNode(pos=(377, 378), word='!'),
  WordNode(pos=(379, 381), word='-e'),
  WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(392, 397), value='base'),
  ]),
  WordNode(pos=(399, 400), word=']'),
])


7659) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


7660) java -Xshare:dump

CommandNode(pos=(475, 492), parts=[
  WordNode(pos=(475, 479), word='java'),
  WordNode(pos=(480, 492), word='-Xshare:dump'),
])


7661) java --version

CommandNode(pos=(496, 510), parts=[
  WordNode(pos=(496, 500), word='java'),
  WordNode(pos=(501, 510), word='--version'),
])


7662) javac --version

CommandNode(pos=(513, 528), parts=[
  WordNode(pos=(513, 518), word='javac'),
  WordNode(pos=(519, 528), word='--version'),
])


7663) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7664) apt-get install -y --no-install-recommends   bzr   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 125), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='bzr'),
  WordNode(pos=(69, 72), word='git'),
  WordNode(pos=(75, 84), word='mercurial'),
  WordNode(pos=(87, 101), word='openssh-client'),
  WordNode(pos=(104, 114), word='subversion'),
  WordNode(pos=(119, 125), word='procps'),
])


7665) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(130, 157), parts=[
  WordNode(pos=(130, 132), word='rm'),
  WordNode(pos=(133, 136), word='-rf'),
  WordNode(pos=(137, 157), word='/var/lib/apt/lists/*'),
])


7666) mkdir -p /usr/src/app

CommandNode(pos=(0, 21), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 21), word='/usr/src/app'),
])


7667) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7668) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


7669) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


7670) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


7671) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


7672) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


7673) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


7674) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7675) apk add --no-cache --virtual .fetch-deps   ca-certificates   openssl   tar

CommandNode(pos=(13, 87), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 53), word='.fetch-deps'),
  WordNode(pos=(56, 71), word='ca-certificates'),
  WordNode(pos=(74, 81), word='openssl'),
  WordNode(pos=(84, 87), word='tar'),
])


7676) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


7677) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


7678) sha256sum -c -

CommandNode(pos=(248, 262), parts=[
  WordNode(pos=(248, 257), word='sha256sum'),
  WordNode(pos=(258, 260), word='-c'),
  WordNode(pos=(261, 262), word='-'),
])


7679) mkdir -p /usr/src/postgresql

CommandNode(pos=(267, 295), parts=[
  WordNode(pos=(267, 272), word='mkdir'),
  WordNode(pos=(273, 275), word='-p'),
  WordNode(pos=(276, 295), word='/usr/src/postgresql'),
])


7680) tar   --extract   --file postgresql.tar.bz2   --directory /usr/src/postgresql   --strip-components 1

CommandNode(pos=(300, 400), parts=[
  WordNode(pos=(300, 303), word='tar'),
  WordNode(pos=(306, 315), word='--extract'),
  WordNode(pos=(318, 324), word='--file'),
  WordNode(pos=(325, 343), word='postgresql.tar.bz2'),
  WordNode(pos=(346, 357), word='--directory'),
  WordNode(pos=(358, 377), word='/usr/src/postgresql'),
  WordNode(pos=(380, 398), word='--strip-components'),
  WordNode(pos=(399, 400), word='1'),
])


7681) rm postgresql.tar.bz2

CommandNode(pos=(405, 426), parts=[
  WordNode(pos=(405, 407), word='rm'),
  WordNode(pos=(408, 426), word='postgresql.tar.bz2'),
])


7682) apk add --no-cache --virtual .build-deps   bison   coreutils   dpkg-dev dpkg   flex   gcc   libc-dev   libedit-dev   libxml2-dev   libxslt-dev   linux-headers   make   openssl-dev   perl-utils   perl-ipc-run   util-linux-dev   zlib-dev   icu-dev

CommandNode(pos=(432, 677), parts=[
  WordNode(pos=(432, 435), word='apk'),
  WordNode(pos=(436, 439), word='add'),
  WordNode(pos=(440, 450), word='--no-cache'),
  WordNode(pos=(451, 460), word='--virtual'),
  WordNode(pos=(461, 472), word='.build-deps'),
  WordNode(pos=(475, 480), word='bison'),
  WordNode(pos=(483, 492), word='coreutils'),
  WordNode(pos=(495, 503), word='dpkg-dev'),
  WordNode(pos=(504, 508), word='dpkg'),
  WordNode(pos=(511, 515), word='flex'),
  WordNode(pos=(518, 521), word='gcc'),
  WordNode(pos=(524, 532), word='libc-dev'),
  WordNode(pos=(535, 546), word='libedit-dev'),
  WordNode(pos=(549, 560), word='libxml2-dev'),
  WordNode(pos=(563, 574), word='libxslt-dev'),
  WordNode(pos=(577, 590), word='linux-headers'),
  WordNode(pos=(593, 597), word='make'),
  WordNode(pos=(600, 611), word='openssl-dev'),
  WordNode(pos=(614, 624), word='perl-utils'),
  WordNode(pos=(627, 639), word='perl-ipc-run'),
  WordNode(pos=(642, 656), word='util-linux-dev'),
  WordNode(pos=(659, 667), word='zlib-dev'),
  WordNode(pos=(670, 677), word='icu-dev'),
])


7683) cd /usr/src/postgresql

CommandNode(pos=(683, 705), parts=[
  WordNode(pos=(683, 685), word='cd'),
  WordNode(pos=(686, 705), word='/usr/src/postgresql'),
])


7684) awk '$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\"/tmp\"" { $3 = "\"/var/run/postgresql\""; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new

CommandNode(pos=(710, 909), parts=[
  WordNode(pos=(710, 713), word='awk'),
  WordNode(pos=(714, 841), word='$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR" && $3 == "\\"/tmp\\"" { $3 = "\\"/var/run/postgresql\\""; print; next } { print }'),
  WordNode(pos=(842, 872), word='src/include/pg_config_manual.h'),
  RedirectNode(output=
    WordNode(pos=(875, 909), word='src/include/pg_config_manual.h.new'), pos=(873, 909), type='>'),
])


7685) grep '/var/run/postgresql' src/include/pg_config_manual.h.new

CommandNode(pos=(914, 975), parts=[
  WordNode(pos=(914, 918), word='grep'),
  WordNode(pos=(919, 940), word='/var/run/postgresql'),
  WordNode(pos=(941, 975), word='src/include/pg_config_manual.h.new'),
])


7686) mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h

CommandNode(pos=(980, 1048), parts=[
  WordNode(pos=(980, 982), word='mv'),
  WordNode(pos=(983, 1017), word='src/include/pg_config_manual.h.new'),
  WordNode(pos=(1018, 1048), word='src/include/pg_config_manual.h'),
])


7687) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


7688) wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1115, 1252), parts=[
  WordNode(pos=(1115, 1119), word='wget'),
  WordNode(pos=(1120, 1122), word='-O'),
  WordNode(pos=(1123, 1142), word='config/config.guess'),
  WordNode(pos=(1143, 1252), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


7689) wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'

CommandNode(pos=(1257, 1390), parts=[
  WordNode(pos=(1257, 1261), word='wget'),
  WordNode(pos=(1262, 1264), word='-O'),
  WordNode(pos=(1265, 1282), word='config/config.sub'),
  WordNode(pos=(1283, 1390), word='https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'),
])


7690) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt   --with-icu

CommandNode(pos=(1395, 1777), parts=[
  WordNode(pos=(1395, 1406), word='./configure'),
  WordNode(pos=(1409, 1427), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1418, 1426), value='gnuArch'),
  ]),
  WordNode(pos=(1430, 1456), word='--enable-integer-datetimes'),
  WordNode(pos=(1459, 1481), word='--enable-thread-safety'),
  WordNode(pos=(1484, 1502), word='--enable-tap-tests'),
  WordNode(pos=(1505, 1520), word='--disable-rpath'),
  WordNode(pos=(1523, 1539), word='--with-uuid=e2fs'),
  WordNode(pos=(1542, 1555), word='--with-gnu-ld'),
  WordNode(pos=(1558, 1576), word='--with-pgport=5432'),
  WordNode(pos=(1579, 1619), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1622, 1641), word='--prefix=/usr/local'),
  WordNode(pos=(1644, 1678), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1681, 1712), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1717, 1731), word='--with-openssl'),
  WordNode(pos=(1734, 1747), word='--with-libxml'),
  WordNode(pos=(1750, 1764), word='--with-libxslt'),
  WordNode(pos=(1767, 1777), word='--with-icu'),
])


7691) make -j "$(nproc)" world

CommandNode(pos=(1782, 1806), parts=[
  WordNode(pos=(1782, 1786), word='make'),
  WordNode(pos=(1787, 1789), word='-j'),
  WordNode(pos=(1790, 1800), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1793, 1798), parts=[
        WordNode(pos=(1793, 1798), word='nproc'),
      ]), pos=(1791, 1799)),
  ]),
  WordNode(pos=(1801, 1806), word='world'),
])


7692) make install-world

CommandNode(pos=(1811, 1829), parts=[
  WordNode(pos=(1811, 1815), word='make'),
  WordNode(pos=(1816, 1829), word='install-world'),
])


7693) make -C contrib install

CommandNode(pos=(1834, 1857), parts=[
  WordNode(pos=(1834, 1838), word='make'),
  WordNode(pos=(1839, 1841), word='-C'),
  WordNode(pos=(1842, 1849), word='contrib'),
  WordNode(pos=(1850, 1857), word='install'),
])


7694) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


7695) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2065, 2150), parts=[
  WordNode(pos=(2065, 2068), word='apk'),
  WordNode(pos=(2069, 2072), word='add'),
  WordNode(pos=(2073, 2083), word='--no-cache'),
  WordNode(pos=(2084, 2093), word='--virtual'),
  WordNode(pos=(2094, 2113), word='.postgresql-rundeps'),
  WordNode(pos=(2116, 2124), word='$runDeps', parts=[
    ParameterNode(pos=(2116, 2124), value='runDeps'),
  ]),
  WordNode(pos=(2127, 2131), word='bash'),
  WordNode(pos=(2134, 2141), word='su-exec'),
  WordNode(pos=(2144, 2150), word='tzdata'),
])


7696) apk del .fetch-deps .build-deps

CommandNode(pos=(2155, 2186), parts=[
  WordNode(pos=(2155, 2158), word='apk'),
  WordNode(pos=(2159, 2162), word='del'),
  WordNode(pos=(2163, 2174), word='.fetch-deps'),
  WordNode(pos=(2175, 2186), word='.build-deps'),
])


7697) cd /

CommandNode(pos=(2191, 2195), parts=[
  WordNode(pos=(2191, 2193), word='cd'),
  WordNode(pos=(2194, 2195), word='/'),
])


7698) rm -rf   /usr/src/postgresql   /usr/local/share/doc   /usr/local/share/man

CommandNode(pos=(2200, 2274), parts=[
  WordNode(pos=(2200, 2202), word='rm'),
  WordNode(pos=(2203, 2206), word='-rf'),
  WordNode(pos=(2209, 2228), word='/usr/src/postgresql'),
  WordNode(pos=(2231, 2251), word='/usr/local/share/doc'),
  WordNode(pos=(2254, 2274), word='/usr/local/share/man'),
])


7699) find /usr/local -name '*.a' -delete

CommandNode(pos=(2279, 2314), parts=[
  WordNode(pos=(2279, 2283), word='find'),
  WordNode(pos=(2284, 2294), word='/usr/local'),
  WordNode(pos=(2295, 2300), word='-name'),
  WordNode(pos=(2301, 2306), word='*.a'),
  WordNode(pos=(2307, 2314), word='-delete'),
])


7700) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample

CommandNode(pos=(0, 106), parts=[
  WordNode(pos=(0, 3), word='sed'),
  WordNode(pos=(4, 7), word='-ri'),
  WordNode(pos=(8, 55), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(56, 106), word='/usr/local/share/postgresql/postgresql.conf.sample'),
])


7701) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


7702) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


7703) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


7704) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


7705) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


7706) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


7707) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


7708) groupadd -r mongodb

CommandNode(pos=(0, 19), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 19), word='mongodb'),
])


7709) useradd -r -g mongodb mongodb

CommandNode(pos=(23, 52), parts=[
  WordNode(pos=(23, 30), word='useradd'),
  WordNode(pos=(31, 33), word='-r'),
  WordNode(pos=(34, 36), word='-g'),
  WordNode(pos=(37, 44), word='mongodb'),
  WordNode(pos=(45, 52), word='mongodb'),
])


7710) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7711) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7712) apt-get install -y --no-install-recommends   ca-certificates   jq   numactl

CommandNode(pos=(28, 103), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 93), word='jq'),
  WordNode(pos=(96, 103), word='numactl'),
])


7713) command -v ps > /dev/null

CommandNode(pos=(113, 138), parts=[
  WordNode(pos=(113, 120), word='command'),
  WordNode(pos=(121, 123), word='-v'),
  WordNode(pos=(124, 126), word='ps'),
  RedirectNode(output=
    WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
])


7714) apt-get install -y --no-install-recommends procps

CommandNode(pos=(147, 196), parts=[
  WordNode(pos=(147, 154), word='apt-get'),
  WordNode(pos=(155, 162), word='install'),
  WordNode(pos=(163, 165), word='-y'),
  WordNode(pos=(166, 189), word='--no-install-recommends'),
  WordNode(pos=(190, 196), word='procps'),
])


7715) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 206), word='rm'),
  WordNode(pos=(207, 210), word='-rf'),
  WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
])


7716) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7717) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7718) apt-get install -y --no-install-recommends   wget

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='wget'),
])


7719) command -v gpg > /dev/null

CommandNode(pos=(87, 113), parts=[
  WordNode(pos=(87, 94), word='command'),
  WordNode(pos=(95, 97), word='-v'),
  WordNode(pos=(98, 101), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
])


7720) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(122, 178), parts=[
  WordNode(pos=(122, 129), word='apt-get'),
  WordNode(pos=(130, 137), word='install'),
  WordNode(pos=(138, 140), word='-y'),
  WordNode(pos=(141, 164), word='--no-install-recommends'),
  WordNode(pos=(165, 170), word='gnupg'),
  WordNode(pos=(171, 178), word='dirmngr'),
])


7721) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(186, 213), parts=[
  WordNode(pos=(186, 188), word='rm'),
  WordNode(pos=(189, 192), word='-rf'),
  WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
])


7722) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


7723) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


7724) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


7725) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


7726) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(547, 650), parts=[
  WordNode(pos=(547, 550), word='gpg'),
  WordNode(pos=(551, 558), word='--batch'),
  WordNode(pos=(559, 570), word='--keyserver'),
  WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(598, 609), word='--recv-keys'),
  WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


7727) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(653, 717), parts=[
  WordNode(pos=(653, 656), word='gpg'),
  WordNode(pos=(657, 664), word='--batch'),
  WordNode(pos=(665, 673), word='--verify'),
  WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
])


7728) command -v gpgconf

CommandNode(pos=(720, 738), parts=[
  WordNode(pos=(720, 727), word='command'),
  WordNode(pos=(728, 730), word='-v'),
  WordNode(pos=(731, 738), word='gpgconf'),
])


7729) gpgconf --kill all

CommandNode(pos=(742, 760), parts=[
  WordNode(pos=(742, 749), word='gpgconf'),
  WordNode(pos=(750, 756), word='--kill'),
  WordNode(pos=(757, 760), word='all'),
])


7730) :

CommandNode(pos=(764, 765), parts=[
  WordNode(pos=(764, 765), word=':'),
])


7731) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


7732) chmod +x /usr/local/bin/gosu

CommandNode(pos=(813, 841), parts=[
  WordNode(pos=(813, 818), word='chmod'),
  WordNode(pos=(819, 821), word='+x'),
  WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
])


7733) gosu --version

CommandNode(pos=(844, 858), parts=[
  WordNode(pos=(844, 848), word='gosu'),
  WordNode(pos=(849, 858), word='--version'),
])


7734) gosu nobody true

CommandNode(pos=(861, 877), parts=[
  WordNode(pos=(861, 865), word='gosu'),
  WordNode(pos=(866, 872), word='nobody'),
  WordNode(pos=(873, 877), word='true'),
])


7735) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


7736) apt-get purge -y --auto-remove wget

CommandNode(pos=(978, 1013), parts=[
  WordNode(pos=(978, 985), word='apt-get'),
  WordNode(pos=(986, 991), word='purge'),
  WordNode(pos=(992, 994), word='-y'),
  WordNode(pos=(995, 1008), word='--auto-remove'),
  WordNode(pos=(1009, 1013), word='wget'),
])


7737) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


7738) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7739) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


7740) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


7741) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


7742) command -v gpgconf

CommandNode(pos=(220, 238), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
])


7743) gpgconf --kill all

CommandNode(pos=(242, 260), parts=[
  WordNode(pos=(242, 249), word='gpgconf'),
  WordNode(pos=(250, 256), word='--kill'),
  WordNode(pos=(257, 260), word='all'),
])


7744) :

CommandNode(pos=(264, 265), parts=[
  WordNode(pos=(264, 265), word=':'),
])


7745) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


7746) apt-key list

CommandNode(pos=(289, 301), parts=[
  WordNode(pos=(289, 296), word='apt-key'),
  WordNode(pos=(297, 301), word='list'),
])


7747) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


7748) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


7749) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


7750) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7751) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


7752) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(249, 276), parts=[
  WordNode(pos=(249, 251), word='rm'),
  WordNode(pos=(252, 255), word='-rf'),
  WordNode(pos=(256, 276), word='/var/lib/apt/lists/*'),
])


7753) rm -rf /var/lib/mongodb

CommandNode(pos=(281, 304), parts=[
  WordNode(pos=(281, 283), word='rm'),
  WordNode(pos=(284, 287), word='-rf'),
  WordNode(pos=(288, 304), word='/var/lib/mongodb'),
])


7754) mv /etc/mongod.conf /etc/mongod.conf.orig

CommandNode(pos=(309, 350), parts=[
  WordNode(pos=(309, 311), word='mv'),
  WordNode(pos=(312, 328), word='/etc/mongod.conf'),
  WordNode(pos=(329, 350), word='/etc/mongod.conf.orig'),
])


7755) mkdir -p /data/db /data/configdb

CommandNode(pos=(0, 32), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 17), word='/data/db'),
  WordNode(pos=(18, 32), word='/data/configdb'),
])


7756) chown -R mongodb:mongodb /data/db /data/configdb

CommandNode(pos=(37, 85), parts=[
  WordNode(pos=(37, 42), word='chown'),
  WordNode(pos=(43, 45), word='-R'),
  WordNode(pos=(46, 61), word='mongodb:mongodb'),
  WordNode(pos=(62, 70), word='/data/db'),
  WordNode(pos=(71, 85), word='/data/configdb'),
])


7757) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


7758) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7759) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


7760) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


7761) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


7762) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7763) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


7764) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


7765) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7766) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


7767) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


7768) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


7769) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


7770) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


7771) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


7772) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


7773) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


7774) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


7775) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


7776) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


7777) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


7778) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


7779) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


7780) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


7781) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


7782) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


7783) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


7784) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


7785) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


7786) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


7787) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


7788) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


7789) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


7790) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


7791) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


7792) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


7793) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


7794) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


7795) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


7796) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7797) apt-get install -y --no-install-recommends   tk-dev   uuid-dev

CommandNode(pos=(18, 80), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 69), word='tk-dev'),
  WordNode(pos=(72, 80), word='uuid-dev'),
])


7798) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(85, 112), parts=[
  WordNode(pos=(85, 87), word='rm'),
  WordNode(pos=(88, 91), word='-rf'),
  WordNode(pos=(92, 112), word='/var/lib/apt/lists/*'),
])


7799) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7800) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


7801) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


7802) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


7803) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


7804) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


7805) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


7806) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


7807) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


7808) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


7809) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


7810) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


7811) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


7812) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


7813) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


7814) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


7815) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


7816) make install

CommandNode(pos=(920, 932), parts=[
  WordNode(pos=(920, 924), word='make'),
  WordNode(pos=(925, 932), word='install'),
])


7817) ldconfig

CommandNode(pos=(937, 945), parts=[
  WordNode(pos=(937, 945), word='ldconfig'),
])


7818) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(951, 1118), parts=[
  WordNode(pos=(951, 955), word='find'),
  WordNode(pos=(956, 966), word='/usr/local'),
  WordNode(pos=(967, 973), word='-depth'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(982, 984), word='('),
  WordNode(pos=(985, 990), word='-type'),
  WordNode(pos=(991, 992), word='d'),
  WordNode(pos=(993, 995), word='-a'),
  WordNode(pos=(996, 998), word='('),
  WordNode(pos=(999, 1004), word='-name'),
  WordNode(pos=(1005, 1009), word='test'),
  WordNode(pos=(1010, 1012), word='-o'),
  WordNode(pos=(1013, 1018), word='-name'),
  WordNode(pos=(1019, 1024), word='tests'),
  WordNode(pos=(1025, 1027), word=')'),
  WordNode(pos=(1028, 1030), word=')'),
  WordNode(pos=(1034, 1036), word='-o'),
  WordNode(pos=(1040, 1042), word='('),
  WordNode(pos=(1043, 1048), word='-type'),
  WordNode(pos=(1049, 1050), word='f'),
  WordNode(pos=(1051, 1053), word='-a'),
  WordNode(pos=(1054, 1056), word='('),
  WordNode(pos=(1057, 1062), word='-name'),
  WordNode(pos=(1063, 1070), word='*.pyc'),
  WordNode(pos=(1071, 1073), word='-o'),
  WordNode(pos=(1074, 1079), word='-name'),
  WordNode(pos=(1080, 1087), word='*.pyo'),
  WordNode(pos=(1088, 1090), word=')'),
  WordNode(pos=(1091, 1093), word=')'),
  WordNode(pos=(1096, 1098), word=')'),
  WordNode(pos=(1099, 1104), word='-exec'),
  WordNode(pos=(1105, 1107), word='rm'),
  WordNode(pos=(1108, 1111), word='-rf'),
  WordNode(pos=(1112, 1116), word='{}'),
  WordNode(pos=(1117, 1118), word='+'),
])


7819) rm -rf /usr/src/python

CommandNode(pos=(1123, 1145), parts=[
  WordNode(pos=(1123, 1125), word='rm'),
  WordNode(pos=(1126, 1129), word='-rf'),
  WordNode(pos=(1130, 1145), word='/usr/src/python'),
])


7820) python3 --version

CommandNode(pos=(1151, 1168), parts=[
  WordNode(pos=(1151, 1158), word='python3'),
  WordNode(pos=(1159, 1168), word='--version'),
])


7821) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


7822) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


7823) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


7824) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


7825) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


7826) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7827) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


7828) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


7829) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


7830) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


7831) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


7832) mkdir -p /usr/src/app

CommandNode(pos=(0, 21), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 21), word='/usr/src/app'),
])


7833) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7834) apt-get install -y   gcc   gettext   mysql-client libmysqlclient-dev   postgresql-client libpq-dev   sqlite3  --no-install-recommends

CommandNode(pos=(18, 151), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 42), word='gcc'),
  WordNode(pos=(45, 52), word='gettext'),
  WordNode(pos=(55, 67), word='mysql-client'),
  WordNode(pos=(68, 86), word='libmysqlclient-dev'),
  WordNode(pos=(89, 106), word='postgresql-client'),
  WordNode(pos=(107, 116), word='libpq-dev'),
  WordNode(pos=(119, 126), word='sqlite3'),
  WordNode(pos=(128, 151), word='--no-install-recommends'),
])


7835) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(155, 182), parts=[
  WordNode(pos=(155, 157), word='rm'),
  WordNode(pos=(158, 161), word='-rf'),
  WordNode(pos=(162, 182), word='/var/lib/apt/lists/*'),
])


7836) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


7837) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


7838) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


7839) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


7840) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


7841) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


7842) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


7843) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


7844) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7845) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


7846) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


7847) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


7848) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


7849) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


7850) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


7851) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


7852) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


7853) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


7854) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


7855) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


7856) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


7857) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


7858) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7859) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7860) apt-get install -y --no-install-recommends   ca-certificates   wget   git

CommandNode(pos=(28, 101), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 95), word='wget'),
  WordNode(pos=(98, 101), word='git'),
])


7861) suite="$(awk '$1 == "deb" && $4 == "main" && $3 !~ /[\/-]/ { print $3; exit }' /etc/apt/sources.list)"

CommandNode(pos=(106, 208), parts=[
  AssignmentNode(pos=(106, 208), word='suite=$(awk \'$1 == "deb" && $4 == "main" && $3 !~ /[\\/-]/ { print $3; exit }\' /etc/apt/sources.list)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(115, 206), parts=[
        WordNode(pos=(115, 118), word='awk'),
        WordNode(pos=(119, 184), word='$1 == "deb" && $4 == "main" && $3 !~ /[\\/-]/ { print $3; exit }'),
        WordNode(pos=(185, 206), word='/etc/apt/sources.list'),
      ]), pos=(113, 207)),
  ]),
])


7862) echo "deb http://deb.debian.org/debian $suite-backports main" > /etc/apt/sources.list.d/backports.list

CommandNode(pos=(211, 313), parts=[
  WordNode(pos=(211, 215), word='echo'),
  WordNode(pos=(216, 272), word='deb http://deb.debian.org/debian $suite-backports main', parts=[
    ParameterNode(pos=(250, 256), value='suite'),
  ]),
  RedirectNode(output=
    WordNode(pos=(275, 313), word='/etc/apt/sources.list.d/backports.list'), pos=(273, 313), type='>'),
])


7863) apt-get update

CommandNode(pos=(316, 330), parts=[
  WordNode(pos=(316, 323), word='apt-get'),
  WordNode(pos=(324, 330), word='update'),
])


7864) apt-get install -y --no-install-recommends -t "$suite-backports"   golang-go

CommandNode(pos=(333, 409), parts=[
  WordNode(pos=(333, 340), word='apt-get'),
  WordNode(pos=(341, 348), word='install'),
  WordNode(pos=(349, 351), word='-y'),
  WordNode(pos=(352, 375), word='--no-install-recommends'),
  WordNode(pos=(376, 378), word='-t'),
  WordNode(pos=(379, 397), word='$suite-backports', parts=[
    ParameterNode(pos=(380, 386), value='suite'),
  ]),
  WordNode(pos=(400, 409), word='golang-go'),
])


7865) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(414, 441), parts=[
  WordNode(pos=(414, 416), word='rm'),
  WordNode(pos=(417, 420), word='-rf'),
  WordNode(pos=(421, 441), word='/var/lib/apt/lists/*'),
])


7866) mkdir -p "$BASHBREW_CACHE"

CommandNode(pos=(0, 26), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 26), word='$BASHBREW_CACHE', parts=[
    ParameterNode(pos=(10, 25), value='BASHBREW_CACHE'),
  ]),
])


7867) chmod 1777 "$BASHBREW_CACHE"

CommandNode(pos=(31, 59), parts=[
  WordNode(pos=(31, 36), word='chmod'),
  WordNode(pos=(37, 41), word='1777'),
  WordNode(pos=(42, 59), word='$BASHBREW_CACHE', parts=[
    ParameterNode(pos=(43, 58), value='BASHBREW_CACHE'),
  ]),
])


7868) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7869) CGO_ENABLED=0 ./bashbrew/bashbrew.sh --help > /dev/null

CommandNode(pos=(11, 66), parts=[
  AssignmentNode(pos=(11, 24), word='CGO_ENABLED=0'),
  WordNode(pos=(25, 47), word='./bashbrew/bashbrew.sh'),
  WordNode(pos=(48, 54), word='--help'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


7870) cp -vL bashbrew/go/bin/bashbrew /usr/local/bin/

CommandNode(pos=(69, 116), parts=[
  WordNode(pos=(69, 71), word='cp'),
  WordNode(pos=(72, 75), word='-vL'),
  WordNode(pos=(76, 100), word='bashbrew/go/bin/bashbrew'),
  WordNode(pos=(101, 116), word='/usr/local/bin/'),
])


7871) ln -s "$PWD/bashbrew/bashbrew-entrypoint.sh" /usr/local/bin/bashbrew-entrypoint.sh

CommandNode(pos=(0, 82), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 44), word='$PWD/bashbrew/bashbrew-entrypoint.sh', parts=[
    ParameterNode(pos=(7, 11), value='PWD'),
  ]),
  WordNode(pos=(45, 82), word='/usr/local/bin/bashbrew-entrypoint.sh'),
])


7872) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


7873) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7874) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


7875) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


7876) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


7877) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


7878) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


7879) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


7880) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


7881) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


7882) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


7883) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


7884) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


7885) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


7886) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


7887) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


7888) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


7889) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


7890) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


7891) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


7892) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


7893) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


7894) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


7895) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


7896) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


7897) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


7898) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


7899) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


7900) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


7901) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


7902) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


7903) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


7904) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


7905) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


7906) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


7907) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


7908) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


7909) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


7910) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


7911) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


7912) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


7913) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


7914) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


7915) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


7916) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


7917) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


7918) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


7919) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


7920) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


7921) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


7922) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


7923) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


7924) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


7925) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


7926) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


7927) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


7928) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


7929) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


7930) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


7931) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


7932) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


7933) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


7934) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


7935) groupadd -r mongodb

CommandNode(pos=(0, 19), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 19), word='mongodb'),
])


7936) useradd -r -g mongodb mongodb

CommandNode(pos=(23, 52), parts=[
  WordNode(pos=(23, 30), word='useradd'),
  WordNode(pos=(31, 33), word='-r'),
  WordNode(pos=(34, 36), word='-g'),
  WordNode(pos=(37, 44), word='mongodb'),
  WordNode(pos=(45, 52), word='mongodb'),
])


7937) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


7938) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7939) apt-get install -y --no-install-recommends   ca-certificates   jq   numactl

CommandNode(pos=(28, 103), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 93), word='jq'),
  WordNode(pos=(96, 103), word='numactl'),
])


7940) command -v ps > /dev/null

CommandNode(pos=(113, 138), parts=[
  WordNode(pos=(113, 120), word='command'),
  WordNode(pos=(121, 123), word='-v'),
  WordNode(pos=(124, 126), word='ps'),
  RedirectNode(output=
    WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
])


7941) apt-get install -y --no-install-recommends procps

CommandNode(pos=(147, 196), parts=[
  WordNode(pos=(147, 154), word='apt-get'),
  WordNode(pos=(155, 162), word='install'),
  WordNode(pos=(163, 165), word='-y'),
  WordNode(pos=(166, 189), word='--no-install-recommends'),
  WordNode(pos=(190, 196), word='procps'),
])


7942) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 206), word='rm'),
  WordNode(pos=(207, 210), word='-rf'),
  WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
])


7943) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7944) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7945) apt-get install -y --no-install-recommends   wget

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='wget'),
])


7946) command -v gpg > /dev/null

CommandNode(pos=(87, 113), parts=[
  WordNode(pos=(87, 94), word='command'),
  WordNode(pos=(95, 97), word='-v'),
  WordNode(pos=(98, 101), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
])


7947) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(122, 178), parts=[
  WordNode(pos=(122, 129), word='apt-get'),
  WordNode(pos=(130, 137), word='install'),
  WordNode(pos=(138, 140), word='-y'),
  WordNode(pos=(141, 164), word='--no-install-recommends'),
  WordNode(pos=(165, 170), word='gnupg'),
  WordNode(pos=(171, 178), word='dirmngr'),
])


7948) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(186, 213), parts=[
  WordNode(pos=(186, 188), word='rm'),
  WordNode(pos=(189, 192), word='-rf'),
  WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
])


7949) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


7950) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


7951) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


7952) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


7953) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(547, 650), parts=[
  WordNode(pos=(547, 550), word='gpg'),
  WordNode(pos=(551, 558), word='--batch'),
  WordNode(pos=(559, 570), word='--keyserver'),
  WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(598, 609), word='--recv-keys'),
  WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


7954) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(653, 717), parts=[
  WordNode(pos=(653, 656), word='gpg'),
  WordNode(pos=(657, 664), word='--batch'),
  WordNode(pos=(665, 673), word='--verify'),
  WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
])


7955) command -v gpgconf

CommandNode(pos=(720, 738), parts=[
  WordNode(pos=(720, 727), word='command'),
  WordNode(pos=(728, 730), word='-v'),
  WordNode(pos=(731, 738), word='gpgconf'),
])


7956) gpgconf --kill all

CommandNode(pos=(742, 760), parts=[
  WordNode(pos=(742, 749), word='gpgconf'),
  WordNode(pos=(750, 756), word='--kill'),
  WordNode(pos=(757, 760), word='all'),
])


7957) :

CommandNode(pos=(764, 765), parts=[
  WordNode(pos=(764, 765), word=':'),
])


7958) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


7959) chmod +x /usr/local/bin/gosu

CommandNode(pos=(813, 841), parts=[
  WordNode(pos=(813, 818), word='chmod'),
  WordNode(pos=(819, 821), word='+x'),
  WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
])


7960) gosu --version

CommandNode(pos=(844, 858), parts=[
  WordNode(pos=(844, 848), word='gosu'),
  WordNode(pos=(849, 858), word='--version'),
])


7961) gosu nobody true

CommandNode(pos=(861, 877), parts=[
  WordNode(pos=(861, 865), word='gosu'),
  WordNode(pos=(866, 872), word='nobody'),
  WordNode(pos=(873, 877), word='true'),
])


7962) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


7963) apt-get purge -y --auto-remove wget

CommandNode(pos=(978, 1013), parts=[
  WordNode(pos=(978, 985), word='apt-get'),
  WordNode(pos=(986, 991), word='purge'),
  WordNode(pos=(992, 994), word='-y'),
  WordNode(pos=(995, 1008), word='--auto-remove'),
  WordNode(pos=(1009, 1013), word='wget'),
])


7964) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


7965) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7966) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


7967) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


7968) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


7969) command -v gpgconf

CommandNode(pos=(220, 238), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
])


7970) gpgconf --kill all

CommandNode(pos=(242, 260), parts=[
  WordNode(pos=(242, 249), word='gpgconf'),
  WordNode(pos=(250, 256), word='--kill'),
  WordNode(pos=(257, 260), word='all'),
])


7971) :

CommandNode(pos=(264, 265), parts=[
  WordNode(pos=(264, 265), word=':'),
])


7972) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


7973) apt-key list

CommandNode(pos=(289, 301), parts=[
  WordNode(pos=(289, 296), word='apt-key'),
  WordNode(pos=(297, 301), word='list'),
])


7974) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


7975) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


7976) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


7977) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


7978) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


7979) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(249, 276), parts=[
  WordNode(pos=(249, 251), word='rm'),
  WordNode(pos=(252, 255), word='-rf'),
  WordNode(pos=(256, 276), word='/var/lib/apt/lists/*'),
])


7980) rm -rf /var/lib/mongodb

CommandNode(pos=(281, 304), parts=[
  WordNode(pos=(281, 283), word='rm'),
  WordNode(pos=(284, 287), word='-rf'),
  WordNode(pos=(288, 304), word='/var/lib/mongodb'),
])


7981) mv /etc/mongod.conf /etc/mongod.conf.orig

CommandNode(pos=(309, 350), parts=[
  WordNode(pos=(309, 311), word='mv'),
  WordNode(pos=(312, 328), word='/etc/mongod.conf'),
  WordNode(pos=(329, 350), word='/etc/mongod.conf.orig'),
])


7982) mkdir -p /data/db /data/configdb

CommandNode(pos=(0, 32), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 17), word='/data/db'),
  WordNode(pos=(18, 32), word='/data/configdb'),
])


7983) chown -R mongodb:mongodb /data/db /data/configdb

CommandNode(pos=(37, 85), parts=[
  WordNode(pos=(37, 42), word='chown'),
  WordNode(pos=(43, 45), word='-R'),
  WordNode(pos=(46, 61), word='mongodb:mongodb'),
  WordNode(pos=(62, 70), word='/data/db'),
  WordNode(pos=(71, 85), word='/data/configdb'),
])


7984) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


7985) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


7986) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


7987) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


7988) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


7989) apt-get update

CommandNode(pos=(72, 86), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 86), word='update'),
])


7990) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


7991) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(149, 176), parts=[
  WordNode(pos=(149, 151), word='rm'),
  WordNode(pos=(152, 155), word='-rf'),
  WordNode(pos=(156, 176), word='/var/lib/apt/lists/*'),
])


7992) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


7993) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


7994) sha256sum -c -

CommandNode(pos=(333, 347), parts=[
  WordNode(pos=(333, 342), word='sha256sum'),
  WordNode(pos=(343, 345), word='-c'),
  WordNode(pos=(346, 347), word='-'),
])


7995) mkdir -p /usr/src/ruby

CommandNode(pos=(353, 375), parts=[
  WordNode(pos=(353, 358), word='mkdir'),
  WordNode(pos=(359, 361), word='-p'),
  WordNode(pos=(362, 375), word='/usr/src/ruby'),
])


7996) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(380, 438), parts=[
  WordNode(pos=(380, 383), word='tar'),
  WordNode(pos=(384, 388), word='-xJf'),
  WordNode(pos=(389, 400), word='ruby.tar.xz'),
  WordNode(pos=(401, 403), word='-C'),
  WordNode(pos=(404, 417), word='/usr/src/ruby'),
  WordNode(pos=(418, 438), word='--strip-components=1'),
])


7997) rm ruby.tar.xz

CommandNode(pos=(443, 457), parts=[
  WordNode(pos=(443, 445), word='rm'),
  WordNode(pos=(446, 457), word='ruby.tar.xz'),
])


7998) cd /usr/src/ruby

CommandNode(pos=(463, 479), parts=[
  WordNode(pos=(463, 465), word='cd'),
  WordNode(pos=(466, 479), word='/usr/src/ruby'),
])


7999) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(489, 523), parts=[
  WordNode(pos=(489, 493), word='echo'),
  WordNode(pos=(494, 523), word='#define ENABLE_PATH_CHECK 0'),
])


8000) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


8001) cat file.c

CommandNode(pos=(535, 545), parts=[
  WordNode(pos=(535, 538), word='cat'),
  WordNode(pos=(539, 545), word='file.c'),
])


8002) mv file.c.new file.c

CommandNode(pos=(567, 587), parts=[
  WordNode(pos=(567, 569), word='mv'),
  WordNode(pos=(570, 580), word='file.c.new'),
  WordNode(pos=(581, 587), word='file.c'),
])


8003) autoconf

CommandNode(pos=(593, 601), parts=[
  WordNode(pos=(593, 601), word='autoconf'),
])


8004) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


8005) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


8006) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


8007) make install

CommandNode(pos=(770, 782), parts=[
  WordNode(pos=(770, 774), word='make'),
  WordNode(pos=(775, 782), word='install'),
])


8008) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


8009) cd /

CommandNode(pos=(834, 838), parts=[
  WordNode(pos=(834, 836), word='cd'),
  WordNode(pos=(837, 838), word='/'),
])


8010) rm -r /usr/src/ruby

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 848), word='-r'),
  WordNode(pos=(849, 862), word='/usr/src/ruby'),
])


8011) ruby --version

CommandNode(pos=(867, 881), parts=[
  WordNode(pos=(867, 871), word='ruby'),
  WordNode(pos=(872, 881), word='--version'),
])


8012) gem --version

CommandNode(pos=(885, 898), parts=[
  WordNode(pos=(885, 888), word='gem'),
  WordNode(pos=(889, 898), word='--version'),
])


8013) bundle --version

CommandNode(pos=(902, 918), parts=[
  WordNode(pos=(902, 908), word='bundle'),
  WordNode(pos=(909, 918), word='--version'),
])


8014) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


8015) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


8016) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


8017) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


8018) apt-get update

CommandNode(pos=(54, 68), parts=[
  WordNode(pos=(54, 61), word='apt-get'),
  WordNode(pos=(62, 68), word='update'),
])


8019) apt-get install -y --no-install-recommends   ca-certificates   gcc   libc6-dev   liblua5.3-dev   libpcre2-dev   libssl-dev   make   wget   zlib1g-dev

CommandNode(pos=(72, 221), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 87), word='install'),
  WordNode(pos=(88, 90), word='-y'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 138), word='gcc'),
  WordNode(pos=(141, 150), word='libc6-dev'),
  WordNode(pos=(153, 166), word='liblua5.3-dev'),
  WordNode(pos=(169, 181), word='libpcre2-dev'),
  WordNode(pos=(184, 194), word='libssl-dev'),
  WordNode(pos=(197, 201), word='make'),
  WordNode(pos=(204, 208), word='wget'),
  WordNode(pos=(211, 221), word='zlib1g-dev'),
])


8020) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(226, 253), parts=[
  WordNode(pos=(226, 228), word='rm'),
  WordNode(pos=(229, 232), word='-rf'),
  WordNode(pos=(233, 253), word='/var/lib/apt/lists/*'),
])


8021) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


8022) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


8023) sha256sum -c

CommandNode(pos=(342, 354), parts=[
  WordNode(pos=(342, 351), word='sha256sum'),
  WordNode(pos=(352, 354), word='-c'),
])


8024) mkdir -p /usr/src/haproxy

CommandNode(pos=(359, 384), parts=[
  WordNode(pos=(359, 364), word='mkdir'),
  WordNode(pos=(365, 367), word='-p'),
  WordNode(pos=(368, 384), word='/usr/src/haproxy'),
])


8025) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(389, 453), parts=[
  WordNode(pos=(389, 392), word='tar'),
  WordNode(pos=(393, 397), word='-xzf'),
  WordNode(pos=(398, 412), word='haproxy.tar.gz'),
  WordNode(pos=(413, 415), word='-C'),
  WordNode(pos=(416, 432), word='/usr/src/haproxy'),
  WordNode(pos=(433, 453), word='--strip-components=1'),
])


8026) rm haproxy.tar.gz

CommandNode(pos=(458, 475), parts=[
  WordNode(pos=(458, 460), word='rm'),
  WordNode(pos=(461, 475), word='haproxy.tar.gz'),
])


8027) makeOpts='   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 634), parts=[
  AssignmentNode(pos=(481, 634), word='makeOpts=   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


8028) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(639, 691), parts=[
  WordNode(pos=(639, 643), word='make'),
  WordNode(pos=(644, 646), word='-C'),
  WordNode(pos=(647, 663), word='/usr/src/haproxy'),
  WordNode(pos=(664, 666), word='-j'),
  WordNode(pos=(667, 677), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(670, 675), parts=[
        WordNode(pos=(670, 675), word='nproc'),
      ]), pos=(668, 676)),
  ]),
  WordNode(pos=(678, 681), word='all'),
  WordNode(pos=(682, 691), word='$makeOpts', parts=[
    ParameterNode(pos=(682, 691), value='makeOpts'),
  ]),
])


8029) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(696, 742), parts=[
  WordNode(pos=(696, 700), word='make'),
  WordNode(pos=(701, 703), word='-C'),
  WordNode(pos=(704, 720), word='/usr/src/haproxy'),
  WordNode(pos=(721, 732), word='install-bin'),
  WordNode(pos=(733, 742), word='$makeOpts', parts=[
    ParameterNode(pos=(733, 742), value='makeOpts'),
  ]),
])


8030) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(748, 779), parts=[
  WordNode(pos=(748, 753), word='mkdir'),
  WordNode(pos=(754, 756), word='-p'),
  WordNode(pos=(757, 779), word='/usr/local/etc/haproxy'),
])


8031) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(784, 856), parts=[
  WordNode(pos=(784, 786), word='cp'),
  WordNode(pos=(787, 789), word='-R'),
  WordNode(pos=(790, 826), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(827, 856), word='/usr/local/etc/haproxy/errors'),
])


8032) rm -rf /usr/src/haproxy

CommandNode(pos=(861, 884), parts=[
  WordNode(pos=(861, 863), word='rm'),
  WordNode(pos=(864, 867), word='-rf'),
  WordNode(pos=(868, 884), word='/usr/src/haproxy'),
])


8033) apt-mark auto '.*' > /dev/null

CommandNode(pos=(890, 920), parts=[
  WordNode(pos=(890, 898), word='apt-mark'),
  WordNode(pos=(899, 903), word='auto'),
  WordNode(pos=(904, 908), word='.*'),
  RedirectNode(output=
    WordNode(pos=(911, 920), word='/dev/null'), pos=(909, 920), type='>'),
])


8034) [ -z "$savedAptMark" ]

CommandNode(pos=(927, 949), parts=[
  WordNode(pos=(927, 928), word='['),
  WordNode(pos=(929, 931), word='-z'),
  WordNode(pos=(932, 947), word='$savedAptMark', parts=[
    ParameterNode(pos=(933, 946), value='savedAptMark'),
  ]),
  WordNode(pos=(948, 949), word=']'),
])


8035) apt-mark manual $savedAptMark

CommandNode(pos=(953, 982), parts=[
  WordNode(pos=(953, 961), word='apt-mark'),
  WordNode(pos=(962, 968), word='manual'),
  WordNode(pos=(969, 982), word='$savedAptMark', parts=[
    ParameterNode(pos=(969, 982), value='savedAptMark'),
  ]),
])


8036) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(990, 1044), parts=[
  WordNode(pos=(990, 994), word='find'),
  WordNode(pos=(995, 1005), word='/usr/local'),
  WordNode(pos=(1006, 1011), word='-type'),
  WordNode(pos=(1012, 1013), word='f'),
  WordNode(pos=(1014, 1025), word='-executable'),
  WordNode(pos=(1026, 1031), word='-exec'),
  WordNode(pos=(1032, 1035), word='ldd'),
  WordNode(pos=(1036, 1040), word='{}'),
  WordNode(pos=(1041, 1044), word=';'),
])


8037) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1049, 1077), parts=[
  WordNode(pos=(1049, 1052), word='awk'),
  WordNode(pos=(1053, 1077), word='/=>/ { print $(NF-1) }'),
])


8038) sort -u

CommandNode(pos=(1082, 1089), parts=[
  WordNode(pos=(1082, 1086), word='sort'),
  WordNode(pos=(1087, 1089), word='-u'),
])


8039) xargs -r dpkg-query --search

CommandNode(pos=(1094, 1122), parts=[
  WordNode(pos=(1094, 1099), word='xargs'),
  WordNode(pos=(1100, 1102), word='-r'),
  WordNode(pos=(1103, 1113), word='dpkg-query'),
  WordNode(pos=(1114, 1122), word='--search'),
])


8040) cut -d: -f1

CommandNode(pos=(1127, 1138), parts=[
  WordNode(pos=(1127, 1130), word='cut'),
  WordNode(pos=(1131, 1134), word='-d:'),
  WordNode(pos=(1135, 1138), word='-f1'),
])


8041) sort -u

CommandNode(pos=(1143, 1150), parts=[
  WordNode(pos=(1143, 1147), word='sort'),
  WordNode(pos=(1148, 1150), word='-u'),
])


8042) xargs -r apt-mark manual

CommandNode(pos=(1155, 1179), parts=[
  WordNode(pos=(1155, 1160), word='xargs'),
  WordNode(pos=(1161, 1163), word='-r'),
  WordNode(pos=(1164, 1172), word='apt-mark'),
  WordNode(pos=(1173, 1179), word='manual'),
])


8043) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1184, 1260), parts=[
  WordNode(pos=(1184, 1191), word='apt-get'),
  WordNode(pos=(1192, 1197), word='purge'),
  WordNode(pos=(1198, 1200), word='-y'),
  WordNode(pos=(1201, 1214), word='--auto-remove'),
  WordNode(pos=(1215, 1217), word='-o'),
  WordNode(pos=(1218, 1260), word='APT::AutoRemove::RecommendsImportant=false'),
])


8044) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8045) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


8046) apt-get install -y --no-install-recommends   ca-certificates   curl

CommandNode(pos=(28, 95), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 95), word='curl'),
])


8047) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(100, 127), parts=[
  WordNode(pos=(100, 102), word='rm'),
  WordNode(pos=(103, 106), word='-rf'),
  WordNode(pos=(107, 127), word='/var/lib/apt/lists/*'),
])


8048) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8049) apt-get install -y --no-install-recommends   ca-certificates   libexpat1   libffi6   libgdbm3   libsqlite3-0

CommandNode(pos=(18, 126), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 90), word='libexpat1'),
  WordNode(pos=(93, 100), word='libffi6'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 126), word='libsqlite3-0'),
])


8050) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(131, 158), parts=[
  WordNode(pos=(131, 133), word='rm'),
  WordNode(pos=(134, 137), word='-rf'),
  WordNode(pos=(138, 158), word='/var/lib/apt/lists/*'),
])


8051) groupadd -r cassandra --gid=999

CommandNode(pos=(0, 31), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 21), word='cassandra'),
  WordNode(pos=(22, 31), word='--gid=999'),
])


8052) useradd -r -g cassandra --uid=999 cassandra

CommandNode(pos=(35, 78), parts=[
  WordNode(pos=(35, 42), word='useradd'),
  WordNode(pos=(43, 45), word='-r'),
  WordNode(pos=(46, 48), word='-g'),
  WordNode(pos=(49, 58), word='cassandra'),
  WordNode(pos=(59, 68), word='--uid=999'),
  WordNode(pos=(69, 78), word='cassandra'),
])


8053) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8054) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


8055) apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2

CommandNode(pos=(27, 104), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 84), word='libjemalloc1'),
  WordNode(pos=(87, 93), word='procps'),
  WordNode(pos=(96, 104), word='iproute2'),
])


8056) command -v gpg > /dev/null

CommandNode(pos=(114, 140), parts=[
  WordNode(pos=(114, 121), word='command'),
  WordNode(pos=(122, 124), word='-v'),
  WordNode(pos=(125, 128), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
])


8057) apt-get install -y --no-install-recommends    dirmngr    gnupg

CommandNode(pos=(149, 211), parts=[
  WordNode(pos=(149, 156), word='apt-get'),
  WordNode(pos=(157, 164), word='install'),
  WordNode(pos=(165, 167), word='-y'),
  WordNode(pos=(168, 191), word='--no-install-recommends'),
  WordNode(pos=(195, 202), word='dirmngr'),
  WordNode(pos=(206, 211), word='gnupg'),
])


8058) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(222, 249), parts=[
  WordNode(pos=(222, 224), word='rm'),
  WordNode(pos=(225, 228), word='-rf'),
  WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
])


8059) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


8060) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


8061) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


8062) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


8063) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


8064) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


8065) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


8066) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


8067) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


8068) command -v gpgconf

CommandNode(pos=(613, 631), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
])


8069) gpgconf --kill all

CommandNode(pos=(635, 653), parts=[
  WordNode(pos=(635, 642), word='gpgconf'),
  WordNode(pos=(643, 649), word='--kill'),
  WordNode(pos=(650, 653), word='all'),
])


8070) :

CommandNode(pos=(657, 658), parts=[
  WordNode(pos=(657, 658), word=':'),
])


8071) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


8072) chmod +x /usr/local/bin/gosu

CommandNode(pos=(714, 742), parts=[
  WordNode(pos=(714, 719), word='chmod'),
  WordNode(pos=(720, 722), word='+x'),
  WordNode(pos=(723, 742), word='/usr/local/bin/gosu'),
])


8073) gosu nobody true

CommandNode(pos=(747, 763), parts=[
  WordNode(pos=(747, 751), word='gosu'),
  WordNode(pos=(752, 758), word='nobody'),
  WordNode(pos=(759, 763), word='true'),
])


8074) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(768, 819), parts=[
  WordNode(pos=(768, 775), word='apt-get'),
  WordNode(pos=(776, 781), word='purge'),
  WordNode(pos=(782, 784), word='-y'),
  WordNode(pos=(785, 798), word='--auto-remove'),
  WordNode(pos=(799, 814), word='ca-certificates'),
  WordNode(pos=(815, 819), word='wget'),
])


8075) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8076) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


8077) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


8078) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


8079) command -v gpgconf

CommandNode(pos=(222, 240), parts=[
  WordNode(pos=(222, 229), word='command'),
  WordNode(pos=(230, 232), word='-v'),
  WordNode(pos=(233, 240), word='gpgconf'),
])


8080) gpgconf --kill all

CommandNode(pos=(244, 262), parts=[
  WordNode(pos=(244, 251), word='gpgconf'),
  WordNode(pos=(252, 258), word='--kill'),
  WordNode(pos=(259, 262), word='all'),
])


8081) :

CommandNode(pos=(266, 267), parts=[
  WordNode(pos=(266, 267), word=':'),
])


8082) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


8083) apt-key list

CommandNode(pos=(292, 304), parts=[
  WordNode(pos=(292, 299), word='apt-key'),
  WordNode(pos=(300, 304), word='list'),
])


8084) ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh

CommandNode(pos=(0, 62), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 62), word='/docker-entrypoint.sh'),
])


8085) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


8086) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


8087) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


8088) apk add --no-cache   ca-certificates   curl   tar   xz   openssl

CommandNode(pos=(0, 64), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
  WordNode(pos=(39, 43), word='curl'),
  WordNode(pos=(46, 49), word='tar'),
  WordNode(pos=(52, 54), word='xz'),
  WordNode(pos=(57, 64), word='openssl'),
])


8089) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


8090) addgroup -g 82 -S www-data

CommandNode(pos=(11, 37), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 25), word='82'),
  WordNode(pos=(26, 28), word='-S'),
  WordNode(pos=(29, 37), word='www-data'),
])


8091) adduser -u 82 -D -S -G www-data www-data

CommandNode(pos=(42, 82), parts=[
  WordNode(pos=(42, 49), word='adduser'),
  WordNode(pos=(50, 52), word='-u'),
  WordNode(pos=(53, 55), word='82'),
  WordNode(pos=(56, 58), word='-D'),
  WordNode(pos=(59, 61), word='-S'),
  WordNode(pos=(62, 64), word='-G'),
  WordNode(pos=(65, 73), word='www-data'),
  WordNode(pos=(74, 82), word='www-data'),
])


8092) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8093) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


8094) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


8095) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


8096) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


8097) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


8098) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


8099) apk add --no-cache --virtual .fetch-deps   gnupg   wget

CommandNode(pos=(11, 66), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.fetch-deps'),
  WordNode(pos=(54, 59), word='gnupg'),
  WordNode(pos=(62, 66), word='wget'),
])


8100) mkdir -p /usr/src

CommandNode(pos=(72, 89), parts=[
  WordNode(pos=(72, 77), word='mkdir'),
  WordNode(pos=(78, 80), word='-p'),
  WordNode(pos=(81, 89), word='/usr/src'),
])


8101) cd /usr/src

CommandNode(pos=(92, 103), parts=[
  WordNode(pos=(92, 94), word='cd'),
  WordNode(pos=(95, 103), word='/usr/src'),
])


8102) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


8103) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


8104) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


8105) sha256sum -c -

CommandNode(pos=(205, 219), parts=[
  WordNode(pos=(205, 214), word='sha256sum'),
  WordNode(pos=(215, 217), word='-c'),
  WordNode(pos=(218, 219), word='-'),
])


8106) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


8107) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


8108) md5sum -c -

CommandNode(pos=(286, 297), parts=[
  WordNode(pos=(286, 292), word='md5sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


8109) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


8110) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


8111) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


8112) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


8113) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(524, 570), parts=[
  WordNode(pos=(524, 527), word='gpg'),
  WordNode(pos=(528, 535), word='--batch'),
  WordNode(pos=(536, 544), word='--verify'),
  WordNode(pos=(545, 559), word='php.tar.xz.asc'),
  WordNode(pos=(560, 570), word='php.tar.xz'),
])


8114) command -v gpgconf > /dev/null

CommandNode(pos=(574, 604), parts=[
  WordNode(pos=(574, 581), word='command'),
  WordNode(pos=(582, 584), word='-v'),
  WordNode(pos=(585, 592), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
])


8115) gpgconf --kill all

CommandNode(pos=(608, 626), parts=[
  WordNode(pos=(608, 615), word='gpgconf'),
  WordNode(pos=(616, 622), word='--kill'),
  WordNode(pos=(623, 626), word='all'),
])


8116) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


8117) apk del --no-network .fetch-deps

CommandNode(pos=(658, 690), parts=[
  WordNode(pos=(658, 661), word='apk'),
  WordNode(pos=(662, 665), word='del'),
  WordNode(pos=(666, 678), word='--no-network'),
  WordNode(pos=(679, 690), word='.fetch-deps'),
])


8118) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


8119) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


8120) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8121) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


8122) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


8123) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


8124) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


8125) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


8126) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


8127) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


8128) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


8129) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


8130) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


8131) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


8132) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


8133) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


8134) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


8135) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


8136) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


8137) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


8138) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


8139) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


8140) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


8141) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


8142) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


8143) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


8144) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


8145) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


8146) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


8147) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


8148) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


8149) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


8150) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


8151) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


8152) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


8153) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


8154) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


8155) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


8156) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


8157) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


8158) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


8159) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


8160) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


8161) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


8162) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


8163) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


8164) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


8165) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


8166) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


8167) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


8168) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


8169) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


8170) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


8171) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


8172) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


8173) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


8174) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


8175) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


8176) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


8177) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


8178) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


8179) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


8180) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


8181) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


8182) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8183) command -v a2enmod

CommandNode(pos=(14, 32), parts=[
  WordNode(pos=(14, 21), word='command'),
  WordNode(pos=(22, 24), word='-v'),
  WordNode(pos=(25, 32), word='a2enmod'),
])


8184) a2enmod rewrite

CommandNode(pos=(41, 56), parts=[
  WordNode(pos=(41, 48), word='a2enmod'),
  WordNode(pos=(49, 56), word='rewrite'),
])


8185) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


8186) apt-get update

CommandNode(pos=(106, 120), parts=[
  WordNode(pos=(106, 113), word='apt-get'),
  WordNode(pos=(114, 120), word='update'),
])


8187) apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev

CommandNode(pos=(123, 217), parts=[
  WordNode(pos=(123, 130), word='apt-get'),
  WordNode(pos=(131, 138), word='install'),
  WordNode(pos=(139, 141), word='-y'),
  WordNode(pos=(142, 165), word='--no-install-recommends'),
  WordNode(pos=(168, 179), word='libjpeg-dev'),
  WordNode(pos=(182, 192), word='libpng-dev'),
  WordNode(pos=(195, 204), word='libpq-dev'),
  WordNode(pos=(207, 217), word='libzip-dev'),
])


8188) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(223, 291), parts=[
  WordNode(pos=(223, 247), word='docker-php-ext-configure'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
  WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
])


8189) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


8190) apt-mark auto '.*' > /dev/null

CommandNode(pos=(381, 411), parts=[
  WordNode(pos=(381, 389), word='apt-mark'),
  WordNode(pos=(390, 394), word='auto'),
  WordNode(pos=(395, 399), word='.*'),
  RedirectNode(output=
    WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
])


8191) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


8192) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


8193) awk '/=>/ { print $3 }'

CommandNode(pos=(504, 527), parts=[
  WordNode(pos=(504, 507), word='awk'),
  WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
])


8194) sort -u

CommandNode(pos=(532, 539), parts=[
  WordNode(pos=(532, 536), word='sort'),
  WordNode(pos=(537, 539), word='-u'),
])


8195) xargs -r dpkg-query -S

CommandNode(pos=(544, 566), parts=[
  WordNode(pos=(544, 549), word='xargs'),
  WordNode(pos=(550, 552), word='-r'),
  WordNode(pos=(553, 563), word='dpkg-query'),
  WordNode(pos=(564, 566), word='-S'),
])


8196) cut -d: -f1

CommandNode(pos=(571, 582), parts=[
  WordNode(pos=(571, 574), word='cut'),
  WordNode(pos=(575, 578), word='-d:'),
  WordNode(pos=(579, 582), word='-f1'),
])


8197) sort -u

CommandNode(pos=(587, 594), parts=[
  WordNode(pos=(587, 591), word='sort'),
  WordNode(pos=(592, 594), word='-u'),
])


8198) xargs -rt apt-mark manual

CommandNode(pos=(599, 624), parts=[
  WordNode(pos=(599, 604), word='xargs'),
  WordNode(pos=(605, 608), word='-rt'),
  WordNode(pos=(609, 617), word='apt-mark'),
  WordNode(pos=(618, 624), word='manual'),
])


8199) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(628, 704), parts=[
  WordNode(pos=(628, 635), word='apt-get'),
  WordNode(pos=(636, 641), word='purge'),
  WordNode(pos=(642, 644), word='-y'),
  WordNode(pos=(645, 658), word='--auto-remove'),
  WordNode(pos=(659, 661), word='-o'),
  WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
])


8200) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(707, 734), parts=[
  WordNode(pos=(707, 709), word='rm'),
  WordNode(pos=(710, 713), word='-rf'),
  WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
])


8201) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


8202) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


8203) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


8204) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


8205) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


8206) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


8207) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


8208) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


8209) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


8210) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


8211) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


8212) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


8213) groupadd -r cassandra --gid=999

CommandNode(pos=(0, 31), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 21), word='cassandra'),
  WordNode(pos=(22, 31), word='--gid=999'),
])


8214) useradd -r -g cassandra --uid=999 cassandra

CommandNode(pos=(35, 78), parts=[
  WordNode(pos=(35, 42), word='useradd'),
  WordNode(pos=(43, 45), word='-r'),
  WordNode(pos=(46, 48), word='-g'),
  WordNode(pos=(49, 58), word='cassandra'),
  WordNode(pos=(59, 68), word='--uid=999'),
  WordNode(pos=(69, 78), word='cassandra'),
])


8215) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8216) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


8217) apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2

CommandNode(pos=(27, 104), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 84), word='libjemalloc1'),
  WordNode(pos=(87, 93), word='procps'),
  WordNode(pos=(96, 104), word='iproute2'),
])


8218) command -v gpg > /dev/null

CommandNode(pos=(114, 140), parts=[
  WordNode(pos=(114, 121), word='command'),
  WordNode(pos=(122, 124), word='-v'),
  WordNode(pos=(125, 128), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
])


8219) apt-get install -y --no-install-recommends    dirmngr    gnupg

CommandNode(pos=(149, 211), parts=[
  WordNode(pos=(149, 156), word='apt-get'),
  WordNode(pos=(157, 164), word='install'),
  WordNode(pos=(165, 167), word='-y'),
  WordNode(pos=(168, 191), word='--no-install-recommends'),
  WordNode(pos=(195, 202), word='dirmngr'),
  WordNode(pos=(206, 211), word='gnupg'),
])


8220) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(222, 249), parts=[
  WordNode(pos=(222, 224), word='rm'),
  WordNode(pos=(225, 228), word='-rf'),
  WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
])


8221) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


8222) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


8223) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


8224) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


8225) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


8226) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


8227) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


8228) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


8229) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


8230) command -v gpgconf

CommandNode(pos=(613, 631), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
])


8231) gpgconf --kill all

CommandNode(pos=(635, 653), parts=[
  WordNode(pos=(635, 642), word='gpgconf'),
  WordNode(pos=(643, 649), word='--kill'),
  WordNode(pos=(650, 653), word='all'),
])


8232) :

CommandNode(pos=(657, 658), parts=[
  WordNode(pos=(657, 658), word=':'),
])


8233) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


8234) chmod +x /usr/local/bin/gosu

CommandNode(pos=(714, 742), parts=[
  WordNode(pos=(714, 719), word='chmod'),
  WordNode(pos=(720, 722), word='+x'),
  WordNode(pos=(723, 742), word='/usr/local/bin/gosu'),
])


8235) gosu nobody true

CommandNode(pos=(747, 763), parts=[
  WordNode(pos=(747, 751), word='gosu'),
  WordNode(pos=(752, 758), word='nobody'),
  WordNode(pos=(759, 763), word='true'),
])


8236) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(768, 819), parts=[
  WordNode(pos=(768, 775), word='apt-get'),
  WordNode(pos=(776, 781), word='purge'),
  WordNode(pos=(782, 784), word='-y'),
  WordNode(pos=(785, 798), word='--auto-remove'),
  WordNode(pos=(799, 814), word='ca-certificates'),
  WordNode(pos=(815, 819), word='wget'),
])


8237) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8238) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


8239) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


8240) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


8241) command -v gpgconf

CommandNode(pos=(222, 240), parts=[
  WordNode(pos=(222, 229), word='command'),
  WordNode(pos=(230, 232), word='-v'),
  WordNode(pos=(233, 240), word='gpgconf'),
])


8242) gpgconf --kill all

CommandNode(pos=(244, 262), parts=[
  WordNode(pos=(244, 251), word='gpgconf'),
  WordNode(pos=(252, 258), word='--kill'),
  WordNode(pos=(259, 262), word='all'),
])


8243) :

CommandNode(pos=(266, 267), parts=[
  WordNode(pos=(266, 267), word=':'),
])


8244) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


8245) apt-key list

CommandNode(pos=(292, 304), parts=[
  WordNode(pos=(292, 299), word='apt-key'),
  WordNode(pos=(300, 304), word='list'),
])


8246) ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh

CommandNode(pos=(0, 62), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 62), word='/docker-entrypoint.sh'),
])


8247) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


8248) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


8249) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


8250) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8251) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


8252) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


8253) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


8254) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


8255) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


8256) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8257) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(18, 74), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(61, 66), word='gnupg'),
  WordNode(pos=(67, 74), word='dirmngr'),
])


8258) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(78, 105), parts=[
  WordNode(pos=(78, 80), word='rm'),
  WordNode(pos=(81, 84), word='-rf'),
  WordNode(pos=(85, 105), word='/var/lib/apt/lists/*'),
])


8259) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


8260) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


8261) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


8262) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


8263) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


8264) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


8265) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


8266) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


8267) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


8268) gpgconf --kill all

CommandNode(pos=(611, 629), parts=[
  WordNode(pos=(611, 618), word='gpgconf'),
  WordNode(pos=(619, 625), word='--kill'),
  WordNode(pos=(626, 629), word='all'),
])


8269) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(634, 677), parts=[
  WordNode(pos=(634, 636), word='rm'),
  WordNode(pos=(637, 640), word='-rf'),
  WordNode(pos=(641, 653), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(642, 652), value='GNUPGHOME'),
  ]),
  WordNode(pos=(654, 677), word='/usr/local/bin/gosu.asc'),
])


8270) chmod +x /usr/local/bin/gosu

CommandNode(pos=(682, 710), parts=[
  WordNode(pos=(682, 687), word='chmod'),
  WordNode(pos=(688, 690), word='+x'),
  WordNode(pos=(691, 710), word='/usr/local/bin/gosu'),
])


8271) gosu nobody true

CommandNode(pos=(715, 731), parts=[
  WordNode(pos=(715, 719), word='gosu'),
  WordNode(pos=(720, 726), word='nobody'),
  WordNode(pos=(727, 731), word='true'),
])


8272) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(736, 787), parts=[
  WordNode(pos=(736, 743), word='apt-get'),
  WordNode(pos=(744, 749), word='purge'),
  WordNode(pos=(750, 752), word='-y'),
  WordNode(pos=(753, 766), word='--auto-remove'),
  WordNode(pos=(767, 782), word='ca-certificates'),
  WordNode(pos=(783, 787), word='wget'),
])


8273) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


8274) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8275) apt-get install -y --no-install-recommends   pwgen   perl

CommandNode(pos=(18, 75), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 68), word='pwgen'),
  WordNode(pos=(71, 75), word='perl'),
])


8276) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(80, 107), parts=[
  WordNode(pos=(80, 82), word='rm'),
  WordNode(pos=(83, 86), word='-rf'),
  WordNode(pos=(87, 107), word='/var/lib/apt/lists/*'),
])


8277) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8278) key='A4A9406876FCBD3C456770C88C718D3B5072E1F5'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=A4A9406876FCBD3C456770C88C718D3B5072E1F5'),
])


8279) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


8280) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


8281) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/mysql.gpg

CommandNode(pos=(165, 227), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 227), word='/etc/apt/trusted.gpg.d/mysql.gpg'), pos=(193, 227), type='>'),
])


8282) gpgconf --kill all

CommandNode(pos=(230, 248), parts=[
  WordNode(pos=(230, 237), word='gpgconf'),
  WordNode(pos=(238, 244), word='--kill'),
  WordNode(pos=(245, 248), word='all'),
])


8283) rm -rf "$GNUPGHOME"

CommandNode(pos=(251, 270), parts=[
  WordNode(pos=(251, 253), word='rm'),
  WordNode(pos=(254, 257), word='-rf'),
  WordNode(pos=(258, 270), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(259, 269), value='GNUPGHOME'),
  ]),
])


8284) apt-key list > /dev/null

CommandNode(pos=(273, 297), parts=[
  WordNode(pos=(273, 280), word='apt-key'),
  WordNode(pos=(281, 285), word='list'),
  RedirectNode(output=
    WordNode(pos=(288, 297), word='/dev/null'), pos=(286, 297), type='>'),
])


8285) echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list

CommandNode(pos=(0, 110), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 73), word='deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}', parts=[
    ParameterNode(pos=(58, 72), value='MYSQL_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(76, 110), word='/etc/apt/sources.list.d/mysql.list'), pos=(74, 110), type='>'),
])


8286) echo mysql-community-server mysql-community-server/data-dir select ''

CommandNode(pos=(4, 73), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 31), word='mysql-community-server'),
  WordNode(pos=(32, 63), word='mysql-community-server/data-dir'),
  WordNode(pos=(64, 70), word='select'),
  WordNode(pos=(71, 73)),
])


8287) echo mysql-community-server mysql-community-server/root-pass password ''

CommandNode(pos=(77, 149), parts=[
  WordNode(pos=(77, 81), word='echo'),
  WordNode(pos=(82, 104), word='mysql-community-server'),
  WordNode(pos=(105, 137), word='mysql-community-server/root-pass'),
  WordNode(pos=(138, 146), word='password'),
  WordNode(pos=(147, 149)),
])


8288) echo mysql-community-server mysql-community-server/re-root-pass password ''

CommandNode(pos=(153, 228), parts=[
  WordNode(pos=(153, 157), word='echo'),
  WordNode(pos=(158, 180), word='mysql-community-server'),
  WordNode(pos=(181, 216), word='mysql-community-server/re-root-pass'),
  WordNode(pos=(217, 225), word='password'),
  WordNode(pos=(226, 228)),
])


8289) echo mysql-community-server mysql-community-server/remove-test-db select false

CommandNode(pos=(232, 310), parts=[
  WordNode(pos=(232, 236), word='echo'),
  WordNode(pos=(237, 259), word='mysql-community-server'),
  WordNode(pos=(260, 297), word='mysql-community-server/remove-test-db'),
  WordNode(pos=(298, 304), word='select'),
  WordNode(pos=(305, 310), word='false'),
])


8290) debconf-set-selections

CommandNode(pos=(317, 339), parts=[
  WordNode(pos=(317, 339), word='debconf-set-selections'),
])


8291) apt-get update

CommandNode(pos=(344, 358), parts=[
  WordNode(pos=(344, 351), word='apt-get'),
  WordNode(pos=(352, 358), word='update'),
])


8292) apt-get install -y mysql-server="${MYSQL_VERSION}"

CommandNode(pos=(362, 412), parts=[
  WordNode(pos=(362, 369), word='apt-get'),
  WordNode(pos=(370, 377), word='install'),
  WordNode(pos=(378, 380), word='-y'),
  WordNode(pos=(381, 412), word='mysql-server=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(395, 411), value='MYSQL_VERSION'),
  ]),
])


8293) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 418), word='rm'),
  WordNode(pos=(419, 422), word='-rf'),
  WordNode(pos=(423, 443), word='/var/lib/apt/lists/*'),
])


8294) rm -rf /var/lib/mysql

CommandNode(pos=(448, 469), parts=[
  WordNode(pos=(448, 450), word='rm'),
  WordNode(pos=(451, 454), word='-rf'),
  WordNode(pos=(455, 469), word='/var/lib/mysql'),
])


8295) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(473, 512), parts=[
  WordNode(pos=(473, 478), word='mkdir'),
  WordNode(pos=(479, 481), word='-p'),
  WordNode(pos=(482, 496), word='/var/lib/mysql'),
  WordNode(pos=(497, 512), word='/var/run/mysqld'),
])


8296) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(517, 568), parts=[
  WordNode(pos=(517, 522), word='chown'),
  WordNode(pos=(523, 525), word='-R'),
  WordNode(pos=(526, 537), word='mysql:mysql'),
  WordNode(pos=(538, 552), word='/var/lib/mysql'),
  WordNode(pos=(553, 568), word='/var/run/mysqld'),
])


8297) chmod 777 /var/run/mysqld

CommandNode(pos=(573, 598), parts=[
  WordNode(pos=(573, 578), word='chmod'),
  WordNode(pos=(579, 582), word='777'),
  WordNode(pos=(583, 598), word='/var/run/mysqld'),
])


8298) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(603, 641), parts=[
  WordNode(pos=(603, 607), word='find'),
  WordNode(pos=(608, 619), word='/etc/mysql/'),
  WordNode(pos=(620, 625), word='-name'),
  WordNode(pos=(626, 633), word='*.cnf'),
  WordNode(pos=(634, 641), word='-print0'),
])


8299) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(646, 686), parts=[
  WordNode(pos=(646, 651), word='xargs'),
  WordNode(pos=(652, 654), word='-0'),
  WordNode(pos=(655, 659), word='grep'),
  WordNode(pos=(660, 664), word='-lZE'),
  WordNode(pos=(665, 686), word='^(bind-address|log)'),
])


8300) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(691, 739), parts=[
  WordNode(pos=(691, 696), word='xargs'),
  WordNode(pos=(697, 700), word='-rt'),
  WordNode(pos=(701, 703), word='-0'),
  WordNode(pos=(704, 707), word='sed'),
  WordNode(pos=(708, 711), word='-Ei'),
  WordNode(pos=(712, 739), word='s/^(bind-address|log)/#&/'),
])


8301) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(744, 826), parts=[
  WordNode(pos=(744, 748), word='echo'),
  WordNode(pos=(749, 795), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(798, 826), word='/etc/mysql/conf.d/docker.cnf'), pos=(796, 826), type='>'),
])


8302) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


8303) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


8304) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8305) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


8306) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


8307) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


8308) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


8309) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


8310) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


8311) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


8312) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


8313) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


8314) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


8315) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


8316) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


8317) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


8318) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1028), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1017), word='xz-dev'),
  WordNode(pos=(1020, 1028), word='zlib-dev'),
])


8319) apk del .fetch-deps

CommandNode(pos=(1033, 1052), parts=[
  WordNode(pos=(1033, 1036), word='apk'),
  WordNode(pos=(1037, 1040), word='del'),
  WordNode(pos=(1041, 1052), word='.fetch-deps'),
])


8320) cd /usr/src/python

CommandNode(pos=(1058, 1076), parts=[
  WordNode(pos=(1058, 1060), word='cd'),
  WordNode(pos=(1061, 1076), word='/usr/src/python'),
])


8321) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1081, 1138), parts=[
  AssignmentNode(pos=(1081, 1138), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1092, 1136), parts=[
        WordNode(pos=(1092, 1109), word='dpkg-architecture'),
        WordNode(pos=(1110, 1117), word='--query'),
        WordNode(pos=(1118, 1136), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1090, 1137)),
  ]),
])


8322) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1143, 1295), parts=[
  WordNode(pos=(1143, 1154), word='./configure'),
  WordNode(pos=(1157, 1175), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1166, 1174), value='gnuArch'),
  ]),
  WordNode(pos=(1178, 1213), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1216, 1231), word='--enable-shared'),
  WordNode(pos=(1234, 1253), word='--with-system-expat'),
  WordNode(pos=(1256, 1273), word='--with-system-ffi'),
  WordNode(pos=(1276, 1295), word='--without-ensurepip'),
])


8323) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1300, 1364), parts=[
  WordNode(pos=(1300, 1304), word='make'),
  WordNode(pos=(1305, 1307), word='-j'),
  WordNode(pos=(1308, 1318), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1311, 1316), parts=[
        WordNode(pos=(1311, 1316), word='nproc'),
      ]), pos=(1309, 1317)),
  ]),
  WordNode(pos=(1321, 1364), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


8324) make install

CommandNode(pos=(1369, 1381), parts=[
  WordNode(pos=(1369, 1373), word='make'),
  WordNode(pos=(1374, 1381), word='install'),
])


8325) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1387, 1510), parts=[
  WordNode(pos=(1387, 1391), word='find'),
  WordNode(pos=(1392, 1402), word='/usr/local'),
  WordNode(pos=(1403, 1408), word='-type'),
  WordNode(pos=(1409, 1410), word='f'),
  WordNode(pos=(1411, 1422), word='-executable'),
  WordNode(pos=(1423, 1427), word='-not'),
  WordNode(pos=(1428, 1430), word='('),
  WordNode(pos=(1431, 1436), word='-name'),
  WordNode(pos=(1437, 1448), word='*tkinter*'),
  WordNode(pos=(1449, 1451), word=')'),
  WordNode(pos=(1452, 1457), word='-exec'),
  WordNode(pos=(1458, 1465), word='scanelf'),
  WordNode(pos=(1466, 1474), word='--needed'),
  WordNode(pos=(1475, 1485), word='--nobanner'),
  WordNode(pos=(1486, 1494), word='--format'),
  WordNode(pos=(1495, 1501), word='%n#p'),
  WordNode(pos=(1502, 1506), word='{}'),
  WordNode(pos=(1507, 1510), word=';'),
])


8326) tr ',' '\n'

CommandNode(pos=(1515, 1526), parts=[
  WordNode(pos=(1515, 1517), word='tr'),
  WordNode(pos=(1518, 1521), word=','),
  WordNode(pos=(1522, 1526), word='\\n'),
])


8327) sort -u

CommandNode(pos=(1531, 1538), parts=[
  WordNode(pos=(1531, 1535), word='sort'),
  WordNode(pos=(1536, 1538), word='-u'),
])


8328) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1543, 1620), parts=[
  WordNode(pos=(1543, 1546), word='awk'),
  WordNode(pos=(1547, 1620), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


8329) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1625, 1679), parts=[
  WordNode(pos=(1625, 1630), word='xargs'),
  WordNode(pos=(1631, 1634), word='-rt'),
  WordNode(pos=(1635, 1638), word='apk'),
  WordNode(pos=(1639, 1642), word='add'),
  WordNode(pos=(1643, 1653), word='--no-cache'),
  WordNode(pos=(1654, 1663), word='--virtual'),
  WordNode(pos=(1664, 1679), word='.python-rundeps'),
])


8330) apk del .build-deps

CommandNode(pos=(1684, 1703), parts=[
  WordNode(pos=(1684, 1687), word='apk'),
  WordNode(pos=(1688, 1691), word='del'),
  WordNode(pos=(1692, 1703), word='.build-deps'),
])


8331) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1709, 1876), parts=[
  WordNode(pos=(1709, 1713), word='find'),
  WordNode(pos=(1714, 1724), word='/usr/local'),
  WordNode(pos=(1725, 1731), word='-depth'),
  WordNode(pos=(1734, 1736), word='('),
  WordNode(pos=(1740, 1742), word='('),
  WordNode(pos=(1743, 1748), word='-type'),
  WordNode(pos=(1749, 1750), word='d'),
  WordNode(pos=(1751, 1753), word='-a'),
  WordNode(pos=(1754, 1756), word='('),
  WordNode(pos=(1757, 1762), word='-name'),
  WordNode(pos=(1763, 1767), word='test'),
  WordNode(pos=(1768, 1770), word='-o'),
  WordNode(pos=(1771, 1776), word='-name'),
  WordNode(pos=(1777, 1782), word='tests'),
  WordNode(pos=(1783, 1785), word=')'),
  WordNode(pos=(1786, 1788), word=')'),
  WordNode(pos=(1792, 1794), word='-o'),
  WordNode(pos=(1798, 1800), word='('),
  WordNode(pos=(1801, 1806), word='-type'),
  WordNode(pos=(1807, 1808), word='f'),
  WordNode(pos=(1809, 1811), word='-a'),
  WordNode(pos=(1812, 1814), word='('),
  WordNode(pos=(1815, 1820), word='-name'),
  WordNode(pos=(1821, 1828), word='*.pyc'),
  WordNode(pos=(1829, 1831), word='-o'),
  WordNode(pos=(1832, 1837), word='-name'),
  WordNode(pos=(1838, 1845), word='*.pyo'),
  WordNode(pos=(1846, 1848), word=')'),
  WordNode(pos=(1849, 1851), word=')'),
  WordNode(pos=(1854, 1856), word=')'),
  WordNode(pos=(1857, 1862), word='-exec'),
  WordNode(pos=(1863, 1865), word='rm'),
  WordNode(pos=(1866, 1869), word='-rf'),
  WordNode(pos=(1870, 1874), word='{}'),
  WordNode(pos=(1875, 1876), word='+'),
])


8332) rm -rf /usr/src/python

CommandNode(pos=(1881, 1903), parts=[
  WordNode(pos=(1881, 1883), word='rm'),
  WordNode(pos=(1884, 1887), word='-rf'),
  WordNode(pos=(1888, 1903), word='/usr/src/python'),
])


8333) python3 --version

CommandNode(pos=(1909, 1926), parts=[
  WordNode(pos=(1909, 1916), word='python3'),
  WordNode(pos=(1917, 1926), word='--version'),
])


8334) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


8335) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


8336) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


8337) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


8338) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


8339) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8340) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


8341) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


8342) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


8343) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


8344) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


8345) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8346) apk add --no-cache   btrfs-progs   e2fsprogs   e2fsprogs-extra   iptables   xfsprogs   xz   pigz

CommandNode(pos=(11, 107), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(32, 43), word='btrfs-progs'),
  WordNode(pos=(46, 55), word='e2fsprogs'),
  WordNode(pos=(58, 73), word='e2fsprogs-extra'),
  WordNode(pos=(76, 84), word='iptables'),
  WordNode(pos=(87, 95), word='xfsprogs'),
  WordNode(pos=(98, 100), word='xz'),
  WordNode(pos=(103, 107), word='pigz'),
])


8347) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


8348) [ -n "$zfs" ]

CommandNode(pos=(159, 172), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 163), word='-n'),
  WordNode(pos=(164, 170), word='$zfs', parts=[
    ParameterNode(pos=(165, 169), value='zfs'),
  ]),
  WordNode(pos=(171, 172), word=']'),
])


8349) apk add --no-cache zfs

CommandNode(pos=(181, 203), parts=[
  WordNode(pos=(181, 184), word='apk'),
  WordNode(pos=(185, 188), word='add'),
  WordNode(pos=(189, 199), word='--no-cache'),
  WordNode(pos=(200, 203), word='zfs'),
])


8350) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


8351) addgroup -S dockremap

CommandNode(pos=(11, 32), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-S'),
  WordNode(pos=(23, 32), word='dockremap'),
])


8352) adduser -S -G dockremap dockremap

CommandNode(pos=(37, 70), parts=[
  WordNode(pos=(37, 44), word='adduser'),
  WordNode(pos=(45, 47), word='-S'),
  WordNode(pos=(48, 50), word='-G'),
  WordNode(pos=(51, 60), word='dockremap'),
  WordNode(pos=(61, 70), word='dockremap'),
])


8353) echo 'dockremap:165536:65536' >> /etc/subuid

CommandNode(pos=(75, 119), parts=[
  WordNode(pos=(75, 79), word='echo'),
  WordNode(pos=(80, 104), word='dockremap:165536:65536'),
  RedirectNode(output=
    WordNode(pos=(108, 119), word='/etc/subuid'), pos=(105, 119), type='>>'),
])


8354) echo 'dockremap:165536:65536' >> /etc/subgid

CommandNode(pos=(124, 168), parts=[
  WordNode(pos=(124, 128), word='echo'),
  WordNode(pos=(129, 153), word='dockremap:165536:65536'),
  RedirectNode(output=
    WordNode(pos=(157, 168), word='/etc/subgid'), pos=(154, 168), type='>>'),
])


8355) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8356) wget -O /usr/local/bin/dind "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"

CommandNode(pos=(11, 113), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/dind'),
  WordNode(pos=(39, 113), word='https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind', parts=[
    ParameterNode(pos=(88, 102), value='DIND_COMMIT'),
  ]),
])


8357) chmod +x /usr/local/bin/dind

CommandNode(pos=(116, 144), parts=[
  WordNode(pos=(116, 121), word='chmod'),
  WordNode(pos=(122, 124), word='+x'),
  WordNode(pos=(125, 144), word='/usr/local/bin/dind'),
])


8358) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8359) apt-get install -y --no-install-recommends   bzip2   gnupg dirmngr   libcurl4-openssl-dev   libfreetype6-dev   libicu-dev   libjpeg-dev   libldap2-dev   libmcrypt-dev   libmemcached-dev   libpng-dev   libpq-dev   libxml2-dev   unzip

CommandNode(pos=(18, 250), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 68), word='bzip2'),
  WordNode(pos=(71, 76), word='gnupg'),
  WordNode(pos=(77, 84), word='dirmngr'),
  WordNode(pos=(87, 107), word='libcurl4-openssl-dev'),
  WordNode(pos=(110, 126), word='libfreetype6-dev'),
  WordNode(pos=(129, 139), word='libicu-dev'),
  WordNode(pos=(142, 153), word='libjpeg-dev'),
  WordNode(pos=(156, 168), word='libldap2-dev'),
  WordNode(pos=(171, 184), word='libmcrypt-dev'),
  WordNode(pos=(187, 203), word='libmemcached-dev'),
  WordNode(pos=(206, 216), word='libpng-dev'),
  WordNode(pos=(219, 228), word='libpq-dev'),
  WordNode(pos=(231, 242), word='libxml2-dev'),
  WordNode(pos=(245, 250), word='unzip'),
])


8360) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(255, 282), parts=[
  WordNode(pos=(255, 257), word='rm'),
  WordNode(pos=(258, 261), word='-rf'),
  WordNode(pos=(262, 282), word='/var/lib/apt/lists/*'),
])


8361) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8362) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(10, 78), parts=[
  WordNode(pos=(10, 34), word='docker-php-ext-configure'),
  WordNode(pos=(35, 37), word='gd'),
  WordNode(pos=(38, 57), word='--with-png-dir=/usr'),
  WordNode(pos=(58, 78), word='--with-jpeg-dir=/usr'),
])


8363) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


8364) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


8365) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   mcrypt   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 340), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 284), word='mcrypt'),
  WordNode(pos=(287, 294), word='opcache'),
  WordNode(pos=(297, 302), word='pcntl'),
  WordNode(pos=(305, 314), word='pdo_mysql'),
  WordNode(pos=(317, 326), word='pdo_pgsql'),
  WordNode(pos=(329, 334), word='pgsql'),
  WordNode(pos=(337, 340), word='zip'),
])


8366) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


8367) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


8368) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


8369) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


8370) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


8371) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


8372) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8373) pecl install APCu-5.1.11

CommandNode(pos=(10, 34), parts=[
  WordNode(pos=(10, 14), word='pecl'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 34), word='APCu-5.1.11'),
])


8374) pecl install memcached-3.0.4

CommandNode(pos=(37, 65), parts=[
  WordNode(pos=(37, 41), word='pecl'),
  WordNode(pos=(42, 49), word='install'),
  WordNode(pos=(50, 65), word='memcached-3.0.4'),
])


8375) pecl install redis-3.1.6

CommandNode(pos=(68, 92), parts=[
  WordNode(pos=(68, 72), word='pecl'),
  WordNode(pos=(73, 80), word='install'),
  WordNode(pos=(81, 92), word='redis-3.1.6'),
])


8376) docker-php-ext-enable   apcu   memcached   redis

CommandNode(pos=(95, 143), parts=[
  WordNode(pos=(95, 116), word='docker-php-ext-enable'),
  WordNode(pos=(119, 123), word='apcu'),
  WordNode(pos=(126, 135), word='memcached'),
  WordNode(pos=(138, 143), word='redis'),
])


8377) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8378) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


8379) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


8380) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


8381) sha256sum -c -

CommandNode(pos=(283, 297), parts=[
  WordNode(pos=(283, 292), word='sha256sum'),
  WordNode(pos=(293, 295), word='-c'),
  WordNode(pos=(296, 297), word='-'),
])


8382) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


8383) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys E3036906AD9F30807351FAC32D5D5E97F6978A26

CommandNode(pos=(334, 437), parts=[
  WordNode(pos=(334, 337), word='gpg'),
  WordNode(pos=(338, 345), word='--batch'),
  WordNode(pos=(346, 357), word='--keyserver'),
  WordNode(pos=(358, 384), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(385, 396), word='--recv-keys'),
  WordNode(pos=(397, 437), word='E3036906AD9F30807351FAC32D5D5E97F6978A26'),
])


8384) gpg --batch --verify owncloud.tar.bz2.asc owncloud.tar.bz2

CommandNode(pos=(440, 498), parts=[
  WordNode(pos=(440, 443), word='gpg'),
  WordNode(pos=(444, 451), word='--batch'),
  WordNode(pos=(452, 460), word='--verify'),
  WordNode(pos=(461, 481), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(482, 498), word='owncloud.tar.bz2'),
])


8385) command -v gpgconf

CommandNode(pos=(501, 519), parts=[
  WordNode(pos=(501, 508), word='command'),
  WordNode(pos=(509, 511), word='-v'),
  WordNode(pos=(512, 519), word='gpgconf'),
])


8386) gpgconf --kill all

CommandNode(pos=(523, 541), parts=[
  WordNode(pos=(523, 530), word='gpgconf'),
  WordNode(pos=(531, 537), word='--kill'),
  WordNode(pos=(538, 541), word='all'),
])


8387) :

CommandNode(pos=(545, 546), parts=[
  WordNode(pos=(545, 546), word=':'),
])


8388) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


8389) tar -xjf owncloud.tar.bz2 -C /usr/src/

CommandNode(pos=(591, 629), parts=[
  WordNode(pos=(591, 594), word='tar'),
  WordNode(pos=(595, 599), word='-xjf'),
  WordNode(pos=(600, 616), word='owncloud.tar.bz2'),
  WordNode(pos=(617, 619), word='-C'),
  WordNode(pos=(620, 629), word='/usr/src/'),
])


8390) rm owncloud.tar.bz2

CommandNode(pos=(632, 651), parts=[
  WordNode(pos=(632, 634), word='rm'),
  WordNode(pos=(635, 651), word='owncloud.tar.bz2'),
])


8391) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


8392) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8393) apt-get install -y --no-install-recommends   bzip2   ca-certificates   libffi-dev   libgdbm3   libgmp-dev   libssl-dev   libyaml-dev   procps   zlib1g-dev

CommandNode(pos=(19, 173), parts=[
  WordNode(pos=(19, 26), word='apt-get'),
  WordNode(pos=(27, 34), word='install'),
  WordNode(pos=(35, 37), word='-y'),
  WordNode(pos=(38, 61), word='--no-install-recommends'),
  WordNode(pos=(64, 69), word='bzip2'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(90, 100), word='libffi-dev'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 124), word='libgmp-dev'),
  WordNode(pos=(127, 137), word='libssl-dev'),
  WordNode(pos=(140, 151), word='libyaml-dev'),
  WordNode(pos=(154, 160), word='procps'),
  WordNode(pos=(163, 173), word='zlib1g-dev'),
])


8394) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(178, 205), parts=[
  WordNode(pos=(178, 180), word='rm'),
  WordNode(pos=(181, 184), word='-rf'),
  WordNode(pos=(185, 205), word='/var/lib/apt/lists/*'),
])


8395) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


8396) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


8397) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


8398) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8399) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


8400) apt-get update

CommandNode(pos=(55, 69), parts=[
  WordNode(pos=(55, 62), word='apt-get'),
  WordNode(pos=(63, 69), word='update'),
])


8401) apt-get install -y --no-install-recommends   autoconf   bison   dpkg-dev   gcc   libbz2-dev   libgdbm-dev   libglib2.0-dev   libncurses-dev   libreadline-dev   libxml2-dev   libxslt-dev   make   ruby   wget   xz-utils

CommandNode(pos=(73, 290), parts=[
  WordNode(pos=(73, 80), word='apt-get'),
  WordNode(pos=(81, 88), word='install'),
  WordNode(pos=(89, 91), word='-y'),
  WordNode(pos=(92, 115), word='--no-install-recommends'),
  WordNode(pos=(118, 126), word='autoconf'),
  WordNode(pos=(129, 134), word='bison'),
  WordNode(pos=(137, 145), word='dpkg-dev'),
  WordNode(pos=(148, 151), word='gcc'),
  WordNode(pos=(154, 164), word='libbz2-dev'),
  WordNode(pos=(167, 178), word='libgdbm-dev'),
  WordNode(pos=(181, 195), word='libglib2.0-dev'),
  WordNode(pos=(198, 212), word='libncurses-dev'),
  WordNode(pos=(215, 230), word='libreadline-dev'),
  WordNode(pos=(233, 244), word='libxml2-dev'),
  WordNode(pos=(247, 258), word='libxslt-dev'),
  WordNode(pos=(261, 265), word='make'),
  WordNode(pos=(268, 272), word='ruby'),
  WordNode(pos=(275, 279), word='wget'),
  WordNode(pos=(282, 290), word='xz-utils'),
])


8402) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(295, 322), parts=[
  WordNode(pos=(295, 297), word='rm'),
  WordNode(pos=(298, 301), word='-rf'),
  WordNode(pos=(302, 322), word='/var/lib/apt/lists/*'),
])


8403) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


8404) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


8405) sha256sum -c -

CommandNode(pos=(479, 493), parts=[
  WordNode(pos=(479, 488), word='sha256sum'),
  WordNode(pos=(489, 491), word='-c'),
  WordNode(pos=(492, 493), word='-'),
])


8406) mkdir -p /usr/src/ruby

CommandNode(pos=(499, 521), parts=[
  WordNode(pos=(499, 504), word='mkdir'),
  WordNode(pos=(505, 507), word='-p'),
  WordNode(pos=(508, 521), word='/usr/src/ruby'),
])


8407) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(526, 584), parts=[
  WordNode(pos=(526, 529), word='tar'),
  WordNode(pos=(530, 534), word='-xJf'),
  WordNode(pos=(535, 546), word='ruby.tar.xz'),
  WordNode(pos=(547, 549), word='-C'),
  WordNode(pos=(550, 563), word='/usr/src/ruby'),
  WordNode(pos=(564, 584), word='--strip-components=1'),
])


8408) rm ruby.tar.xz

CommandNode(pos=(589, 603), parts=[
  WordNode(pos=(589, 591), word='rm'),
  WordNode(pos=(592, 603), word='ruby.tar.xz'),
])


8409) cd /usr/src/ruby

CommandNode(pos=(609, 625), parts=[
  WordNode(pos=(609, 611), word='cd'),
  WordNode(pos=(612, 625), word='/usr/src/ruby'),
])


8410) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(635, 669), parts=[
  WordNode(pos=(635, 639), word='echo'),
  WordNode(pos=(640, 669), word='#define ENABLE_PATH_CHECK 0'),
])


8411) echo

CommandNode(pos=(673, 677), parts=[
  WordNode(pos=(673, 677), word='echo'),
])


8412) cat file.c

CommandNode(pos=(681, 691), parts=[
  WordNode(pos=(681, 684), word='cat'),
  WordNode(pos=(685, 691), word='file.c'),
])


8413) mv file.c.new file.c

CommandNode(pos=(713, 733), parts=[
  WordNode(pos=(713, 715), word='mv'),
  WordNode(pos=(716, 726), word='file.c.new'),
  WordNode(pos=(727, 733), word='file.c'),
])


8414) autoconf

CommandNode(pos=(739, 747), parts=[
  WordNode(pos=(739, 747), word='autoconf'),
])


8415) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


8416) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


8417) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


8418) make install

CommandNode(pos=(916, 928), parts=[
  WordNode(pos=(916, 920), word='make'),
  WordNode(pos=(921, 928), word='install'),
])


8419) apt-mark auto '.*' > /dev/null

CommandNode(pos=(934, 964), parts=[
  WordNode(pos=(934, 942), word='apt-mark'),
  WordNode(pos=(943, 947), word='auto'),
  WordNode(pos=(948, 952), word='.*'),
  RedirectNode(output=
    WordNode(pos=(955, 964), word='/dev/null'), pos=(953, 964), type='>'),
])


8420) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


8421) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec ldd '{}' ';'

CommandNode(pos=(1003, 1086), parts=[
  WordNode(pos=(1003, 1007), word='find'),
  WordNode(pos=(1008, 1018), word='/usr/local'),
  WordNode(pos=(1019, 1024), word='-type'),
  WordNode(pos=(1025, 1026), word='f'),
  WordNode(pos=(1027, 1038), word='-executable'),
  WordNode(pos=(1039, 1043), word='-not'),
  WordNode(pos=(1044, 1046), word='('),
  WordNode(pos=(1047, 1052), word='-name'),
  WordNode(pos=(1053, 1064), word='*tkinter*'),
  WordNode(pos=(1065, 1067), word=')'),
  WordNode(pos=(1068, 1073), word='-exec'),
  WordNode(pos=(1074, 1077), word='ldd'),
  WordNode(pos=(1078, 1082), word='{}'),
  WordNode(pos=(1083, 1086), word=';'),
])


8422) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1091, 1119), parts=[
  WordNode(pos=(1091, 1094), word='awk'),
  WordNode(pos=(1095, 1119), word='/=>/ { print $(NF-1) }'),
])


8423) sort -u

CommandNode(pos=(1124, 1131), parts=[
  WordNode(pos=(1124, 1128), word='sort'),
  WordNode(pos=(1129, 1131), word='-u'),
])


8424) xargs -r dpkg-query --search

CommandNode(pos=(1136, 1164), parts=[
  WordNode(pos=(1136, 1141), word='xargs'),
  WordNode(pos=(1142, 1144), word='-r'),
  WordNode(pos=(1145, 1155), word='dpkg-query'),
  WordNode(pos=(1156, 1164), word='--search'),
])


8425) cut -d: -f1

CommandNode(pos=(1169, 1180), parts=[
  WordNode(pos=(1169, 1172), word='cut'),
  WordNode(pos=(1173, 1176), word='-d:'),
  WordNode(pos=(1177, 1180), word='-f1'),
])


8426) sort -u

CommandNode(pos=(1185, 1192), parts=[
  WordNode(pos=(1185, 1189), word='sort'),
  WordNode(pos=(1190, 1192), word='-u'),
])


8427) xargs -r apt-mark manual

CommandNode(pos=(1197, 1221), parts=[
  WordNode(pos=(1197, 1202), word='xargs'),
  WordNode(pos=(1203, 1205), word='-r'),
  WordNode(pos=(1206, 1214), word='apt-mark'),
  WordNode(pos=(1215, 1221), word='manual'),
])


8428) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1226, 1302), parts=[
  WordNode(pos=(1226, 1233), word='apt-get'),
  WordNode(pos=(1234, 1239), word='purge'),
  WordNode(pos=(1240, 1242), word='-y'),
  WordNode(pos=(1243, 1256), word='--auto-remove'),
  WordNode(pos=(1257, 1259), word='-o'),
  WordNode(pos=(1260, 1302), word='APT::AutoRemove::RecommendsImportant=false'),
])


8429) cd /

CommandNode(pos=(1308, 1312), parts=[
  WordNode(pos=(1308, 1310), word='cd'),
  WordNode(pos=(1311, 1312), word='/'),
])


8430) rm -r /usr/src/ruby

CommandNode(pos=(1317, 1336), parts=[
  WordNode(pos=(1317, 1319), word='rm'),
  WordNode(pos=(1320, 1322), word='-r'),
  WordNode(pos=(1323, 1336), word='/usr/src/ruby'),
])


8431) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(1341, 1437), parts=[
  WordNode(pos=(1341, 1345), word='ruby'),
  WordNode(pos=(1346, 1348), word='-e'),
  WordNode(pos=(1349, 1437), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


8432) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1442, 1481), parts=[
  WordNode(pos=(1442, 1445), word='gem'),
  WordNode(pos=(1446, 1452), word='update'),
  WordNode(pos=(1453, 1461), word='--system'),
  WordNode(pos=(1462, 1481), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1463, 1480), value='RUBYGEMS_VERSION'),
  ]),
])


8433) rm -r /root/.gem/

CommandNode(pos=(1485, 1502), parts=[
  WordNode(pos=(1485, 1487), word='rm'),
  WordNode(pos=(1488, 1490), word='-r'),
  WordNode(pos=(1491, 1502), word='/root/.gem/'),
])


8434) ruby --version

CommandNode(pos=(1507, 1521), parts=[
  WordNode(pos=(1507, 1511), word='ruby'),
  WordNode(pos=(1512, 1521), word='--version'),
])


8435) gem --version

CommandNode(pos=(1525, 1538), parts=[
  WordNode(pos=(1525, 1528), word='gem'),
  WordNode(pos=(1529, 1538), word='--version'),
])


8436) bundle --version

CommandNode(pos=(1542, 1558), parts=[
  WordNode(pos=(1542, 1548), word='bundle'),
  WordNode(pos=(1549, 1558), word='--version'),
])


8437) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


8438) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


8439) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8440) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


8441) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


8442) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


8443) apk add --no-cache   'su-exec>=0.2'   bash   procps

CommandNode(pos=(0, 51), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 35), word='su-exec>=0.2'),
  WordNode(pos=(38, 42), word='bash'),
  WordNode(pos=(45, 51), word='procps'),
])


8444) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8445) apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev

CommandNode(pos=(12, 159), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 63), word='autoconf'),
  WordNode(pos=(66, 81), word='ca-certificates'),
  WordNode(pos=(84, 92), word='dpkg-dev'),
  WordNode(pos=(93, 97), word='dpkg'),
  WordNode(pos=(100, 103), word='gcc'),
  WordNode(pos=(106, 111), word='gnupg'),
  WordNode(pos=(114, 122), word='libc-dev'),
  WordNode(pos=(125, 138), word='linux-headers'),
  WordNode(pos=(141, 145), word='make'),
  WordNode(pos=(148, 159), word='ncurses-dev'),
])


8446) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


8447) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


8448) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(308, 345), parts=[
  AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


8449) mkdir /usr/local/src

CommandNode(pos=(349, 369), parts=[
  WordNode(pos=(349, 354), word='mkdir'),
  WordNode(pos=(355, 369), word='/usr/local/src'),
])


8450) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


8451) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


8452) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(521, 552), parts=[
  WordNode(pos=(521, 527), word='export'),
  WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(541, 550), parts=[
        WordNode(pos=(541, 547), word='mktemp'),
        WordNode(pos=(548, 550), word='-d'),
      ]), pos=(539, 551)),
  ]),
])


8453) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


8454) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


8455) gpgconf --kill all

CommandNode(pos=(735, 753), parts=[
  WordNode(pos=(735, 742), word='gpgconf'),
  WordNode(pos=(743, 749), word='--kill'),
  WordNode(pos=(750, 753), word='all'),
])


8456) rm -rf "$GNUPGHOME"

CommandNode(pos=(756, 775), parts=[
  WordNode(pos=(756, 758), word='rm'),
  WordNode(pos=(759, 762), word='-rf'),
  WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(764, 774), value='GNUPGHOME'),
  ]),
])


8457) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


8458) sha256sum -c -

CommandNode(pos=(832, 846), parts=[
  WordNode(pos=(832, 841), word='sha256sum'),
  WordNode(pos=(842, 844), word='-c'),
  WordNode(pos=(845, 846), word='-'),
])


8459) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(849, 873), parts=[
  WordNode(pos=(849, 854), word='mkdir'),
  WordNode(pos=(855, 857), word='-p'),
  WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
  ]),
])


8460) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


8461) cd "$OPENSSL_PATH"

CommandNode(pos=(972, 990), parts=[
  WordNode(pos=(972, 974), word='cd'),
  WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
  ]),
])


8462) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


8463) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1145, 1183), parts=[
  WordNode(pos=(1145, 1149), word='make'),
  WordNode(pos=(1150, 1152), word='-j'),
  WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1156, 1181), parts=[
        WordNode(pos=(1156, 1163), word='getconf'),
        WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
      ]), pos=(1154, 1182)),
  ]),
])


8464) make install_sw install_ssldirs

CommandNode(pos=(1186, 1217), parts=[
  WordNode(pos=(1186, 1190), word='make'),
  WordNode(pos=(1191, 1201), word='install_sw'),
  WordNode(pos=(1202, 1217), word='install_ssldirs'),
])


8465) cd ..

CommandNode(pos=(1220, 1225), parts=[
  WordNode(pos=(1220, 1222), word='cd'),
  WordNode(pos=(1223, 1225), word='..'),
])


8466) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1228, 1251), parts=[
  WordNode(pos=(1228, 1230), word='rm'),
  WordNode(pos=(1231, 1234), word='-rf'),
  WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
  ]),
])


8467) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


8468) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1320, 1380), parts=[
  WordNode(pos=(1320, 1322), word='ln'),
  WordNode(pos=(1323, 1326), word='-sf'),
  WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
  WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
  WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
  ]),
])


8469) openssl version

CommandNode(pos=(1383, 1398), parts=[
  WordNode(pos=(1383, 1390), word='openssl'),
  WordNode(pos=(1391, 1398), word='version'),
])


8470) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


8471) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


8472) mkdir -p "$OTP_PATH"

CommandNode(pos=(1529, 1549), parts=[
  WordNode(pos=(1529, 1534), word='mkdir'),
  WordNode(pos=(1535, 1537), word='-p'),
  WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
  ]),
])


8473) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


8474) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


8475) sha256sum -c -

CommandNode(pos=(1660, 1674), parts=[
  WordNode(pos=(1660, 1669), word='sha256sum'),
  WordNode(pos=(1670, 1672), word='-c'),
  WordNode(pos=(1673, 1674), word='-'),
])


8476) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


8477) cd "$OTP_PATH"

CommandNode(pos=(1765, 1779), parts=[
  WordNode(pos=(1765, 1767), word='cd'),
  WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
  ]),
])


8478) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(1782, 1808), parts=[
  WordNode(pos=(1782, 1788), word='export'),
  WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
  ]),
])


8479) ./otp_build autoconf

CommandNode(pos=(1811, 1831), parts=[
  WordNode(pos=(1811, 1822), word='./otp_build'),
  WordNode(pos=(1823, 1831), word='autoconf'),
])


8480) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


8481) export CFLAGS

CommandNode(pos=(1876, 1889), parts=[
  WordNode(pos=(1876, 1882), word='export'),
  WordNode(pos=(1883, 1889), word='CFLAGS'),
])


8482) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


8483) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


8484) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


8485) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


8486) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


8487) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(2771, 2849), parts=[
  WordNode(pos=(2771, 2775), word='make'),
  WordNode(pos=(2776, 2778), word='-j'),
  WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2782, 2807), parts=[
        WordNode(pos=(2782, 2789), word='getconf'),
        WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
      ]), pos=(2780, 2808)),
  ]),
  WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


8488) make install

CommandNode(pos=(2852, 2864), parts=[
  WordNode(pos=(2852, 2856), word='make'),
  WordNode(pos=(2857, 2864), word='install'),
])


8489) cd ..

CommandNode(pos=(2867, 2872), parts=[
  WordNode(pos=(2867, 2869), word='cd'),
  WordNode(pos=(2870, 2872), word='..'),
])


8490) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(2875, 2969), parts=[
  WordNode(pos=(2875, 2877), word='rm'),
  WordNode(pos=(2878, 2881), word='-rf'),
  WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
  ]),
  WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
])


8491) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


8492) apk add --no-cache --virtual .otp-run-deps $runDeps

CommandNode(pos=(3175, 3226), parts=[
  WordNode(pos=(3175, 3178), word='apk'),
  WordNode(pos=(3179, 3182), word='add'),
  WordNode(pos=(3183, 3193), word='--no-cache'),
  WordNode(pos=(3194, 3203), word='--virtual'),
  WordNode(pos=(3204, 3217), word='.otp-run-deps'),
  WordNode(pos=(3218, 3226), word='$runDeps', parts=[
    ParameterNode(pos=(3218, 3226), value='runDeps'),
  ]),
])


8493) apk del --no-network .build-deps

CommandNode(pos=(3229, 3261), parts=[
  WordNode(pos=(3229, 3232), word='apk'),
  WordNode(pos=(3233, 3236), word='del'),
  WordNode(pos=(3237, 3249), word='--no-network'),
  WordNode(pos=(3250, 3261), word='.build-deps'),
])


8494) openssl version

CommandNode(pos=(3265, 3280), parts=[
  WordNode(pos=(3265, 3272), word='openssl'),
  WordNode(pos=(3273, 3280), word='version'),
])


8495) erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

CommandNode(pos=(3283, 3380), parts=[
  WordNode(pos=(3283, 3286), word='erl'),
  WordNode(pos=(3287, 3295), word='-noshell'),
  WordNode(pos=(3296, 3301), word='-eval'),
  WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
])


8496) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8497) addgroup -g 101 -S rabbitmq

CommandNode(pos=(11, 38), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 26), word='101'),
  WordNode(pos=(27, 29), word='-S'),
  WordNode(pos=(30, 38), word='rabbitmq'),
])


8498) adduser -u 100 -S -h "$RABBITMQ_DATA_DIR" -G rabbitmq rabbitmq

CommandNode(pos=(41, 103), parts=[
  WordNode(pos=(41, 48), word='adduser'),
  WordNode(pos=(49, 51), word='-u'),
  WordNode(pos=(52, 55), word='100'),
  WordNode(pos=(56, 58), word='-S'),
  WordNode(pos=(59, 61), word='-h'),
  WordNode(pos=(62, 82), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(63, 81), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(83, 85), word='-G'),
  WordNode(pos=(86, 94), word='rabbitmq'),
  WordNode(pos=(95, 103), word='rabbitmq'),
])


8499) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(106, 185), parts=[
  WordNode(pos=(106, 111), word='mkdir'),
  WordNode(pos=(112, 114), word='-p'),
  WordNode(pos=(115, 135), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(116, 134), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(136, 149), word='/etc/rabbitmq'),
  WordNode(pos=(150, 167), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(168, 185), word='/var/log/rabbitmq'),
])


8500) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(188, 286), parts=[
  WordNode(pos=(188, 193), word='chown'),
  WordNode(pos=(194, 197), word='-fR'),
  WordNode(pos=(198, 215), word='rabbitmq:rabbitmq'),
  WordNode(pos=(216, 236), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(217, 235), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(237, 250), word='/etc/rabbitmq'),
  WordNode(pos=(251, 268), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(269, 286), word='/var/log/rabbitmq'),
])


8501) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(289, 369), parts=[
  WordNode(pos=(289, 294), word='chmod'),
  WordNode(pos=(295, 298), word='777'),
  WordNode(pos=(299, 319), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(300, 318), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(320, 333), word='/etc/rabbitmq'),
  WordNode(pos=(334, 351), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(352, 369), word='/var/log/rabbitmq'),
])


8502) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(372, 435), parts=[
  WordNode(pos=(372, 374), word='ln'),
  WordNode(pos=(375, 378), word='-sf'),
  WordNode(pos=(379, 414), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(380, 398), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(415, 435), word='/root/.erlang.cookie'),
])


8503) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8504) apk add --no-cache --virtual .build-deps   ca-certificates   gnupg   xz

CommandNode(pos=(12, 83), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 78), word='gnupg'),
  WordNode(pos=(81, 83), word='xz'),
])


8505) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


8506) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


8507) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


8508) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


8509) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(462, 493), parts=[
  WordNode(pos=(462, 468), word='export'),
  WordNode(pos=(469, 493), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(482, 491), parts=[
        WordNode(pos=(482, 488), word='mktemp'),
        WordNode(pos=(489, 491), word='-d'),
      ]), pos=(480, 492)),
  ]),
])


8510) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


8511) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


8512) gpgconf --kill all

CommandNode(pos=(649, 667), parts=[
  WordNode(pos=(649, 656), word='gpgconf'),
  WordNode(pos=(657, 663), word='--kill'),
  WordNode(pos=(664, 667), word='all'),
])


8513) rm -rf "$GNUPGHOME"

CommandNode(pos=(670, 689), parts=[
  WordNode(pos=(670, 672), word='rm'),
  WordNode(pos=(673, 676), word='-rf'),
  WordNode(pos=(677, 689), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(678, 688), value='GNUPGHOME'),
  ]),
])


8514) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(693, 718), parts=[
  WordNode(pos=(693, 698), word='mkdir'),
  WordNode(pos=(699, 701), word='-p'),
  WordNode(pos=(702, 718), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(703, 717), value='RABBITMQ_HOME'),
  ]),
])


8515) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


8516) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(818, 842), parts=[
  WordNode(pos=(818, 820), word='rm'),
  WordNode(pos=(821, 824), word='-rf'),
  WordNode(pos=(825, 842), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(826, 840), value='RABBITMQ_PATH'),
  ]),
])


8517) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(845, 928), parts=[
  WordNode(pos=(845, 849), word='grep'),
  WordNode(pos=(850, 853), word='-qE'),
  WordNode(pos=(854, 888), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(889, 928), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(890, 904), value='RABBITMQ_HOME'),
  ]),
])


8518) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(931, 1010), parts=[
  WordNode(pos=(931, 934), word='sed'),
  WordNode(pos=(935, 937), word='-i'),
  WordNode(pos=(938, 970), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(971, 1010), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(972, 986), value='RABBITMQ_HOME'),
  ]),
])


8519) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1013, 1077), parts=[
  WordNode(pos=(1013, 1017), word='grep'),
  WordNode(pos=(1018, 1021), word='-qE'),
  WordNode(pos=(1022, 1037), word='^SYS_PREFIX=$'),
  WordNode(pos=(1038, 1077), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1039, 1053), value='RABBITMQ_HOME'),
  ]),
])


8520) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1080, 1123), parts=[
  WordNode(pos=(1080, 1085), word='chown'),
  WordNode(pos=(1086, 1088), word='-R'),
  WordNode(pos=(1089, 1106), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1107, 1123), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1108, 1122), value='RABBITMQ_HOME'),
  ]),
])


8521) apk del .build-deps

CommandNode(pos=(1127, 1146), parts=[
  WordNode(pos=(1127, 1130), word='apk'),
  WordNode(pos=(1131, 1134), word='del'),
  WordNode(pos=(1135, 1146), word='.build-deps'),
])


8522) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1150, 1194), parts=[
  WordNode(pos=(1150, 1151), word='['),
  WordNode(pos=(1152, 1153), word='!'),
  WordNode(pos=(1154, 1156), word='-e'),
  WordNode(pos=(1157, 1192), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1158, 1176), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1193, 1194), word=']'),
])


8523) su-exec rabbitmq rabbitmqctl help

CommandNode(pos=(1197, 1230), parts=[
  WordNode(pos=(1197, 1204), word='su-exec'),
  WordNode(pos=(1205, 1213), word='rabbitmq'),
  WordNode(pos=(1214, 1225), word='rabbitmqctl'),
  WordNode(pos=(1226, 1230), word='help'),
])


8524) su-exec rabbitmq rabbitmqctl list_ciphers

CommandNode(pos=(1233, 1274), parts=[
  WordNode(pos=(1233, 1240), word='su-exec'),
  WordNode(pos=(1241, 1249), word='rabbitmq'),
  WordNode(pos=(1250, 1261), word='rabbitmqctl'),
  WordNode(pos=(1262, 1274), word='list_ciphers'),
])


8525) su-exec rabbitmq rabbitmq-plugins list

CommandNode(pos=(1277, 1315), parts=[
  WordNode(pos=(1277, 1284), word='su-exec'),
  WordNode(pos=(1285, 1293), word='rabbitmq'),
  WordNode(pos=(1294, 1310), word='rabbitmq-plugins'),
  WordNode(pos=(1311, 1315), word='list'),
])


8526) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1318, 1356), parts=[
  WordNode(pos=(1318, 1320), word='rm'),
  WordNode(pos=(1321, 1356), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1322, 1340), value='RABBITMQ_DATA_DIR'),
  ]),
])


8527) ln -sf /opt/rabbitmq/plugins /plugins

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 6), word='-sf'),
  WordNode(pos=(7, 28), word='/opt/rabbitmq/plugins'),
  WordNode(pos=(29, 37), word='/plugins'),
])


8528) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8529) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


8530) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


8531) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


8532) apk add --no-cache   gmp-dev

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 28), word='gmp-dev'),
])


8533) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


8534) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


8535) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


8536) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8537) apk add --no-cache --virtual .ruby-builddeps   autoconf   bison   bzip2   bzip2-dev   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gdbm-dev   glib-dev   libc-dev   libffi-dev   libxml2-dev   libxslt-dev   linux-headers   make   ncurses-dev   openssl   openssl-dev   procps   readline-dev   ruby   tar   xz   yaml-dev   zlib-dev

CommandNode(pos=(13, 347), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 57), word='.ruby-builddeps'),
  WordNode(pos=(60, 68), word='autoconf'),
  WordNode(pos=(71, 76), word='bison'),
  WordNode(pos=(79, 84), word='bzip2'),
  WordNode(pos=(87, 96), word='bzip2-dev'),
  WordNode(pos=(99, 114), word='ca-certificates'),
  WordNode(pos=(117, 126), word='coreutils'),
  WordNode(pos=(129, 137), word='dpkg-dev'),
  WordNode(pos=(138, 142), word='dpkg'),
  WordNode(pos=(145, 148), word='gcc'),
  WordNode(pos=(151, 159), word='gdbm-dev'),
  WordNode(pos=(162, 170), word='glib-dev'),
  WordNode(pos=(173, 181), word='libc-dev'),
  WordNode(pos=(184, 194), word='libffi-dev'),
  WordNode(pos=(197, 208), word='libxml2-dev'),
  WordNode(pos=(211, 222), word='libxslt-dev'),
  WordNode(pos=(225, 238), word='linux-headers'),
  WordNode(pos=(241, 245), word='make'),
  WordNode(pos=(248, 259), word='ncurses-dev'),
  WordNode(pos=(262, 269), word='openssl'),
  WordNode(pos=(272, 283), word='openssl-dev'),
  WordNode(pos=(286, 292), word='procps'),
  WordNode(pos=(295, 307), word='readline-dev'),
  WordNode(pos=(310, 314), word='ruby'),
  WordNode(pos=(317, 320), word='tar'),
  WordNode(pos=(323, 325), word='xz'),
  WordNode(pos=(328, 336), word='yaml-dev'),
  WordNode(pos=(339, 347), word='zlib-dev'),
])


8538) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


8539) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


8540) sha256sum -c -

CommandNode(pos=(504, 518), parts=[
  WordNode(pos=(504, 513), word='sha256sum'),
  WordNode(pos=(514, 516), word='-c'),
  WordNode(pos=(517, 518), word='-'),
])


8541) mkdir -p /usr/src/ruby

CommandNode(pos=(524, 546), parts=[
  WordNode(pos=(524, 529), word='mkdir'),
  WordNode(pos=(530, 532), word='-p'),
  WordNode(pos=(533, 546), word='/usr/src/ruby'),
])


8542) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(551, 609), parts=[
  WordNode(pos=(551, 554), word='tar'),
  WordNode(pos=(555, 559), word='-xJf'),
  WordNode(pos=(560, 571), word='ruby.tar.xz'),
  WordNode(pos=(572, 574), word='-C'),
  WordNode(pos=(575, 588), word='/usr/src/ruby'),
  WordNode(pos=(589, 609), word='--strip-components=1'),
])


8543) rm ruby.tar.xz

CommandNode(pos=(614, 628), parts=[
  WordNode(pos=(614, 616), word='rm'),
  WordNode(pos=(617, 628), word='ruby.tar.xz'),
])


8544) cd /usr/src/ruby

CommandNode(pos=(634, 650), parts=[
  WordNode(pos=(634, 636), word='cd'),
  WordNode(pos=(637, 650), word='/usr/src/ruby'),
])


8545) wget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'

CommandNode(pos=(656, 807), parts=[
  WordNode(pos=(656, 660), word='wget'),
  WordNode(pos=(661, 663), word='-O'),
  WordNode(pos=(664, 688), word='thread-stack-fix.patch'),
  WordNode(pos=(689, 807), word='https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'),
])


8546) echo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'

CommandNode(pos=(812, 907), parts=[
  WordNode(pos=(812, 816), word='echo'),
  WordNode(pos=(817, 907), word='3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'),
])


8547) sha256sum -c -

CommandNode(pos=(910, 924), parts=[
  WordNode(pos=(910, 919), word='sha256sum'),
  WordNode(pos=(920, 922), word='-c'),
  WordNode(pos=(923, 924), word='-'),
])


8548) patch -p1 -i thread-stack-fix.patch

CommandNode(pos=(929, 964), parts=[
  WordNode(pos=(929, 934), word='patch'),
  WordNode(pos=(935, 938), word='-p1'),
  WordNode(pos=(939, 941), word='-i'),
  WordNode(pos=(942, 964), word='thread-stack-fix.patch'),
])


8549) rm thread-stack-fix.patch

CommandNode(pos=(969, 994), parts=[
  WordNode(pos=(969, 971), word='rm'),
  WordNode(pos=(972, 994), word='thread-stack-fix.patch'),
])


8550) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(1004, 1038), parts=[
  WordNode(pos=(1004, 1008), word='echo'),
  WordNode(pos=(1009, 1038), word='#define ENABLE_PATH_CHECK 0'),
])


8551) echo

CommandNode(pos=(1042, 1046), parts=[
  WordNode(pos=(1042, 1046), word='echo'),
])


8552) cat file.c

CommandNode(pos=(1050, 1060), parts=[
  WordNode(pos=(1050, 1053), word='cat'),
  WordNode(pos=(1054, 1060), word='file.c'),
])


8553) mv file.c.new file.c

CommandNode(pos=(1082, 1102), parts=[
  WordNode(pos=(1082, 1084), word='mv'),
  WordNode(pos=(1085, 1095), word='file.c.new'),
  WordNode(pos=(1096, 1102), word='file.c'),
])


8554) autoconf

CommandNode(pos=(1108, 1116), parts=[
  WordNode(pos=(1108, 1116), word='autoconf'),
])


8555) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


8556) export ac_cv_func_isnan=yes ac_cv_func_isinf=yes

CommandNode(pos=(1183, 1231), parts=[
  WordNode(pos=(1183, 1189), word='export'),
  WordNode(pos=(1190, 1210), word='ac_cv_func_isnan=yes'),
  WordNode(pos=(1211, 1231), word='ac_cv_func_isinf=yes'),
])


8557) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


8558) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


8559) make install

CommandNode(pos=(1338, 1350), parts=[
  WordNode(pos=(1338, 1342), word='make'),
  WordNode(pos=(1343, 1350), word='install'),
])


8560) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


8561) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


8562) apk del --no-network .ruby-builddeps

CommandNode(pos=(1686, 1722), parts=[
  WordNode(pos=(1686, 1689), word='apk'),
  WordNode(pos=(1690, 1693), word='del'),
  WordNode(pos=(1694, 1706), word='--no-network'),
  WordNode(pos=(1707, 1722), word='.ruby-builddeps'),
])


8563) cd /

CommandNode(pos=(1727, 1731), parts=[
  WordNode(pos=(1727, 1729), word='cd'),
  WordNode(pos=(1730, 1731), word='/'),
])


8564) rm -r /usr/src/ruby

CommandNode(pos=(1736, 1755), parts=[
  WordNode(pos=(1736, 1738), word='rm'),
  WordNode(pos=(1739, 1741), word='-r'),
  WordNode(pos=(1742, 1755), word='/usr/src/ruby'),
])


8565) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(1760, 1856), parts=[
  WordNode(pos=(1760, 1764), word='ruby'),
  WordNode(pos=(1765, 1767), word='-e'),
  WordNode(pos=(1768, 1856), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


8566) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1861, 1900), parts=[
  WordNode(pos=(1861, 1864), word='gem'),
  WordNode(pos=(1865, 1871), word='update'),
  WordNode(pos=(1872, 1880), word='--system'),
  WordNode(pos=(1881, 1900), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1882, 1899), value='RUBYGEMS_VERSION'),
  ]),
])


8567) rm -r /root/.gem/

CommandNode(pos=(1904, 1921), parts=[
  WordNode(pos=(1904, 1906), word='rm'),
  WordNode(pos=(1907, 1909), word='-r'),
  WordNode(pos=(1910, 1921), word='/root/.gem/'),
])


8568) ruby --version

CommandNode(pos=(1926, 1940), parts=[
  WordNode(pos=(1926, 1930), word='ruby'),
  WordNode(pos=(1931, 1940), word='--version'),
])


8569) gem --version

CommandNode(pos=(1944, 1957), parts=[
  WordNode(pos=(1944, 1947), word='gem'),
  WordNode(pos=(1948, 1957), word='--version'),
])


8570) bundle --version

CommandNode(pos=(1961, 1977), parts=[
  WordNode(pos=(1961, 1967), word='bundle'),
  WordNode(pos=(1968, 1977), word='--version'),
])


8571) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


8572) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


8573) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8574) apt-get install -y --no-install-recommends   fontconfig-config   fonts-dejavu-core   geoip-database   init-system-helpers   libarchive-extract-perl   libexpat1   libfontconfig1   libfreetype6   libgcrypt11   libgd3   libgdbm3   libgeoip1   libgpg-error0   libjbig0   libjpeg8   liblog-message-perl   liblog-message-simple-perl   libmodule-pluggable-perl   libpng12-0   libpod-latex-perl   libssl1.0.0   libterm-ui-perl   libtext-soundex-perl   libtiff5   libvpx1   libx11-6   libx11-data   libxau6   libxcb1   libxdmcp6   libxml2   libxpm4   libxslt1.1   perl   perl-modules   rename   sgml-base   ucf   xml-core

CommandNode(pos=(18, 630), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 80), word='fontconfig-config'),
  WordNode(pos=(83, 100), word='fonts-dejavu-core'),
  WordNode(pos=(103, 117), word='geoip-database'),
  WordNode(pos=(120, 139), word='init-system-helpers'),
  WordNode(pos=(142, 165), word='libarchive-extract-perl'),
  WordNode(pos=(168, 177), word='libexpat1'),
  WordNode(pos=(180, 194), word='libfontconfig1'),
  WordNode(pos=(197, 209), word='libfreetype6'),
  WordNode(pos=(212, 223), word='libgcrypt11'),
  WordNode(pos=(226, 232), word='libgd3'),
  WordNode(pos=(235, 243), word='libgdbm3'),
  WordNode(pos=(246, 255), word='libgeoip1'),
  WordNode(pos=(258, 271), word='libgpg-error0'),
  WordNode(pos=(274, 282), word='libjbig0'),
  WordNode(pos=(285, 293), word='libjpeg8'),
  WordNode(pos=(296, 315), word='liblog-message-perl'),
  WordNode(pos=(318, 344), word='liblog-message-simple-perl'),
  WordNode(pos=(347, 371), word='libmodule-pluggable-perl'),
  WordNode(pos=(374, 384), word='libpng12-0'),
  WordNode(pos=(387, 404), word='libpod-latex-perl'),
  WordNode(pos=(407, 418), word='libssl1.0.0'),
  WordNode(pos=(421, 436), word='libterm-ui-perl'),
  WordNode(pos=(439, 459), word='libtext-soundex-perl'),
  WordNode(pos=(462, 470), word='libtiff5'),
  WordNode(pos=(473, 480), word='libvpx1'),
  WordNode(pos=(483, 491), word='libx11-6'),
  WordNode(pos=(494, 505), word='libx11-data'),
  WordNode(pos=(508, 515), word='libxau6'),
  WordNode(pos=(518, 525), word='libxcb1'),
  WordNode(pos=(528, 537), word='libxdmcp6'),
  WordNode(pos=(540, 547), word='libxml2'),
  WordNode(pos=(550, 557), word='libxpm4'),
  WordNode(pos=(560, 570), word='libxslt1.1'),
  WordNode(pos=(573, 577), word='perl'),
  WordNode(pos=(580, 592), word='perl-modules'),
  WordNode(pos=(595, 601), word='rename'),
  WordNode(pos=(604, 613), word='sgml-base'),
  WordNode(pos=(616, 619), word='ucf'),
  WordNode(pos=(622, 630), word='xml-core'),
])


8575) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(635, 662), parts=[
  WordNode(pos=(635, 637), word='rm'),
  WordNode(pos=(638, 641), word='-rf'),
  WordNode(pos=(642, 662), word='/var/lib/apt/lists/*'),
])


8576) gpg --keyserver pgp.mit.edu --recv-key  A09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D  4C2C85E705DC730833990C38A9376139A524C53E  B0F4253373F8F6F510D42178520A9993A1C052F8  65506C02EFC250F1B7A3D694ECF0E90B2C172083  7338973069ED3F443F4D37DFA64FD5B17ADB39A8  6E067260B83DCF2CA93C566F518509686C7E5E82  573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62

CommandNode(pos=(0, 332), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 15), word='--keyserver'),
  WordNode(pos=(16, 27), word='pgp.mit.edu'),
  WordNode(pos=(28, 38), word='--recv-key'),
  WordNode(pos=(40, 80), word='A09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D'),
  WordNode(pos=(82, 122), word='4C2C85E705DC730833990C38A9376139A524C53E'),
  WordNode(pos=(124, 164), word='B0F4253373F8F6F510D42178520A9993A1C052F8'),
  WordNode(pos=(166, 206), word='65506C02EFC250F1B7A3D694ECF0E90B2C172083'),
  WordNode(pos=(208, 248), word='7338973069ED3F443F4D37DFA64FD5B17ADB39A8'),
  WordNode(pos=(250, 290), word='6E067260B83DCF2CA93C566F518509686C7E5E82'),
  WordNode(pos=(292, 332), word='573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62'),
])


8577) buildDeps="   ca-certificates   curl   gcc   libc-dev-bin   libc6-dev   libexpat1-dev   libfontconfig1-dev   libfreetype6-dev   libgd-dev   libgd2-dev   libgeoip-dev   libice-dev   libjbig-dev   libjpeg8-dev   liblzma-dev   libpcre3-dev   libperl-dev   libpng12-dev   libpthread-stubs0-dev   libsm-dev   libssl-dev   libssl-dev   libtiff5-dev   libvpx-dev   libx11-dev   libxau-dev   libxcb1-dev   libxdmcp-dev   libxml2-dev   libxpm-dev   libxslt1-dev   libxt-dev   linux-libc-dev   make   manpages-dev   x11proto-core-dev   x11proto-input-dev   x11proto-kb-dev   xtrans-dev   zlib1g-dev  "

CommandNode(pos=(0, 591), parts=[
  AssignmentNode(pos=(0, 591), word='buildDeps=   ca-certificates   curl   gcc   libc-dev-bin   libc6-dev   libexpat1-dev   libfontconfig1-dev   libfreetype6-dev   libgd-dev   libgd2-dev   libgeoip-dev   libice-dev   libjbig-dev   libjpeg8-dev   liblzma-dev   libpcre3-dev   libperl-dev   libpng12-dev   libpthread-stubs0-dev   libsm-dev   libssl-dev   libssl-dev   libtiff5-dev   libvpx-dev   libx11-dev   libxau-dev   libxcb1-dev   libxdmcp-dev   libxml2-dev   libxpm-dev   libxslt1-dev   libxt-dev   linux-libc-dev   make   manpages-dev   x11proto-core-dev   x11proto-input-dev   x11proto-kb-dev   xtrans-dev   zlib1g-dev  '),
])


8578) apt-get update

CommandNode(pos=(594, 608), parts=[
  WordNode(pos=(594, 601), word='apt-get'),
  WordNode(pos=(602, 608), word='update'),
])


8579) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(612, 665), parts=[
  WordNode(pos=(612, 619), word='apt-get'),
  WordNode(pos=(620, 627), word='install'),
  WordNode(pos=(628, 630), word='-y'),
  WordNode(pos=(631, 654), word='--no-install-recommends'),
  WordNode(pos=(655, 665), word='$buildDeps', parts=[
    ParameterNode(pos=(655, 665), value='buildDeps'),
  ]),
])


8580) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(669, 696), parts=[
  WordNode(pos=(669, 671), word='rm'),
  WordNode(pos=(672, 675), word='-rf'),
  WordNode(pos=(676, 696), word='/var/lib/apt/lists/*'),
])


8581) curl -SL "http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz" -o nginx.tar.gz

CommandNode(pos=(701, 781), parts=[
  WordNode(pos=(701, 705), word='curl'),
  WordNode(pos=(706, 709), word='-SL'),
  WordNode(pos=(710, 765), word='http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz', parts=[
    ParameterNode(pos=(743, 757), value='NGINX_VERSION'),
  ]),
  WordNode(pos=(766, 768), word='-o'),
  WordNode(pos=(769, 781), word='nginx.tar.gz'),
])


8582) curl -SL "http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc" -o nginx.tar.gz.asc

CommandNode(pos=(786, 874), parts=[
  WordNode(pos=(786, 790), word='curl'),
  WordNode(pos=(791, 794), word='-SL'),
  WordNode(pos=(795, 854), word='http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc', parts=[
    ParameterNode(pos=(828, 842), value='NGINX_VERSION'),
  ]),
  WordNode(pos=(855, 857), word='-o'),
  WordNode(pos=(858, 874), word='nginx.tar.gz.asc'),
])


8583) gpg --verify nginx.tar.gz.asc

CommandNode(pos=(879, 908), parts=[
  WordNode(pos=(879, 882), word='gpg'),
  WordNode(pos=(883, 891), word='--verify'),
  WordNode(pos=(892, 908), word='nginx.tar.gz.asc'),
])


8584) mkdir -p /usr/src/nginx

CommandNode(pos=(913, 936), parts=[
  WordNode(pos=(913, 918), word='mkdir'),
  WordNode(pos=(919, 921), word='-p'),
  WordNode(pos=(922, 936), word='/usr/src/nginx'),
])


8585) tar -xvf nginx.tar.gz -C /usr/src/nginx --strip-components=1

CommandNode(pos=(941, 1001), parts=[
  WordNode(pos=(941, 944), word='tar'),
  WordNode(pos=(945, 949), word='-xvf'),
  WordNode(pos=(950, 962), word='nginx.tar.gz'),
  WordNode(pos=(963, 965), word='-C'),
  WordNode(pos=(966, 980), word='/usr/src/nginx'),
  WordNode(pos=(981, 1001), word='--strip-components=1'),
])


8586) rm nginx.tar.gz*

CommandNode(pos=(1006, 1022), parts=[
  WordNode(pos=(1006, 1008), word='rm'),
  WordNode(pos=(1009, 1022), word='nginx.tar.gz*'),
])


8587) cd /usr/src/nginx

CommandNode(pos=(1027, 1044), parts=[
  WordNode(pos=(1027, 1029), word='cd'),
  WordNode(pos=(1030, 1044), word='/usr/src/nginx'),
])


8588) ./configure   --user=www-data   --group=www-data   --prefix=/usr/local/nginx   --conf-path=/etc/nginx.conf   --http-log-path=/proc/self/fd/1   --error-log-path=/proc/self/fd/2   --with-http_addition_module   --with-http_auth_request_module   --with-http_dav_module   --with-http_geoip_module   --with-http_gzip_static_module   --with-http_image_filter_module   --with-http_perl_module   --with-http_realip_module   --with-http_spdy_module   --with-http_ssl_module   --with-http_stub_status_module   --with-http_sub_module   --with-http_xslt_module   --with-ipv6   --with-mail   --with-mail_ssl_module   --with-pcre-jit

CommandNode(pos=(1049, 1667), parts=[
  WordNode(pos=(1049, 1060), word='./configure'),
  WordNode(pos=(1063, 1078), word='--user=www-data'),
  WordNode(pos=(1081, 1097), word='--group=www-data'),
  WordNode(pos=(1100, 1125), word='--prefix=/usr/local/nginx'),
  WordNode(pos=(1128, 1155), word='--conf-path=/etc/nginx.conf'),
  WordNode(pos=(1158, 1189), word='--http-log-path=/proc/self/fd/1'),
  WordNode(pos=(1192, 1224), word='--error-log-path=/proc/self/fd/2'),
  WordNode(pos=(1227, 1254), word='--with-http_addition_module'),
  WordNode(pos=(1257, 1288), word='--with-http_auth_request_module'),
  WordNode(pos=(1291, 1313), word='--with-http_dav_module'),
  WordNode(pos=(1316, 1340), word='--with-http_geoip_module'),
  WordNode(pos=(1343, 1373), word='--with-http_gzip_static_module'),
  WordNode(pos=(1376, 1407), word='--with-http_image_filter_module'),
  WordNode(pos=(1410, 1433), word='--with-http_perl_module'),
  WordNode(pos=(1436, 1461), word='--with-http_realip_module'),
  WordNode(pos=(1464, 1487), word='--with-http_spdy_module'),
  WordNode(pos=(1490, 1512), word='--with-http_ssl_module'),
  WordNode(pos=(1515, 1545), word='--with-http_stub_status_module'),
  WordNode(pos=(1548, 1570), word='--with-http_sub_module'),
  WordNode(pos=(1573, 1596), word='--with-http_xslt_module'),
  WordNode(pos=(1599, 1610), word='--with-ipv6'),
  WordNode(pos=(1613, 1624), word='--with-mail'),
  WordNode(pos=(1627, 1649), word='--with-mail_ssl_module'),
  WordNode(pos=(1652, 1667), word='--with-pcre-jit'),
])


8589) make -j"$(nproc)"

CommandNode(pos=(1672, 1689), parts=[
  WordNode(pos=(1672, 1676), word='make'),
  WordNode(pos=(1677, 1689), word='-j$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1682, 1687), parts=[
        WordNode(pos=(1682, 1687), word='nproc'),
      ]), pos=(1680, 1688)),
  ]),
])


8590) make install

CommandNode(pos=(1694, 1706), parts=[
  WordNode(pos=(1694, 1698), word='make'),
  WordNode(pos=(1699, 1706), word='install'),
])


8591) cd /

CommandNode(pos=(1711, 1715), parts=[
  WordNode(pos=(1711, 1713), word='cd'),
  WordNode(pos=(1714, 1715), word='/'),
])


8592) rm -r /usr/src/nginx

CommandNode(pos=(1720, 1740), parts=[
  WordNode(pos=(1720, 1722), word='rm'),
  WordNode(pos=(1723, 1725), word='-r'),
  WordNode(pos=(1726, 1740), word='/usr/src/nginx'),
])


8593) chown -R www-data:www-data /usr/local/nginx

CommandNode(pos=(1745, 1788), parts=[
  WordNode(pos=(1745, 1750), word='chown'),
  WordNode(pos=(1751, 1753), word='-R'),
  WordNode(pos=(1754, 1771), word='www-data:www-data'),
  WordNode(pos=(1772, 1788), word='/usr/local/nginx'),
])


8594) echo

CommandNode(pos=(1797, 1801), parts=[
  WordNode(pos=(1797, 1801), word='echo'),
])


8595) echo '# stay in the foreground so Docker has a process to track'

CommandNode(pos=(1805, 1869), parts=[
  WordNode(pos=(1805, 1809), word='echo'),
  WordNode(pos=(1810, 1869), word='# stay in the foreground so Docker has a process to track'),
])


8596) echo 'daemon off;'

CommandNode(pos=(1873, 1891), parts=[
  WordNode(pos=(1873, 1877), word='echo'),
  WordNode(pos=(1878, 1891), word='daemon off;'),
])


8597) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(1919, 1960), parts=[
  WordNode(pos=(1919, 1926), word='apt-get'),
  WordNode(pos=(1927, 1932), word='purge'),
  WordNode(pos=(1933, 1935), word='-y'),
  WordNode(pos=(1936, 1949), word='--auto-remove'),
  WordNode(pos=(1950, 1960), word='$buildDeps', parts=[
    ParameterNode(pos=(1950, 1960), value='buildDeps'),
  ]),
])


8598) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


8599) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8600) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


8601) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


8602) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


8603) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


8604) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


8605) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


8606) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


8607) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


8608) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


8609) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


8610) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


8611) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


8612) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


8613) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


8614) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


8615) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


8616) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


8617) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


8618) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


8619) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


8620) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


8621) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


8622) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


8623) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


8624) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


8625) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


8626) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


8627) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


8628) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


8629) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


8630) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


8631) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


8632) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


8633) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


8634) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


8635) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


8636) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


8637) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


8638) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


8639) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


8640) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


8641) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


8642) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


8643) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


8644) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


8645) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


8646) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


8647) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


8648) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


8649) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


8650) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


8651) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


8652) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


8653) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


8654) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


8655) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


8656) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


8657) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


8658) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


8659) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


8660) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


8661) apk add --no-cache   'su-exec>=0.2'   bash   procps

CommandNode(pos=(0, 51), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 35), word='su-exec>=0.2'),
  WordNode(pos=(38, 42), word='bash'),
  WordNode(pos=(45, 51), word='procps'),
])


8662) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8663) apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev

CommandNode(pos=(12, 159), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 63), word='autoconf'),
  WordNode(pos=(66, 81), word='ca-certificates'),
  WordNode(pos=(84, 92), word='dpkg-dev'),
  WordNode(pos=(93, 97), word='dpkg'),
  WordNode(pos=(100, 103), word='gcc'),
  WordNode(pos=(106, 111), word='gnupg'),
  WordNode(pos=(114, 122), word='libc-dev'),
  WordNode(pos=(125, 138), word='linux-headers'),
  WordNode(pos=(141, 145), word='make'),
  WordNode(pos=(148, 159), word='ncurses-dev'),
])


8664) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


8665) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


8666) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(308, 345), parts=[
  AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


8667) mkdir /usr/local/src

CommandNode(pos=(349, 369), parts=[
  WordNode(pos=(349, 354), word='mkdir'),
  WordNode(pos=(355, 369), word='/usr/local/src'),
])


8668) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


8669) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


8670) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(521, 552), parts=[
  WordNode(pos=(521, 527), word='export'),
  WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(541, 550), parts=[
        WordNode(pos=(541, 547), word='mktemp'),
        WordNode(pos=(548, 550), word='-d'),
      ]), pos=(539, 551)),
  ]),
])


8671) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


8672) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


8673) gpgconf --kill all

CommandNode(pos=(735, 753), parts=[
  WordNode(pos=(735, 742), word='gpgconf'),
  WordNode(pos=(743, 749), word='--kill'),
  WordNode(pos=(750, 753), word='all'),
])


8674) rm -rf "$GNUPGHOME"

CommandNode(pos=(756, 775), parts=[
  WordNode(pos=(756, 758), word='rm'),
  WordNode(pos=(759, 762), word='-rf'),
  WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(764, 774), value='GNUPGHOME'),
  ]),
])


8675) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


8676) sha256sum -c -

CommandNode(pos=(832, 846), parts=[
  WordNode(pos=(832, 841), word='sha256sum'),
  WordNode(pos=(842, 844), word='-c'),
  WordNode(pos=(845, 846), word='-'),
])


8677) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(849, 873), parts=[
  WordNode(pos=(849, 854), word='mkdir'),
  WordNode(pos=(855, 857), word='-p'),
  WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
  ]),
])


8678) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


8679) cd "$OPENSSL_PATH"

CommandNode(pos=(972, 990), parts=[
  WordNode(pos=(972, 974), word='cd'),
  WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
  ]),
])


8680) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


8681) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1145, 1183), parts=[
  WordNode(pos=(1145, 1149), word='make'),
  WordNode(pos=(1150, 1152), word='-j'),
  WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1156, 1181), parts=[
        WordNode(pos=(1156, 1163), word='getconf'),
        WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
      ]), pos=(1154, 1182)),
  ]),
])


8682) make install_sw install_ssldirs

CommandNode(pos=(1186, 1217), parts=[
  WordNode(pos=(1186, 1190), word='make'),
  WordNode(pos=(1191, 1201), word='install_sw'),
  WordNode(pos=(1202, 1217), word='install_ssldirs'),
])


8683) cd ..

CommandNode(pos=(1220, 1225), parts=[
  WordNode(pos=(1220, 1222), word='cd'),
  WordNode(pos=(1223, 1225), word='..'),
])


8684) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1228, 1251), parts=[
  WordNode(pos=(1228, 1230), word='rm'),
  WordNode(pos=(1231, 1234), word='-rf'),
  WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
  ]),
])


8685) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


8686) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1320, 1380), parts=[
  WordNode(pos=(1320, 1322), word='ln'),
  WordNode(pos=(1323, 1326), word='-sf'),
  WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
  WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
  WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
  ]),
])


8687) openssl version

CommandNode(pos=(1383, 1398), parts=[
  WordNode(pos=(1383, 1390), word='openssl'),
  WordNode(pos=(1391, 1398), word='version'),
])


8688) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


8689) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


8690) mkdir -p "$OTP_PATH"

CommandNode(pos=(1529, 1549), parts=[
  WordNode(pos=(1529, 1534), word='mkdir'),
  WordNode(pos=(1535, 1537), word='-p'),
  WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
  ]),
])


8691) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


8692) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


8693) sha256sum -c -

CommandNode(pos=(1660, 1674), parts=[
  WordNode(pos=(1660, 1669), word='sha256sum'),
  WordNode(pos=(1670, 1672), word='-c'),
  WordNode(pos=(1673, 1674), word='-'),
])


8694) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


8695) cd "$OTP_PATH"

CommandNode(pos=(1765, 1779), parts=[
  WordNode(pos=(1765, 1767), word='cd'),
  WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
  ]),
])


8696) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(1782, 1808), parts=[
  WordNode(pos=(1782, 1788), word='export'),
  WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
  ]),
])


8697) ./otp_build autoconf

CommandNode(pos=(1811, 1831), parts=[
  WordNode(pos=(1811, 1822), word='./otp_build'),
  WordNode(pos=(1823, 1831), word='autoconf'),
])


8698) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


8699) export CFLAGS

CommandNode(pos=(1876, 1889), parts=[
  WordNode(pos=(1876, 1882), word='export'),
  WordNode(pos=(1883, 1889), word='CFLAGS'),
])


8700) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


8701) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


8702) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


8703) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


8704) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


8705) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(2771, 2849), parts=[
  WordNode(pos=(2771, 2775), word='make'),
  WordNode(pos=(2776, 2778), word='-j'),
  WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2782, 2807), parts=[
        WordNode(pos=(2782, 2789), word='getconf'),
        WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
      ]), pos=(2780, 2808)),
  ]),
  WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


8706) make install

CommandNode(pos=(2852, 2864), parts=[
  WordNode(pos=(2852, 2856), word='make'),
  WordNode(pos=(2857, 2864), word='install'),
])


8707) cd ..

CommandNode(pos=(2867, 2872), parts=[
  WordNode(pos=(2867, 2869), word='cd'),
  WordNode(pos=(2870, 2872), word='..'),
])


8708) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(2875, 2969), parts=[
  WordNode(pos=(2875, 2877), word='rm'),
  WordNode(pos=(2878, 2881), word='-rf'),
  WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
  ]),
  WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
])


8709) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


8710) apk add --no-cache --virtual .otp-run-deps $runDeps

CommandNode(pos=(3175, 3226), parts=[
  WordNode(pos=(3175, 3178), word='apk'),
  WordNode(pos=(3179, 3182), word='add'),
  WordNode(pos=(3183, 3193), word='--no-cache'),
  WordNode(pos=(3194, 3203), word='--virtual'),
  WordNode(pos=(3204, 3217), word='.otp-run-deps'),
  WordNode(pos=(3218, 3226), word='$runDeps', parts=[
    ParameterNode(pos=(3218, 3226), value='runDeps'),
  ]),
])


8711) apk del --no-network .build-deps

CommandNode(pos=(3229, 3261), parts=[
  WordNode(pos=(3229, 3232), word='apk'),
  WordNode(pos=(3233, 3236), word='del'),
  WordNode(pos=(3237, 3249), word='--no-network'),
  WordNode(pos=(3250, 3261), word='.build-deps'),
])


8712) openssl version

CommandNode(pos=(3265, 3280), parts=[
  WordNode(pos=(3265, 3272), word='openssl'),
  WordNode(pos=(3273, 3280), word='version'),
])


8713) erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

CommandNode(pos=(3283, 3380), parts=[
  WordNode(pos=(3283, 3286), word='erl'),
  WordNode(pos=(3287, 3295), word='-noshell'),
  WordNode(pos=(3296, 3301), word='-eval'),
  WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
])


8714) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8715) addgroup -g 101 -S rabbitmq

CommandNode(pos=(11, 38), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-g'),
  WordNode(pos=(23, 26), word='101'),
  WordNode(pos=(27, 29), word='-S'),
  WordNode(pos=(30, 38), word='rabbitmq'),
])


8716) adduser -u 100 -S -h "$RABBITMQ_DATA_DIR" -G rabbitmq rabbitmq

CommandNode(pos=(41, 103), parts=[
  WordNode(pos=(41, 48), word='adduser'),
  WordNode(pos=(49, 51), word='-u'),
  WordNode(pos=(52, 55), word='100'),
  WordNode(pos=(56, 58), word='-S'),
  WordNode(pos=(59, 61), word='-h'),
  WordNode(pos=(62, 82), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(63, 81), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(83, 85), word='-G'),
  WordNode(pos=(86, 94), word='rabbitmq'),
  WordNode(pos=(95, 103), word='rabbitmq'),
])


8717) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(106, 185), parts=[
  WordNode(pos=(106, 111), word='mkdir'),
  WordNode(pos=(112, 114), word='-p'),
  WordNode(pos=(115, 135), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(116, 134), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(136, 149), word='/etc/rabbitmq'),
  WordNode(pos=(150, 167), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(168, 185), word='/var/log/rabbitmq'),
])


8718) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(188, 286), parts=[
  WordNode(pos=(188, 193), word='chown'),
  WordNode(pos=(194, 197), word='-fR'),
  WordNode(pos=(198, 215), word='rabbitmq:rabbitmq'),
  WordNode(pos=(216, 236), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(217, 235), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(237, 250), word='/etc/rabbitmq'),
  WordNode(pos=(251, 268), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(269, 286), word='/var/log/rabbitmq'),
])


8719) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(289, 369), parts=[
  WordNode(pos=(289, 294), word='chmod'),
  WordNode(pos=(295, 298), word='777'),
  WordNode(pos=(299, 319), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(300, 318), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(320, 333), word='/etc/rabbitmq'),
  WordNode(pos=(334, 351), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(352, 369), word='/var/log/rabbitmq'),
])


8720) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(372, 435), parts=[
  WordNode(pos=(372, 374), word='ln'),
  WordNode(pos=(375, 378), word='-sf'),
  WordNode(pos=(379, 414), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(380, 398), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(415, 435), word='/root/.erlang.cookie'),
])


8721) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8722) apk add --no-cache --virtual .build-deps   ca-certificates   gnupg   xz

CommandNode(pos=(12, 83), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 78), word='gnupg'),
  WordNode(pos=(81, 83), word='xz'),
])


8723) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


8724) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


8725) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


8726) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


8727) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(462, 493), parts=[
  WordNode(pos=(462, 468), word='export'),
  WordNode(pos=(469, 493), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(482, 491), parts=[
        WordNode(pos=(482, 488), word='mktemp'),
        WordNode(pos=(489, 491), word='-d'),
      ]), pos=(480, 492)),
  ]),
])


8728) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


8729) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


8730) gpgconf --kill all

CommandNode(pos=(649, 667), parts=[
  WordNode(pos=(649, 656), word='gpgconf'),
  WordNode(pos=(657, 663), word='--kill'),
  WordNode(pos=(664, 667), word='all'),
])


8731) rm -rf "$GNUPGHOME"

CommandNode(pos=(670, 689), parts=[
  WordNode(pos=(670, 672), word='rm'),
  WordNode(pos=(673, 676), word='-rf'),
  WordNode(pos=(677, 689), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(678, 688), value='GNUPGHOME'),
  ]),
])


8732) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(693, 718), parts=[
  WordNode(pos=(693, 698), word='mkdir'),
  WordNode(pos=(699, 701), word='-p'),
  WordNode(pos=(702, 718), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(703, 717), value='RABBITMQ_HOME'),
  ]),
])


8733) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


8734) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(818, 842), parts=[
  WordNode(pos=(818, 820), word='rm'),
  WordNode(pos=(821, 824), word='-rf'),
  WordNode(pos=(825, 842), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(826, 840), value='RABBITMQ_PATH'),
  ]),
])


8735) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(845, 928), parts=[
  WordNode(pos=(845, 849), word='grep'),
  WordNode(pos=(850, 853), word='-qE'),
  WordNode(pos=(854, 888), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(889, 928), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(890, 904), value='RABBITMQ_HOME'),
  ]),
])


8736) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(931, 1010), parts=[
  WordNode(pos=(931, 934), word='sed'),
  WordNode(pos=(935, 937), word='-i'),
  WordNode(pos=(938, 970), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(971, 1010), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(972, 986), value='RABBITMQ_HOME'),
  ]),
])


8737) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1013, 1077), parts=[
  WordNode(pos=(1013, 1017), word='grep'),
  WordNode(pos=(1018, 1021), word='-qE'),
  WordNode(pos=(1022, 1037), word='^SYS_PREFIX=$'),
  WordNode(pos=(1038, 1077), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1039, 1053), value='RABBITMQ_HOME'),
  ]),
])


8738) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1080, 1123), parts=[
  WordNode(pos=(1080, 1085), word='chown'),
  WordNode(pos=(1086, 1088), word='-R'),
  WordNode(pos=(1089, 1106), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1107, 1123), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1108, 1122), value='RABBITMQ_HOME'),
  ]),
])


8739) apk del .build-deps

CommandNode(pos=(1127, 1146), parts=[
  WordNode(pos=(1127, 1130), word='apk'),
  WordNode(pos=(1131, 1134), word='del'),
  WordNode(pos=(1135, 1146), word='.build-deps'),
])


8740) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1150, 1194), parts=[
  WordNode(pos=(1150, 1151), word='['),
  WordNode(pos=(1152, 1153), word='!'),
  WordNode(pos=(1154, 1156), word='-e'),
  WordNode(pos=(1157, 1192), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1158, 1176), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1193, 1194), word=']'),
])


8741) su-exec rabbitmq rabbitmqctl help

CommandNode(pos=(1197, 1230), parts=[
  WordNode(pos=(1197, 1204), word='su-exec'),
  WordNode(pos=(1205, 1213), word='rabbitmq'),
  WordNode(pos=(1214, 1225), word='rabbitmqctl'),
  WordNode(pos=(1226, 1230), word='help'),
])


8742) su-exec rabbitmq rabbitmqctl list_ciphers

CommandNode(pos=(1233, 1274), parts=[
  WordNode(pos=(1233, 1240), word='su-exec'),
  WordNode(pos=(1241, 1249), word='rabbitmq'),
  WordNode(pos=(1250, 1261), word='rabbitmqctl'),
  WordNode(pos=(1262, 1274), word='list_ciphers'),
])


8743) su-exec rabbitmq rabbitmq-plugins list

CommandNode(pos=(1277, 1315), parts=[
  WordNode(pos=(1277, 1284), word='su-exec'),
  WordNode(pos=(1285, 1293), word='rabbitmq'),
  WordNode(pos=(1294, 1310), word='rabbitmq-plugins'),
  WordNode(pos=(1311, 1315), word='list'),
])


8744) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1318, 1356), parts=[
  WordNode(pos=(1318, 1320), word='rm'),
  WordNode(pos=(1321, 1356), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1322, 1340), value='RABBITMQ_DATA_DIR'),
  ]),
])


8745) ln -sf /opt/rabbitmq/plugins /plugins

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 6), word='-sf'),
  WordNode(pos=(7, 28), word='/opt/rabbitmq/plugins'),
  WordNode(pos=(29, 37), word='/plugins'),
])


8746) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


8747) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


8748) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8749) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(18, 74), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(61, 66), word='gnupg'),
  WordNode(pos=(67, 74), word='dirmngr'),
])


8750) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(78, 105), parts=[
  WordNode(pos=(78, 80), word='rm'),
  WordNode(pos=(81, 84), word='-rf'),
  WordNode(pos=(85, 105), word='/var/lib/apt/lists/*'),
])


8751) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


8752) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


8753) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


8754) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


8755) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


8756) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


8757) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


8758) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


8759) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


8760) gpgconf --kill all

CommandNode(pos=(611, 629), parts=[
  WordNode(pos=(611, 618), word='gpgconf'),
  WordNode(pos=(619, 625), word='--kill'),
  WordNode(pos=(626, 629), word='all'),
])


8761) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(634, 677), parts=[
  WordNode(pos=(634, 636), word='rm'),
  WordNode(pos=(637, 640), word='-rf'),
  WordNode(pos=(641, 653), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(642, 652), value='GNUPGHOME'),
  ]),
  WordNode(pos=(654, 677), word='/usr/local/bin/gosu.asc'),
])


8762) chmod +x /usr/local/bin/gosu

CommandNode(pos=(682, 710), parts=[
  WordNode(pos=(682, 687), word='chmod'),
  WordNode(pos=(688, 690), word='+x'),
  WordNode(pos=(691, 710), word='/usr/local/bin/gosu'),
])


8763) gosu nobody true

CommandNode(pos=(715, 731), parts=[
  WordNode(pos=(715, 719), word='gosu'),
  WordNode(pos=(720, 726), word='nobody'),
  WordNode(pos=(727, 731), word='true'),
])


8764) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(736, 787), parts=[
  WordNode(pos=(736, 743), word='apt-get'),
  WordNode(pos=(744, 749), word='purge'),
  WordNode(pos=(750, 752), word='-y'),
  WordNode(pos=(753, 766), word='--auto-remove'),
  WordNode(pos=(767, 782), word='ca-certificates'),
  WordNode(pos=(783, 787), word='wget'),
])


8765) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


8766) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8767) apt-get install -y --no-install-recommends   pwgen   openssl   perl

CommandNode(pos=(18, 85), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 68), word='pwgen'),
  WordNode(pos=(71, 78), word='openssl'),
  WordNode(pos=(81, 85), word='perl'),
])


8768) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(90, 117), parts=[
  WordNode(pos=(90, 92), word='rm'),
  WordNode(pos=(93, 96), word='-rf'),
  WordNode(pos=(97, 117), word='/var/lib/apt/lists/*'),
])


8769) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8770) key='A4A9406876FCBD3C456770C88C718D3B5072E1F5'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=A4A9406876FCBD3C456770C88C718D3B5072E1F5'),
])


8771) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


8772) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


8773) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/mysql.gpg

CommandNode(pos=(165, 227), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 227), word='/etc/apt/trusted.gpg.d/mysql.gpg'), pos=(193, 227), type='>'),
])


8774) gpgconf --kill all

CommandNode(pos=(230, 248), parts=[
  WordNode(pos=(230, 237), word='gpgconf'),
  WordNode(pos=(238, 244), word='--kill'),
  WordNode(pos=(245, 248), word='all'),
])


8775) rm -rf "$GNUPGHOME"

CommandNode(pos=(251, 270), parts=[
  WordNode(pos=(251, 253), word='rm'),
  WordNode(pos=(254, 257), word='-rf'),
  WordNode(pos=(258, 270), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(259, 269), value='GNUPGHOME'),
  ]),
])


8776) apt-key list > /dev/null

CommandNode(pos=(273, 297), parts=[
  WordNode(pos=(273, 280), word='apt-key'),
  WordNode(pos=(281, 285), word='list'),
  RedirectNode(output=
    WordNode(pos=(288, 297), word='/dev/null'), pos=(286, 297), type='>'),
])


8777) echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list

CommandNode(pos=(0, 110), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 73), word='deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}', parts=[
    ParameterNode(pos=(58, 72), value='MYSQL_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(76, 110), word='/etc/apt/sources.list.d/mysql.list'), pos=(74, 110), type='>'),
])


8778) echo mysql-community-server mysql-community-server/data-dir select ''

CommandNode(pos=(4, 73), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 31), word='mysql-community-server'),
  WordNode(pos=(32, 63), word='mysql-community-server/data-dir'),
  WordNode(pos=(64, 70), word='select'),
  WordNode(pos=(71, 73)),
])


8779) echo mysql-community-server mysql-community-server/root-pass password ''

CommandNode(pos=(77, 149), parts=[
  WordNode(pos=(77, 81), word='echo'),
  WordNode(pos=(82, 104), word='mysql-community-server'),
  WordNode(pos=(105, 137), word='mysql-community-server/root-pass'),
  WordNode(pos=(138, 146), word='password'),
  WordNode(pos=(147, 149)),
])


8780) echo mysql-community-server mysql-community-server/re-root-pass password ''

CommandNode(pos=(153, 228), parts=[
  WordNode(pos=(153, 157), word='echo'),
  WordNode(pos=(158, 180), word='mysql-community-server'),
  WordNode(pos=(181, 216), word='mysql-community-server/re-root-pass'),
  WordNode(pos=(217, 225), word='password'),
  WordNode(pos=(226, 228)),
])


8781) echo mysql-community-server mysql-community-server/remove-test-db select false

CommandNode(pos=(232, 310), parts=[
  WordNode(pos=(232, 236), word='echo'),
  WordNode(pos=(237, 259), word='mysql-community-server'),
  WordNode(pos=(260, 297), word='mysql-community-server/remove-test-db'),
  WordNode(pos=(298, 304), word='select'),
  WordNode(pos=(305, 310), word='false'),
])


8782) debconf-set-selections

CommandNode(pos=(317, 339), parts=[
  WordNode(pos=(317, 339), word='debconf-set-selections'),
])


8783) apt-get update

CommandNode(pos=(344, 358), parts=[
  WordNode(pos=(344, 351), word='apt-get'),
  WordNode(pos=(352, 358), word='update'),
])


8784) apt-get install -y mysql-community-client="${MYSQL_VERSION}" mysql-community-server-core="${MYSQL_VERSION}"

CommandNode(pos=(362, 469), parts=[
  WordNode(pos=(362, 369), word='apt-get'),
  WordNode(pos=(370, 377), word='install'),
  WordNode(pos=(378, 380), word='-y'),
  WordNode(pos=(381, 422), word='mysql-community-client=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(405, 421), value='MYSQL_VERSION'),
  ]),
  WordNode(pos=(423, 469), word='mysql-community-server-core=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(452, 468), value='MYSQL_VERSION'),
  ]),
])


8785) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(473, 500), parts=[
  WordNode(pos=(473, 475), word='rm'),
  WordNode(pos=(476, 479), word='-rf'),
  WordNode(pos=(480, 500), word='/var/lib/apt/lists/*'),
])


8786) rm -rf /var/lib/mysql

CommandNode(pos=(505, 526), parts=[
  WordNode(pos=(505, 507), word='rm'),
  WordNode(pos=(508, 511), word='-rf'),
  WordNode(pos=(512, 526), word='/var/lib/mysql'),
])


8787) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(530, 569), parts=[
  WordNode(pos=(530, 535), word='mkdir'),
  WordNode(pos=(536, 538), word='-p'),
  WordNode(pos=(539, 553), word='/var/lib/mysql'),
  WordNode(pos=(554, 569), word='/var/run/mysqld'),
])


8788) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(574, 625), parts=[
  WordNode(pos=(574, 579), word='chown'),
  WordNode(pos=(580, 582), word='-R'),
  WordNode(pos=(583, 594), word='mysql:mysql'),
  WordNode(pos=(595, 609), word='/var/lib/mysql'),
  WordNode(pos=(610, 625), word='/var/run/mysqld'),
])


8789) chmod 777 /var/run/mysqld

CommandNode(pos=(630, 655), parts=[
  WordNode(pos=(630, 635), word='chmod'),
  WordNode(pos=(636, 639), word='777'),
  WordNode(pos=(640, 655), word='/var/run/mysqld'),
])


8790) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


8791) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8792) apt-get install -y --no-install-recommends   g++   gcc   libc6-dev   make   pkg-config

CommandNode(pos=(18, 104), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='g++'),
  WordNode(pos=(69, 72), word='gcc'),
  WordNode(pos=(75, 84), word='libc6-dev'),
  WordNode(pos=(87, 91), word='make'),
  WordNode(pos=(94, 104), word='pkg-config'),
])


8793) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(109, 136), parts=[
  WordNode(pos=(109, 111), word='rm'),
  WordNode(pos=(112, 115), word='-rf'),
  WordNode(pos=(116, 136), word='/var/lib/apt/lists/*'),
])


8794) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8795) %%ARCH-CASE%%

CommandNode(pos=(12, 25), parts=[
  WordNode(pos=(12, 25), word='%%ARCH-CASE%%'),
])


8796) url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"

CommandNode(pos=(29, 96), parts=[
  AssignmentNode(pos=(29, 96), word='url=https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz', parts=[
    ParameterNode(pos=(58, 75), value='GOLANG_VERSION'),
    ParameterNode(pos=(76, 88), value='goRelArch'),
  ]),
])


8797) wget -O go.tgz "$url"

CommandNode(pos=(99, 120), parts=[
  WordNode(pos=(99, 103), word='wget'),
  WordNode(pos=(104, 106), word='-O'),
  WordNode(pos=(107, 113), word='go.tgz'),
  WordNode(pos=(114, 120), word='$url', parts=[
    ParameterNode(pos=(115, 119), value='url'),
  ]),
])


8798) echo "${goRelSha256} *go.tgz"

CommandNode(pos=(123, 152), parts=[
  WordNode(pos=(123, 127), word='echo'),
  WordNode(pos=(128, 152), word='${goRelSha256} *go.tgz', parts=[
    ParameterNode(pos=(129, 143), value='goRelSha256'),
  ]),
])


8799) sha256sum -c -

CommandNode(pos=(155, 169), parts=[
  WordNode(pos=(155, 164), word='sha256sum'),
  WordNode(pos=(165, 167), word='-c'),
  WordNode(pos=(168, 169), word='-'),
])


8800) tar -C /usr/local -xzf go.tgz

CommandNode(pos=(172, 201), parts=[
  WordNode(pos=(172, 175), word='tar'),
  WordNode(pos=(176, 178), word='-C'),
  WordNode(pos=(179, 189), word='/usr/local'),
  WordNode(pos=(190, 194), word='-xzf'),
  WordNode(pos=(195, 201), word='go.tgz'),
])


8801) rm go.tgz

CommandNode(pos=(204, 213), parts=[
  WordNode(pos=(204, 206), word='rm'),
  WordNode(pos=(207, 213), word='go.tgz'),
])


8802) [ "$goRelArch" = 'src' ]

CommandNode(pos=(220, 244), parts=[
  WordNode(pos=(220, 221), word='['),
  WordNode(pos=(222, 234), word='$goRelArch', parts=[
    ParameterNode(pos=(223, 233), value='goRelArch'),
  ]),
  WordNode(pos=(235, 236), word='='),
  WordNode(pos=(237, 242), word='src'),
  WordNode(pos=(243, 244), word=']'),
])


8803) echo >&2

CommandNode(pos=(253, 261), parts=[
  WordNode(pos=(253, 257), word='echo'),
  RedirectNode(output=2, pos=(258, 261), type='>&'),
])


8804) echo >&2 'error: UNIMPLEMENTED'

CommandNode(pos=(265, 296), parts=[
  WordNode(pos=(265, 269), word='echo'),
  RedirectNode(output=2, pos=(270, 273), type='>&'),
  WordNode(pos=(274, 296), word='error: UNIMPLEMENTED'),
])


8805) echo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'

CommandNode(pos=(300, 405), parts=[
  WordNode(pos=(300, 304), word='echo'),
  RedirectNode(output=2, pos=(305, 308), type='>&'),
  WordNode(pos=(309, 405), word='TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'),
])


8806) echo >&2

CommandNode(pos=(409, 417), parts=[
  WordNode(pos=(409, 413), word='echo'),
  RedirectNode(output=2, pos=(414, 417), type='>&'),
])


8807) exit 1

CommandNode(pos=(421, 427), parts=[
  WordNode(pos=(421, 425), word='exit'),
  WordNode(pos=(426, 427), word='1'),
])


8808) export PATH="/usr/local/go/bin:$PATH"

CommandNode(pos=(436, 473), parts=[
  WordNode(pos=(436, 442), word='export'),
  WordNode(pos=(443, 473), word='PATH=/usr/local/go/bin:$PATH', parts=[
    ParameterNode(pos=(467, 472), value='PATH'),
  ]),
])


8809) go version

CommandNode(pos=(476, 486), parts=[
  WordNode(pos=(476, 478), word='go'),
  WordNode(pos=(479, 486), word='version'),
])


8810) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


8811) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


8812) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8813) yum install -y   gzip   tar     freetype fontconfig

CommandNode(pos=(11, 62), parts=[
  WordNode(pos=(11, 14), word='yum'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-y'),
  WordNode(pos=(28, 32), word='gzip'),
  WordNode(pos=(35, 38), word='tar'),
  WordNode(pos=(43, 51), word='freetype'),
  WordNode(pos=(52, 62), word='fontconfig'),
])


8814) rm -rf /var/cache/yum

CommandNode(pos=(67, 88), parts=[
  WordNode(pos=(67, 69), word='rm'),
  WordNode(pos=(70, 73), word='-rf'),
  WordNode(pos=(74, 88), word='/var/cache/yum'),
])


8815) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8816) curl -fL -o /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 48), parts=[
  WordNode(pos=(12, 16), word='curl'),
  WordNode(pos=(17, 20), word='-fL'),
  WordNode(pos=(21, 23), word='-o'),
  WordNode(pos=(24, 36), word='/openjdk.tgz'),
  WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
    ParameterNode(pos=(38, 47), value='JAVA_URL'),
  ]),
])


8817) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(51, 84), parts=[
  WordNode(pos=(51, 55), word='echo'),
  WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
  ]),
])


8818) sha256sum -c -

CommandNode(pos=(87, 101), parts=[
  WordNode(pos=(87, 96), word='sha256sum'),
  WordNode(pos=(97, 99), word='-c'),
  WordNode(pos=(100, 101), word='-'),
])


8819) mkdir -p "$JAVA_HOME"

CommandNode(pos=(104, 125), parts=[
  WordNode(pos=(104, 109), word='mkdir'),
  WordNode(pos=(110, 112), word='-p'),
  WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(114, 124), value='JAVA_HOME'),
  ]),
])


8820) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(128, 207), parts=[
  WordNode(pos=(128, 131), word='tar'),
  WordNode(pos=(132, 141), word='--extract'),
  WordNode(pos=(142, 148), word='--file'),
  WordNode(pos=(149, 161), word='/openjdk.tgz'),
  WordNode(pos=(162, 173), word='--directory'),
  WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(175, 185), value='JAVA_HOME'),
  ]),
  WordNode(pos=(187, 205), word='--strip-components'),
  WordNode(pos=(206, 207), word='1'),
])


8821) rm /openjdk.tgz

CommandNode(pos=(210, 225), parts=[
  WordNode(pos=(210, 212), word='rm'),
  WordNode(pos=(213, 225), word='/openjdk.tgz'),
])


8822) ln -sfT "$JAVA_HOME" /usr/java/default

CommandNode(pos=(229, 267), parts=[
  WordNode(pos=(229, 231), word='ln'),
  WordNode(pos=(232, 236), word='-sfT'),
  WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(238, 248), value='JAVA_HOME'),
  ]),
  WordNode(pos=(250, 267), word='/usr/java/default'),
])


8823) ln -sfT "$JAVA_HOME" /usr/java/latest

CommandNode(pos=(270, 307), parts=[
  WordNode(pos=(270, 272), word='ln'),
  WordNode(pos=(273, 277), word='-sfT'),
  WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(279, 289), value='JAVA_HOME'),
  ]),
  WordNode(pos=(291, 307), word='/usr/java/latest'),
])


8824) base="$(basename "$bin")"

CommandNode(pos=(346, 371), parts=[
  AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(354, 369), parts=[
        WordNode(pos=(354, 362), word='basename'),
        WordNode(pos=(363, 369), word='$bin', parts=[
          ParameterNode(pos=(364, 368), value='bin'),
        ]),
      ]), pos=(352, 370)),
  ]),
])


8825) [ ! -e "/usr/bin/$base" ]

CommandNode(pos=(375, 400), parts=[
  WordNode(pos=(375, 376), word='['),
  WordNode(pos=(377, 378), word='!'),
  WordNode(pos=(379, 381), word='-e'),
  WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(392, 397), value='base'),
  ]),
  WordNode(pos=(399, 400), word=']'),
])


8826) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


8827) java -Xshare:dump

CommandNode(pos=(475, 492), parts=[
  WordNode(pos=(475, 479), word='java'),
  WordNode(pos=(480, 492), word='-Xshare:dump'),
])


8828) java --version

CommandNode(pos=(496, 510), parts=[
  WordNode(pos=(496, 500), word='java'),
  WordNode(pos=(501, 510), word='--version'),
])


8829) javac --version

CommandNode(pos=(513, 528), parts=[
  WordNode(pos=(513, 518), word='javac'),
  WordNode(pos=(519, 528), word='--version'),
])


8830) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


8831) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8832) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


8833) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


8834) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


8835) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


8836) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


8837) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


8838) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


8839) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


8840) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


8841) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


8842) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


8843) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


8844) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


8845) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


8846) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


8847) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


8848) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


8849) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


8850) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


8851) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


8852) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


8853) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


8854) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


8855) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


8856) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


8857) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


8858) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


8859) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


8860) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


8861) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


8862) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


8863) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


8864) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


8865) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


8866) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


8867) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


8868) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


8869) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


8870) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


8871) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


8872) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


8873) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


8874) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


8875) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


8876) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


8877) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


8878) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


8879) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


8880) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


8881) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


8882) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


8883) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


8884) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


8885) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


8886) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


8887) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


8888) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


8889) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


8890) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


8891) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


8892) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


8893) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


8894) apt-get install -y --no-install-recommends   ca-certificates   libexpat1   libffi6   libgdbm3   libsqlite3-0

CommandNode(pos=(18, 126), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 90), word='libexpat1'),
  WordNode(pos=(93, 100), word='libffi6'),
  WordNode(pos=(103, 111), word='libgdbm3'),
  WordNode(pos=(114, 126), word='libsqlite3-0'),
])


8895) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(131, 158), parts=[
  WordNode(pos=(131, 133), word='rm'),
  WordNode(pos=(134, 137), word='-rf'),
  WordNode(pos=(138, 158), word='/var/lib/apt/lists/*'),
])


8896) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8897) %%ARCH-CASE%%

CommandNode(pos=(11, 24), parts=[
  WordNode(pos=(11, 24), word='%%ARCH-CASE%%'),
])


8898) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(28, 65), parts=[
  AssignmentNode(pos=(28, 65), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(44, 63), parts=[
        WordNode(pos=(44, 52), word='apt-mark'),
        WordNode(pos=(53, 63), word='showmanual'),
      ]), pos=(42, 64)),
  ]),
])


8899) apt-get update

CommandNode(pos=(68, 82), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 82), word='update'),
])


8900) apt-get install -y --no-install-recommends   bzip2   wget   libncurses5

CommandNode(pos=(85, 156), parts=[
  WordNode(pos=(85, 92), word='apt-get'),
  WordNode(pos=(93, 100), word='install'),
  WordNode(pos=(101, 103), word='-y'),
  WordNode(pos=(104, 127), word='--no-install-recommends'),
  WordNode(pos=(130, 135), word='bzip2'),
  WordNode(pos=(138, 142), word='wget'),
  WordNode(pos=(145, 156), word='libncurses5'),
])


8901) wget -O pypy.tar.bz2 "https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2" --progress=dot:giga

CommandNode(pos=(162, 291), parts=[
  WordNode(pos=(162, 166), word='wget'),
  WordNode(pos=(167, 169), word='-O'),
  WordNode(pos=(170, 182), word='pypy.tar.bz2'),
  WordNode(pos=(183, 271), word='https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2', parts=[
    ParameterNode(pos=(235, 250), value='PYPY_VERSION'),
    ParameterNode(pos=(251, 262), value='pypyArch'),
  ]),
  WordNode(pos=(272, 291), word='--progress=dot:giga'),
])


8902) echo "$sha256 *pypy.tar.bz2"

CommandNode(pos=(294, 322), parts=[
  WordNode(pos=(294, 298), word='echo'),
  WordNode(pos=(299, 322), word='$sha256 *pypy.tar.bz2', parts=[
    ParameterNode(pos=(300, 307), value='sha256'),
  ]),
])


8903) sha256sum -c

CommandNode(pos=(325, 337), parts=[
  WordNode(pos=(325, 334), word='sha256sum'),
  WordNode(pos=(335, 337), word='-c'),
])


8904) tar -xjC /usr/local --strip-components=1 -f pypy.tar.bz2

CommandNode(pos=(340, 396), parts=[
  WordNode(pos=(340, 343), word='tar'),
  WordNode(pos=(344, 348), word='-xjC'),
  WordNode(pos=(349, 359), word='/usr/local'),
  WordNode(pos=(360, 380), word='--strip-components=1'),
  WordNode(pos=(381, 383), word='-f'),
  WordNode(pos=(384, 396), word='pypy.tar.bz2'),
])


8905) find /usr/local/lib-python -depth -type d -a \( -name test -o -name tests \) -exec rm -rf '{}' +

CommandNode(pos=(399, 495), parts=[
  WordNode(pos=(399, 403), word='find'),
  WordNode(pos=(404, 425), word='/usr/local/lib-python'),
  WordNode(pos=(426, 432), word='-depth'),
  WordNode(pos=(433, 438), word='-type'),
  WordNode(pos=(439, 440), word='d'),
  WordNode(pos=(441, 443), word='-a'),
  WordNode(pos=(444, 446), word='('),
  WordNode(pos=(447, 452), word='-name'),
  WordNode(pos=(453, 457), word='test'),
  WordNode(pos=(458, 460), word='-o'),
  WordNode(pos=(461, 466), word='-name'),
  WordNode(pos=(467, 472), word='tests'),
  WordNode(pos=(473, 475), word=')'),
  WordNode(pos=(476, 481), word='-exec'),
  WordNode(pos=(482, 484), word='rm'),
  WordNode(pos=(485, 488), word='-rf'),
  WordNode(pos=(489, 493), word='{}'),
  WordNode(pos=(494, 495), word='+'),
])


8906) rm pypy.tar.bz2

CommandNode(pos=(498, 513), parts=[
  WordNode(pos=(498, 500), word='rm'),
  WordNode(pos=(501, 513), word='pypy.tar.bz2'),
])


8907) %%CMD%% --version

CommandNode(pos=(517, 534), parts=[
  WordNode(pos=(517, 524), word='%%CMD%%'),
  WordNode(pos=(525, 534), word='--version'),
])


8908) [ -f /usr/local/lib_pypy/_ssl_build.py ]

CommandNode(pos=(541, 581), parts=[
  WordNode(pos=(541, 542), word='['),
  WordNode(pos=(543, 545), word='-f'),
  WordNode(pos=(546, 579), word='/usr/local/lib_pypy/_ssl_build.py'),
  WordNode(pos=(580, 581), word=']'),
])


8909) apt-get install -y --no-install-recommends gcc libc6-dev libssl-dev

CommandNode(pos=(590, 657), parts=[
  WordNode(pos=(590, 597), word='apt-get'),
  WordNode(pos=(598, 605), word='install'),
  WordNode(pos=(606, 608), word='-y'),
  WordNode(pos=(609, 632), word='--no-install-recommends'),
  WordNode(pos=(633, 636), word='gcc'),
  WordNode(pos=(637, 646), word='libc6-dev'),
  WordNode(pos=(647, 657), word='libssl-dev'),
])


8910) cd /usr/local/lib_pypy

CommandNode(pos=(661, 683), parts=[
  WordNode(pos=(661, 663), word='cd'),
  WordNode(pos=(664, 683), word='/usr/local/lib_pypy'),
])


8911) %%CMD%% _ssl_build.py

CommandNode(pos=(687, 708), parts=[
  WordNode(pos=(687, 694), word='%%CMD%%'),
  WordNode(pos=(695, 708), word='_ssl_build.py'),
])


8912) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(717, 774), parts=[
  WordNode(pos=(717, 721), word='wget'),
  WordNode(pos=(722, 724), word='-O'),
  WordNode(pos=(725, 735), word='get-pip.py'),
  WordNode(pos=(736, 774), word='https://bootstrap.pypa.io/get-pip.py'),
])


8913) %%CMD%% get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(778, 872), parts=[
  WordNode(pos=(778, 785), word='%%CMD%%'),
  WordNode(pos=(786, 796), word='get-pip.py'),
  WordNode(pos=(799, 826), word='--disable-pip-version-check'),
  WordNode(pos=(829, 843), word='--no-cache-dir'),
  WordNode(pos=(846, 872), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(852, 871), value='PYTHON_PIP_VERSION'),
  ]),
])


8914) pip --version

CommandNode(pos=(877, 890), parts=[
  WordNode(pos=(877, 880), word='pip'),
  WordNode(pos=(881, 890), word='--version'),
])


8915) rm -f get-pip.py

CommandNode(pos=(894, 910), parts=[
  WordNode(pos=(894, 896), word='rm'),
  WordNode(pos=(897, 899), word='-f'),
  WordNode(pos=(900, 910), word='get-pip.py'),
])


8916) apt-mark auto '.*' > /dev/null

CommandNode(pos=(914, 944), parts=[
  WordNode(pos=(914, 922), word='apt-mark'),
  WordNode(pos=(923, 927), word='auto'),
  WordNode(pos=(928, 932), word='.*'),
  RedirectNode(output=
    WordNode(pos=(935, 944), word='/dev/null'), pos=(933, 944), type='>'),
])


8917) [ -z "$savedAptMark" ]

CommandNode(pos=(947, 969), parts=[
  WordNode(pos=(947, 948), word='['),
  WordNode(pos=(949, 951), word='-z'),
  WordNode(pos=(952, 967), word='$savedAptMark', parts=[
    ParameterNode(pos=(953, 966), value='savedAptMark'),
  ]),
  WordNode(pos=(968, 969), word=']'),
])


8918) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(973, 1014), parts=[
  WordNode(pos=(973, 981), word='apt-mark'),
  WordNode(pos=(982, 988), word='manual'),
  WordNode(pos=(989, 1002), word='$savedAptMark', parts=[
    ParameterNode(pos=(989, 1002), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1005, 1014), word='/dev/null'), pos=(1003, 1014), type='>'),
])


8919) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1017, 1071), parts=[
  WordNode(pos=(1017, 1021), word='find'),
  WordNode(pos=(1022, 1032), word='/usr/local'),
  WordNode(pos=(1033, 1038), word='-type'),
  WordNode(pos=(1039, 1040), word='f'),
  WordNode(pos=(1041, 1052), word='-executable'),
  WordNode(pos=(1053, 1058), word='-exec'),
  WordNode(pos=(1059, 1062), word='ldd'),
  WordNode(pos=(1063, 1067), word='{}'),
  WordNode(pos=(1068, 1071), word=';'),
])


8920) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1076, 1104), parts=[
  WordNode(pos=(1076, 1079), word='awk'),
  WordNode(pos=(1080, 1104), word='/=>/ { print $(NF-1) }'),
])


8921) sort -u

CommandNode(pos=(1109, 1116), parts=[
  WordNode(pos=(1109, 1113), word='sort'),
  WordNode(pos=(1114, 1116), word='-u'),
])


8922) xargs -r dpkg-query --search

CommandNode(pos=(1121, 1149), parts=[
  WordNode(pos=(1121, 1126), word='xargs'),
  WordNode(pos=(1127, 1129), word='-r'),
  WordNode(pos=(1130, 1140), word='dpkg-query'),
  WordNode(pos=(1141, 1149), word='--search'),
])


8923) cut -d: -f1

CommandNode(pos=(1154, 1165), parts=[
  WordNode(pos=(1154, 1157), word='cut'),
  WordNode(pos=(1158, 1161), word='-d:'),
  WordNode(pos=(1162, 1165), word='-f1'),
])


8924) sort -u

CommandNode(pos=(1170, 1177), parts=[
  WordNode(pos=(1170, 1174), word='sort'),
  WordNode(pos=(1175, 1177), word='-u'),
])


8925) xargs -r apt-mark manual

CommandNode(pos=(1182, 1206), parts=[
  WordNode(pos=(1182, 1187), word='xargs'),
  WordNode(pos=(1188, 1190), word='-r'),
  WordNode(pos=(1191, 1199), word='apt-mark'),
  WordNode(pos=(1200, 1206), word='manual'),
])


8926) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1211, 1287), parts=[
  WordNode(pos=(1211, 1218), word='apt-get'),
  WordNode(pos=(1219, 1224), word='purge'),
  WordNode(pos=(1225, 1227), word='-y'),
  WordNode(pos=(1228, 1241), word='--auto-remove'),
  WordNode(pos=(1242, 1244), word='-o'),
  WordNode(pos=(1245, 1287), word='APT::AutoRemove::RecommendsImportant=false'),
])


8927) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1290, 1317), parts=[
  WordNode(pos=(1290, 1292), word='rm'),
  WordNode(pos=(1293, 1296), word='-rf'),
  WordNode(pos=(1297, 1317), word='/var/lib/apt/lists/*'),
])


8928) %%CMD%% --version

CommandNode(pos=(1320, 1337), parts=[
  WordNode(pos=(1320, 1327), word='%%CMD%%'),
  WordNode(pos=(1328, 1337), word='--version'),
])


8929) pip --version

CommandNode(pos=(1340, 1353), parts=[
  WordNode(pos=(1340, 1343), word='pip'),
  WordNode(pos=(1344, 1353), word='--version'),
])


8930) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8931) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


8932) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


8933) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


8934) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


8935) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8936) groupadd -r postgres --gid=999

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 22), word='-r'),
  WordNode(pos=(23, 31), word='postgres'),
  WordNode(pos=(32, 41), word='--gid=999'),
])


8937) useradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres

CommandNode(pos=(44, 134), parts=[
  WordNode(pos=(44, 51), word='useradd'),
  WordNode(pos=(52, 54), word='-r'),
  WordNode(pos=(55, 57), word='-g'),
  WordNode(pos=(58, 66), word='postgres'),
  WordNode(pos=(67, 76), word='--uid=999'),
  WordNode(pos=(77, 107), word='--home-dir=/var/lib/postgresql'),
  WordNode(pos=(108, 125), word='--shell=/bin/bash'),
  WordNode(pos=(126, 134), word='postgres'),
])


8938) mkdir -p /var/lib/postgresql

CommandNode(pos=(137, 165), parts=[
  WordNode(pos=(137, 142), word='mkdir'),
  WordNode(pos=(143, 145), word='-p'),
  WordNode(pos=(146, 165), word='/var/lib/postgresql'),
])


8939) chown -R postgres:postgres /var/lib/postgresql

CommandNode(pos=(168, 214), parts=[
  WordNode(pos=(168, 173), word='chown'),
  WordNode(pos=(174, 176), word='-R'),
  WordNode(pos=(177, 194), word='postgres:postgres'),
  WordNode(pos=(195, 214), word='/var/lib/postgresql'),
])


8940) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


8941) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


8942) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


8943) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


8944) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


8945) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


8946) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


8947) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


8948) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


8949) command -v gpgconf > /dev/null

CommandNode(pos=(613, 643), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(634, 643), word='/dev/null'), pos=(632, 643), type='>'),
])


8950) gpgconf --kill all

CommandNode(pos=(647, 665), parts=[
  WordNode(pos=(647, 654), word='gpgconf'),
  WordNode(pos=(655, 661), word='--kill'),
  WordNode(pos=(662, 665), word='all'),
])


8951) :

CommandNode(pos=(669, 670), parts=[
  WordNode(pos=(669, 670), word=':'),
])


8952) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


8953) chmod +x /usr/local/bin/gosu

CommandNode(pos=(726, 754), parts=[
  WordNode(pos=(726, 731), word='chmod'),
  WordNode(pos=(732, 734), word='+x'),
  WordNode(pos=(735, 754), word='/usr/local/bin/gosu'),
])


8954) gosu nobody true

CommandNode(pos=(759, 775), parts=[
  WordNode(pos=(759, 763), word='gosu'),
  WordNode(pos=(764, 770), word='nobody'),
  WordNode(pos=(771, 775), word='true'),
])


8955) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(780, 831), parts=[
  WordNode(pos=(780, 787), word='apt-get'),
  WordNode(pos=(788, 793), word='purge'),
  WordNode(pos=(794, 796), word='-y'),
  WordNode(pos=(797, 810), word='--auto-remove'),
  WordNode(pos=(811, 826), word='ca-certificates'),
  WordNode(pos=(827, 831), word='wget'),
])


8956) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8957) [ -f /etc/dpkg/dpkg.cfg.d/docker ]

CommandNode(pos=(14, 48), parts=[
  WordNode(pos=(14, 15), word='['),
  WordNode(pos=(16, 18), word='-f'),
  WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
  WordNode(pos=(47, 48), word=']'),
])


8958) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(57, 112), parts=[
  WordNode(pos=(57, 61), word='grep'),
  WordNode(pos=(62, 64), word='-q'),
  WordNode(pos=(65, 84), word='/usr/share/locale'),
  WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


8959) sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(116, 177), parts=[
  WordNode(pos=(116, 119), word='sed'),
  WordNode(pos=(120, 123), word='-ri'),
  WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
  WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


8960) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(183, 238), parts=[
  WordNode(pos=(183, 187), word='grep'),
  WordNode(pos=(188, 190), word='-q'),
  WordNode(pos=(191, 210), word='/usr/share/locale'),
  WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


8961) apt-get update

CommandNode(pos=(246, 260), parts=[
  WordNode(pos=(246, 253), word='apt-get'),
  WordNode(pos=(254, 260), word='update'),
])


8962) apt-get install -y locales

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 269), word='apt-get'),
  WordNode(pos=(270, 277), word='install'),
  WordNode(pos=(278, 280), word='-y'),
  WordNode(pos=(281, 288), word='locales'),
])


8963) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(290, 317), parts=[
  WordNode(pos=(290, 292), word='rm'),
  WordNode(pos=(293, 296), word='-rf'),
  WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
])


8964) localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

CommandNode(pos=(320, 396), parts=[
  WordNode(pos=(320, 329), word='localedef'),
  WordNode(pos=(330, 332), word='-i'),
  WordNode(pos=(333, 338), word='en_US'),
  WordNode(pos=(339, 341), word='-c'),
  WordNode(pos=(342, 344), word='-f'),
  WordNode(pos=(345, 350), word='UTF-8'),
  WordNode(pos=(351, 353), word='-A'),
  WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
  WordNode(pos=(385, 396), word='en_US.UTF-8'),
])


8965) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8966) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


8967) apt-get install -y --no-install-recommends libnss-wrapper

CommandNode(pos=(28, 85), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 85), word='libnss-wrapper'),
])


8968) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(88, 115), parts=[
  WordNode(pos=(88, 90), word='rm'),
  WordNode(pos=(91, 94), word='-rf'),
  WordNode(pos=(95, 115), word='/var/lib/apt/lists/*'),
])


8969) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


8970) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8971) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


8972) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


8973) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


8974) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


8975) command -v gpgconf > /dev/null

CommandNode(pos=(233, 263), parts=[
  WordNode(pos=(233, 240), word='command'),
  WordNode(pos=(241, 243), word='-v'),
  WordNode(pos=(244, 251), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(254, 263), word='/dev/null'), pos=(252, 263), type='>'),
])


8976) gpgconf --kill all

CommandNode(pos=(267, 285), parts=[
  WordNode(pos=(267, 274), word='gpgconf'),
  WordNode(pos=(275, 281), word='--kill'),
  WordNode(pos=(282, 285), word='all'),
])


8977) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


8978) apt-key list

CommandNode(pos=(310, 322), parts=[
  WordNode(pos=(310, 317), word='apt-key'),
  WordNode(pos=(318, 322), word='list'),
])


8979) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


8980) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


8981) cp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(158, 258), parts=[
  WordNode(pos=(158, 160), word='cp'),
  WordNode(pos=(161, 163), word='-v'),
  WordNode(pos=(164, 213), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(214, 258), word='/usr/share/postgresql/postgresql.conf.sample'),
])


8982) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


8983) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(331, 431), parts=[
  WordNode(pos=(331, 334), word='sed'),
  WordNode(pos=(335, 338), word='-ri'),
  WordNode(pos=(339, 386), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(387, 431), word='/usr/share/postgresql/postgresql.conf.sample'),
])


8984) grep -F "listen_addresses = '*'" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(434, 511), parts=[
  WordNode(pos=(434, 438), word='grep'),
  WordNode(pos=(439, 441), word='-F'),
  WordNode(pos=(442, 466), word="listen_addresses = '*'"),
  WordNode(pos=(467, 511), word='/usr/share/postgresql/postgresql.conf.sample'),
])


8985) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


8986) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


8987) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


8988) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


8989) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


8990) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


8991) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


8992) apk add --no-cache   gmp-dev

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 28), word='gmp-dev'),
])


8993) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


8994) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


8995) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


8996) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


8997) apk add --no-cache --virtual .ruby-builddeps   autoconf   bison   bzip2   bzip2-dev   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gdbm-dev   glib-dev   libc-dev   libffi-dev   libxml2-dev   libxslt-dev   linux-headers   make   ncurses-dev   openssl   openssl-dev   procps   readline-dev   ruby   tar   xz   yaml-dev   zlib-dev

CommandNode(pos=(13, 347), parts=[
  WordNode(pos=(13, 16), word='apk'),
  WordNode(pos=(17, 20), word='add'),
  WordNode(pos=(21, 31), word='--no-cache'),
  WordNode(pos=(32, 41), word='--virtual'),
  WordNode(pos=(42, 57), word='.ruby-builddeps'),
  WordNode(pos=(60, 68), word='autoconf'),
  WordNode(pos=(71, 76), word='bison'),
  WordNode(pos=(79, 84), word='bzip2'),
  WordNode(pos=(87, 96), word='bzip2-dev'),
  WordNode(pos=(99, 114), word='ca-certificates'),
  WordNode(pos=(117, 126), word='coreutils'),
  WordNode(pos=(129, 137), word='dpkg-dev'),
  WordNode(pos=(138, 142), word='dpkg'),
  WordNode(pos=(145, 148), word='gcc'),
  WordNode(pos=(151, 159), word='gdbm-dev'),
  WordNode(pos=(162, 170), word='glib-dev'),
  WordNode(pos=(173, 181), word='libc-dev'),
  WordNode(pos=(184, 194), word='libffi-dev'),
  WordNode(pos=(197, 208), word='libxml2-dev'),
  WordNode(pos=(211, 222), word='libxslt-dev'),
  WordNode(pos=(225, 238), word='linux-headers'),
  WordNode(pos=(241, 245), word='make'),
  WordNode(pos=(248, 259), word='ncurses-dev'),
  WordNode(pos=(262, 269), word='openssl'),
  WordNode(pos=(272, 283), word='openssl-dev'),
  WordNode(pos=(286, 292), word='procps'),
  WordNode(pos=(295, 307), word='readline-dev'),
  WordNode(pos=(310, 314), word='ruby'),
  WordNode(pos=(317, 320), word='tar'),
  WordNode(pos=(323, 325), word='xz'),
  WordNode(pos=(328, 336), word='yaml-dev'),
  WordNode(pos=(339, 347), word='zlib-dev'),
])


8998) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


8999) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


9000) sha256sum -c -

CommandNode(pos=(504, 518), parts=[
  WordNode(pos=(504, 513), word='sha256sum'),
  WordNode(pos=(514, 516), word='-c'),
  WordNode(pos=(517, 518), word='-'),
])


9001) mkdir -p /usr/src/ruby

CommandNode(pos=(524, 546), parts=[
  WordNode(pos=(524, 529), word='mkdir'),
  WordNode(pos=(530, 532), word='-p'),
  WordNode(pos=(533, 546), word='/usr/src/ruby'),
])


9002) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(551, 609), parts=[
  WordNode(pos=(551, 554), word='tar'),
  WordNode(pos=(555, 559), word='-xJf'),
  WordNode(pos=(560, 571), word='ruby.tar.xz'),
  WordNode(pos=(572, 574), word='-C'),
  WordNode(pos=(575, 588), word='/usr/src/ruby'),
  WordNode(pos=(589, 609), word='--strip-components=1'),
])


9003) rm ruby.tar.xz

CommandNode(pos=(614, 628), parts=[
  WordNode(pos=(614, 616), word='rm'),
  WordNode(pos=(617, 628), word='ruby.tar.xz'),
])


9004) cd /usr/src/ruby

CommandNode(pos=(634, 650), parts=[
  WordNode(pos=(634, 636), word='cd'),
  WordNode(pos=(637, 650), word='/usr/src/ruby'),
])


9005) wget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'

CommandNode(pos=(656, 807), parts=[
  WordNode(pos=(656, 660), word='wget'),
  WordNode(pos=(661, 663), word='-O'),
  WordNode(pos=(664, 688), word='thread-stack-fix.patch'),
  WordNode(pos=(689, 807), word='https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'),
])


9006) echo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'

CommandNode(pos=(812, 907), parts=[
  WordNode(pos=(812, 816), word='echo'),
  WordNode(pos=(817, 907), word='3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'),
])


9007) sha256sum -c -

CommandNode(pos=(910, 924), parts=[
  WordNode(pos=(910, 919), word='sha256sum'),
  WordNode(pos=(920, 922), word='-c'),
  WordNode(pos=(923, 924), word='-'),
])


9008) patch -p1 -i thread-stack-fix.patch

CommandNode(pos=(929, 964), parts=[
  WordNode(pos=(929, 934), word='patch'),
  WordNode(pos=(935, 938), word='-p1'),
  WordNode(pos=(939, 941), word='-i'),
  WordNode(pos=(942, 964), word='thread-stack-fix.patch'),
])


9009) rm thread-stack-fix.patch

CommandNode(pos=(969, 994), parts=[
  WordNode(pos=(969, 971), word='rm'),
  WordNode(pos=(972, 994), word='thread-stack-fix.patch'),
])


9010) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(1004, 1038), parts=[
  WordNode(pos=(1004, 1008), word='echo'),
  WordNode(pos=(1009, 1038), word='#define ENABLE_PATH_CHECK 0'),
])


9011) echo

CommandNode(pos=(1042, 1046), parts=[
  WordNode(pos=(1042, 1046), word='echo'),
])


9012) cat file.c

CommandNode(pos=(1050, 1060), parts=[
  WordNode(pos=(1050, 1053), word='cat'),
  WordNode(pos=(1054, 1060), word='file.c'),
])


9013) mv file.c.new file.c

CommandNode(pos=(1082, 1102), parts=[
  WordNode(pos=(1082, 1084), word='mv'),
  WordNode(pos=(1085, 1095), word='file.c.new'),
  WordNode(pos=(1096, 1102), word='file.c'),
])


9014) autoconf

CommandNode(pos=(1108, 1116), parts=[
  WordNode(pos=(1108, 1116), word='autoconf'),
])


9015) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


9016) export ac_cv_func_isnan=yes ac_cv_func_isinf=yes

CommandNode(pos=(1183, 1231), parts=[
  WordNode(pos=(1183, 1189), word='export'),
  WordNode(pos=(1190, 1210), word='ac_cv_func_isnan=yes'),
  WordNode(pos=(1211, 1231), word='ac_cv_func_isinf=yes'),
])


9017) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


9018) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


9019) make install

CommandNode(pos=(1338, 1350), parts=[
  WordNode(pos=(1338, 1342), word='make'),
  WordNode(pos=(1343, 1350), word='install'),
])


9020) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


9021) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


9022) apk del --no-network .ruby-builddeps

CommandNode(pos=(1686, 1722), parts=[
  WordNode(pos=(1686, 1689), word='apk'),
  WordNode(pos=(1690, 1693), word='del'),
  WordNode(pos=(1694, 1706), word='--no-network'),
  WordNode(pos=(1707, 1722), word='.ruby-builddeps'),
])


9023) cd /

CommandNode(pos=(1727, 1731), parts=[
  WordNode(pos=(1727, 1729), word='cd'),
  WordNode(pos=(1730, 1731), word='/'),
])


9024) rm -r /usr/src/ruby

CommandNode(pos=(1736, 1755), parts=[
  WordNode(pos=(1736, 1738), word='rm'),
  WordNode(pos=(1739, 1741), word='-r'),
  WordNode(pos=(1742, 1755), word='/usr/src/ruby'),
])


9025) ruby --version

CommandNode(pos=(1760, 1774), parts=[
  WordNode(pos=(1760, 1764), word='ruby'),
  WordNode(pos=(1765, 1774), word='--version'),
])


9026) gem --version

CommandNode(pos=(1778, 1791), parts=[
  WordNode(pos=(1778, 1781), word='gem'),
  WordNode(pos=(1782, 1791), word='--version'),
])


9027) bundle --version

CommandNode(pos=(1795, 1811), parts=[
  WordNode(pos=(1795, 1801), word='bundle'),
  WordNode(pos=(1802, 1811), word='--version'),
])


9028) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


9029) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


9030) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9031) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


9032) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


9033) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


9034) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


9035) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9036) groupadd -r postgres --gid=999

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 22), word='-r'),
  WordNode(pos=(23, 31), word='postgres'),
  WordNode(pos=(32, 41), word='--gid=999'),
])


9037) useradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres

CommandNode(pos=(44, 134), parts=[
  WordNode(pos=(44, 51), word='useradd'),
  WordNode(pos=(52, 54), word='-r'),
  WordNode(pos=(55, 57), word='-g'),
  WordNode(pos=(58, 66), word='postgres'),
  WordNode(pos=(67, 76), word='--uid=999'),
  WordNode(pos=(77, 107), word='--home-dir=/var/lib/postgresql'),
  WordNode(pos=(108, 125), word='--shell=/bin/bash'),
  WordNode(pos=(126, 134), word='postgres'),
])


9038) mkdir -p /var/lib/postgresql

CommandNode(pos=(137, 165), parts=[
  WordNode(pos=(137, 142), word='mkdir'),
  WordNode(pos=(143, 145), word='-p'),
  WordNode(pos=(146, 165), word='/var/lib/postgresql'),
])


9039) chown -R postgres:postgres /var/lib/postgresql

CommandNode(pos=(168, 214), parts=[
  WordNode(pos=(168, 173), word='chown'),
  WordNode(pos=(174, 176), word='-R'),
  WordNode(pos=(177, 194), word='postgres:postgres'),
  WordNode(pos=(195, 214), word='/var/lib/postgresql'),
])


9040) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


9041) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


9042) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


9043) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


9044) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


9045) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


9046) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


9047) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


9048) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


9049) command -v gpgconf > /dev/null

CommandNode(pos=(613, 643), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(634, 643), word='/dev/null'), pos=(632, 643), type='>'),
])


9050) gpgconf --kill all

CommandNode(pos=(647, 665), parts=[
  WordNode(pos=(647, 654), word='gpgconf'),
  WordNode(pos=(655, 661), word='--kill'),
  WordNode(pos=(662, 665), word='all'),
])


9051) :

CommandNode(pos=(669, 670), parts=[
  WordNode(pos=(669, 670), word=':'),
])


9052) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


9053) chmod +x /usr/local/bin/gosu

CommandNode(pos=(726, 754), parts=[
  WordNode(pos=(726, 731), word='chmod'),
  WordNode(pos=(732, 734), word='+x'),
  WordNode(pos=(735, 754), word='/usr/local/bin/gosu'),
])


9054) gosu nobody true

CommandNode(pos=(759, 775), parts=[
  WordNode(pos=(759, 763), word='gosu'),
  WordNode(pos=(764, 770), word='nobody'),
  WordNode(pos=(771, 775), word='true'),
])


9055) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(780, 831), parts=[
  WordNode(pos=(780, 787), word='apt-get'),
  WordNode(pos=(788, 793), word='purge'),
  WordNode(pos=(794, 796), word='-y'),
  WordNode(pos=(797, 810), word='--auto-remove'),
  WordNode(pos=(811, 826), word='ca-certificates'),
  WordNode(pos=(827, 831), word='wget'),
])


9056) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9057) [ -f /etc/dpkg/dpkg.cfg.d/docker ]

CommandNode(pos=(14, 48), parts=[
  WordNode(pos=(14, 15), word='['),
  WordNode(pos=(16, 18), word='-f'),
  WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
  WordNode(pos=(47, 48), word=']'),
])


9058) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(57, 112), parts=[
  WordNode(pos=(57, 61), word='grep'),
  WordNode(pos=(62, 64), word='-q'),
  WordNode(pos=(65, 84), word='/usr/share/locale'),
  WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


9059) sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(116, 177), parts=[
  WordNode(pos=(116, 119), word='sed'),
  WordNode(pos=(120, 123), word='-ri'),
  WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
  WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


9060) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(183, 238), parts=[
  WordNode(pos=(183, 187), word='grep'),
  WordNode(pos=(188, 190), word='-q'),
  WordNode(pos=(191, 210), word='/usr/share/locale'),
  WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


9061) apt-get update

CommandNode(pos=(246, 260), parts=[
  WordNode(pos=(246, 253), word='apt-get'),
  WordNode(pos=(254, 260), word='update'),
])


9062) apt-get install -y locales

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 269), word='apt-get'),
  WordNode(pos=(270, 277), word='install'),
  WordNode(pos=(278, 280), word='-y'),
  WordNode(pos=(281, 288), word='locales'),
])


9063) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(290, 317), parts=[
  WordNode(pos=(290, 292), word='rm'),
  WordNode(pos=(293, 296), word='-rf'),
  WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
])


9064) localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

CommandNode(pos=(320, 396), parts=[
  WordNode(pos=(320, 329), word='localedef'),
  WordNode(pos=(330, 332), word='-i'),
  WordNode(pos=(333, 338), word='en_US'),
  WordNode(pos=(339, 341), word='-c'),
  WordNode(pos=(342, 344), word='-f'),
  WordNode(pos=(345, 350), word='UTF-8'),
  WordNode(pos=(351, 353), word='-A'),
  WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
  WordNode(pos=(385, 396), word='en_US.UTF-8'),
])


9065) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9066) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


9067) apt-get install -y --no-install-recommends libnss-wrapper

CommandNode(pos=(28, 85), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 85), word='libnss-wrapper'),
])


9068) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(88, 115), parts=[
  WordNode(pos=(88, 90), word='rm'),
  WordNode(pos=(91, 94), word='-rf'),
  WordNode(pos=(95, 115), word='/var/lib/apt/lists/*'),
])


9069) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


9070) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9071) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


9072) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


9073) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


9074) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


9075) command -v gpgconf > /dev/null

CommandNode(pos=(233, 263), parts=[
  WordNode(pos=(233, 240), word='command'),
  WordNode(pos=(241, 243), word='-v'),
  WordNode(pos=(244, 251), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(254, 263), word='/dev/null'), pos=(252, 263), type='>'),
])


9076) gpgconf --kill all

CommandNode(pos=(267, 285), parts=[
  WordNode(pos=(267, 274), word='gpgconf'),
  WordNode(pos=(275, 281), word='--kill'),
  WordNode(pos=(282, 285), word='all'),
])


9077) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


9078) apt-key list

CommandNode(pos=(310, 322), parts=[
  WordNode(pos=(310, 317), word='apt-key'),
  WordNode(pos=(318, 322), word='list'),
])


9079) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9080) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


9081) cp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(158, 258), parts=[
  WordNode(pos=(158, 160), word='cp'),
  WordNode(pos=(161, 163), word='-v'),
  WordNode(pos=(164, 213), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(214, 258), word='/usr/share/postgresql/postgresql.conf.sample'),
])


9082) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


9083) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(331, 431), parts=[
  WordNode(pos=(331, 334), word='sed'),
  WordNode(pos=(335, 338), word='-ri'),
  WordNode(pos=(339, 386), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(387, 431), word='/usr/share/postgresql/postgresql.conf.sample'),
])


9084) grep -F "listen_addresses = '*'" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(434, 511), parts=[
  WordNode(pos=(434, 438), word='grep'),
  WordNode(pos=(439, 441), word='-F'),
  WordNode(pos=(442, 466), word="listen_addresses = '*'"),
  WordNode(pos=(467, 511), word='/usr/share/postgresql/postgresql.conf.sample'),
])


9085) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


9086) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


9087) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


9088) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


9089) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


9090) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


9091) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


9092) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9093) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


9094) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


9095) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(785, 812), parts=[
  WordNode(pos=(785, 787), word='rm'),
  WordNode(pos=(788, 791), word='-rf'),
  WordNode(pos=(792, 812), word='/var/lib/apt/lists/*'),
])


9096) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


9097) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(11, 137), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/gosu'),
  WordNode(pos=(39, 137), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(89, 102), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(110, 135), parts=[
        WordNode(pos=(110, 114), word='dpkg'),
        WordNode(pos=(115, 135), word='--print-architecture'),
      ]), pos=(108, 136)),
  ]),
])


9098) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(142, 276), parts=[
  WordNode(pos=(142, 146), word='wget'),
  WordNode(pos=(147, 149), word='-O'),
  WordNode(pos=(150, 173), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(174, 276), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(224, 237), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(245, 270), parts=[
        WordNode(pos=(245, 249), word='dpkg'),
        WordNode(pos=(250, 270), word='--print-architecture'),
      ]), pos=(243, 271)),
  ]),
])


9099) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(281, 312), parts=[
  WordNode(pos=(281, 287), word='export'),
  WordNode(pos=(288, 312), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(301, 310), parts=[
        WordNode(pos=(301, 307), word='mktemp'),
        WordNode(pos=(308, 310), word='-d'),
      ]), pos=(299, 311)),
  ]),
])


9100) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(317, 420), parts=[
  WordNode(pos=(317, 320), word='gpg'),
  WordNode(pos=(321, 328), word='--batch'),
  WordNode(pos=(329, 340), word='--keyserver'),
  WordNode(pos=(341, 367), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(368, 379), word='--recv-keys'),
  WordNode(pos=(380, 420), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


9101) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(425, 489), parts=[
  WordNode(pos=(425, 428), word='gpg'),
  WordNode(pos=(429, 436), word='--batch'),
  WordNode(pos=(437, 445), word='--verify'),
  WordNode(pos=(446, 469), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(470, 489), word='/usr/local/bin/gosu'),
])


9102) command -v gpgconf

CommandNode(pos=(496, 514), parts=[
  WordNode(pos=(496, 503), word='command'),
  WordNode(pos=(504, 506), word='-v'),
  WordNode(pos=(507, 514), word='gpgconf'),
])


9103) gpgconf --kill all

CommandNode(pos=(518, 536), parts=[
  WordNode(pos=(518, 525), word='gpgconf'),
  WordNode(pos=(526, 532), word='--kill'),
  WordNode(pos=(533, 536), word='all'),
])


9104) :

CommandNode(pos=(540, 541), parts=[
  WordNode(pos=(540, 541), word=':'),
])


9105) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(549, 591), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 591), word='/usr/local/bin/gosu.asc'),
])


9106) chmod +x /usr/local/bin/gosu

CommandNode(pos=(596, 624), parts=[
  WordNode(pos=(596, 601), word='chmod'),
  WordNode(pos=(602, 604), word='+x'),
  WordNode(pos=(605, 624), word='/usr/local/bin/gosu'),
])


9107) gosu nobody true

CommandNode(pos=(629, 645), parts=[
  WordNode(pos=(629, 633), word='gosu'),
  WordNode(pos=(634, 640), word='nobody'),
  WordNode(pos=(641, 645), word='true'),
])


9108) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9109) npm install -g "ghost-cli@$GHOST_CLI_VERSION"

CommandNode(pos=(11, 56), parts=[
  WordNode(pos=(11, 14), word='npm'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-g'),
  WordNode(pos=(26, 56), word='ghost-cli@$GHOST_CLI_VERSION', parts=[
    ParameterNode(pos=(37, 55), value='GHOST_CLI_VERSION'),
  ]),
])


9110) npm cache clean --force

CommandNode(pos=(59, 82), parts=[
  WordNode(pos=(59, 62), word='npm'),
  WordNode(pos=(63, 68), word='cache'),
  WordNode(pos=(69, 74), word='clean'),
  WordNode(pos=(75, 82), word='--force'),
])


9111) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9112) mkdir -p "$GHOST_INSTALL"

CommandNode(pos=(11, 36), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
  ]),
])


9113) chown node:node "$GHOST_INSTALL"

CommandNode(pos=(39, 71), parts=[
  WordNode(pos=(39, 44), word='chown'),
  WordNode(pos=(45, 54), word='node:node'),
  WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
  ]),
])


9114) gosu node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 185), parts=[
  WordNode(pos=(75, 79), word='gosu'),
  WordNode(pos=(80, 84), word='node'),
  WordNode(pos=(85, 90), word='ghost'),
  WordNode(pos=(91, 98), word='install'),
  WordNode(pos=(99, 115), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(100, 114), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(116, 120), word='--db'),
  WordNode(pos=(121, 128), word='sqlite3'),
  WordNode(pos=(129, 140), word='--no-prompt'),
  WordNode(pos=(141, 151), word='--no-stack'),
  WordNode(pos=(152, 162), word='--no-setup'),
  WordNode(pos=(163, 168), word='--dir'),
  WordNode(pos=(169, 185), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(170, 184), value='GHOST_INSTALL'),
  ]),
])


9115) cd "$GHOST_INSTALL"

CommandNode(pos=(189, 208), parts=[
  WordNode(pos=(189, 191), word='cd'),
  WordNode(pos=(192, 208), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(193, 207), value='GHOST_INSTALL'),
  ]),
])


9116) gosu node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db"

CommandNode(pos=(211, 351), parts=[
  WordNode(pos=(211, 215), word='gosu'),
  WordNode(pos=(216, 220), word='node'),
  WordNode(pos=(221, 226), word='ghost'),
  WordNode(pos=(227, 233), word='config'),
  WordNode(pos=(234, 238), word='--ip'),
  WordNode(pos=(239, 246), word='0.0.0.0'),
  WordNode(pos=(247, 253), word='--port'),
  WordNode(pos=(254, 258), word='2368'),
  WordNode(pos=(259, 270), word='--no-prompt'),
  WordNode(pos=(271, 275), word='--db'),
  WordNode(pos=(276, 283), word='sqlite3'),
  WordNode(pos=(284, 289), word='--url'),
  WordNode(pos=(290, 311), word='http://localhost:2368'),
  WordNode(pos=(312, 320), word='--dbpath'),
  WordNode(pos=(321, 351), word='$GHOST_CONTENT/data/ghost.db', parts=[
    ParameterNode(pos=(322, 336), value='GHOST_CONTENT'),
  ]),
])


9117) gosu node ghost config paths.contentPath "$GHOST_CONTENT"

CommandNode(pos=(354, 411), parts=[
  WordNode(pos=(354, 358), word='gosu'),
  WordNode(pos=(359, 363), word='node'),
  WordNode(pos=(364, 369), word='ghost'),
  WordNode(pos=(370, 376), word='config'),
  WordNode(pos=(377, 394), word='paths.contentPath'),
  WordNode(pos=(395, 411), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(396, 410), value='GHOST_CONTENT'),
  ]),
])


9118) gosu node ln -s config.production.json "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(415, 494), parts=[
  WordNode(pos=(415, 419), word='gosu'),
  WordNode(pos=(420, 424), word='node'),
  WordNode(pos=(425, 427), word='ln'),
  WordNode(pos=(428, 430), word='-s'),
  WordNode(pos=(431, 453), word='config.production.json'),
  WordNode(pos=(454, 494), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(455, 469), value='GHOST_INSTALL'),
  ]),
])


9119) readlink -f "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(497, 549), parts=[
  WordNode(pos=(497, 505), word='readlink'),
  WordNode(pos=(506, 508), word='-f'),
  WordNode(pos=(509, 549), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(510, 524), value='GHOST_INSTALL'),
  ]),
])


9120) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(553, 602), parts=[
  WordNode(pos=(553, 555), word='mv'),
  WordNode(pos=(556, 572), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(557, 571), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(573, 602), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(574, 588), value='GHOST_INSTALL'),
  ]),
])


9121) mkdir -p "$GHOST_CONTENT"

CommandNode(pos=(605, 630), parts=[
  WordNode(pos=(605, 610), word='mkdir'),
  WordNode(pos=(611, 613), word='-p'),
  WordNode(pos=(614, 630), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(615, 629), value='GHOST_CONTENT'),
  ]),
])


9122) chown node:node "$GHOST_CONTENT"

CommandNode(pos=(633, 665), parts=[
  WordNode(pos=(633, 638), word='chown'),
  WordNode(pos=(639, 648), word='node:node'),
  WordNode(pos=(649, 665), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(650, 664), value='GHOST_CONTENT'),
  ]),
])


9123) cd "$GHOST_INSTALL/current"

CommandNode(pos=(669, 696), parts=[
  WordNode(pos=(669, 671), word='cd'),
  WordNode(pos=(672, 696), word='$GHOST_INSTALL/current', parts=[
    ParameterNode(pos=(673, 687), value='GHOST_INSTALL'),
  ]),
])


9124) sqlite3Version="$(npm view . optionalDependencies.sqlite3)"

CommandNode(pos=(699, 758), parts=[
  WordNode(pos=(699, 758), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(717, 756), parts=[
        WordNode(pos=(717, 720), word='npm'),
        WordNode(pos=(721, 725), word='view'),
        WordNode(pos=(726, 727), word='.'),
        WordNode(pos=(728, 756), word='optionalDependencies.sqlite3'),
      ]), pos=(715, 757)),
  ]),
])


9125) gosu node yarn add "sqlite3@$sqlite3Version" --force

CommandNode(pos=(766, 818), parts=[
  WordNode(pos=(766, 770), word='gosu'),
  WordNode(pos=(771, 775), word='node'),
  WordNode(pos=(776, 780), word='yarn'),
  WordNode(pos=(781, 784), word='add'),
  WordNode(pos=(785, 810), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(794, 809), value='sqlite3Version'),
  ]),
  WordNode(pos=(811, 818), word='--force'),
])


9126) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(827, 864), parts=[
  AssignmentNode(pos=(827, 864), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(843, 862), parts=[
        WordNode(pos=(843, 851), word='apt-mark'),
        WordNode(pos=(852, 862), word='showmanual'),
      ]), pos=(841, 863)),
  ]),
])


9127) apt-get update

CommandNode(pos=(868, 882), parts=[
  WordNode(pos=(868, 875), word='apt-get'),
  WordNode(pos=(876, 882), word='update'),
])


9128) apt-get install -y --no-install-recommends python make gcc g++ libc-dev

CommandNode(pos=(886, 957), parts=[
  WordNode(pos=(886, 893), word='apt-get'),
  WordNode(pos=(894, 901), word='install'),
  WordNode(pos=(902, 904), word='-y'),
  WordNode(pos=(905, 928), word='--no-install-recommends'),
  WordNode(pos=(929, 935), word='python'),
  WordNode(pos=(936, 940), word='make'),
  WordNode(pos=(941, 944), word='gcc'),
  WordNode(pos=(945, 948), word='g++'),
  WordNode(pos=(949, 957), word='libc-dev'),
])


9129) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(961, 988), parts=[
  WordNode(pos=(961, 963), word='rm'),
  WordNode(pos=(964, 967), word='-rf'),
  WordNode(pos=(968, 988), word='/var/lib/apt/lists/*'),
])


9130) gosu node yarn add "sqlite3@$sqlite3Version" --force --build-from-source

CommandNode(pos=(994, 1066), parts=[
  WordNode(pos=(994, 998), word='gosu'),
  WordNode(pos=(999, 1003), word='node'),
  WordNode(pos=(1004, 1008), word='yarn'),
  WordNode(pos=(1009, 1012), word='add'),
  WordNode(pos=(1013, 1038), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(1022, 1037), value='sqlite3Version'),
  ]),
  WordNode(pos=(1039, 1046), word='--force'),
  WordNode(pos=(1047, 1066), word='--build-from-source'),
])


9131) apt-mark showmanual

CommandNode(pos=(1072, 1091), parts=[
  WordNode(pos=(1072, 1080), word='apt-mark'),
  WordNode(pos=(1081, 1091), word='showmanual'),
])


9132) xargs apt-mark auto > /dev/null

CommandNode(pos=(1094, 1125), parts=[
  WordNode(pos=(1094, 1099), word='xargs'),
  WordNode(pos=(1100, 1108), word='apt-mark'),
  WordNode(pos=(1109, 1113), word='auto'),
  RedirectNode(output=
    WordNode(pos=(1116, 1125), word='/dev/null'), pos=(1114, 1125), type='>'),
])


9133) [ -z "$savedAptMark" ]

CommandNode(pos=(1129, 1151), parts=[
  WordNode(pos=(1129, 1130), word='['),
  WordNode(pos=(1131, 1133), word='-z'),
  WordNode(pos=(1134, 1149), word='$savedAptMark', parts=[
    ParameterNode(pos=(1135, 1148), value='savedAptMark'),
  ]),
  WordNode(pos=(1150, 1151), word=']'),
])


9134) apt-mark manual $savedAptMark

CommandNode(pos=(1155, 1184), parts=[
  WordNode(pos=(1155, 1163), word='apt-mark'),
  WordNode(pos=(1164, 1170), word='manual'),
  WordNode(pos=(1171, 1184), word='$savedAptMark', parts=[
    ParameterNode(pos=(1171, 1184), value='savedAptMark'),
  ]),
])


9135) apt-get purge -y --auto-remove

CommandNode(pos=(1188, 1218), parts=[
  WordNode(pos=(1188, 1195), word='apt-get'),
  WordNode(pos=(1196, 1201), word='purge'),
  WordNode(pos=(1202, 1204), word='-y'),
  WordNode(pos=(1205, 1218), word='--auto-remove'),
])


9136) gosu node yarn cache clean

CommandNode(pos=(1227, 1253), parts=[
  WordNode(pos=(1227, 1231), word='gosu'),
  WordNode(pos=(1232, 1236), word='node'),
  WordNode(pos=(1237, 1241), word='yarn'),
  WordNode(pos=(1242, 1247), word='cache'),
  WordNode(pos=(1248, 1253), word='clean'),
])


9137) gosu node npm cache clean --force

CommandNode(pos=(1256, 1289), parts=[
  WordNode(pos=(1256, 1260), word='gosu'),
  WordNode(pos=(1261, 1265), word='node'),
  WordNode(pos=(1266, 1269), word='npm'),
  WordNode(pos=(1270, 1275), word='cache'),
  WordNode(pos=(1276, 1281), word='clean'),
  WordNode(pos=(1282, 1289), word='--force'),
])


9138) npm cache clean --force

CommandNode(pos=(1292, 1315), parts=[
  WordNode(pos=(1292, 1295), word='npm'),
  WordNode(pos=(1296, 1301), word='cache'),
  WordNode(pos=(1302, 1307), word='clean'),
  WordNode(pos=(1308, 1315), word='--force'),
])


9139) rm -rv /tmp/yarn* /tmp/v8*

CommandNode(pos=(1318, 1344), parts=[
  WordNode(pos=(1318, 1320), word='rm'),
  WordNode(pos=(1321, 1324), word='-rv'),
  WordNode(pos=(1325, 1335), word='/tmp/yarn*'),
  WordNode(pos=(1336, 1344), word='/tmp/v8*'),
])


9140) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


9141) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9142) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


9143) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


9144) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


9145) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


9146) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


9147) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


9148) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


9149) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


9150) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


9151) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


9152) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


9153) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


9154) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


9155) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


9156) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


9157) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


9158) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


9159) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


9160) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


9161) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


9162) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


9163) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


9164) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


9165) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


9166) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


9167) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


9168) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


9169) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


9170) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


9171) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


9172) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


9173) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


9174) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


9175) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


9176) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


9177) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


9178) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


9179) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


9180) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


9181) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


9182) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


9183) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


9184) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


9185) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


9186) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


9187) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


9188) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


9189) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


9190) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


9191) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


9192) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


9193) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


9194) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


9195) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


9196) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


9197) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


9198) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


9199) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


9200) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


9201) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


9202) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


9203) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9204) apk add --no-cache   btrfs-progs   e2fsprogs   e2fsprogs-extra   iptables   xfsprogs   xz   pigz

CommandNode(pos=(11, 107), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(32, 43), word='btrfs-progs'),
  WordNode(pos=(46, 55), word='e2fsprogs'),
  WordNode(pos=(58, 73), word='e2fsprogs-extra'),
  WordNode(pos=(76, 84), word='iptables'),
  WordNode(pos=(87, 95), word='xfsprogs'),
  WordNode(pos=(98, 100), word='xz'),
  WordNode(pos=(103, 107), word='pigz'),
])


9205) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


9206) [ -n "$zfs" ]

CommandNode(pos=(159, 172), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 163), word='-n'),
  WordNode(pos=(164, 170), word='$zfs', parts=[
    ParameterNode(pos=(165, 169), value='zfs'),
  ]),
  WordNode(pos=(171, 172), word=']'),
])


9207) apk add --no-cache zfs

CommandNode(pos=(181, 203), parts=[
  WordNode(pos=(181, 184), word='apk'),
  WordNode(pos=(185, 188), word='add'),
  WordNode(pos=(189, 199), word='--no-cache'),
  WordNode(pos=(200, 203), word='zfs'),
])


9208) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


9209) addgroup -S dockremap

CommandNode(pos=(11, 32), parts=[
  WordNode(pos=(11, 19), word='addgroup'),
  WordNode(pos=(20, 22), word='-S'),
  WordNode(pos=(23, 32), word='dockremap'),
])


9210) adduser -S -G dockremap dockremap

CommandNode(pos=(37, 70), parts=[
  WordNode(pos=(37, 44), word='adduser'),
  WordNode(pos=(45, 47), word='-S'),
  WordNode(pos=(48, 50), word='-G'),
  WordNode(pos=(51, 60), word='dockremap'),
  WordNode(pos=(61, 70), word='dockremap'),
])


9211) echo 'dockremap:165536:65536' >> /etc/subuid

CommandNode(pos=(75, 119), parts=[
  WordNode(pos=(75, 79), word='echo'),
  WordNode(pos=(80, 104), word='dockremap:165536:65536'),
  RedirectNode(output=
    WordNode(pos=(108, 119), word='/etc/subuid'), pos=(105, 119), type='>>'),
])


9212) echo 'dockremap:165536:65536' >> /etc/subgid

CommandNode(pos=(124, 168), parts=[
  WordNode(pos=(124, 128), word='echo'),
  WordNode(pos=(129, 153), word='dockremap:165536:65536'),
  RedirectNode(output=
    WordNode(pos=(157, 168), word='/etc/subgid'), pos=(154, 168), type='>>'),
])


9213) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9214) wget -O /usr/local/bin/dind "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"

CommandNode(pos=(11, 113), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/dind'),
  WordNode(pos=(39, 113), word='https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind', parts=[
    ParameterNode(pos=(88, 102), value='DIND_COMMIT'),
  ]),
])


9215) chmod +x /usr/local/bin/dind

CommandNode(pos=(116, 144), parts=[
  WordNode(pos=(116, 121), word='chmod'),
  WordNode(pos=(122, 124), word='+x'),
  WordNode(pos=(125, 144), word='/usr/local/bin/dind'),
])


9216) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


9217) apt-get install -y --no-install-recommends   tcl   tk

CommandNode(pos=(18, 71), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='tcl'),
  WordNode(pos=(69, 71), word='tk'),
])


9218) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(76, 103), parts=[
  WordNode(pos=(76, 78), word='rm'),
  WordNode(pos=(79, 82), word='-rf'),
  WordNode(pos=(83, 103), word='/var/lib/apt/lists/*'),
])


9219) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9220) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


9221) pypy3 get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 164), parts=[
  WordNode(pos=(72, 77), word='pypy3'),
  WordNode(pos=(78, 88), word='get-pip.py'),
  WordNode(pos=(91, 118), word='--disable-pip-version-check'),
  WordNode(pos=(121, 135), word='--no-cache-dir'),
  WordNode(pos=(138, 164), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(144, 163), value='PYTHON_PIP_VERSION'),
  ]),
])


9222) pip --version

CommandNode(pos=(169, 182), parts=[
  WordNode(pos=(169, 172), word='pip'),
  WordNode(pos=(173, 182), word='--version'),
])


9223) rm -f get-pip.py

CommandNode(pos=(186, 202), parts=[
  WordNode(pos=(186, 188), word='rm'),
  WordNode(pos=(189, 191), word='-f'),
  WordNode(pos=(192, 202), word='get-pip.py'),
])


9224) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


9225) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9226) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


9227) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


9228) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


9229) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


9230) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


9231) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


9232) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


9233) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


9234) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


9235) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


9236) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


9237) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


9238) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


9239) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


9240) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


9241) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


9242) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


9243) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


9244) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


9245) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


9246) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


9247) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


9248) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


9249) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


9250) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


9251) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


9252) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


9253) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


9254) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


9255) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


9256) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


9257) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


9258) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


9259) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


9260) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


9261) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


9262) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


9263) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


9264) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


9265) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


9266) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


9267) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


9268) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


9269) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


9270) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


9271) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


9272) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


9273) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


9274) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


9275) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


9276) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


9277) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


9278) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


9279) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


9280) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


9281) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


9282) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


9283) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


9284) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


9285) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


9286) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


9287) cpanm Digest::SHA Module::Signature

CommandNode(pos=(0, 35), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 17), word='Digest::SHA'),
  WordNode(pos=(18, 35), word='Module::Signature'),
])


9288) cpanm App::cpanminus

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 20), word='App::cpanminus'),
])


9289) cpanm EV

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 8), word='EV'),
])


9290) cpanm IO::Socket::IP

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 20), word='IO::Socket::IP'),
])


9291) cpanm IO::Socket::Socks

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 23), word='IO::Socket::Socks'),
])


9292) cpanm Net::DNS::Native

CommandNode(pos=(0, 22), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 22), word='Net::DNS::Native'),
])


9293) cpanm --notest IO::Socket::SSL

CommandNode(pos=(0, 30), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 14), word='--notest'),
  WordNode(pos=(15, 30), word='IO::Socket::SSL'),
])


9294) cpanm Mojolicious@8.13

CommandNode(pos=(0, 22), parts=[
  WordNode(pos=(0, 5), word='cpanm'),
  WordNode(pos=(6, 22), word='Mojolicious@8.13'),
])


9295) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


9296) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9297) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


9298) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


9299) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


9300) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


9301) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


9302) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


9303) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


9304) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


9305) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


9306) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


9307) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


9308) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


9309) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


9310) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1000), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 881), word='linux-headers'),
  WordNode(pos=(884, 888), word='make'),
  WordNode(pos=(891, 902), word='ncurses-dev'),
  WordNode(pos=(905, 916), word='openssl-dev'),
  WordNode(pos=(919, 928), word='pax-utils'),
  WordNode(pos=(931, 943), word='readline-dev'),
  WordNode(pos=(946, 956), word='sqlite-dev'),
  WordNode(pos=(959, 966), word='tcl-dev'),
  WordNode(pos=(969, 971), word='tk'),
  WordNode(pos=(974, 980), word='tk-dev'),
  WordNode(pos=(983, 989), word='xz-dev'),
  WordNode(pos=(992, 1000), word='zlib-dev'),
])


9311) apk del .fetch-deps

CommandNode(pos=(1005, 1024), parts=[
  WordNode(pos=(1005, 1008), word='apk'),
  WordNode(pos=(1009, 1012), word='del'),
  WordNode(pos=(1013, 1024), word='.fetch-deps'),
])


9312) cd /usr/src/python

CommandNode(pos=(1030, 1048), parts=[
  WordNode(pos=(1030, 1032), word='cd'),
  WordNode(pos=(1033, 1048), word='/usr/src/python'),
])


9313) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


9314) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1115, 1267), parts=[
  WordNode(pos=(1115, 1126), word='./configure'),
  WordNode(pos=(1129, 1147), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1138, 1146), value='gnuArch'),
  ]),
  WordNode(pos=(1150, 1185), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1188, 1203), word='--enable-shared'),
  WordNode(pos=(1206, 1225), word='--with-system-expat'),
  WordNode(pos=(1228, 1245), word='--with-system-ffi'),
  WordNode(pos=(1248, 1267), word='--without-ensurepip'),
])


9315) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1272, 1336), parts=[
  WordNode(pos=(1272, 1276), word='make'),
  WordNode(pos=(1277, 1279), word='-j'),
  WordNode(pos=(1280, 1290), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1283, 1288), parts=[
        WordNode(pos=(1283, 1288), word='nproc'),
      ]), pos=(1281, 1289)),
  ]),
  WordNode(pos=(1293, 1336), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


9316) make install

CommandNode(pos=(1341, 1353), parts=[
  WordNode(pos=(1341, 1345), word='make'),
  WordNode(pos=(1346, 1353), word='install'),
])


9317) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1359, 1482), parts=[
  WordNode(pos=(1359, 1363), word='find'),
  WordNode(pos=(1364, 1374), word='/usr/local'),
  WordNode(pos=(1375, 1380), word='-type'),
  WordNode(pos=(1381, 1382), word='f'),
  WordNode(pos=(1383, 1394), word='-executable'),
  WordNode(pos=(1395, 1399), word='-not'),
  WordNode(pos=(1400, 1402), word='('),
  WordNode(pos=(1403, 1408), word='-name'),
  WordNode(pos=(1409, 1420), word='*tkinter*'),
  WordNode(pos=(1421, 1423), word=')'),
  WordNode(pos=(1424, 1429), word='-exec'),
  WordNode(pos=(1430, 1437), word='scanelf'),
  WordNode(pos=(1438, 1446), word='--needed'),
  WordNode(pos=(1447, 1457), word='--nobanner'),
  WordNode(pos=(1458, 1466), word='--format'),
  WordNode(pos=(1467, 1473), word='%n#p'),
  WordNode(pos=(1474, 1478), word='{}'),
  WordNode(pos=(1479, 1482), word=';'),
])


9318) tr ',' '\n'

CommandNode(pos=(1487, 1498), parts=[
  WordNode(pos=(1487, 1489), word='tr'),
  WordNode(pos=(1490, 1493), word=','),
  WordNode(pos=(1494, 1498), word='\\n'),
])


9319) sort -u

CommandNode(pos=(1503, 1510), parts=[
  WordNode(pos=(1503, 1507), word='sort'),
  WordNode(pos=(1508, 1510), word='-u'),
])


9320) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1515, 1592), parts=[
  WordNode(pos=(1515, 1518), word='awk'),
  WordNode(pos=(1519, 1592), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


9321) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1597, 1651), parts=[
  WordNode(pos=(1597, 1602), word='xargs'),
  WordNode(pos=(1603, 1606), word='-rt'),
  WordNode(pos=(1607, 1610), word='apk'),
  WordNode(pos=(1611, 1614), word='add'),
  WordNode(pos=(1615, 1625), word='--no-cache'),
  WordNode(pos=(1626, 1635), word='--virtual'),
  WordNode(pos=(1636, 1651), word='.python-rundeps'),
])


9322) apk del .build-deps

CommandNode(pos=(1656, 1675), parts=[
  WordNode(pos=(1656, 1659), word='apk'),
  WordNode(pos=(1660, 1663), word='del'),
  WordNode(pos=(1664, 1675), word='.build-deps'),
])


9323) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1681, 1848), parts=[
  WordNode(pos=(1681, 1685), word='find'),
  WordNode(pos=(1686, 1696), word='/usr/local'),
  WordNode(pos=(1697, 1703), word='-depth'),
  WordNode(pos=(1706, 1708), word='('),
  WordNode(pos=(1712, 1714), word='('),
  WordNode(pos=(1715, 1720), word='-type'),
  WordNode(pos=(1721, 1722), word='d'),
  WordNode(pos=(1723, 1725), word='-a'),
  WordNode(pos=(1726, 1728), word='('),
  WordNode(pos=(1729, 1734), word='-name'),
  WordNode(pos=(1735, 1739), word='test'),
  WordNode(pos=(1740, 1742), word='-o'),
  WordNode(pos=(1743, 1748), word='-name'),
  WordNode(pos=(1749, 1754), word='tests'),
  WordNode(pos=(1755, 1757), word=')'),
  WordNode(pos=(1758, 1760), word=')'),
  WordNode(pos=(1764, 1766), word='-o'),
  WordNode(pos=(1770, 1772), word='('),
  WordNode(pos=(1773, 1778), word='-type'),
  WordNode(pos=(1779, 1780), word='f'),
  WordNode(pos=(1781, 1783), word='-a'),
  WordNode(pos=(1784, 1786), word='('),
  WordNode(pos=(1787, 1792), word='-name'),
  WordNode(pos=(1793, 1800), word='*.pyc'),
  WordNode(pos=(1801, 1803), word='-o'),
  WordNode(pos=(1804, 1809), word='-name'),
  WordNode(pos=(1810, 1817), word='*.pyo'),
  WordNode(pos=(1818, 1820), word=')'),
  WordNode(pos=(1821, 1823), word=')'),
  WordNode(pos=(1826, 1828), word=')'),
  WordNode(pos=(1829, 1834), word='-exec'),
  WordNode(pos=(1835, 1837), word='rm'),
  WordNode(pos=(1838, 1841), word='-rf'),
  WordNode(pos=(1842, 1846), word='{}'),
  WordNode(pos=(1847, 1848), word='+'),
])


9324) rm -rf /usr/src/python

CommandNode(pos=(1853, 1875), parts=[
  WordNode(pos=(1853, 1855), word='rm'),
  WordNode(pos=(1856, 1859), word='-rf'),
  WordNode(pos=(1860, 1875), word='/usr/src/python'),
])


9325) python3 --version

CommandNode(pos=(1881, 1898), parts=[
  WordNode(pos=(1881, 1888), word='python3'),
  WordNode(pos=(1889, 1898), word='--version'),
])


9326) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


9327) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


9328) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


9329) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


9330) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


9331) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9332) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


9333) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


9334) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


9335) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


9336) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


9337) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


9338) apk add --no-cache --virtual .build-deps   ca-certificates   gcc   libc-dev   linux-headers   make   openssl   openssl-dev   pcre2-dev   readline-dev   tar   zlib-dev

CommandNode(pos=(12, 178), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.build-deps'),
  WordNode(pos=(55, 70), word='ca-certificates'),
  WordNode(pos=(73, 76), word='gcc'),
  WordNode(pos=(79, 87), word='libc-dev'),
  WordNode(pos=(90, 103), word='linux-headers'),
  WordNode(pos=(106, 110), word='make'),
  WordNode(pos=(113, 120), word='openssl'),
  WordNode(pos=(123, 134), word='openssl-dev'),
  WordNode(pos=(137, 146), word='pcre2-dev'),
  WordNode(pos=(149, 161), word='readline-dev'),
  WordNode(pos=(164, 167), word='tar'),
  WordNode(pos=(170, 178), word='zlib-dev'),
])


9339) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(184, 221), parts=[
  WordNode(pos=(184, 188), word='wget'),
  WordNode(pos=(189, 191), word='-O'),
  WordNode(pos=(192, 206), word='haproxy.tar.gz'),
  WordNode(pos=(207, 221), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(208, 220), value='HAPROXY_URL'),
  ]),
])


9340) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(226, 264), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 264), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(232, 247), value='HAPROXY_SHA256'),
  ]),
])


9341) sha256sum -c

CommandNode(pos=(267, 279), parts=[
  WordNode(pos=(267, 276), word='sha256sum'),
  WordNode(pos=(277, 279), word='-c'),
])


9342) mkdir -p /usr/src/haproxy

CommandNode(pos=(284, 309), parts=[
  WordNode(pos=(284, 289), word='mkdir'),
  WordNode(pos=(290, 292), word='-p'),
  WordNode(pos=(293, 309), word='/usr/src/haproxy'),
])


9343) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(314, 378), parts=[
  WordNode(pos=(314, 317), word='tar'),
  WordNode(pos=(318, 322), word='-xzf'),
  WordNode(pos=(323, 337), word='haproxy.tar.gz'),
  WordNode(pos=(338, 340), word='-C'),
  WordNode(pos=(341, 357), word='/usr/src/haproxy'),
  WordNode(pos=(358, 378), word='--strip-components=1'),
])


9344) rm haproxy.tar.gz

CommandNode(pos=(383, 400), parts=[
  WordNode(pos=(383, 385), word='rm'),
  WordNode(pos=(386, 400), word='haproxy.tar.gz'),
])


9345) makeOpts='   TARGET=linux2628   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(406, 517), parts=[
  AssignmentNode(pos=(406, 517), word='makeOpts=   TARGET=linux2628   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


9346) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(522, 594), parts=[
  WordNode(pos=(522, 526), word='make'),
  WordNode(pos=(527, 529), word='-C'),
  WordNode(pos=(530, 546), word='/usr/src/haproxy'),
  WordNode(pos=(547, 549), word='-j'),
  WordNode(pos=(550, 580), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(553, 578), parts=[
        WordNode(pos=(553, 560), word='getconf'),
        WordNode(pos=(561, 578), word='_NPROCESSORS_ONLN'),
      ]), pos=(551, 579)),
  ]),
  WordNode(pos=(581, 584), word='all'),
  WordNode(pos=(585, 594), word='$makeOpts', parts=[
    ParameterNode(pos=(585, 594), value='makeOpts'),
  ]),
])


9347) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(599, 645), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 635), word='install-bin'),
  WordNode(pos=(636, 645), word='$makeOpts', parts=[
    ParameterNode(pos=(636, 645), value='makeOpts'),
  ]),
])


9348) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(651, 682), parts=[
  WordNode(pos=(651, 656), word='mkdir'),
  WordNode(pos=(657, 659), word='-p'),
  WordNode(pos=(660, 682), word='/usr/local/etc/haproxy'),
])


9349) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(687, 759), parts=[
  WordNode(pos=(687, 689), word='cp'),
  WordNode(pos=(690, 692), word='-R'),
  WordNode(pos=(693, 729), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(730, 759), word='/usr/local/etc/haproxy/errors'),
])


9350) rm -rf /usr/src/haproxy

CommandNode(pos=(764, 787), parts=[
  WordNode(pos=(764, 766), word='rm'),
  WordNode(pos=(767, 770), word='-rf'),
  WordNode(pos=(771, 787), word='/usr/src/haproxy'),
])


9351) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(793, 990), parts=[
  AssignmentNode(pos=(793, 990), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(807, 986), parts=[
        CommandNode(pos=(807, 873), parts=[
          WordNode(pos=(807, 814), word='scanelf'),
          WordNode(pos=(815, 823), word='--needed'),
          WordNode(pos=(824, 834), word='--nobanner'),
          WordNode(pos=(835, 843), word='--format'),
          WordNode(pos=(844, 850), word='%n#p'),
          WordNode(pos=(851, 862), word='--recursive'),
          WordNode(pos=(863, 873), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(877, 878)),
        CommandNode(pos=(879, 890), parts=[
          WordNode(pos=(879, 881), word='tr'),
          WordNode(pos=(882, 885), word=','),
          WordNode(pos=(886, 890), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(894, 895)),
        CommandNode(pos=(896, 903), parts=[
          WordNode(pos=(896, 900), word='sort'),
          WordNode(pos=(901, 903), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(907, 908)),
        CommandNode(pos=(909, 986), parts=[
          WordNode(pos=(909, 912), word='awk'),
          WordNode(pos=(913, 986), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(802, 987)),
  ]),
])


9352) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(995, 1038), parts=[
  WordNode(pos=(995, 998), word='apk'),
  WordNode(pos=(999, 1002), word='add'),
  WordNode(pos=(1003, 1012), word='--virtual'),
  WordNode(pos=(1013, 1029), word='.haproxy-rundeps'),
  WordNode(pos=(1030, 1038), word='$runDeps', parts=[
    ParameterNode(pos=(1030, 1038), value='runDeps'),
  ]),
])


9353) apk del .build-deps

CommandNode(pos=(1043, 1062), parts=[
  WordNode(pos=(1043, 1046), word='apk'),
  WordNode(pos=(1047, 1050), word='del'),
  WordNode(pos=(1051, 1062), word='.build-deps'),
])


9354) groupadd -r mysql

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 17), word='mysql'),
])


9355) useradd -r -g mysql mysql

CommandNode(pos=(21, 46), parts=[
  WordNode(pos=(21, 28), word='useradd'),
  WordNode(pos=(29, 31), word='-r'),
  WordNode(pos=(32, 34), word='-g'),
  WordNode(pos=(35, 40), word='mysql'),
  WordNode(pos=(41, 46), word='mysql'),
])


9356) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9357) apt-get update

CommandNode(pos=(10, 24), parts=[
  WordNode(pos=(10, 17), word='apt-get'),
  WordNode(pos=(18, 24), word='update'),
])


9358) which gpg

CommandNode(pos=(32, 41), parts=[
  WordNode(pos=(32, 37), word='which'),
  WordNode(pos=(38, 41), word='gpg'),
])


9359) apt-get install -y --no-install-recommends gnupg

CommandNode(pos=(50, 98), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 65), word='install'),
  WordNode(pos=(66, 68), word='-y'),
  WordNode(pos=(69, 92), word='--no-install-recommends'),
  WordNode(pos=(93, 98), word='gnupg'),
])


9360) gpg --version

CommandNode(pos=(111, 124), parts=[
  WordNode(pos=(111, 114), word='gpg'),
  WordNode(pos=(115, 124), word='--version'),
])


9361) grep -q '^gpg (GnuPG) 1\.'

CommandNode(pos=(127, 153), parts=[
  WordNode(pos=(127, 131), word='grep'),
  WordNode(pos=(132, 134), word='-q'),
  WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
])


9362) apt-get install -y --no-install-recommends dirmngr

CommandNode(pos=(163, 213), parts=[
  WordNode(pos=(163, 170), word='apt-get'),
  WordNode(pos=(171, 178), word='install'),
  WordNode(pos=(179, 181), word='-y'),
  WordNode(pos=(182, 205), word='--no-install-recommends'),
  WordNode(pos=(206, 213), word='dirmngr'),
])


9363) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(221, 248), parts=[
  WordNode(pos=(221, 223), word='rm'),
  WordNode(pos=(224, 227), word='-rf'),
  WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
])


9364) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9365) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


9366) apt-get update

CommandNode(pos=(53, 67), parts=[
  WordNode(pos=(53, 60), word='apt-get'),
  WordNode(pos=(61, 67), word='update'),
])


9367) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


9368) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(126, 153), parts=[
  WordNode(pos=(126, 128), word='rm'),
  WordNode(pos=(129, 132), word='-rf'),
  WordNode(pos=(133, 153), word='/var/lib/apt/lists/*'),
])


9369) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


9370) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


9371) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


9372) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


9373) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(488, 591), parts=[
  WordNode(pos=(488, 491), word='gpg'),
  WordNode(pos=(492, 499), word='--batch'),
  WordNode(pos=(500, 511), word='--keyserver'),
  WordNode(pos=(512, 538), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(539, 550), word='--recv-keys'),
  WordNode(pos=(551, 591), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


9374) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(594, 658), parts=[
  WordNode(pos=(594, 597), word='gpg'),
  WordNode(pos=(598, 605), word='--batch'),
  WordNode(pos=(606, 614), word='--verify'),
  WordNode(pos=(615, 638), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(639, 658), word='/usr/local/bin/gosu'),
])


9375) command -v gpgconf > /dev/null

CommandNode(pos=(661, 691), parts=[
  WordNode(pos=(661, 668), word='command'),
  WordNode(pos=(669, 671), word='-v'),
  WordNode(pos=(672, 679), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(682, 691), word='/dev/null'), pos=(680, 691), type='>'),
])


9376) gpgconf --kill all

CommandNode(pos=(695, 713), parts=[
  WordNode(pos=(695, 702), word='gpgconf'),
  WordNode(pos=(703, 709), word='--kill'),
  WordNode(pos=(710, 713), word='all'),
])


9377) :

CommandNode(pos=(717, 718), parts=[
  WordNode(pos=(717, 718), word=':'),
])


9378) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


9379) chmod +x /usr/local/bin/gosu

CommandNode(pos=(767, 795), parts=[
  WordNode(pos=(767, 772), word='chmod'),
  WordNode(pos=(773, 775), word='+x'),
  WordNode(pos=(776, 795), word='/usr/local/bin/gosu'),
])


9380) gosu nobody true

CommandNode(pos=(798, 814), parts=[
  WordNode(pos=(798, 802), word='gosu'),
  WordNode(pos=(803, 809), word='nobody'),
  WordNode(pos=(810, 814), word='true'),
])


9381) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


9382) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


9383) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


9384) apt-get install -y --no-install-recommends   apt-transport-https ca-certificates   pwgen

CommandNode(pos=(18, 106), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 82), word='apt-transport-https'),
  WordNode(pos=(83, 98), word='ca-certificates'),
  WordNode(pos=(101, 106), word='pwgen'),
])


9385) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(111, 138), parts=[
  WordNode(pos=(111, 113), word='rm'),
  WordNode(pos=(114, 117), word='-rf'),
  WordNode(pos=(118, 138), word='/var/lib/apt/lists/*'),
])


9386) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9387) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


9388) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


9389) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
])


9390) command -v gpgconf > /dev/null

CommandNode(pos=(220, 250), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
])


9391) gpgconf --kill all

CommandNode(pos=(254, 272), parts=[
  WordNode(pos=(254, 261), word='gpgconf'),
  WordNode(pos=(262, 268), word='--kill'),
  WordNode(pos=(269, 272), word='all'),
])


9392) :

CommandNode(pos=(276, 277), parts=[
  WordNode(pos=(276, 277), word=':'),
])


9393) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


9394) apt-key list

CommandNode(pos=(301, 313), parts=[
  WordNode(pos=(301, 308), word='apt-key'),
  WordNode(pos=(309, 313), word='list'),
])


9395) echo 'deb https://repo.percona.com/apt %%SUITE%% main' > /etc/apt/sources.list.d/percona.list

CommandNode(pos=(0, 93), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 54), word='deb https://repo.percona.com/apt %%SUITE%% main'),
  RedirectNode(output=
    WordNode(pos=(57, 93), word='/etc/apt/sources.list.d/percona.list'), pos=(55, 93), type='>'),
])


9396) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9397) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


9398) debconf-set-selections

CommandNode(pos=(309, 331), parts=[
  WordNode(pos=(309, 331), word='debconf-set-selections'),
])


9399) apt-get update

CommandNode(pos=(334, 348), parts=[
  WordNode(pos=(334, 341), word='apt-get'),
  WordNode(pos=(342, 348), word='update'),
])


9400) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


9401) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(430, 457), parts=[
  WordNode(pos=(430, 432), word='rm'),
  WordNode(pos=(433, 436), word='-rf'),
  WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
])


9402) sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 463), word='sed'),
  WordNode(pos=(464, 467), word='-ri'),
  WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
  WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
])


9403) rm -rf /var/lib/mysql

CommandNode(pos=(504, 525), parts=[
  WordNode(pos=(504, 506), word='rm'),
  WordNode(pos=(507, 510), word='-rf'),
  WordNode(pos=(511, 525), word='/var/lib/mysql'),
])


9404) mkdir -p /var/lib/mysql /var/run/mysqld

CommandNode(pos=(528, 567), parts=[
  WordNode(pos=(528, 533), word='mkdir'),
  WordNode(pos=(534, 536), word='-p'),
  WordNode(pos=(537, 551), word='/var/lib/mysql'),
  WordNode(pos=(552, 567), word='/var/run/mysqld'),
])


9405) chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

CommandNode(pos=(570, 621), parts=[
  WordNode(pos=(570, 575), word='chown'),
  WordNode(pos=(576, 578), word='-R'),
  WordNode(pos=(579, 590), word='mysql:mysql'),
  WordNode(pos=(591, 605), word='/var/lib/mysql'),
  WordNode(pos=(606, 621), word='/var/run/mysqld'),
])


9406) chmod 777 /var/run/mysqld

CommandNode(pos=(624, 649), parts=[
  WordNode(pos=(624, 629), word='chmod'),
  WordNode(pos=(630, 633), word='777'),
  WordNode(pos=(634, 649), word='/var/run/mysqld'),
])


9407) find /etc/mysql/ -name '*.cnf' -print0

CommandNode(pos=(652, 690), parts=[
  WordNode(pos=(652, 656), word='find'),
  WordNode(pos=(657, 668), word='/etc/mysql/'),
  WordNode(pos=(669, 674), word='-name'),
  WordNode(pos=(675, 682), word='*.cnf'),
  WordNode(pos=(683, 690), word='-print0'),
])


9408) xargs -0 grep -lZE '^(bind-address|log)'

CommandNode(pos=(695, 735), parts=[
  WordNode(pos=(695, 700), word='xargs'),
  WordNode(pos=(701, 703), word='-0'),
  WordNode(pos=(704, 708), word='grep'),
  WordNode(pos=(709, 713), word='-lZE'),
  WordNode(pos=(714, 735), word='^(bind-address|log)'),
])


9409) xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'

CommandNode(pos=(740, 788), parts=[
  WordNode(pos=(740, 745), word='xargs'),
  WordNode(pos=(746, 749), word='-rt'),
  WordNode(pos=(750, 752), word='-0'),
  WordNode(pos=(753, 756), word='sed'),
  WordNode(pos=(757, 760), word='-Ei'),
  WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
])


9410) echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

CommandNode(pos=(791, 873), parts=[
  WordNode(pos=(791, 795), word='echo'),
  WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
  RedirectNode(output=
    WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
])


9411) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


9412) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


9413) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9414) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


9415) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


9416) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


9417) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


9418) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


9419) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


9420) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


9421) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


9422) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


9423) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


9424) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


9425) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


9426) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


9427) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


9428) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


9429) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


9430) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


9431) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


9432) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


9433) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


9434) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


9435) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


9436) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


9437) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


9438) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


9439) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


9440) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


9441) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


9442) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


9443) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


9444) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


9445) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


9446) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


9447) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


9448) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


9449) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


9450) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


9451) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


9452) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


9453) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


9454) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


9455) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


9456) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


9457) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


9458) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


9459) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


9460) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


9461) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


9462) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


9463) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


9464) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


9465) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


9466) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


9467) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


9468) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


9469) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


9470) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


9471) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


9472) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


9473) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


9474) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


9475) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9476) command -v gpg > /dev/null

CommandNode(pos=(15, 41), parts=[
  WordNode(pos=(15, 22), word='command'),
  WordNode(pos=(23, 25), word='-v'),
  WordNode(pos=(26, 29), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
])


9477) apt-get update

CommandNode(pos=(50, 64), parts=[
  WordNode(pos=(50, 57), word='apt-get'),
  WordNode(pos=(58, 64), word='update'),
])


9478) apt-get install -y --no-install-recommends    gnupg    dirmngr

CommandNode(pos=(68, 130), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(114, 119), word='gnupg'),
  WordNode(pos=(123, 130), word='dirmngr'),
])


9479) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(137, 164), parts=[
  WordNode(pos=(137, 139), word='rm'),
  WordNode(pos=(140, 143), word='-rf'),
  WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
])


9480) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9481) groupadd -r postgres --gid=999

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 22), word='-r'),
  WordNode(pos=(23, 31), word='postgres'),
  WordNode(pos=(32, 41), word='--gid=999'),
])


9482) useradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres

CommandNode(pos=(44, 134), parts=[
  WordNode(pos=(44, 51), word='useradd'),
  WordNode(pos=(52, 54), word='-r'),
  WordNode(pos=(55, 57), word='-g'),
  WordNode(pos=(58, 66), word='postgres'),
  WordNode(pos=(67, 76), word='--uid=999'),
  WordNode(pos=(77, 107), word='--home-dir=/var/lib/postgresql'),
  WordNode(pos=(108, 125), word='--shell=/bin/bash'),
  WordNode(pos=(126, 134), word='postgres'),
])


9483) mkdir -p /var/lib/postgresql

CommandNode(pos=(137, 165), parts=[
  WordNode(pos=(137, 142), word='mkdir'),
  WordNode(pos=(143, 145), word='-p'),
  WordNode(pos=(146, 165), word='/var/lib/postgresql'),
])


9484) chown -R postgres:postgres /var/lib/postgresql

CommandNode(pos=(168, 214), parts=[
  WordNode(pos=(168, 173), word='chown'),
  WordNode(pos=(174, 176), word='-R'),
  WordNode(pos=(177, 194), word='postgres:postgres'),
  WordNode(pos=(195, 214), word='/var/lib/postgresql'),
])


9485) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


9486) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


9487) apt-get install -y --no-install-recommends ca-certificates wget

CommandNode(pos=(29, 92), parts=[
  WordNode(pos=(29, 36), word='apt-get'),
  WordNode(pos=(37, 44), word='install'),
  WordNode(pos=(45, 47), word='-y'),
  WordNode(pos=(48, 71), word='--no-install-recommends'),
  WordNode(pos=(72, 87), word='ca-certificates'),
  WordNode(pos=(88, 92), word='wget'),
])


9488) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(96, 123), parts=[
  WordNode(pos=(96, 98), word='rm'),
  WordNode(pos=(99, 102), word='-rf'),
  WordNode(pos=(103, 123), word='/var/lib/apt/lists/*'),
])


9489) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


9490) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


9491) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


9492) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(434, 537), parts=[
  WordNode(pos=(434, 437), word='gpg'),
  WordNode(pos=(438, 445), word='--batch'),
  WordNode(pos=(446, 457), word='--keyserver'),
  WordNode(pos=(458, 484), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(485, 496), word='--recv-keys'),
  WordNode(pos=(497, 537), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


9493) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(542, 606), parts=[
  WordNode(pos=(542, 545), word='gpg'),
  WordNode(pos=(546, 553), word='--batch'),
  WordNode(pos=(554, 562), word='--verify'),
  WordNode(pos=(563, 586), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(587, 606), word='/usr/local/bin/gosu'),
])


9494) command -v gpgconf > /dev/null

CommandNode(pos=(613, 643), parts=[
  WordNode(pos=(613, 620), word='command'),
  WordNode(pos=(621, 623), word='-v'),
  WordNode(pos=(624, 631), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(634, 643), word='/dev/null'), pos=(632, 643), type='>'),
])


9495) gpgconf --kill all

CommandNode(pos=(647, 665), parts=[
  WordNode(pos=(647, 654), word='gpgconf'),
  WordNode(pos=(655, 661), word='--kill'),
  WordNode(pos=(662, 665), word='all'),
])


9496) :

CommandNode(pos=(669, 670), parts=[
  WordNode(pos=(669, 670), word=':'),
])


9497) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


9498) chmod +x /usr/local/bin/gosu

CommandNode(pos=(726, 754), parts=[
  WordNode(pos=(726, 731), word='chmod'),
  WordNode(pos=(732, 734), word='+x'),
  WordNode(pos=(735, 754), word='/usr/local/bin/gosu'),
])


9499) gosu nobody true

CommandNode(pos=(759, 775), parts=[
  WordNode(pos=(759, 763), word='gosu'),
  WordNode(pos=(764, 770), word='nobody'),
  WordNode(pos=(771, 775), word='true'),
])


9500) apt-get purge -y --auto-remove ca-certificates wget

CommandNode(pos=(780, 831), parts=[
  WordNode(pos=(780, 787), word='apt-get'),
  WordNode(pos=(788, 793), word='purge'),
  WordNode(pos=(794, 796), word='-y'),
  WordNode(pos=(797, 810), word='--auto-remove'),
  WordNode(pos=(811, 826), word='ca-certificates'),
  WordNode(pos=(827, 831), word='wget'),
])


9501) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9502) [ -f /etc/dpkg/dpkg.cfg.d/docker ]

CommandNode(pos=(14, 48), parts=[
  WordNode(pos=(14, 15), word='['),
  WordNode(pos=(16, 18), word='-f'),
  WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
  WordNode(pos=(47, 48), word=']'),
])


9503) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(57, 112), parts=[
  WordNode(pos=(57, 61), word='grep'),
  WordNode(pos=(62, 64), word='-q'),
  WordNode(pos=(65, 84), word='/usr/share/locale'),
  WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


9504) sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(116, 177), parts=[
  WordNode(pos=(116, 119), word='sed'),
  WordNode(pos=(120, 123), word='-ri'),
  WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
  WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


9505) grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker

CommandNode(pos=(183, 238), parts=[
  WordNode(pos=(183, 187), word='grep'),
  WordNode(pos=(188, 190), word='-q'),
  WordNode(pos=(191, 210), word='/usr/share/locale'),
  WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
])


9506) apt-get update

CommandNode(pos=(246, 260), parts=[
  WordNode(pos=(246, 253), word='apt-get'),
  WordNode(pos=(254, 260), word='update'),
])


9507) apt-get install -y locales

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 269), word='apt-get'),
  WordNode(pos=(270, 277), word='install'),
  WordNode(pos=(278, 280), word='-y'),
  WordNode(pos=(281, 288), word='locales'),
])


9508) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(290, 317), parts=[
  WordNode(pos=(290, 292), word='rm'),
  WordNode(pos=(293, 296), word='-rf'),
  WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
])


9509) localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

CommandNode(pos=(320, 396), parts=[
  WordNode(pos=(320, 329), word='localedef'),
  WordNode(pos=(330, 332), word='-i'),
  WordNode(pos=(333, 338), word='en_US'),
  WordNode(pos=(339, 341), word='-c'),
  WordNode(pos=(342, 344), word='-f'),
  WordNode(pos=(345, 350), word='UTF-8'),
  WordNode(pos=(351, 353), word='-A'),
  WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
  WordNode(pos=(385, 396), word='en_US.UTF-8'),
])


9510) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9511) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


9512) apt-get install -y --no-install-recommends libnss-wrapper

CommandNode(pos=(28, 85), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 85), word='libnss-wrapper'),
])


9513) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(88, 115), parts=[
  WordNode(pos=(88, 90), word='rm'),
  WordNode(pos=(91, 94), word='-rf'),
  WordNode(pos=(95, 115), word='/var/lib/apt/lists/*'),
])


9514) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


9515) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9516) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


9517) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


9518) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


9519) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


9520) command -v gpgconf > /dev/null

CommandNode(pos=(233, 263), parts=[
  WordNode(pos=(233, 240), word='command'),
  WordNode(pos=(241, 243), word='-v'),
  WordNode(pos=(244, 251), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(254, 263), word='/dev/null'), pos=(252, 263), type='>'),
])


9521) gpgconf --kill all

CommandNode(pos=(267, 285), parts=[
  WordNode(pos=(267, 274), word='gpgconf'),
  WordNode(pos=(275, 281), word='--kill'),
  WordNode(pos=(282, 285), word='all'),
])


9522) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


9523) apt-key list

CommandNode(pos=(310, 322), parts=[
  WordNode(pos=(310, 317), word='apt-key'),
  WordNode(pos=(318, 322), word='list'),
])


9524) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9525) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


9526) cp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(158, 258), parts=[
  WordNode(pos=(158, 160), word='cp'),
  WordNode(pos=(161, 163), word='-v'),
  WordNode(pos=(164, 213), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(214, 258), word='/usr/share/postgresql/postgresql.conf.sample'),
])


9527) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


9528) sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(331, 431), parts=[
  WordNode(pos=(331, 334), word='sed'),
  WordNode(pos=(335, 338), word='-ri'),
  WordNode(pos=(339, 386), word="s!^#?(listen_addresses)s*=s*S+.*!1 = '*'!"),
  WordNode(pos=(387, 431), word='/usr/share/postgresql/postgresql.conf.sample'),
])


9529) grep -F "listen_addresses = '*'" /usr/share/postgresql/postgresql.conf.sample

CommandNode(pos=(434, 511), parts=[
  WordNode(pos=(434, 438), word='grep'),
  WordNode(pos=(439, 441), word='-F'),
  WordNode(pos=(442, 466), word="listen_addresses = '*'"),
  WordNode(pos=(467, 511), word='/usr/share/postgresql/postgresql.conf.sample'),
])


9530) mkdir -p /var/run/postgresql

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 28), word='/var/run/postgresql'),
])


9531) chown -R postgres:postgres /var/run/postgresql

CommandNode(pos=(32, 78), parts=[
  WordNode(pos=(32, 37), word='chown'),
  WordNode(pos=(38, 40), word='-R'),
  WordNode(pos=(41, 58), word='postgres:postgres'),
  WordNode(pos=(59, 78), word='/var/run/postgresql'),
])


9532) chmod 2777 /var/run/postgresql

CommandNode(pos=(82, 112), parts=[
  WordNode(pos=(82, 87), word='chmod'),
  WordNode(pos=(88, 92), word='2777'),
  WordNode(pos=(93, 112), word='/var/run/postgresql'),
])


9533) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


9534) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


9535) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


9536) ln -s usr/local/bin/docker-entrypoint.sh /

CommandNode(pos=(0, 42), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 42), word='/'),
])


9537) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9538) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


9539) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


9540) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


9541) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


9542) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


9543) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


9544) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9545) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


9546) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


9547) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


9548) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


9549) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


9550) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9551) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


9552) apt-get install -y --no-install-recommends apache2

CommandNode(pos=(28, 78), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(71, 78), word='apache2'),
])


9553) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(81, 108), parts=[
  WordNode(pos=(81, 83), word='rm'),
  WordNode(pos=(84, 87), word='-rf'),
  WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
])


9554) sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"

CommandNode(pos=(112, 187), parts=[
  WordNode(pos=(112, 115), word='sed'),
  WordNode(pos=(116, 119), word='-ri'),
  WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
  WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
  ]),
])


9555) . "$APACHE_ENVVARS"

CommandNode(pos=(191, 210), parts=[
  WordNode(pos=(191, 192), word='.'),
  WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
  ]),
])


9556) rm -rvf "$dir"

CommandNode(pos=(293, 307), parts=[
  WordNode(pos=(293, 295), word='rm'),
  WordNode(pos=(296, 300), word='-rvf'),
  WordNode(pos=(301, 307), word='$dir', parts=[
    ParameterNode(pos=(302, 306), value='dir'),
  ]),
])


9557) mkdir -p "$dir"

CommandNode(pos=(311, 326), parts=[
  WordNode(pos=(311, 316), word='mkdir'),
  WordNode(pos=(317, 319), word='-p'),
  WordNode(pos=(320, 326), word='$dir', parts=[
    ParameterNode(pos=(321, 325), value='dir'),
  ]),
])


9558) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


9559) chmod 777 "$dir"

CommandNode(pos=(383, 399), parts=[
  WordNode(pos=(383, 388), word='chmod'),
  WordNode(pos=(389, 392), word='777'),
  WordNode(pos=(393, 399), word='$dir', parts=[
    ParameterNode(pos=(394, 398), value='dir'),
  ]),
])


9560) rm -rvf /var/www/html/*

CommandNode(pos=(410, 433), parts=[
  WordNode(pos=(410, 412), word='rm'),
  WordNode(pos=(413, 417), word='-rvf'),
  WordNode(pos=(418, 433), word='/var/www/html/*'),
])


9561) ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"

CommandNode(pos=(437, 484), parts=[
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 444), word='-sfT'),
  WordNode(pos=(445, 456), word='/dev/stderr'),
  WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
    ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
  ]),
])


9562) ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"

CommandNode(pos=(487, 535), parts=[
  WordNode(pos=(487, 489), word='ln'),
  WordNode(pos=(490, 494), word='-sfT'),
  WordNode(pos=(495, 506), word='/dev/stdout'),
  WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
    ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
  ]),
])


9563) ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

CommandNode(pos=(538, 599), parts=[
  WordNode(pos=(538, 540), word='ln'),
  WordNode(pos=(541, 545), word='-sfT'),
  WordNode(pos=(546, 557), word='/dev/stdout'),
  WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
    ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
  ]),
])


9564) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


9565) a2dismod mpm_event

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 8), word='a2dismod'),
  WordNode(pos=(9, 18), word='mpm_event'),
])


9566) a2enmod mpm_prefork

CommandNode(pos=(22, 41), parts=[
  WordNode(pos=(22, 29), word='a2enmod'),
  WordNode(pos=(30, 41), word='mpm_prefork'),
])


9567) echo '<FilesMatch \.php$>'

CommandNode(pos=(4, 30), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 30), word='<FilesMatch \\.php$>'),
])


9568) echo '\tSetHandler application/x-httpd-php'

CommandNode(pos=(34, 77), parts=[
  WordNode(pos=(34, 38), word='echo'),
  WordNode(pos=(39, 77), word='\\tSetHandler application/x-httpd-php'),
])


9569) echo '</FilesMatch>'

CommandNode(pos=(81, 101), parts=[
  WordNode(pos=(81, 85), word='echo'),
  WordNode(pos=(86, 101), word='</FilesMatch>'),
])


9570) echo

CommandNode(pos=(105, 109), parts=[
  WordNode(pos=(105, 109), word='echo'),
])


9571) echo 'DirectoryIndex disabled'

CommandNode(pos=(113, 143), parts=[
  WordNode(pos=(113, 117), word='echo'),
  WordNode(pos=(118, 143), word='DirectoryIndex disabled'),
])


9572) echo 'DirectoryIndex index.php index.html'

CommandNode(pos=(147, 189), parts=[
  WordNode(pos=(147, 151), word='echo'),
  WordNode(pos=(152, 189), word='DirectoryIndex index.php index.html'),
])


9573) echo

CommandNode(pos=(193, 197), parts=[
  WordNode(pos=(193, 197), word='echo'),
])


9574) echo '<Directory /var/www/>'

CommandNode(pos=(201, 229), parts=[
  WordNode(pos=(201, 205), word='echo'),
  WordNode(pos=(206, 229), word='<Directory /var/www/>'),
])


9575) echo '\tOptions -Indexes'

CommandNode(pos=(233, 258), parts=[
  WordNode(pos=(233, 237), word='echo'),
  WordNode(pos=(238, 258), word='\\tOptions -Indexes'),
])


9576) echo '\tAllowOverride All'

CommandNode(pos=(262, 288), parts=[
  WordNode(pos=(262, 266), word='echo'),
  WordNode(pos=(267, 288), word='\\tAllowOverride All'),
])


9577) echo '</Directory>'

CommandNode(pos=(292, 311), parts=[
  WordNode(pos=(292, 296), word='echo'),
  WordNode(pos=(297, 311), word='</Directory>'),
])


9578) tee "$APACHE_CONFDIR/conf-available/docker-php.conf"

CommandNode(pos=(318, 370), parts=[
  WordNode(pos=(318, 321), word='tee'),
  WordNode(pos=(322, 370), word='$APACHE_CONFDIR/conf-available/docker-php.conf', parts=[
    ParameterNode(pos=(323, 338), value='APACHE_CONFDIR'),
  ]),
])


9579) a2enconf docker-php

CommandNode(pos=(375, 394), parts=[
  WordNode(pos=(375, 383), word='a2enconf'),
  WordNode(pos=(384, 394), word='docker-php'),
])


9580) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


9581) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


9582) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


9583) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


9584) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


9585) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


9586) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


9587) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


9588) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


9589) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


9590) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


9591) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


9592) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


9593) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


9594) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


9595) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


9596) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


9597) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


9598) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


9599) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


9600) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


9601) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


9602) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


9603) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


9604) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


9605) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


9606) apk add --no-cache   ca-certificates

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(21, 36), word='ca-certificates'),
])


9607) [ ! -e /etc/nsswitch.conf ]

CommandNode(pos=(0, 27), parts=[
  WordNode(pos=(0, 1), word='['),
  WordNode(pos=(2, 3), word='!'),
  WordNode(pos=(4, 6), word='-e'),
  WordNode(pos=(7, 25), word='/etc/nsswitch.conf'),
  WordNode(pos=(26, 27), word=']'),
])


9608) echo 'hosts: files dns' > /etc/nsswitch.conf

CommandNode(pos=(31, 75), parts=[
  WordNode(pos=(31, 35), word='echo'),
  WordNode(pos=(36, 54), word='hosts: files dns'),
  RedirectNode(output=
    WordNode(pos=(57, 75), word='/etc/nsswitch.conf'), pos=(55, 75), type='>'),
])


9609) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


9610) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


9611) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


9612) apt-get install -y --no-install-recommends   tk-dev

CommandNode(pos=(18, 69), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 69), word='tk-dev'),
])


9613) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(74, 101), parts=[
  WordNode(pos=(74, 76), word='rm'),
  WordNode(pos=(77, 80), word='-rf'),
  WordNode(pos=(81, 101), word='/var/lib/apt/lists/*'),
])


9614) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9615) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


9616) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


9617) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


9618) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


9619) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(371, 423), parts=[
  WordNode(pos=(371, 374), word='gpg'),
  WordNode(pos=(375, 382), word='--batch'),
  WordNode(pos=(383, 391), word='--verify'),
  WordNode(pos=(392, 409), word='python.tar.xz.asc'),
  WordNode(pos=(410, 423), word='python.tar.xz'),
])


9620) command -v gpgconf > /dev/null

CommandNode(pos=(430, 460), parts=[
  WordNode(pos=(430, 437), word='command'),
  WordNode(pos=(438, 440), word='-v'),
  WordNode(pos=(441, 448), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(451, 460), word='/dev/null'), pos=(449, 460), type='>'),
])


9621) gpgconf --kill all

CommandNode(pos=(464, 482), parts=[
  WordNode(pos=(464, 471), word='gpgconf'),
  WordNode(pos=(472, 478), word='--kill'),
  WordNode(pos=(479, 482), word='all'),
])


9622) :

CommandNode(pos=(486, 487), parts=[
  WordNode(pos=(486, 487), word=':'),
])


9623) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


9624) mkdir -p /usr/src/python

CommandNode(pos=(537, 561), parts=[
  WordNode(pos=(537, 542), word='mkdir'),
  WordNode(pos=(543, 545), word='-p'),
  WordNode(pos=(546, 561), word='/usr/src/python'),
])


9625) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(566, 628), parts=[
  WordNode(pos=(566, 569), word='tar'),
  WordNode(pos=(570, 574), word='-xJC'),
  WordNode(pos=(575, 590), word='/usr/src/python'),
  WordNode(pos=(591, 611), word='--strip-components=1'),
  WordNode(pos=(612, 614), word='-f'),
  WordNode(pos=(615, 628), word='python.tar.xz'),
])


9626) rm python.tar.xz

CommandNode(pos=(633, 649), parts=[
  WordNode(pos=(633, 635), word='rm'),
  WordNode(pos=(636, 649), word='python.tar.xz'),
])


9627) cd /usr/src/python

CommandNode(pos=(655, 673), parts=[
  WordNode(pos=(655, 657), word='cd'),
  WordNode(pos=(658, 673), word='/usr/src/python'),
])


9628) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


9629) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


9630) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


9631) make install

CommandNode(pos=(920, 932), parts=[
  WordNode(pos=(920, 924), word='make'),
  WordNode(pos=(925, 932), word='install'),
])


9632) ldconfig

CommandNode(pos=(937, 945), parts=[
  WordNode(pos=(937, 945), word='ldconfig'),
])


9633) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(951, 1118), parts=[
  WordNode(pos=(951, 955), word='find'),
  WordNode(pos=(956, 966), word='/usr/local'),
  WordNode(pos=(967, 973), word='-depth'),
  WordNode(pos=(976, 978), word='('),
  WordNode(pos=(982, 984), word='('),
  WordNode(pos=(985, 990), word='-type'),
  WordNode(pos=(991, 992), word='d'),
  WordNode(pos=(993, 995), word='-a'),
  WordNode(pos=(996, 998), word='('),
  WordNode(pos=(999, 1004), word='-name'),
  WordNode(pos=(1005, 1009), word='test'),
  WordNode(pos=(1010, 1012), word='-o'),
  WordNode(pos=(1013, 1018), word='-name'),
  WordNode(pos=(1019, 1024), word='tests'),
  WordNode(pos=(1025, 1027), word=')'),
  WordNode(pos=(1028, 1030), word=')'),
  WordNode(pos=(1034, 1036), word='-o'),
  WordNode(pos=(1040, 1042), word='('),
  WordNode(pos=(1043, 1048), word='-type'),
  WordNode(pos=(1049, 1050), word='f'),
  WordNode(pos=(1051, 1053), word='-a'),
  WordNode(pos=(1054, 1056), word='('),
  WordNode(pos=(1057, 1062), word='-name'),
  WordNode(pos=(1063, 1070), word='*.pyc'),
  WordNode(pos=(1071, 1073), word='-o'),
  WordNode(pos=(1074, 1079), word='-name'),
  WordNode(pos=(1080, 1087), word='*.pyo'),
  WordNode(pos=(1088, 1090), word=')'),
  WordNode(pos=(1091, 1093), word=')'),
  WordNode(pos=(1096, 1098), word=')'),
  WordNode(pos=(1099, 1104), word='-exec'),
  WordNode(pos=(1105, 1107), word='rm'),
  WordNode(pos=(1108, 1111), word='-rf'),
  WordNode(pos=(1112, 1116), word='{}'),
  WordNode(pos=(1117, 1118), word='+'),
])


9634) rm -rf /usr/src/python

CommandNode(pos=(1123, 1145), parts=[
  WordNode(pos=(1123, 1125), word='rm'),
  WordNode(pos=(1126, 1129), word='-rf'),
  WordNode(pos=(1130, 1145), word='/usr/src/python'),
])


9635) python3 --version

CommandNode(pos=(1151, 1168), parts=[
  WordNode(pos=(1151, 1158), word='python3'),
  WordNode(pos=(1159, 1168), word='--version'),
])


9636) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


9637) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


9638) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


9639) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


9640) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


9641) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9642) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


9643) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


9644) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


9645) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


9646) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


9647) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9648) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


9649) apt-get install -y --no-install-recommends   bzip2   unzip   xz-utils     ca-certificates p11-kit     fontconfig libfreetype6

CommandNode(pos=(28, 153), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 78), word='bzip2'),
  WordNode(pos=(81, 86), word='unzip'),
  WordNode(pos=(89, 97), word='xz-utils'),
  WordNode(pos=(102, 117), word='ca-certificates'),
  WordNode(pos=(118, 125), word='p11-kit'),
  WordNode(pos=(130, 140), word='fontconfig'),
  WordNode(pos=(141, 153), word='libfreetype6'),
])


9650) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(158, 185), parts=[
  WordNode(pos=(158, 160), word='rm'),
  WordNode(pos=(161, 164), word='-rf'),
  WordNode(pos=(165, 185), word='/var/lib/apt/lists/*'),
])


9651) echo '#/bin/sh'

CommandNode(pos=(2, 17), parts=[
  WordNode(pos=(2, 6), word='echo'),
  WordNode(pos=(7, 17), word='#/bin/sh'),
])


9652) echo 'echo "$JAVA_HOME"'

CommandNode(pos=(19, 43), parts=[
  WordNode(pos=(19, 23), word='echo'),
  WordNode(pos=(24, 43), word='echo "$JAVA_HOME"'),
])


9653) chmod +x /usr/local/bin/docker-java-home

CommandNode(pos=(84, 124), parts=[
  WordNode(pos=(84, 89), word='chmod'),
  WordNode(pos=(90, 92), word='+x'),
  WordNode(pos=(93, 124), word='/usr/local/bin/docker-java-home'),
])


9654) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


9655) rabbitmq-plugins enable --offline rabbitmq_management

CommandNode(pos=(0, 53), parts=[
  WordNode(pos=(0, 16), word='rabbitmq-plugins'),
  WordNode(pos=(17, 23), word='enable'),
  WordNode(pos=(24, 33), word='--offline'),
  WordNode(pos=(34, 53), word='rabbitmq_management'),
])


9656) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9657) erl -noinput -eval '   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  ' -- /plugins/rabbitmq_management-*.ez > /usr/local/bin/rabbitmqadmin

CommandNode(pos=(11, 422), parts=[
  WordNode(pos=(11, 14), word='erl'),
  WordNode(pos=(15, 23), word='-noinput'),
  WordNode(pos=(24, 29), word='-eval'),
  WordNode(pos=(30, 354), word='   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  '),
  WordNode(pos=(355, 357), word='--'),
  WordNode(pos=(358, 391), word='/plugins/rabbitmq_management-*.ez'),
  RedirectNode(output=
    WordNode(pos=(394, 422), word='/usr/local/bin/rabbitmqadmin'), pos=(392, 422), type='>'),
])


9658) [ -s /usr/local/bin/rabbitmqadmin ]

CommandNode(pos=(425, 460), parts=[
  WordNode(pos=(425, 426), word='['),
  WordNode(pos=(427, 429), word='-s'),
  WordNode(pos=(430, 458), word='/usr/local/bin/rabbitmqadmin'),
  WordNode(pos=(459, 460), word=']'),
])


9659) chmod +x /usr/local/bin/rabbitmqadmin

CommandNode(pos=(463, 500), parts=[
  WordNode(pos=(463, 468), word='chmod'),
  WordNode(pos=(469, 471), word='+x'),
  WordNode(pos=(472, 500), word='/usr/local/bin/rabbitmqadmin'),
])


9660) apt-get update

CommandNode(pos=(503, 517), parts=[
  WordNode(pos=(503, 510), word='apt-get'),
  WordNode(pos=(511, 517), word='update'),
])


9661) apt-get install -y --no-install-recommends python

CommandNode(pos=(519, 568), parts=[
  WordNode(pos=(519, 526), word='apt-get'),
  WordNode(pos=(527, 534), word='install'),
  WordNode(pos=(535, 537), word='-y'),
  WordNode(pos=(538, 561), word='--no-install-recommends'),
  WordNode(pos=(562, 568), word='python'),
])


9662) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(570, 597), parts=[
  WordNode(pos=(570, 572), word='rm'),
  WordNode(pos=(573, 576), word='-rf'),
  WordNode(pos=(577, 597), word='/var/lib/apt/lists/*'),
])


9663) rabbitmqadmin --version

CommandNode(pos=(600, 623), parts=[
  WordNode(pos=(600, 613), word='rabbitmqadmin'),
  WordNode(pos=(614, 623), word='--version'),
])


9664) pip install --no-cache-dir virtualenv

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 26), word='--no-cache-dir'),
  WordNode(pos=(27, 37), word='virtualenv'),
])


9665) groupadd -r mongodb

CommandNode(pos=(0, 19), parts=[
  WordNode(pos=(0, 8), word='groupadd'),
  WordNode(pos=(9, 11), word='-r'),
  WordNode(pos=(12, 19), word='mongodb'),
])


9666) useradd -r -g mongodb mongodb

CommandNode(pos=(23, 52), parts=[
  WordNode(pos=(23, 30), word='useradd'),
  WordNode(pos=(31, 33), word='-r'),
  WordNode(pos=(34, 36), word='-g'),
  WordNode(pos=(37, 44), word='mongodb'),
  WordNode(pos=(45, 52), word='mongodb'),
])


9667) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9668) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


9669) apt-get install -y --no-install-recommends   ca-certificates   jq   numactl

CommandNode(pos=(28, 103), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(91, 93), word='jq'),
  WordNode(pos=(96, 103), word='numactl'),
])


9670) command -v ps > /dev/null

CommandNode(pos=(113, 138), parts=[
  WordNode(pos=(113, 120), word='command'),
  WordNode(pos=(121, 123), word='-v'),
  WordNode(pos=(124, 126), word='ps'),
  RedirectNode(output=
    WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
])


9671) apt-get install -y --no-install-recommends procps

CommandNode(pos=(147, 196), parts=[
  WordNode(pos=(147, 154), word='apt-get'),
  WordNode(pos=(155, 162), word='install'),
  WordNode(pos=(163, 165), word='-y'),
  WordNode(pos=(166, 189), word='--no-install-recommends'),
  WordNode(pos=(190, 196), word='procps'),
])


9672) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(204, 231), parts=[
  WordNode(pos=(204, 206), word='rm'),
  WordNode(pos=(207, 210), word='-rf'),
  WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
])


9673) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9674) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


9675) apt-get install -y --no-install-recommends   wget

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='wget'),
])


9676) command -v gpg > /dev/null

CommandNode(pos=(87, 113), parts=[
  WordNode(pos=(87, 94), word='command'),
  WordNode(pos=(95, 97), word='-v'),
  WordNode(pos=(98, 101), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
])


9677) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(122, 178), parts=[
  WordNode(pos=(122, 129), word='apt-get'),
  WordNode(pos=(130, 137), word='install'),
  WordNode(pos=(138, 140), word='-y'),
  WordNode(pos=(141, 164), word='--no-install-recommends'),
  WordNode(pos=(165, 170), word='gnupg'),
  WordNode(pos=(171, 178), word='dirmngr'),
])


9678) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(186, 213), parts=[
  WordNode(pos=(186, 188), word='rm'),
  WordNode(pos=(189, 192), word='-rf'),
  WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
])


9679) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


9680) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


9681) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


9682) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


9683) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

CommandNode(pos=(547, 650), parts=[
  WordNode(pos=(547, 550), word='gpg'),
  WordNode(pos=(551, 558), word='--batch'),
  WordNode(pos=(559, 570), word='--keyserver'),
  WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(598, 609), word='--recv-keys'),
  WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
])


9684) gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

CommandNode(pos=(653, 717), parts=[
  WordNode(pos=(653, 656), word='gpg'),
  WordNode(pos=(657, 664), word='--batch'),
  WordNode(pos=(665, 673), word='--verify'),
  WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
])


9685) command -v gpgconf

CommandNode(pos=(720, 738), parts=[
  WordNode(pos=(720, 727), word='command'),
  WordNode(pos=(728, 730), word='-v'),
  WordNode(pos=(731, 738), word='gpgconf'),
])


9686) gpgconf --kill all

CommandNode(pos=(742, 760), parts=[
  WordNode(pos=(742, 749), word='gpgconf'),
  WordNode(pos=(750, 756), word='--kill'),
  WordNode(pos=(757, 760), word='all'),
])


9687) :

CommandNode(pos=(764, 765), parts=[
  WordNode(pos=(764, 765), word=':'),
])


9688) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


9689) chmod +x /usr/local/bin/gosu

CommandNode(pos=(813, 841), parts=[
  WordNode(pos=(813, 818), word='chmod'),
  WordNode(pos=(819, 821), word='+x'),
  WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
])


9690) gosu --version

CommandNode(pos=(844, 858), parts=[
  WordNode(pos=(844, 848), word='gosu'),
  WordNode(pos=(849, 858), word='--version'),
])


9691) gosu nobody true

CommandNode(pos=(861, 877), parts=[
  WordNode(pos=(861, 865), word='gosu'),
  WordNode(pos=(866, 872), word='nobody'),
  WordNode(pos=(873, 877), word='true'),
])


9692) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


9693) apt-get purge -y --auto-remove wget

CommandNode(pos=(978, 1013), parts=[
  WordNode(pos=(978, 985), word='apt-get'),
  WordNode(pos=(986, 991), word='purge'),
  WordNode(pos=(992, 994), word='-y'),
  WordNode(pos=(995, 1008), word='--auto-remove'),
  WordNode(pos=(1009, 1013), word='wget'),
])


9694) mkdir /docker-entrypoint-initdb.d

CommandNode(pos=(0, 33), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 33), word='/docker-entrypoint-initdb.d'),
])


9695) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9696) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


9697) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


9698) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


9699) command -v gpgconf

CommandNode(pos=(220, 238), parts=[
  WordNode(pos=(220, 227), word='command'),
  WordNode(pos=(228, 230), word='-v'),
  WordNode(pos=(231, 238), word='gpgconf'),
])


9700) gpgconf --kill all

CommandNode(pos=(242, 260), parts=[
  WordNode(pos=(242, 249), word='gpgconf'),
  WordNode(pos=(250, 256), word='--kill'),
  WordNode(pos=(257, 260), word='all'),
])


9701) :

CommandNode(pos=(264, 265), parts=[
  WordNode(pos=(264, 265), word=':'),
])


9702) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


9703) apt-key list

CommandNode(pos=(289, 301), parts=[
  WordNode(pos=(289, 296), word='apt-key'),
  WordNode(pos=(297, 301), word='list'),
])


9704) echo "deb http://$MONGO_REPO/apt/%%DISTRO%% %%SUITE%%/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR %%COMPONENT%%"

CommandNode(pos=(0, 108), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 108), word='deb http://$MONGO_REPO/apt/%%DISTRO%% %%SUITE%%/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR %%COMPONENT%%', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(54, 80), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(81, 93), value='MONGO_MAJOR'),
  ]),
])


9705) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(111, 172), parts=[
  WordNode(pos=(111, 114), word='tee'),
  WordNode(pos=(115, 172), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(140, 166), value='MONGO_PACKAGE%-unstable'),
  ]),
])


9706) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


9707) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


9708) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


9709) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(249, 276), parts=[
  WordNode(pos=(249, 251), word='rm'),
  WordNode(pos=(252, 255), word='-rf'),
  WordNode(pos=(256, 276), word='/var/lib/apt/lists/*'),
])


9710) rm -rf /var/lib/mongodb

CommandNode(pos=(281, 304), parts=[
  WordNode(pos=(281, 283), word='rm'),
  WordNode(pos=(284, 287), word='-rf'),
  WordNode(pos=(288, 304), word='/var/lib/mongodb'),
])


9711) mv /etc/mongod.conf /etc/mongod.conf.orig

CommandNode(pos=(309, 350), parts=[
  WordNode(pos=(309, 311), word='mv'),
  WordNode(pos=(312, 328), word='/etc/mongod.conf'),
  WordNode(pos=(329, 350), word='/etc/mongod.conf.orig'),
])


9712) mkdir -p /data/db /data/configdb

CommandNode(pos=(0, 32), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 17), word='/data/db'),
  WordNode(pos=(18, 32), word='/data/configdb'),
])


9713) chown -R mongodb:mongodb /data/db /data/configdb

CommandNode(pos=(37, 85), parts=[
  WordNode(pos=(37, 42), word='chown'),
  WordNode(pos=(43, 45), word='-R'),
  WordNode(pos=(46, 61), word='mongodb:mongodb'),
  WordNode(pos=(62, 70), word='/data/db'),
  WordNode(pos=(71, 85), word='/data/configdb'),
])


9714) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


9715) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


9716) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9717) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


9718) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


9719) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


9720) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


9721) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


9722) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


9723) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


9724) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


9725) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


9726) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


9727) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


9728) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


9729) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


9730) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   libressl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1029), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 945), word='libressl-dev'),
  WordNode(pos=(948, 957), word='pax-utils'),
  WordNode(pos=(960, 972), word='readline-dev'),
  WordNode(pos=(975, 985), word='sqlite-dev'),
  WordNode(pos=(988, 995), word='tcl-dev'),
  WordNode(pos=(998, 1000), word='tk'),
  WordNode(pos=(1003, 1009), word='tk-dev'),
  WordNode(pos=(1012, 1018), word='xz-dev'),
  WordNode(pos=(1021, 1029), word='zlib-dev'),
])


9731) apk del .fetch-deps

CommandNode(pos=(1034, 1053), parts=[
  WordNode(pos=(1034, 1037), word='apk'),
  WordNode(pos=(1038, 1041), word='del'),
  WordNode(pos=(1042, 1053), word='.fetch-deps'),
])


9732) cd /usr/src/python

CommandNode(pos=(1059, 1077), parts=[
  WordNode(pos=(1059, 1061), word='cd'),
  WordNode(pos=(1062, 1077), word='/usr/src/python'),
])


9733) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1082, 1139), parts=[
  AssignmentNode(pos=(1082, 1139), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1093, 1137), parts=[
        WordNode(pos=(1093, 1110), word='dpkg-architecture'),
        WordNode(pos=(1111, 1118), word='--query'),
        WordNode(pos=(1119, 1137), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1091, 1138)),
  ]),
])


9734) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1144, 1296), parts=[
  WordNode(pos=(1144, 1155), word='./configure'),
  WordNode(pos=(1158, 1176), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1167, 1175), value='gnuArch'),
  ]),
  WordNode(pos=(1179, 1214), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1217, 1232), word='--enable-shared'),
  WordNode(pos=(1235, 1254), word='--with-system-expat'),
  WordNode(pos=(1257, 1274), word='--with-system-ffi'),
  WordNode(pos=(1277, 1296), word='--without-ensurepip'),
])


9735) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1301, 1365), parts=[
  WordNode(pos=(1301, 1305), word='make'),
  WordNode(pos=(1306, 1308), word='-j'),
  WordNode(pos=(1309, 1319), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1312, 1317), parts=[
        WordNode(pos=(1312, 1317), word='nproc'),
      ]), pos=(1310, 1318)),
  ]),
  WordNode(pos=(1322, 1365), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


9736) make install

CommandNode(pos=(1370, 1382), parts=[
  WordNode(pos=(1370, 1374), word='make'),
  WordNode(pos=(1375, 1382), word='install'),
])


9737) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1388, 1511), parts=[
  WordNode(pos=(1388, 1392), word='find'),
  WordNode(pos=(1393, 1403), word='/usr/local'),
  WordNode(pos=(1404, 1409), word='-type'),
  WordNode(pos=(1410, 1411), word='f'),
  WordNode(pos=(1412, 1423), word='-executable'),
  WordNode(pos=(1424, 1428), word='-not'),
  WordNode(pos=(1429, 1431), word='('),
  WordNode(pos=(1432, 1437), word='-name'),
  WordNode(pos=(1438, 1449), word='*tkinter*'),
  WordNode(pos=(1450, 1452), word=')'),
  WordNode(pos=(1453, 1458), word='-exec'),
  WordNode(pos=(1459, 1466), word='scanelf'),
  WordNode(pos=(1467, 1475), word='--needed'),
  WordNode(pos=(1476, 1486), word='--nobanner'),
  WordNode(pos=(1487, 1495), word='--format'),
  WordNode(pos=(1496, 1502), word='%n#p'),
  WordNode(pos=(1503, 1507), word='{}'),
  WordNode(pos=(1508, 1511), word=';'),
])


9738) tr ',' '\n'

CommandNode(pos=(1516, 1527), parts=[
  WordNode(pos=(1516, 1518), word='tr'),
  WordNode(pos=(1519, 1522), word=','),
  WordNode(pos=(1523, 1527), word='\\n'),
])


9739) sort -u

CommandNode(pos=(1532, 1539), parts=[
  WordNode(pos=(1532, 1536), word='sort'),
  WordNode(pos=(1537, 1539), word='-u'),
])


9740) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1544, 1621), parts=[
  WordNode(pos=(1544, 1547), word='awk'),
  WordNode(pos=(1548, 1621), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


9741) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1626, 1680), parts=[
  WordNode(pos=(1626, 1631), word='xargs'),
  WordNode(pos=(1632, 1635), word='-rt'),
  WordNode(pos=(1636, 1639), word='apk'),
  WordNode(pos=(1640, 1643), word='add'),
  WordNode(pos=(1644, 1654), word='--no-cache'),
  WordNode(pos=(1655, 1664), word='--virtual'),
  WordNode(pos=(1665, 1680), word='.python-rundeps'),
])


9742) apk del .build-deps

CommandNode(pos=(1685, 1704), parts=[
  WordNode(pos=(1685, 1688), word='apk'),
  WordNode(pos=(1689, 1692), word='del'),
  WordNode(pos=(1693, 1704), word='.build-deps'),
])


9743) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1710, 1877), parts=[
  WordNode(pos=(1710, 1714), word='find'),
  WordNode(pos=(1715, 1725), word='/usr/local'),
  WordNode(pos=(1726, 1732), word='-depth'),
  WordNode(pos=(1735, 1737), word='('),
  WordNode(pos=(1741, 1743), word='('),
  WordNode(pos=(1744, 1749), word='-type'),
  WordNode(pos=(1750, 1751), word='d'),
  WordNode(pos=(1752, 1754), word='-a'),
  WordNode(pos=(1755, 1757), word='('),
  WordNode(pos=(1758, 1763), word='-name'),
  WordNode(pos=(1764, 1768), word='test'),
  WordNode(pos=(1769, 1771), word='-o'),
  WordNode(pos=(1772, 1777), word='-name'),
  WordNode(pos=(1778, 1783), word='tests'),
  WordNode(pos=(1784, 1786), word=')'),
  WordNode(pos=(1787, 1789), word=')'),
  WordNode(pos=(1793, 1795), word='-o'),
  WordNode(pos=(1799, 1801), word='('),
  WordNode(pos=(1802, 1807), word='-type'),
  WordNode(pos=(1808, 1809), word='f'),
  WordNode(pos=(1810, 1812), word='-a'),
  WordNode(pos=(1813, 1815), word='('),
  WordNode(pos=(1816, 1821), word='-name'),
  WordNode(pos=(1822, 1829), word='*.pyc'),
  WordNode(pos=(1830, 1832), word='-o'),
  WordNode(pos=(1833, 1838), word='-name'),
  WordNode(pos=(1839, 1846), word='*.pyo'),
  WordNode(pos=(1847, 1849), word=')'),
  WordNode(pos=(1850, 1852), word=')'),
  WordNode(pos=(1855, 1857), word=')'),
  WordNode(pos=(1858, 1863), word='-exec'),
  WordNode(pos=(1864, 1866), word='rm'),
  WordNode(pos=(1867, 1870), word='-rf'),
  WordNode(pos=(1871, 1875), word='{}'),
  WordNode(pos=(1876, 1877), word='+'),
])


9744) rm -rf /usr/src/python

CommandNode(pos=(1882, 1904), parts=[
  WordNode(pos=(1882, 1884), word='rm'),
  WordNode(pos=(1885, 1888), word='-rf'),
  WordNode(pos=(1889, 1904), word='/usr/src/python'),
])


9745) python3 --version

CommandNode(pos=(1910, 1927), parts=[
  WordNode(pos=(1910, 1917), word='python3'),
  WordNode(pos=(1918, 1927), word='--version'),
])


9746) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


9747) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


9748) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


9749) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


9750) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


9751) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9752) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


9753) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


9754) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


9755) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


9756) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


9757) addgroup -g 11211 memcache

CommandNode(pos=(0, 26), parts=[
  WordNode(pos=(0, 8), word='addgroup'),
  WordNode(pos=(9, 11), word='-g'),
  WordNode(pos=(12, 17), word='11211'),
  WordNode(pos=(18, 26), word='memcache'),
])


9758) adduser -D -u 11211 -G memcache memcache

CommandNode(pos=(30, 70), parts=[
  WordNode(pos=(30, 37), word='adduser'),
  WordNode(pos=(38, 40), word='-D'),
  WordNode(pos=(41, 43), word='-u'),
  WordNode(pos=(44, 49), word='11211'),
  WordNode(pos=(50, 52), word='-G'),
  WordNode(pos=(53, 61), word='memcache'),
  WordNode(pos=(62, 70), word='memcache'),
])


9759) apk add --no-cache cyrus-sasl-plain

CommandNode(pos=(0, 35), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 35), word='cyrus-sasl-plain'),
])


9760) ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh

CommandNode(pos=(0, 55), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 40), word='usr/local/bin/docker-entrypoint.sh'),
  WordNode(pos=(41, 55), word='/entrypoint.sh'),
])


9761) dpkg --add-architecture i386

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 4), word='dpkg'),
  WordNode(pos=(5, 23), word='--add-architecture'),
  WordNode(pos=(24, 28), word='i386'),
])


9762) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


9763) apt-get install -y --no-install-recommends   gcc   libc6-dev   make     libc6-dev:i386   libgcc-6-dev:i386     libc6-dev-arm64-cross   libc6-dev-armel-cross   libc6-dev-armhf-cross   libc6-dev-ppc64el-cross   libc6-dev-s390x-cross     gcc-aarch64-linux-gnu   gcc-arm-linux-gnueabi   gcc-arm-linux-gnueabihf   gcc-powerpc64le-linux-gnu   gcc-s390x-linux-gnu     file

CommandNode(pos=(18, 383), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='gcc'),
  WordNode(pos=(69, 78), word='libc6-dev'),
  WordNode(pos=(81, 85), word='make'),
  WordNode(pos=(90, 104), word='libc6-dev:i386'),
  WordNode(pos=(107, 124), word='libgcc-6-dev:i386'),
  WordNode(pos=(129, 150), word='libc6-dev-arm64-cross'),
  WordNode(pos=(153, 174), word='libc6-dev-armel-cross'),
  WordNode(pos=(177, 198), word='libc6-dev-armhf-cross'),
  WordNode(pos=(201, 224), word='libc6-dev-ppc64el-cross'),
  WordNode(pos=(227, 248), word='libc6-dev-s390x-cross'),
  WordNode(pos=(253, 274), word='gcc-aarch64-linux-gnu'),
  WordNode(pos=(277, 298), word='gcc-arm-linux-gnueabi'),
  WordNode(pos=(301, 324), word='gcc-arm-linux-gnueabihf'),
  WordNode(pos=(327, 352), word='gcc-powerpc64le-linux-gnu'),
  WordNode(pos=(355, 374), word='gcc-s390x-linux-gnu'),
  WordNode(pos=(379, 383), word='file'),
])


9764) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(388, 415), parts=[
  WordNode(pos=(388, 390), word='rm'),
  WordNode(pos=(391, 394), word='-rf'),
  WordNode(pos=(395, 415), word='/var/lib/apt/lists/*'),
])


9765) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9766) make clean all test   TARGET_ARCH='amd64'   CC='x86_64-linux-gnu-gcc'   STRIP='x86_64-linux-gnu-strip'

CommandNode(pos=(10, 112), parts=[
  WordNode(pos=(10, 14), word='make'),
  WordNode(pos=(15, 20), word='clean'),
  WordNode(pos=(21, 24), word='all'),
  WordNode(pos=(25, 29), word='test'),
  WordNode(pos=(32, 51), word='TARGET_ARCH=amd64'),
  WordNode(pos=(54, 79), word='CC=x86_64-linux-gnu-gcc'),
  WordNode(pos=(82, 112), word='STRIP=x86_64-linux-gnu-strip'),
])


9767) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9768) make clean all   TARGET_ARCH='arm32v5'   CC='arm-linux-gnueabi-gcc'   STRIP='arm-linux-gnueabi-strip'

CommandNode(pos=(10, 111), parts=[
  WordNode(pos=(10, 14), word='make'),
  WordNode(pos=(15, 20), word='clean'),
  WordNode(pos=(21, 24), word='all'),
  WordNode(pos=(27, 48), word='TARGET_ARCH=arm32v5'),
  WordNode(pos=(51, 77), word='CC=arm-linux-gnueabi-gcc'),
  WordNode(pos=(80, 111), word='STRIP=arm-linux-gnueabi-strip'),
])


9769) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9770) make clean all   TARGET_ARCH='arm32v7'   CC='arm-linux-gnueabihf-gcc'   STRIP='arm-linux-gnueabihf-strip'

CommandNode(pos=(10, 115), parts=[
  WordNode(pos=(10, 14), word='make'),
  WordNode(pos=(15, 20), word='clean'),
  WordNode(pos=(21, 24), word='all'),
  WordNode(pos=(27, 48), word='TARGET_ARCH=arm32v7'),
  WordNode(pos=(51, 79), word='CC=arm-linux-gnueabihf-gcc'),
  WordNode(pos=(82, 115), word='STRIP=arm-linux-gnueabihf-strip'),
])


9771) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9772) make clean all   TARGET_ARCH='arm64v8'   CC='aarch64-linux-gnu-gcc'   STRIP='aarch64-linux-gnu-strip'

CommandNode(pos=(10, 111), parts=[
  WordNode(pos=(10, 14), word='make'),
  WordNode(pos=(15, 20), word='clean'),
  WordNode(pos=(21, 24), word='all'),
  WordNode(pos=(27, 48), word='TARGET_ARCH=arm64v8'),
  WordNode(pos=(51, 77), word='CC=aarch64-linux-gnu-gcc'),
  WordNode(pos=(80, 111), word='STRIP=aarch64-linux-gnu-strip'),
])


9773) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9774) make clean all test   TARGET_ARCH='i386'   CC='gcc -m32 -L/usr/lib/gcc/i686-linux-gnu/6'   STRIP='x86_64-linux-gnu-strip'

CommandNode(pos=(10, 131), parts=[
  WordNode(pos=(10, 14), word='make'),
  WordNode(pos=(15, 20), word='clean'),
  WordNode(pos=(21, 24), word='all'),
  WordNode(pos=(25, 29), word='test'),
  WordNode(pos=(32, 50), word='TARGET_ARCH=i386'),
  WordNode(pos=(53, 98), word='CC=gcc -m32 -L/usr/lib/gcc/i686-linux-gnu/6'),
  WordNode(pos=(101, 131), word='STRIP=x86_64-linux-gnu-strip'),
])


9775) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9776) make clean all   TARGET_ARCH='ppc64le'   CC='powerpc64le-linux-gnu-gcc'   STRIP='powerpc64le-linux-gnu-strip'

CommandNode(pos=(10, 119), parts=[
  WordNode(pos=(10, 14), word='make'),
  WordNode(pos=(15, 20), word='clean'),
  WordNode(pos=(21, 24), word='all'),
  WordNode(pos=(27, 48), word='TARGET_ARCH=ppc64le'),
  WordNode(pos=(51, 81), word='CC=powerpc64le-linux-gnu-gcc'),
  WordNode(pos=(84, 119), word='STRIP=powerpc64le-linux-gnu-strip'),
])


9777) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9778) make clean all   TARGET_ARCH='s390x'   CC='s390x-linux-gnu-gcc'   STRIP='s390x-linux-gnu-strip'

CommandNode(pos=(10, 105), parts=[
  WordNode(pos=(10, 14), word='make'),
  WordNode(pos=(15, 20), word='clean'),
  WordNode(pos=(21, 24), word='all'),
  WordNode(pos=(27, 46), word='TARGET_ARCH=s390x'),
  WordNode(pos=(49, 73), word='CC=s390x-linux-gnu-gcc'),
  WordNode(pos=(76, 105), word='STRIP=s390x-linux-gnu-strip'),
])


9779) find \( -name 'hello' -or -name 'hello.txt' \) -exec file '{}' + -exec ls -lh '{}' +

CommandNode(pos=(0, 84), parts=[
  WordNode(pos=(0, 4), word='find'),
  WordNode(pos=(5, 7), word='('),
  WordNode(pos=(8, 13), word='-name'),
  WordNode(pos=(14, 21), word='hello'),
  WordNode(pos=(22, 25), word='-or'),
  WordNode(pos=(26, 31), word='-name'),
  WordNode(pos=(32, 43), word='hello.txt'),
  WordNode(pos=(44, 46), word=')'),
  WordNode(pos=(47, 52), word='-exec'),
  WordNode(pos=(53, 57), word='file'),
  WordNode(pos=(58, 62), word='{}'),
  WordNode(pos=(63, 64), word='+'),
  WordNode(pos=(65, 70), word='-exec'),
  WordNode(pos=(71, 73), word='ls'),
  WordNode(pos=(74, 77), word='-lh'),
  WordNode(pos=(78, 82), word='{}'),
  WordNode(pos=(83, 84), word='+'),
])


9780) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9781) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


9782) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


9783) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


9784) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


9785) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


9786) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


9787) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9788) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


9789) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


9790) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


9791) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


9792) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


9793) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


9794) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


9795) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


9796) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


9797) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


9798) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


9799) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


9800) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


9801) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


9802) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


9803) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


9804) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


9805) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


9806) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


9807) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


9808) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


9809) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


9810) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


9811) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


9812) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


9813) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


9814) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


9815) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


9816) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


9817) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


9818) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


9819) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9820) cd /usr/local/etc

CommandNode(pos=(12, 29), parts=[
  WordNode(pos=(12, 14), word='cd'),
  WordNode(pos=(15, 29), word='/usr/local/etc'),
])


9821) [ -d php-fpm.d ]

CommandNode(pos=(37, 53), parts=[
  WordNode(pos=(37, 38), word='['),
  WordNode(pos=(39, 41), word='-d'),
  WordNode(pos=(42, 51), word='php-fpm.d'),
  WordNode(pos=(52, 53), word=']'),
])


9822) sed 's!=NONE/!=!g' php-fpm.conf.default

CommandNode(pos=(62, 101), parts=[
  WordNode(pos=(62, 65), word='sed'),
  WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
  WordNode(pos=(81, 101), word='php-fpm.conf.default'),
])


9823) tee php-fpm.conf > /dev/null

CommandNode(pos=(104, 132), parts=[
  WordNode(pos=(104, 107), word='tee'),
  WordNode(pos=(108, 120), word='php-fpm.conf'),
  RedirectNode(output=
    WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
])


9824) cp php-fpm.d/www.conf.default php-fpm.d/www.conf

CommandNode(pos=(136, 184), parts=[
  WordNode(pos=(136, 138), word='cp'),
  WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
  WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
])


9825) mkdir php-fpm.d

CommandNode(pos=(194, 209), parts=[
  WordNode(pos=(194, 199), word='mkdir'),
  WordNode(pos=(200, 209), word='php-fpm.d'),
])


9826) cp php-fpm.conf.default php-fpm.d/www.conf

CommandNode(pos=(213, 255), parts=[
  WordNode(pos=(213, 215), word='cp'),
  WordNode(pos=(216, 236), word='php-fpm.conf.default'),
  WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
])


9827) echo '[global]'

CommandNode(pos=(264, 279), parts=[
  WordNode(pos=(264, 268), word='echo'),
  WordNode(pos=(269, 279), word='[global]'),
])


9828) echo 'include=etc/php-fpm.d/*.conf'

CommandNode(pos=(284, 319), parts=[
  WordNode(pos=(284, 288), word='echo'),
  WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
])


9829) tee php-fpm.conf

CommandNode(pos=(327, 343), parts=[
  WordNode(pos=(327, 330), word='tee'),
  WordNode(pos=(331, 343), word='php-fpm.conf'),
])


9830) echo '[global]'

CommandNode(pos=(357, 372), parts=[
  WordNode(pos=(357, 361), word='echo'),
  WordNode(pos=(362, 372), word='[global]'),
])


9831) echo 'error_log = /proc/self/fd/2'

CommandNode(pos=(376, 410), parts=[
  WordNode(pos=(376, 380), word='echo'),
  WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
])


9832) echo

CommandNode(pos=(414, 418), parts=[
  WordNode(pos=(414, 418), word='echo'),
])


9833) echo '[www]'

CommandNode(pos=(422, 434), parts=[
  WordNode(pos=(422, 426), word='echo'),
  WordNode(pos=(427, 434), word='[www]'),
])


9834) echo '; if we send this to /proc/self/fd/1, it never appears'

CommandNode(pos=(438, 499), parts=[
  WordNode(pos=(438, 442), word='echo'),
  WordNode(pos=(443, 499), word='; if we send this to /proc/self/fd/1, it never appears'),
])


9835) echo 'access.log = /proc/self/fd/2'

CommandNode(pos=(503, 538), parts=[
  WordNode(pos=(503, 507), word='echo'),
  WordNode(pos=(508, 538), word='access.log = /proc/self/fd/2'),
])


9836) echo

CommandNode(pos=(542, 546), parts=[
  WordNode(pos=(542, 546), word='echo'),
])


9837) echo 'clear_env = no'

CommandNode(pos=(550, 571), parts=[
  WordNode(pos=(550, 554), word='echo'),
  WordNode(pos=(555, 571), word='clear_env = no'),
])


9838) echo

CommandNode(pos=(575, 579), parts=[
  WordNode(pos=(575, 579), word='echo'),
])


9839) echo '; Ensure worker stdout and stderr are sent to the main error log.'

CommandNode(pos=(583, 655), parts=[
  WordNode(pos=(583, 587), word='echo'),
  WordNode(pos=(588, 655), word='; Ensure worker stdout and stderr are sent to the main error log.'),
])


9840) echo 'catch_workers_output = yes'

CommandNode(pos=(659, 692), parts=[
  WordNode(pos=(659, 663), word='echo'),
  WordNode(pos=(664, 692), word='catch_workers_output = yes'),
])


9841) tee php-fpm.d/docker.conf

CommandNode(pos=(699, 724), parts=[
  WordNode(pos=(699, 702), word='tee'),
  WordNode(pos=(703, 724), word='php-fpm.d/docker.conf'),
])


9842) echo '[global]'

CommandNode(pos=(733, 748), parts=[
  WordNode(pos=(733, 737), word='echo'),
  WordNode(pos=(738, 748), word='[global]'),
])


9843) echo 'daemonize = no'

CommandNode(pos=(752, 773), parts=[
  WordNode(pos=(752, 756), word='echo'),
  WordNode(pos=(757, 773), word='daemonize = no'),
])


9844) echo

CommandNode(pos=(777, 781), parts=[
  WordNode(pos=(777, 781), word='echo'),
])


9845) echo '[www]'

CommandNode(pos=(785, 797), parts=[
  WordNode(pos=(785, 789), word='echo'),
  WordNode(pos=(790, 797), word='[www]'),
])


9846) echo 'listen = 9000'

CommandNode(pos=(801, 821), parts=[
  WordNode(pos=(801, 805), word='echo'),
  WordNode(pos=(806, 821), word='listen = 9000'),
])


9847) tee php-fpm.d/zz-docker.conf

CommandNode(pos=(828, 856), parts=[
  WordNode(pos=(828, 831), word='tee'),
  WordNode(pos=(832, 856), word='php-fpm.d/zz-docker.conf'),
])


9848) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


9849) apt-get install -y --no-install-recommends   ca-certificates   netbase

CommandNode(pos=(18, 88), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 78), word='ca-certificates'),
  WordNode(pos=(81, 88), word='netbase'),
])


9850) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(93, 120), parts=[
  WordNode(pos=(93, 95), word='rm'),
  WordNode(pos=(96, 99), word='-rf'),
  WordNode(pos=(100, 120), word='/var/lib/apt/lists/*'),
])


9851) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


9852) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


9853) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


9854) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


9855) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


9856) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9857) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


9858) apt-get update

CommandNode(pos=(51, 65), parts=[
  WordNode(pos=(51, 58), word='apt-get'),
  WordNode(pos=(59, 65), word='update'),
])


9859) apt-get install -y --no-install-recommends wget

CommandNode(pos=(68, 115), parts=[
  WordNode(pos=(68, 75), word='apt-get'),
  WordNode(pos=(76, 83), word='install'),
  WordNode(pos=(84, 86), word='-y'),
  WordNode(pos=(87, 110), word='--no-install-recommends'),
  WordNode(pos=(111, 115), word='wget'),
])


9860) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(119, 176), parts=[
  WordNode(pos=(119, 123), word='wget'),
  WordNode(pos=(124, 126), word='-O'),
  WordNode(pos=(127, 137), word='get-pip.py'),
  WordNode(pos=(138, 176), word='https://bootstrap.pypa.io/get-pip.py'),
])


9861) apt-mark auto '.*' > /dev/null

CommandNode(pos=(180, 210), parts=[
  WordNode(pos=(180, 188), word='apt-mark'),
  WordNode(pos=(189, 193), word='auto'),
  WordNode(pos=(194, 198), word='.*'),
  RedirectNode(output=
    WordNode(pos=(201, 210), word='/dev/null'), pos=(199, 210), type='>'),
])


9862) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


9863) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


9864) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(271, 347), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 284), word='purge'),
  WordNode(pos=(285, 287), word='-y'),
  WordNode(pos=(288, 301), word='--auto-remove'),
  WordNode(pos=(302, 304), word='-o'),
  WordNode(pos=(305, 347), word='APT::AutoRemove::RecommendsImportant=false'),
])


9865) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(350, 377), parts=[
  WordNode(pos=(350, 352), word='rm'),
  WordNode(pos=(353, 356), word='-rf'),
  WordNode(pos=(357, 377), word='/var/lib/apt/lists/*'),
])


9866) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


9867) pip --version

CommandNode(pos=(479, 492), parts=[
  WordNode(pos=(479, 482), word='pip'),
  WordNode(pos=(483, 492), word='--version'),
])


9868) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(496, 663), parts=[
  WordNode(pos=(496, 500), word='find'),
  WordNode(pos=(501, 511), word='/usr/local'),
  WordNode(pos=(512, 518), word='-depth'),
  WordNode(pos=(521, 523), word='('),
  WordNode(pos=(527, 529), word='('),
  WordNode(pos=(530, 535), word='-type'),
  WordNode(pos=(536, 537), word='d'),
  WordNode(pos=(538, 540), word='-a'),
  WordNode(pos=(541, 543), word='('),
  WordNode(pos=(544, 549), word='-name'),
  WordNode(pos=(550, 554), word='test'),
  WordNode(pos=(555, 557), word='-o'),
  WordNode(pos=(558, 563), word='-name'),
  WordNode(pos=(564, 569), word='tests'),
  WordNode(pos=(570, 572), word=')'),
  WordNode(pos=(573, 575), word=')'),
  WordNode(pos=(579, 581), word='-o'),
  WordNode(pos=(585, 587), word='('),
  WordNode(pos=(588, 593), word='-type'),
  WordNode(pos=(594, 595), word='f'),
  WordNode(pos=(596, 598), word='-a'),
  WordNode(pos=(599, 601), word='('),
  WordNode(pos=(602, 607), word='-name'),
  WordNode(pos=(608, 615), word='*.pyc'),
  WordNode(pos=(616, 618), word='-o'),
  WordNode(pos=(619, 624), word='-name'),
  WordNode(pos=(625, 632), word='*.pyo'),
  WordNode(pos=(633, 635), word=')'),
  WordNode(pos=(636, 638), word=')'),
  WordNode(pos=(641, 643), word=')'),
  WordNode(pos=(644, 649), word='-exec'),
  WordNode(pos=(650, 652), word='rm'),
  WordNode(pos=(653, 656), word='-rf'),
  WordNode(pos=(657, 661), word='{}'),
  WordNode(pos=(662, 663), word='+'),
])


9869) rm -f get-pip.py

CommandNode(pos=(666, 682), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 671), word='-f'),
  WordNode(pos=(672, 682), word='get-pip.py'),
])


9870) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


9871) apt-get install -y --no-install-recommends   bzr   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 125), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='bzr'),
  WordNode(pos=(69, 72), word='git'),
  WordNode(pos=(75, 84), word='mercurial'),
  WordNode(pos=(87, 101), word='openssh-client'),
  WordNode(pos=(104, 114), word='subversion'),
  WordNode(pos=(119, 125), word='procps'),
])


9872) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(130, 157), parts=[
  WordNode(pos=(130, 132), word='rm'),
  WordNode(pos=(133, 136), word='-rf'),
  WordNode(pos=(137, 157), word='/var/lib/apt/lists/*'),
])


9873) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9874) command -v a2enmod

CommandNode(pos=(14, 32), parts=[
  WordNode(pos=(14, 21), word='command'),
  WordNode(pos=(22, 24), word='-v'),
  WordNode(pos=(25, 32), word='a2enmod'),
])


9875) a2enmod rewrite

CommandNode(pos=(41, 56), parts=[
  WordNode(pos=(41, 48), word='a2enmod'),
  WordNode(pos=(49, 56), word='rewrite'),
])


9876) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


9877) apt-get update

CommandNode(pos=(106, 120), parts=[
  WordNode(pos=(106, 113), word='apt-get'),
  WordNode(pos=(114, 120), word='update'),
])


9878) apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev

CommandNode(pos=(123, 217), parts=[
  WordNode(pos=(123, 130), word='apt-get'),
  WordNode(pos=(131, 138), word='install'),
  WordNode(pos=(139, 141), word='-y'),
  WordNode(pos=(142, 165), word='--no-install-recommends'),
  WordNode(pos=(168, 179), word='libjpeg-dev'),
  WordNode(pos=(182, 192), word='libpng-dev'),
  WordNode(pos=(195, 204), word='libpq-dev'),
  WordNode(pos=(207, 217), word='libzip-dev'),
])


9879) docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr

CommandNode(pos=(223, 291), parts=[
  WordNode(pos=(223, 247), word='docker-php-ext-configure'),
  WordNode(pos=(248, 250), word='gd'),
  WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
  WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
])


9880) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


9881) apt-mark auto '.*' > /dev/null

CommandNode(pos=(381, 411), parts=[
  WordNode(pos=(381, 389), word='apt-mark'),
  WordNode(pos=(390, 394), word='auto'),
  WordNode(pos=(395, 399), word='.*'),
  RedirectNode(output=
    WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
])


9882) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


9883) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


9884) awk '/=>/ { print $3 }'

CommandNode(pos=(504, 527), parts=[
  WordNode(pos=(504, 507), word='awk'),
  WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
])


9885) sort -u

CommandNode(pos=(532, 539), parts=[
  WordNode(pos=(532, 536), word='sort'),
  WordNode(pos=(537, 539), word='-u'),
])


9886) xargs -r dpkg-query -S

CommandNode(pos=(544, 566), parts=[
  WordNode(pos=(544, 549), word='xargs'),
  WordNode(pos=(550, 552), word='-r'),
  WordNode(pos=(553, 563), word='dpkg-query'),
  WordNode(pos=(564, 566), word='-S'),
])


9887) cut -d: -f1

CommandNode(pos=(571, 582), parts=[
  WordNode(pos=(571, 574), word='cut'),
  WordNode(pos=(575, 578), word='-d:'),
  WordNode(pos=(579, 582), word='-f1'),
])


9888) sort -u

CommandNode(pos=(587, 594), parts=[
  WordNode(pos=(587, 591), word='sort'),
  WordNode(pos=(592, 594), word='-u'),
])


9889) xargs -rt apt-mark manual

CommandNode(pos=(599, 624), parts=[
  WordNode(pos=(599, 604), word='xargs'),
  WordNode(pos=(605, 608), word='-rt'),
  WordNode(pos=(609, 617), word='apt-mark'),
  WordNode(pos=(618, 624), word='manual'),
])


9890) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(628, 704), parts=[
  WordNode(pos=(628, 635), word='apt-get'),
  WordNode(pos=(636, 641), word='purge'),
  WordNode(pos=(642, 644), word='-y'),
  WordNode(pos=(645, 658), word='--auto-remove'),
  WordNode(pos=(659, 661), word='-o'),
  WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
])


9891) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(707, 734), parts=[
  WordNode(pos=(707, 709), word='rm'),
  WordNode(pos=(710, 713), word='-rf'),
  WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
])


9892) echo 'opcache.memory_consumption=128'

CommandNode(pos=(4, 41), parts=[
  WordNode(pos=(4, 8), word='echo'),
  WordNode(pos=(9, 41), word='opcache.memory_consumption=128'),
])


9893) echo 'opcache.interned_strings_buffer=8'

CommandNode(pos=(45, 85), parts=[
  WordNode(pos=(45, 49), word='echo'),
  WordNode(pos=(50, 85), word='opcache.interned_strings_buffer=8'),
])


9894) echo 'opcache.max_accelerated_files=4000'

CommandNode(pos=(89, 130), parts=[
  WordNode(pos=(89, 93), word='echo'),
  WordNode(pos=(94, 130), word='opcache.max_accelerated_files=4000'),
])


9895) echo 'opcache.revalidate_freq=60'

CommandNode(pos=(134, 167), parts=[
  WordNode(pos=(134, 138), word='echo'),
  WordNode(pos=(139, 167), word='opcache.revalidate_freq=60'),
])


9896) echo 'opcache.fast_shutdown=1'

CommandNode(pos=(171, 201), parts=[
  WordNode(pos=(171, 175), word='echo'),
  WordNode(pos=(176, 201), word='opcache.fast_shutdown=1'),
])


9897) echo 'opcache.enable_cli=1'

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 209), word='echo'),
  WordNode(pos=(210, 232), word='opcache.enable_cli=1'),
])


9898) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


9899) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


9900) md5sum -c -

CommandNode(pos=(141, 152), parts=[
  WordNode(pos=(141, 147), word='md5sum'),
  WordNode(pos=(148, 150), word='-c'),
  WordNode(pos=(151, 152), word='-'),
])


9901) tar -xz --strip-components=1 -f drupal.tar.gz

CommandNode(pos=(157, 202), parts=[
  WordNode(pos=(157, 160), word='tar'),
  WordNode(pos=(161, 164), word='-xz'),
  WordNode(pos=(165, 185), word='--strip-components=1'),
  WordNode(pos=(186, 188), word='-f'),
  WordNode(pos=(189, 202), word='drupal.tar.gz'),
])


9902) rm drupal.tar.gz

CommandNode(pos=(207, 223), parts=[
  WordNode(pos=(207, 209), word='rm'),
  WordNode(pos=(210, 223), word='drupal.tar.gz'),
])


9903) chown -R www-data:www-data sites modules themes

CommandNode(pos=(228, 275), parts=[
  WordNode(pos=(228, 233), word='chown'),
  WordNode(pos=(234, 236), word='-R'),
  WordNode(pos=(237, 254), word='www-data:www-data'),
  WordNode(pos=(255, 260), word='sites'),
  WordNode(pos=(261, 268), word='modules'),
  WordNode(pos=(269, 275), word='themes'),
])


9904) mkdir -p /usr/local/etc

CommandNode(pos=(0, 23), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 23), word='/usr/local/etc'),
])


9905) echo 'install: --no-document'

CommandNode(pos=(32, 61), parts=[
  WordNode(pos=(32, 36), word='echo'),
  WordNode(pos=(37, 61), word='install: --no-document'),
])


9906) echo 'update: --no-document'

CommandNode(pos=(65, 93), parts=[
  WordNode(pos=(65, 69), word='echo'),
  WordNode(pos=(70, 93), word='update: --no-document'),
])


9907) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9908) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


9909) apt-get update

CommandNode(pos=(72, 86), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 86), word='update'),
])


9910) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


9911) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(149, 176), parts=[
  WordNode(pos=(149, 151), word='rm'),
  WordNode(pos=(152, 155), word='-rf'),
  WordNode(pos=(156, 176), word='/var/lib/apt/lists/*'),
])


9912) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


9913) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


9914) sha256sum -c -

CommandNode(pos=(333, 347), parts=[
  WordNode(pos=(333, 342), word='sha256sum'),
  WordNode(pos=(343, 345), word='-c'),
  WordNode(pos=(346, 347), word='-'),
])


9915) mkdir -p /usr/src/ruby

CommandNode(pos=(353, 375), parts=[
  WordNode(pos=(353, 358), word='mkdir'),
  WordNode(pos=(359, 361), word='-p'),
  WordNode(pos=(362, 375), word='/usr/src/ruby'),
])


9916) tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1

CommandNode(pos=(380, 438), parts=[
  WordNode(pos=(380, 383), word='tar'),
  WordNode(pos=(384, 388), word='-xJf'),
  WordNode(pos=(389, 400), word='ruby.tar.xz'),
  WordNode(pos=(401, 403), word='-C'),
  WordNode(pos=(404, 417), word='/usr/src/ruby'),
  WordNode(pos=(418, 438), word='--strip-components=1'),
])


9917) rm ruby.tar.xz

CommandNode(pos=(443, 457), parts=[
  WordNode(pos=(443, 445), word='rm'),
  WordNode(pos=(446, 457), word='ruby.tar.xz'),
])


9918) cd /usr/src/ruby

CommandNode(pos=(463, 479), parts=[
  WordNode(pos=(463, 465), word='cd'),
  WordNode(pos=(466, 479), word='/usr/src/ruby'),
])


9919) echo '#define ENABLE_PATH_CHECK 0'

CommandNode(pos=(489, 523), parts=[
  WordNode(pos=(489, 493), word='echo'),
  WordNode(pos=(494, 523), word='#define ENABLE_PATH_CHECK 0'),
])


9920) echo

CommandNode(pos=(527, 531), parts=[
  WordNode(pos=(527, 531), word='echo'),
])


9921) cat file.c

CommandNode(pos=(535, 545), parts=[
  WordNode(pos=(535, 538), word='cat'),
  WordNode(pos=(539, 545), word='file.c'),
])


9922) mv file.c.new file.c

CommandNode(pos=(567, 587), parts=[
  WordNode(pos=(567, 569), word='mv'),
  WordNode(pos=(570, 580), word='file.c.new'),
  WordNode(pos=(581, 587), word='file.c'),
])


9923) autoconf

CommandNode(pos=(593, 601), parts=[
  WordNode(pos=(593, 601), word='autoconf'),
])


9924) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


9925) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


9926) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


9927) make install

CommandNode(pos=(770, 782), parts=[
  WordNode(pos=(770, 774), word='make'),
  WordNode(pos=(775, 782), word='install'),
])


9928) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


9929) cd /

CommandNode(pos=(834, 838), parts=[
  WordNode(pos=(834, 836), word='cd'),
  WordNode(pos=(837, 838), word='/'),
])


9930) rm -r /usr/src/ruby

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 848), word='-r'),
  WordNode(pos=(849, 862), word='/usr/src/ruby'),
])


9931) ruby -e 'exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'

CommandNode(pos=(867, 963), parts=[
  WordNode(pos=(867, 871), word='ruby'),
  WordNode(pos=(872, 874), word='-e'),
  WordNode(pos=(875, 963), word='exit(Gem::Version.create(ENV["RUBYGEMS_VERSION"]) > Gem::Version.create(Gem::VERSION))'),
])


9932) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(968, 1007), parts=[
  WordNode(pos=(968, 971), word='gem'),
  WordNode(pos=(972, 978), word='update'),
  WordNode(pos=(979, 987), word='--system'),
  WordNode(pos=(988, 1007), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(989, 1006), value='RUBYGEMS_VERSION'),
  ]),
])


9933) rm -r /root/.gem/

CommandNode(pos=(1011, 1028), parts=[
  WordNode(pos=(1011, 1013), word='rm'),
  WordNode(pos=(1014, 1016), word='-r'),
  WordNode(pos=(1017, 1028), word='/root/.gem/'),
])


9934) ruby --version

CommandNode(pos=(1033, 1047), parts=[
  WordNode(pos=(1033, 1037), word='ruby'),
  WordNode(pos=(1038, 1047), word='--version'),
])


9935) gem --version

CommandNode(pos=(1051, 1064), parts=[
  WordNode(pos=(1051, 1054), word='gem'),
  WordNode(pos=(1055, 1064), word='--version'),
])


9936) bundle --version

CommandNode(pos=(1068, 1084), parts=[
  WordNode(pos=(1068, 1074), word='bundle'),
  WordNode(pos=(1075, 1084), word='--version'),
])


9937) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


9938) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


9939) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9940) yum install -y   gzip   tar     freetype fontconfig

CommandNode(pos=(11, 62), parts=[
  WordNode(pos=(11, 14), word='yum'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-y'),
  WordNode(pos=(28, 32), word='gzip'),
  WordNode(pos=(35, 38), word='tar'),
  WordNode(pos=(43, 51), word='freetype'),
  WordNode(pos=(52, 62), word='fontconfig'),
])


9941) rm -rf /var/cache/yum

CommandNode(pos=(67, 88), parts=[
  WordNode(pos=(67, 69), word='rm'),
  WordNode(pos=(70, 73), word='-rf'),
  WordNode(pos=(74, 88), word='/var/cache/yum'),
])


9942) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


9943) curl -fL -o /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 48), parts=[
  WordNode(pos=(12, 16), word='curl'),
  WordNode(pos=(17, 20), word='-fL'),
  WordNode(pos=(21, 23), word='-o'),
  WordNode(pos=(24, 36), word='/openjdk.tgz'),
  WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
    ParameterNode(pos=(38, 47), value='JAVA_URL'),
  ]),
])


9944) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(51, 84), parts=[
  WordNode(pos=(51, 55), word='echo'),
  WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
  ]),
])


9945) sha256sum -c -

CommandNode(pos=(87, 101), parts=[
  WordNode(pos=(87, 96), word='sha256sum'),
  WordNode(pos=(97, 99), word='-c'),
  WordNode(pos=(100, 101), word='-'),
])


9946) mkdir -p "$JAVA_HOME"

CommandNode(pos=(104, 125), parts=[
  WordNode(pos=(104, 109), word='mkdir'),
  WordNode(pos=(110, 112), word='-p'),
  WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(114, 124), value='JAVA_HOME'),
  ]),
])


9947) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(128, 207), parts=[
  WordNode(pos=(128, 131), word='tar'),
  WordNode(pos=(132, 141), word='--extract'),
  WordNode(pos=(142, 148), word='--file'),
  WordNode(pos=(149, 161), word='/openjdk.tgz'),
  WordNode(pos=(162, 173), word='--directory'),
  WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(175, 185), value='JAVA_HOME'),
  ]),
  WordNode(pos=(187, 205), word='--strip-components'),
  WordNode(pos=(206, 207), word='1'),
])


9948) rm /openjdk.tgz

CommandNode(pos=(210, 225), parts=[
  WordNode(pos=(210, 212), word='rm'),
  WordNode(pos=(213, 225), word='/openjdk.tgz'),
])


9949) ln -sfT "$JAVA_HOME" /usr/java/default

CommandNode(pos=(229, 267), parts=[
  WordNode(pos=(229, 231), word='ln'),
  WordNode(pos=(232, 236), word='-sfT'),
  WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(238, 248), value='JAVA_HOME'),
  ]),
  WordNode(pos=(250, 267), word='/usr/java/default'),
])


9950) ln -sfT "$JAVA_HOME" /usr/java/latest

CommandNode(pos=(270, 307), parts=[
  WordNode(pos=(270, 272), word='ln'),
  WordNode(pos=(273, 277), word='-sfT'),
  WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(279, 289), value='JAVA_HOME'),
  ]),
  WordNode(pos=(291, 307), word='/usr/java/latest'),
])


9951) base="$(basename "$bin")"

CommandNode(pos=(346, 371), parts=[
  AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(354, 369), parts=[
        WordNode(pos=(354, 362), word='basename'),
        WordNode(pos=(363, 369), word='$bin', parts=[
          ParameterNode(pos=(364, 368), value='bin'),
        ]),
      ]), pos=(352, 370)),
  ]),
])


9952) [ ! -e "/usr/bin/$base" ]

CommandNode(pos=(375, 400), parts=[
  WordNode(pos=(375, 376), word='['),
  WordNode(pos=(377, 378), word='!'),
  WordNode(pos=(379, 381), word='-e'),
  WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(392, 397), value='base'),
  ]),
  WordNode(pos=(399, 400), word=']'),
])


9953) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


9954) java -Xshare:dump

CommandNode(pos=(475, 492), parts=[
  WordNode(pos=(475, 479), word='java'),
  WordNode(pos=(480, 492), word='-Xshare:dump'),
])


9955) java --version

CommandNode(pos=(496, 510), parts=[
  WordNode(pos=(496, 500), word='java'),
  WordNode(pos=(501, 510), word='--version'),
])


9956) javac --version

CommandNode(pos=(513, 528), parts=[
  WordNode(pos=(513, 518), word='javac'),
  WordNode(pos=(519, 528), word='--version'),
])


9957) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


9958) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9959) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


9960) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


9961) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


9962) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


9963) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


9964) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


9965) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


9966) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


9967) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


9968) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


9969) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


9970) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


9971) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


9972) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   util-linux-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1045), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 878), word='libnsl-dev'),
  WordNode(pos=(881, 893), word='libtirpc-dev'),
  WordNode(pos=(896, 909), word='linux-headers'),
  WordNode(pos=(912, 916), word='make'),
  WordNode(pos=(919, 930), word='ncurses-dev'),
  WordNode(pos=(933, 944), word='openssl-dev'),
  WordNode(pos=(947, 956), word='pax-utils'),
  WordNode(pos=(959, 971), word='readline-dev'),
  WordNode(pos=(974, 984), word='sqlite-dev'),
  WordNode(pos=(987, 994), word='tcl-dev'),
  WordNode(pos=(997, 999), word='tk'),
  WordNode(pos=(1002, 1008), word='tk-dev'),
  WordNode(pos=(1011, 1025), word='util-linux-dev'),
  WordNode(pos=(1028, 1034), word='xz-dev'),
  WordNode(pos=(1037, 1045), word='zlib-dev'),
])


9973) apk del .fetch-deps

CommandNode(pos=(1050, 1069), parts=[
  WordNode(pos=(1050, 1053), word='apk'),
  WordNode(pos=(1054, 1057), word='del'),
  WordNode(pos=(1058, 1069), word='.fetch-deps'),
])


9974) cd /usr/src/python

CommandNode(pos=(1075, 1093), parts=[
  WordNode(pos=(1075, 1077), word='cd'),
  WordNode(pos=(1078, 1093), word='/usr/src/python'),
])


9975) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


9976) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


9977) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


9978) make install

CommandNode(pos=(1386, 1398), parts=[
  WordNode(pos=(1386, 1390), word='make'),
  WordNode(pos=(1391, 1398), word='install'),
])


9979) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1404, 1527), parts=[
  WordNode(pos=(1404, 1408), word='find'),
  WordNode(pos=(1409, 1419), word='/usr/local'),
  WordNode(pos=(1420, 1425), word='-type'),
  WordNode(pos=(1426, 1427), word='f'),
  WordNode(pos=(1428, 1439), word='-executable'),
  WordNode(pos=(1440, 1444), word='-not'),
  WordNode(pos=(1445, 1447), word='('),
  WordNode(pos=(1448, 1453), word='-name'),
  WordNode(pos=(1454, 1465), word='*tkinter*'),
  WordNode(pos=(1466, 1468), word=')'),
  WordNode(pos=(1469, 1474), word='-exec'),
  WordNode(pos=(1475, 1482), word='scanelf'),
  WordNode(pos=(1483, 1491), word='--needed'),
  WordNode(pos=(1492, 1502), word='--nobanner'),
  WordNode(pos=(1503, 1511), word='--format'),
  WordNode(pos=(1512, 1518), word='%n#p'),
  WordNode(pos=(1519, 1523), word='{}'),
  WordNode(pos=(1524, 1527), word=';'),
])


9980) tr ',' '\n'

CommandNode(pos=(1532, 1543), parts=[
  WordNode(pos=(1532, 1534), word='tr'),
  WordNode(pos=(1535, 1538), word=','),
  WordNode(pos=(1539, 1543), word='\\n'),
])


9981) sort -u

CommandNode(pos=(1548, 1555), parts=[
  WordNode(pos=(1548, 1552), word='sort'),
  WordNode(pos=(1553, 1555), word='-u'),
])


9982) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1560, 1637), parts=[
  WordNode(pos=(1560, 1563), word='awk'),
  WordNode(pos=(1564, 1637), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


9983) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1642, 1696), parts=[
  WordNode(pos=(1642, 1647), word='xargs'),
  WordNode(pos=(1648, 1651), word='-rt'),
  WordNode(pos=(1652, 1655), word='apk'),
  WordNode(pos=(1656, 1659), word='add'),
  WordNode(pos=(1660, 1670), word='--no-cache'),
  WordNode(pos=(1671, 1680), word='--virtual'),
  WordNode(pos=(1681, 1696), word='.python-rundeps'),
])


9984) apk del .build-deps

CommandNode(pos=(1701, 1720), parts=[
  WordNode(pos=(1701, 1704), word='apk'),
  WordNode(pos=(1705, 1708), word='del'),
  WordNode(pos=(1709, 1720), word='.build-deps'),
])


9985) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1726, 1893), parts=[
  WordNode(pos=(1726, 1730), word='find'),
  WordNode(pos=(1731, 1741), word='/usr/local'),
  WordNode(pos=(1742, 1748), word='-depth'),
  WordNode(pos=(1751, 1753), word='('),
  WordNode(pos=(1757, 1759), word='('),
  WordNode(pos=(1760, 1765), word='-type'),
  WordNode(pos=(1766, 1767), word='d'),
  WordNode(pos=(1768, 1770), word='-a'),
  WordNode(pos=(1771, 1773), word='('),
  WordNode(pos=(1774, 1779), word='-name'),
  WordNode(pos=(1780, 1784), word='test'),
  WordNode(pos=(1785, 1787), word='-o'),
  WordNode(pos=(1788, 1793), word='-name'),
  WordNode(pos=(1794, 1799), word='tests'),
  WordNode(pos=(1800, 1802), word=')'),
  WordNode(pos=(1803, 1805), word=')'),
  WordNode(pos=(1809, 1811), word='-o'),
  WordNode(pos=(1815, 1817), word='('),
  WordNode(pos=(1818, 1823), word='-type'),
  WordNode(pos=(1824, 1825), word='f'),
  WordNode(pos=(1826, 1828), word='-a'),
  WordNode(pos=(1829, 1831), word='('),
  WordNode(pos=(1832, 1837), word='-name'),
  WordNode(pos=(1838, 1845), word='*.pyc'),
  WordNode(pos=(1846, 1848), word='-o'),
  WordNode(pos=(1849, 1854), word='-name'),
  WordNode(pos=(1855, 1862), word='*.pyo'),
  WordNode(pos=(1863, 1865), word=')'),
  WordNode(pos=(1866, 1868), word=')'),
  WordNode(pos=(1871, 1873), word=')'),
  WordNode(pos=(1874, 1879), word='-exec'),
  WordNode(pos=(1880, 1882), word='rm'),
  WordNode(pos=(1883, 1886), word='-rf'),
  WordNode(pos=(1887, 1891), word='{}'),
  WordNode(pos=(1892, 1893), word='+'),
])


9986) rm -rf /usr/src/python

CommandNode(pos=(1898, 1920), parts=[
  WordNode(pos=(1898, 1900), word='rm'),
  WordNode(pos=(1901, 1904), word='-rf'),
  WordNode(pos=(1905, 1920), word='/usr/src/python'),
])


9987) python3 --version

CommandNode(pos=(1926, 1943), parts=[
  WordNode(pos=(1926, 1933), word='python3'),
  WordNode(pos=(1934, 1943), word='--version'),
])


9988) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


9989) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


9990) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


9991) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


9992) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


9993) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


9994) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


9995) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


9996) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


9997) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


9998) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


9999) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


10000) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10001) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


10002) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


10003) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


10004) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


10005) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


10006) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


10007) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


10008) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


10009) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


10010) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


10011) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


10012) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


10013) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


10014) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


10015) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


10016) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


10017) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


10018) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


10019) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


10020) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


10021) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


10022) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


10023) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


10024) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


10025) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


10026) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


10027) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


10028) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


10029) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


10030) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


10031) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


10032) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


10033) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


10034) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


10035) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


10036) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


10037) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


10038) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


10039) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


10040) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


10041) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


10042) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


10043) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


10044) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


10045) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


10046) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


10047) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


10048) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


10049) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


10050) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


10051) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


10052) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


10053) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


10054) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


10055) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


10056) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


10057) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


10058) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


10059) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


10060) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


10061) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


10062) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10063) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


10064) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


10065) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


10066) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


10067) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


10068) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


10069) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10070) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


10071) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


10072) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


10073) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


10074) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


10075) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


10076) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


10077) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


10078) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


10079) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


10080) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


10081) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


10082) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


10083) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


10084) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


10085) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


10086) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


10087) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


10088) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


10089) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


10090) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


10091) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


10092) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


10093) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


10094) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


10095) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


10096) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


10097) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


10098) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


10099) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


10100) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


10101) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


10102) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10103) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


10104) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


10105) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


10106) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


10107) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


10108) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


10109) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


10110) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


10111) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


10112) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


10113) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


10114) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


10115) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


10116) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


10117) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


10118) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


10119) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


10120) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


10121) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


10122) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


10123) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


10124) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


10125) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


10126) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


10127) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


10128) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


10129) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


10130) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


10131) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


10132) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


10133) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


10134) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


10135) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


10136) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


10137) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


10138) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


10139) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


10140) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


10141) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


10142) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


10143) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


10144) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


10145) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


10146) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


10147) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


10148) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


10149) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


10150) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


10151) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


10152) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


10153) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


10154) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


10155) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


10156) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


10157) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


10158) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


10159) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


10160) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


10161) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


10162) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


10163) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


10164) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


10165) apt-get install -y --no-install-recommends   bzr   git   mercurial   openssh-client   subversion     procps

CommandNode(pos=(18, 125), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='bzr'),
  WordNode(pos=(69, 72), word='git'),
  WordNode(pos=(75, 84), word='mercurial'),
  WordNode(pos=(87, 101), word='openssh-client'),
  WordNode(pos=(104, 114), word='subversion'),
  WordNode(pos=(119, 125), word='procps'),
])


10166) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(130, 157), parts=[
  WordNode(pos=(130, 132), word='rm'),
  WordNode(pos=(133, 136), word='-rf'),
  WordNode(pos=(137, 157), word='/var/lib/apt/lists/*'),
])


10167) apk add --no-cache ca-certificates

CommandNode(pos=(0, 34), parts=[
  WordNode(pos=(0, 3), word='apk'),
  WordNode(pos=(4, 7), word='add'),
  WordNode(pos=(8, 18), word='--no-cache'),
  WordNode(pos=(19, 34), word='ca-certificates'),
])


10168) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


10169) apk add --no-cache --virtual .fetch-deps   gnupg   tar   xz

CommandNode(pos=(12, 71), parts=[
  WordNode(pos=(12, 15), word='apk'),
  WordNode(pos=(16, 19), word='add'),
  WordNode(pos=(20, 30), word='--no-cache'),
  WordNode(pos=(31, 40), word='--virtual'),
  WordNode(pos=(41, 52), word='.fetch-deps'),
  WordNode(pos=(55, 60), word='gnupg'),
  WordNode(pos=(63, 66), word='tar'),
  WordNode(pos=(69, 71), word='xz'),
])


10170) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


10171) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


10172) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


10173) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


10174) gpg --batch --verify python.tar.xz.asc python.tar.xz

CommandNode(pos=(435, 487), parts=[
  WordNode(pos=(435, 438), word='gpg'),
  WordNode(pos=(439, 446), word='--batch'),
  WordNode(pos=(447, 455), word='--verify'),
  WordNode(pos=(456, 473), word='python.tar.xz.asc'),
  WordNode(pos=(474, 487), word='python.tar.xz'),
])


10175) command -v gpgconf > /dev/null

CommandNode(pos=(494, 524), parts=[
  WordNode(pos=(494, 501), word='command'),
  WordNode(pos=(502, 504), word='-v'),
  WordNode(pos=(505, 512), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(515, 524), word='/dev/null'), pos=(513, 524), type='>'),
])


10176) gpgconf --kill all

CommandNode(pos=(528, 546), parts=[
  WordNode(pos=(528, 535), word='gpgconf'),
  WordNode(pos=(536, 542), word='--kill'),
  WordNode(pos=(543, 546), word='all'),
])


10177) :

CommandNode(pos=(550, 551), parts=[
  WordNode(pos=(550, 551), word=':'),
])


10178) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


10179) mkdir -p /usr/src/python

CommandNode(pos=(601, 625), parts=[
  WordNode(pos=(601, 606), word='mkdir'),
  WordNode(pos=(607, 609), word='-p'),
  WordNode(pos=(610, 625), word='/usr/src/python'),
])


10180) tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz

CommandNode(pos=(630, 692), parts=[
  WordNode(pos=(630, 633), word='tar'),
  WordNode(pos=(634, 638), word='-xJC'),
  WordNode(pos=(639, 654), word='/usr/src/python'),
  WordNode(pos=(655, 675), word='--strip-components=1'),
  WordNode(pos=(676, 678), word='-f'),
  WordNode(pos=(679, 692), word='python.tar.xz'),
])


10181) rm python.tar.xz

CommandNode(pos=(697, 713), parts=[
  WordNode(pos=(697, 699), word='rm'),
  WordNode(pos=(700, 713), word='python.tar.xz'),
])


10182) apk add --no-cache --virtual .build-deps    bzip2-dev   coreutils   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   xz-dev   zlib-dev

CommandNode(pos=(719, 1000), parts=[
  WordNode(pos=(719, 722), word='apk'),
  WordNode(pos=(723, 726), word='add'),
  WordNode(pos=(727, 737), word='--no-cache'),
  WordNode(pos=(738, 747), word='--virtual'),
  WordNode(pos=(748, 759), word='.build-deps'),
  WordNode(pos=(763, 772), word='bzip2-dev'),
  WordNode(pos=(775, 784), word='coreutils'),
  WordNode(pos=(787, 795), word='dpkg-dev'),
  WordNode(pos=(796, 800), word='dpkg'),
  WordNode(pos=(803, 812), word='expat-dev'),
  WordNode(pos=(815, 824), word='findutils'),
  WordNode(pos=(827, 830), word='gcc'),
  WordNode(pos=(833, 841), word='gdbm-dev'),
  WordNode(pos=(844, 852), word='libc-dev'),
  WordNode(pos=(855, 865), word='libffi-dev'),
  WordNode(pos=(868, 881), word='linux-headers'),
  WordNode(pos=(884, 888), word='make'),
  WordNode(pos=(891, 902), word='ncurses-dev'),
  WordNode(pos=(905, 916), word='openssl-dev'),
  WordNode(pos=(919, 928), word='pax-utils'),
  WordNode(pos=(931, 943), word='readline-dev'),
  WordNode(pos=(946, 956), word='sqlite-dev'),
  WordNode(pos=(959, 966), word='tcl-dev'),
  WordNode(pos=(969, 971), word='tk'),
  WordNode(pos=(974, 980), word='tk-dev'),
  WordNode(pos=(983, 989), word='xz-dev'),
  WordNode(pos=(992, 1000), word='zlib-dev'),
])


10183) apk del .fetch-deps

CommandNode(pos=(1005, 1024), parts=[
  WordNode(pos=(1005, 1008), word='apk'),
  WordNode(pos=(1009, 1012), word='del'),
  WordNode(pos=(1013, 1024), word='.fetch-deps'),
])


10184) cd /usr/src/python

CommandNode(pos=(1030, 1048), parts=[
  WordNode(pos=(1030, 1032), word='cd'),
  WordNode(pos=(1033, 1048), word='/usr/src/python'),
])


10185) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


10186) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1115, 1267), parts=[
  WordNode(pos=(1115, 1126), word='./configure'),
  WordNode(pos=(1129, 1147), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1138, 1146), value='gnuArch'),
  ]),
  WordNode(pos=(1150, 1185), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1188, 1203), word='--enable-shared'),
  WordNode(pos=(1206, 1225), word='--with-system-expat'),
  WordNode(pos=(1228, 1245), word='--with-system-ffi'),
  WordNode(pos=(1248, 1267), word='--without-ensurepip'),
])


10187) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1272, 1336), parts=[
  WordNode(pos=(1272, 1276), word='make'),
  WordNode(pos=(1277, 1279), word='-j'),
  WordNode(pos=(1280, 1290), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1283, 1288), parts=[
        WordNode(pos=(1283, 1288), word='nproc'),
      ]), pos=(1281, 1289)),
  ]),
  WordNode(pos=(1293, 1336), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


10188) make install

CommandNode(pos=(1341, 1353), parts=[
  WordNode(pos=(1341, 1345), word='make'),
  WordNode(pos=(1346, 1353), word='install'),
])


10189) find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'

CommandNode(pos=(1359, 1482), parts=[
  WordNode(pos=(1359, 1363), word='find'),
  WordNode(pos=(1364, 1374), word='/usr/local'),
  WordNode(pos=(1375, 1380), word='-type'),
  WordNode(pos=(1381, 1382), word='f'),
  WordNode(pos=(1383, 1394), word='-executable'),
  WordNode(pos=(1395, 1399), word='-not'),
  WordNode(pos=(1400, 1402), word='('),
  WordNode(pos=(1403, 1408), word='-name'),
  WordNode(pos=(1409, 1420), word='*tkinter*'),
  WordNode(pos=(1421, 1423), word=')'),
  WordNode(pos=(1424, 1429), word='-exec'),
  WordNode(pos=(1430, 1437), word='scanelf'),
  WordNode(pos=(1438, 1446), word='--needed'),
  WordNode(pos=(1447, 1457), word='--nobanner'),
  WordNode(pos=(1458, 1466), word='--format'),
  WordNode(pos=(1467, 1473), word='%n#p'),
  WordNode(pos=(1474, 1478), word='{}'),
  WordNode(pos=(1479, 1482), word=';'),
])


10190) tr ',' '\n'

CommandNode(pos=(1487, 1498), parts=[
  WordNode(pos=(1487, 1489), word='tr'),
  WordNode(pos=(1490, 1493), word=','),
  WordNode(pos=(1494, 1498), word='\\n'),
])


10191) sort -u

CommandNode(pos=(1503, 1510), parts=[
  WordNode(pos=(1503, 1507), word='sort'),
  WordNode(pos=(1508, 1510), word='-u'),
])


10192) awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'

CommandNode(pos=(1515, 1592), parts=[
  WordNode(pos=(1515, 1518), word='awk'),
  WordNode(pos=(1519, 1592), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
])


10193) xargs -rt apk add --no-cache --virtual .python-rundeps

CommandNode(pos=(1597, 1651), parts=[
  WordNode(pos=(1597, 1602), word='xargs'),
  WordNode(pos=(1603, 1606), word='-rt'),
  WordNode(pos=(1607, 1610), word='apk'),
  WordNode(pos=(1611, 1614), word='add'),
  WordNode(pos=(1615, 1625), word='--no-cache'),
  WordNode(pos=(1626, 1635), word='--virtual'),
  WordNode(pos=(1636, 1651), word='.python-rundeps'),
])


10194) apk del .build-deps

CommandNode(pos=(1656, 1675), parts=[
  WordNode(pos=(1656, 1659), word='apk'),
  WordNode(pos=(1660, 1663), word='del'),
  WordNode(pos=(1664, 1675), word='.build-deps'),
])


10195) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(1681, 1848), parts=[
  WordNode(pos=(1681, 1685), word='find'),
  WordNode(pos=(1686, 1696), word='/usr/local'),
  WordNode(pos=(1697, 1703), word='-depth'),
  WordNode(pos=(1706, 1708), word='('),
  WordNode(pos=(1712, 1714), word='('),
  WordNode(pos=(1715, 1720), word='-type'),
  WordNode(pos=(1721, 1722), word='d'),
  WordNode(pos=(1723, 1725), word='-a'),
  WordNode(pos=(1726, 1728), word='('),
  WordNode(pos=(1729, 1734), word='-name'),
  WordNode(pos=(1735, 1739), word='test'),
  WordNode(pos=(1740, 1742), word='-o'),
  WordNode(pos=(1743, 1748), word='-name'),
  WordNode(pos=(1749, 1754), word='tests'),
  WordNode(pos=(1755, 1757), word=')'),
  WordNode(pos=(1758, 1760), word=')'),
  WordNode(pos=(1764, 1766), word='-o'),
  WordNode(pos=(1770, 1772), word='('),
  WordNode(pos=(1773, 1778), word='-type'),
  WordNode(pos=(1779, 1780), word='f'),
  WordNode(pos=(1781, 1783), word='-a'),
  WordNode(pos=(1784, 1786), word='('),
  WordNode(pos=(1787, 1792), word='-name'),
  WordNode(pos=(1793, 1800), word='*.pyc'),
  WordNode(pos=(1801, 1803), word='-o'),
  WordNode(pos=(1804, 1809), word='-name'),
  WordNode(pos=(1810, 1817), word='*.pyo'),
  WordNode(pos=(1818, 1820), word=')'),
  WordNode(pos=(1821, 1823), word=')'),
  WordNode(pos=(1826, 1828), word=')'),
  WordNode(pos=(1829, 1834), word='-exec'),
  WordNode(pos=(1835, 1837), word='rm'),
  WordNode(pos=(1838, 1841), word='-rf'),
  WordNode(pos=(1842, 1846), word='{}'),
  WordNode(pos=(1847, 1848), word='+'),
])


10196) rm -rf /usr/src/python

CommandNode(pos=(1853, 1875), parts=[
  WordNode(pos=(1853, 1855), word='rm'),
  WordNode(pos=(1856, 1859), word='-rf'),
  WordNode(pos=(1860, 1875), word='/usr/src/python'),
])


10197) python3 --version

CommandNode(pos=(1881, 1898), parts=[
  WordNode(pos=(1881, 1888), word='python3'),
  WordNode(pos=(1889, 1898), word='--version'),
])


10198) cd /usr/local/bin

CommandNode(pos=(0, 17), parts=[
  WordNode(pos=(0, 2), word='cd'),
  WordNode(pos=(3, 17), word='/usr/local/bin'),
])


10199) ln -s idle3 idle

CommandNode(pos=(22, 38), parts=[
  WordNode(pos=(22, 24), word='ln'),
  WordNode(pos=(25, 27), word='-s'),
  WordNode(pos=(28, 33), word='idle3'),
  WordNode(pos=(34, 38), word='idle'),
])


10200) ln -s pydoc3 pydoc

CommandNode(pos=(43, 61), parts=[
  WordNode(pos=(43, 45), word='ln'),
  WordNode(pos=(46, 48), word='-s'),
  WordNode(pos=(49, 55), word='pydoc3'),
  WordNode(pos=(56, 61), word='pydoc'),
])


10201) ln -s python3 python

CommandNode(pos=(66, 86), parts=[
  WordNode(pos=(66, 68), word='ln'),
  WordNode(pos=(69, 71), word='-s'),
  WordNode(pos=(72, 79), word='python3'),
  WordNode(pos=(80, 86), word='python'),
])


10202) ln -s python3-config python-config

CommandNode(pos=(91, 125), parts=[
  WordNode(pos=(91, 93), word='ln'),
  WordNode(pos=(94, 96), word='-s'),
  WordNode(pos=(97, 111), word='python3-config'),
  WordNode(pos=(112, 125), word='python-config'),
])


10203) set -ex

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-ex'),
])


10204) wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'

CommandNode(pos=(11, 68), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 29), word='get-pip.py'),
  WordNode(pos=(30, 68), word='https://bootstrap.pypa.io/get-pip.py'),
])


10205) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


10206) pip --version

CommandNode(pos=(170, 183), parts=[
  WordNode(pos=(170, 173), word='pip'),
  WordNode(pos=(174, 183), word='--version'),
])


10207) find /usr/local -depth   \(    \( -type d -a \( -name test -o -name tests \) \)    -o    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +

CommandNode(pos=(187, 354), parts=[
  WordNode(pos=(187, 191), word='find'),
  WordNode(pos=(192, 202), word='/usr/local'),
  WordNode(pos=(203, 209), word='-depth'),
  WordNode(pos=(212, 214), word='('),
  WordNode(pos=(218, 220), word='('),
  WordNode(pos=(221, 226), word='-type'),
  WordNode(pos=(227, 228), word='d'),
  WordNode(pos=(229, 231), word='-a'),
  WordNode(pos=(232, 234), word='('),
  WordNode(pos=(235, 240), word='-name'),
  WordNode(pos=(241, 245), word='test'),
  WordNode(pos=(246, 248), word='-o'),
  WordNode(pos=(249, 254), word='-name'),
  WordNode(pos=(255, 260), word='tests'),
  WordNode(pos=(261, 263), word=')'),
  WordNode(pos=(264, 266), word=')'),
  WordNode(pos=(270, 272), word='-o'),
  WordNode(pos=(276, 278), word='('),
  WordNode(pos=(279, 284), word='-type'),
  WordNode(pos=(285, 286), word='f'),
  WordNode(pos=(287, 289), word='-a'),
  WordNode(pos=(290, 292), word='('),
  WordNode(pos=(293, 298), word='-name'),
  WordNode(pos=(299, 306), word='*.pyc'),
  WordNode(pos=(307, 309), word='-o'),
  WordNode(pos=(310, 315), word='-name'),
  WordNode(pos=(316, 323), word='*.pyo'),
  WordNode(pos=(324, 326), word=')'),
  WordNode(pos=(327, 329), word=')'),
  WordNode(pos=(332, 334), word=')'),
  WordNode(pos=(335, 340), word='-exec'),
  WordNode(pos=(341, 343), word='rm'),
  WordNode(pos=(344, 347), word='-rf'),
  WordNode(pos=(348, 352), word='{}'),
  WordNode(pos=(353, 354), word='+'),
])


10208) rm -f get-pip.py

CommandNode(pos=(357, 373), parts=[
  WordNode(pos=(357, 359), word='rm'),
  WordNode(pos=(360, 362), word='-f'),
  WordNode(pos=(363, 373), word='get-pip.py'),
])


10209) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10210) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


10211) apt-get install -y --no-install-recommends   gosu

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='gosu'),
])


10212) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(82, 109), parts=[
  WordNode(pos=(82, 84), word='rm'),
  WordNode(pos=(85, 88), word='-rf'),
  WordNode(pos=(89, 109), word='/var/lib/apt/lists/*'),
])


10213) gosu nobody true

CommandNode(pos=(112, 128), parts=[
  WordNode(pos=(112, 116), word='gosu'),
  WordNode(pos=(117, 123), word='nobody'),
  WordNode(pos=(124, 128), word='true'),
])


10214) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10215) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


10216) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


10217) apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget

CommandNode(pos=(69, 200), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 90), word='--yes'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 125), word='autoconf'),
  WordNode(pos=(128, 143), word='ca-certificates'),
  WordNode(pos=(146, 154), word='dpkg-dev'),
  WordNode(pos=(157, 160), word='gcc'),
  WordNode(pos=(163, 168), word='gnupg'),
  WordNode(pos=(171, 186), word='libncurses5-dev'),
  WordNode(pos=(189, 193), word='make'),
  WordNode(pos=(196, 200), word='wget'),
])


10218) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 207), word='rm'),
  WordNode(pos=(208, 211), word='-rf'),
  WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
])


10219) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


10220) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


10221) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(379, 416), parts=[
  AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


10222) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


10223) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


10224) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(608, 639), parts=[
  WordNode(pos=(608, 614), word='export'),
  WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(628, 637), parts=[
        WordNode(pos=(628, 634), word='mktemp'),
        WordNode(pos=(635, 637), word='-d'),
      ]), pos=(626, 638)),
  ]),
])


10225) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


10226) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


10227) gpgconf --kill all

CommandNode(pos=(822, 840), parts=[
  WordNode(pos=(822, 829), word='gpgconf'),
  WordNode(pos=(830, 836), word='--kill'),
  WordNode(pos=(837, 840), word='all'),
])


10228) rm -rf "$GNUPGHOME"

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(851, 861), value='GNUPGHOME'),
  ]),
])


10229) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


10230) sha256sum --check --strict -

CommandNode(pos=(919, 947), parts=[
  WordNode(pos=(919, 928), word='sha256sum'),
  WordNode(pos=(929, 936), word='--check'),
  WordNode(pos=(937, 945), word='--strict'),
  WordNode(pos=(946, 947), word='-'),
])


10231) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(950, 974), parts=[
  WordNode(pos=(950, 955), word='mkdir'),
  WordNode(pos=(956, 958), word='-p'),
  WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
  ]),
])


10232) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


10233) cd "$OPENSSL_PATH"

CommandNode(pos=(1073, 1091), parts=[
  WordNode(pos=(1073, 1075), word='cd'),
  WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
  ]),
])


10234) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


10235) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


10236) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1340, 1378), parts=[
  WordNode(pos=(1340, 1344), word='make'),
  WordNode(pos=(1345, 1347), word='-j'),
  WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1351, 1376), parts=[
        WordNode(pos=(1351, 1358), word='getconf'),
        WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
      ]), pos=(1349, 1377)),
  ]),
])


10237) make install_sw install_ssldirs

CommandNode(pos=(1381, 1412), parts=[
  WordNode(pos=(1381, 1385), word='make'),
  WordNode(pos=(1386, 1396), word='install_sw'),
  WordNode(pos=(1397, 1412), word='install_ssldirs'),
])


10238) cd ..

CommandNode(pos=(1415, 1420), parts=[
  WordNode(pos=(1415, 1417), word='cd'),
  WordNode(pos=(1418, 1420), word='..'),
])


10239) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1423, 1446), parts=[
  WordNode(pos=(1423, 1425), word='rm'),
  WordNode(pos=(1426, 1429), word='-rf'),
  WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
  ]),
])


10240) echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf

CommandNode(pos=(1449, 1512), parts=[
  WordNode(pos=(1449, 1453), word='echo'),
  WordNode(pos=(1454, 1470), word='/usr/local/lib'),
  RedirectNode(output=
    WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
])


10241) ldconfig

CommandNode(pos=(1515, 1523), parts=[
  WordNode(pos=(1515, 1523), word='ldconfig'),
])


10242) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


10243) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1592, 1652), parts=[
  WordNode(pos=(1592, 1594), word='ln'),
  WordNode(pos=(1595, 1598), word='-sf'),
  WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
  WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
  WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
  ]),
])


10244) openssl version

CommandNode(pos=(1655, 1670), parts=[
  WordNode(pos=(1655, 1662), word='openssl'),
  WordNode(pos=(1663, 1670), word='version'),
])


10245) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


10246) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


10247) mkdir -p "$OTP_PATH"

CommandNode(pos=(1801, 1821), parts=[
  WordNode(pos=(1801, 1806), word='mkdir'),
  WordNode(pos=(1807, 1809), word='-p'),
  WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
  ]),
])


10248) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


10249) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


10250) sha256sum --check --strict -

CommandNode(pos=(1952, 1980), parts=[
  WordNode(pos=(1952, 1961), word='sha256sum'),
  WordNode(pos=(1962, 1969), word='--check'),
  WordNode(pos=(1970, 1978), word='--strict'),
  WordNode(pos=(1979, 1980), word='-'),
])


10251) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


10252) cd "$OTP_PATH"

CommandNode(pos=(2071, 2085), parts=[
  WordNode(pos=(2071, 2073), word='cd'),
  WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
  ]),
])


10253) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(2088, 2114), parts=[
  WordNode(pos=(2088, 2094), word='export'),
  WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
  ]),
])


10254) ./otp_build autoconf

CommandNode(pos=(2117, 2137), parts=[
  WordNode(pos=(2117, 2128), word='./otp_build'),
  WordNode(pos=(2129, 2137), word='autoconf'),
])


10255) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


10256) export CFLAGS

CommandNode(pos=(2182, 2195), parts=[
  WordNode(pos=(2182, 2188), word='export'),
  WordNode(pos=(2189, 2195), word='CFLAGS'),
])


10257) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


10258) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


10259) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


10260) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


10261) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


10262) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(3077, 3155), parts=[
  WordNode(pos=(3077, 3081), word='make'),
  WordNode(pos=(3082, 3084), word='-j'),
  WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(3088, 3113), parts=[
        WordNode(pos=(3088, 3095), word='getconf'),
        WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
      ]), pos=(3086, 3114)),
  ]),
  WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


10263) make install

CommandNode(pos=(3158, 3170), parts=[
  WordNode(pos=(3158, 3162), word='make'),
  WordNode(pos=(3163, 3170), word='install'),
])


10264) cd ..

CommandNode(pos=(3173, 3178), parts=[
  WordNode(pos=(3173, 3175), word='cd'),
  WordNode(pos=(3176, 3178), word='..'),
])


10265) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(3181, 3275), parts=[
  WordNode(pos=(3181, 3183), word='rm'),
  WordNode(pos=(3184, 3187), word='-rf'),
  WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
  ]),
  WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
])


10266) apt-mark auto '.*' > /dev/null

CommandNode(pos=(3281, 3311), parts=[
  WordNode(pos=(3281, 3289), word='apt-mark'),
  WordNode(pos=(3290, 3294), word='auto'),
  WordNode(pos=(3295, 3299), word='.*'),
  RedirectNode(output=
    WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
])


10267) [ -z "$savedAptMark" ]

CommandNode(pos=(3314, 3336), parts=[
  WordNode(pos=(3314, 3315), word='['),
  WordNode(pos=(3316, 3318), word='-z'),
  WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
    ParameterNode(pos=(3320, 3333), value='savedAptMark'),
  ]),
  WordNode(pos=(3335, 3336), word=']'),
])


10268) apt-mark manual $savedAptMark

CommandNode(pos=(3340, 3369), parts=[
  WordNode(pos=(3340, 3348), word='apt-mark'),
  WordNode(pos=(3349, 3355), word='manual'),
  WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
    ParameterNode(pos=(3356, 3369), value='savedAptMark'),
  ]),
])


10269) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(3372, 3426), parts=[
  WordNode(pos=(3372, 3376), word='find'),
  WordNode(pos=(3377, 3387), word='/usr/local'),
  WordNode(pos=(3388, 3393), word='-type'),
  WordNode(pos=(3394, 3395), word='f'),
  WordNode(pos=(3396, 3407), word='-executable'),
  WordNode(pos=(3408, 3413), word='-exec'),
  WordNode(pos=(3414, 3417), word='ldd'),
  WordNode(pos=(3418, 3422), word='{}'),
  WordNode(pos=(3423, 3426), word=';'),
])


10270) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(3431, 3459), parts=[
  WordNode(pos=(3431, 3434), word='awk'),
  WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
])


10271) sort -u

CommandNode(pos=(3464, 3471), parts=[
  WordNode(pos=(3464, 3468), word='sort'),
  WordNode(pos=(3469, 3471), word='-u'),
])


10272) xargs -r dpkg-query --search

CommandNode(pos=(3476, 3504), parts=[
  WordNode(pos=(3476, 3481), word='xargs'),
  WordNode(pos=(3482, 3484), word='-r'),
  WordNode(pos=(3485, 3495), word='dpkg-query'),
  WordNode(pos=(3496, 3504), word='--search'),
])


10273) cut -d: -f1

CommandNode(pos=(3509, 3520), parts=[
  WordNode(pos=(3509, 3512), word='cut'),
  WordNode(pos=(3513, 3516), word='-d:'),
  WordNode(pos=(3517, 3520), word='-f1'),
])


10274) sort -u

CommandNode(pos=(3525, 3532), parts=[
  WordNode(pos=(3525, 3529), word='sort'),
  WordNode(pos=(3530, 3532), word='-u'),
])


10275) xargs -r apt-mark manual

CommandNode(pos=(3537, 3561), parts=[
  WordNode(pos=(3537, 3542), word='xargs'),
  WordNode(pos=(3543, 3545), word='-r'),
  WordNode(pos=(3546, 3554), word='apt-mark'),
  WordNode(pos=(3555, 3561), word='manual'),
])


10276) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(3566, 3642), parts=[
  WordNode(pos=(3566, 3573), word='apt-get'),
  WordNode(pos=(3574, 3579), word='purge'),
  WordNode(pos=(3580, 3582), word='-y'),
  WordNode(pos=(3583, 3596), word='--auto-remove'),
  WordNode(pos=(3597, 3599), word='-o'),
  WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
])


10277) openssl version

CommandNode(pos=(3646, 3661), parts=[
  WordNode(pos=(3646, 3653), word='openssl'),
  WordNode(pos=(3654, 3661), word='version'),
])


10278) erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

CommandNode(pos=(3664, 3761), parts=[
  WordNode(pos=(3664, 3667), word='erl'),
  WordNode(pos=(3668, 3676), word='-noshell'),
  WordNode(pos=(3677, 3682), word='-eval'),
  WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
])


10279) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10280) groupadd --gid 999 --system rabbitmq

CommandNode(pos=(11, 47), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 25), word='--gid'),
  WordNode(pos=(26, 29), word='999'),
  WordNode(pos=(30, 38), word='--system'),
  WordNode(pos=(39, 47), word='rabbitmq'),
])


10281) useradd --uid 999 --system --home-dir "$RABBITMQ_DATA_DIR" --gid rabbitmq rabbitmq

CommandNode(pos=(50, 132), parts=[
  WordNode(pos=(50, 57), word='useradd'),
  WordNode(pos=(58, 63), word='--uid'),
  WordNode(pos=(64, 67), word='999'),
  WordNode(pos=(68, 76), word='--system'),
  WordNode(pos=(77, 87), word='--home-dir'),
  WordNode(pos=(88, 108), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(89, 107), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(109, 114), word='--gid'),
  WordNode(pos=(115, 123), word='rabbitmq'),
  WordNode(pos=(124, 132), word='rabbitmq'),
])


10282) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(135, 214), parts=[
  WordNode(pos=(135, 140), word='mkdir'),
  WordNode(pos=(141, 143), word='-p'),
  WordNode(pos=(144, 164), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(145, 163), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(165, 178), word='/etc/rabbitmq'),
  WordNode(pos=(179, 196), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(197, 214), word='/var/log/rabbitmq'),
])


10283) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(217, 315), parts=[
  WordNode(pos=(217, 222), word='chown'),
  WordNode(pos=(223, 226), word='-fR'),
  WordNode(pos=(227, 244), word='rabbitmq:rabbitmq'),
  WordNode(pos=(245, 265), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(246, 264), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(266, 279), word='/etc/rabbitmq'),
  WordNode(pos=(280, 297), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(298, 315), word='/var/log/rabbitmq'),
])


10284) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(318, 398), parts=[
  WordNode(pos=(318, 323), word='chmod'),
  WordNode(pos=(324, 327), word='777'),
  WordNode(pos=(328, 348), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(329, 347), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(349, 362), word='/etc/rabbitmq'),
  WordNode(pos=(363, 380), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(381, 398), word='/var/log/rabbitmq'),
])


10285) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(401, 464), parts=[
  WordNode(pos=(401, 403), word='ln'),
  WordNode(pos=(404, 407), word='-sf'),
  WordNode(pos=(408, 443), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(409, 427), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(444, 464), word='/root/.erlang.cookie'),
])


10286) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10287) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


10288) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


10289) apt-get install --yes --no-install-recommends   ca-certificates   gnupg   wget   xz-utils

CommandNode(pos=(69, 158), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 90), word='--yes'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 140), word='gnupg'),
  WordNode(pos=(143, 147), word='wget'),
  WordNode(pos=(150, 158), word='xz-utils'),
])


10290) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(163, 190), parts=[
  WordNode(pos=(163, 165), word='rm'),
  WordNode(pos=(166, 169), word='-rf'),
  WordNode(pos=(170, 190), word='/var/lib/apt/lists/*'),
])


10291) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


10292) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


10293) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


10294) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


10295) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(607, 638), parts=[
  WordNode(pos=(607, 613), word='export'),
  WordNode(pos=(614, 638), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(627, 636), parts=[
        WordNode(pos=(627, 633), word='mktemp'),
        WordNode(pos=(634, 636), word='-d'),
      ]), pos=(625, 637)),
  ]),
])


10296) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


10297) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


10298) gpgconf --kill all

CommandNode(pos=(794, 812), parts=[
  WordNode(pos=(794, 801), word='gpgconf'),
  WordNode(pos=(802, 808), word='--kill'),
  WordNode(pos=(809, 812), word='all'),
])


10299) rm -rf "$GNUPGHOME"

CommandNode(pos=(815, 834), parts=[
  WordNode(pos=(815, 817), word='rm'),
  WordNode(pos=(818, 821), word='-rf'),
  WordNode(pos=(822, 834), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(823, 833), value='GNUPGHOME'),
  ]),
])


10300) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(838, 863), parts=[
  WordNode(pos=(838, 843), word='mkdir'),
  WordNode(pos=(844, 846), word='-p'),
  WordNode(pos=(847, 863), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(848, 862), value='RABBITMQ_HOME'),
  ]),
])


10301) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


10302) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(963, 987), parts=[
  WordNode(pos=(963, 965), word='rm'),
  WordNode(pos=(966, 969), word='-rf'),
  WordNode(pos=(970, 987), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(971, 985), value='RABBITMQ_PATH'),
  ]),
])


10303) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(990, 1073), parts=[
  WordNode(pos=(990, 994), word='grep'),
  WordNode(pos=(995, 998), word='-qE'),
  WordNode(pos=(999, 1033), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(1034, 1073), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1035, 1049), value='RABBITMQ_HOME'),
  ]),
])


10304) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1076, 1155), parts=[
  WordNode(pos=(1076, 1079), word='sed'),
  WordNode(pos=(1080, 1082), word='-i'),
  WordNode(pos=(1083, 1115), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(1116, 1155), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1117, 1131), value='RABBITMQ_HOME'),
  ]),
])


10305) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1158, 1222), parts=[
  WordNode(pos=(1158, 1162), word='grep'),
  WordNode(pos=(1163, 1166), word='-qE'),
  WordNode(pos=(1167, 1182), word='^SYS_PREFIX=$'),
  WordNode(pos=(1183, 1222), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1184, 1198), value='RABBITMQ_HOME'),
  ]),
])


10306) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1225, 1268), parts=[
  WordNode(pos=(1225, 1230), word='chown'),
  WordNode(pos=(1231, 1233), word='-R'),
  WordNode(pos=(1234, 1251), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1252, 1268), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1253, 1267), value='RABBITMQ_HOME'),
  ]),
])


10307) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1272, 1302), parts=[
  WordNode(pos=(1272, 1280), word='apt-mark'),
  WordNode(pos=(1281, 1285), word='auto'),
  WordNode(pos=(1286, 1290), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1293, 1302), word='/dev/null'), pos=(1291, 1302), type='>'),
])


10308) apt-mark manual $savedAptMark

CommandNode(pos=(1305, 1334), parts=[
  WordNode(pos=(1305, 1313), word='apt-mark'),
  WordNode(pos=(1314, 1320), word='manual'),
  WordNode(pos=(1321, 1334), word='$savedAptMark', parts=[
    ParameterNode(pos=(1321, 1334), value='savedAptMark'),
  ]),
])


10309) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1337, 1413), parts=[
  WordNode(pos=(1337, 1344), word='apt-get'),
  WordNode(pos=(1345, 1350), word='purge'),
  WordNode(pos=(1351, 1353), word='-y'),
  WordNode(pos=(1354, 1367), word='--auto-remove'),
  WordNode(pos=(1368, 1370), word='-o'),
  WordNode(pos=(1371, 1413), word='APT::AutoRemove::RecommendsImportant=false'),
])


10310) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1417, 1461), parts=[
  WordNode(pos=(1417, 1418), word='['),
  WordNode(pos=(1419, 1420), word='!'),
  WordNode(pos=(1421, 1423), word='-e'),
  WordNode(pos=(1424, 1459), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1425, 1443), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1460, 1461), word=']'),
])


10311) gosu rabbitmq rabbitmqctl help

CommandNode(pos=(1464, 1494), parts=[
  WordNode(pos=(1464, 1468), word='gosu'),
  WordNode(pos=(1469, 1477), word='rabbitmq'),
  WordNode(pos=(1478, 1489), word='rabbitmqctl'),
  WordNode(pos=(1490, 1494), word='help'),
])


10312) gosu rabbitmq rabbitmqctl list_ciphers

CommandNode(pos=(1497, 1535), parts=[
  WordNode(pos=(1497, 1501), word='gosu'),
  WordNode(pos=(1502, 1510), word='rabbitmq'),
  WordNode(pos=(1511, 1522), word='rabbitmqctl'),
  WordNode(pos=(1523, 1535), word='list_ciphers'),
])


10313) gosu rabbitmq rabbitmq-plugins list

CommandNode(pos=(1538, 1573), parts=[
  WordNode(pos=(1538, 1542), word='gosu'),
  WordNode(pos=(1543, 1551), word='rabbitmq'),
  WordNode(pos=(1552, 1568), word='rabbitmq-plugins'),
  WordNode(pos=(1569, 1573), word='list'),
])


10314) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1576, 1614), parts=[
  WordNode(pos=(1576, 1578), word='rm'),
  WordNode(pos=(1579, 1614), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1580, 1598), value='RABBITMQ_DATA_DIR'),
  ]),
])


10315) ln -sf /opt/rabbitmq/plugins /plugins

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 6), word='-sf'),
  WordNode(pos=(7, 28), word='/opt/rabbitmq/plugins'),
  WordNode(pos=(29, 37), word='/plugins'),
])


10316) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


10317) apt-get install -y --no-install-recommends   g++   gcc   libc6-dev   make   pkg-config

CommandNode(pos=(18, 104), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 66), word='g++'),
  WordNode(pos=(69, 72), word='gcc'),
  WordNode(pos=(75, 84), word='libc6-dev'),
  WordNode(pos=(87, 91), word='make'),
  WordNode(pos=(94, 104), word='pkg-config'),
])


10318) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(109, 136), parts=[
  WordNode(pos=(109, 111), word='rm'),
  WordNode(pos=(112, 115), word='-rf'),
  WordNode(pos=(116, 136), word='/var/lib/apt/lists/*'),
])


10319) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


10320) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


10321) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


10322) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10323) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


10324) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


10325) apt-get install -y --no-install-recommends gnupg dirmngr

CommandNode(pos=(70, 126), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 118), word='gnupg'),
  WordNode(pos=(119, 126), word='dirmngr'),
])


10326) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


10327) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


10328) apt-get install -y --no-install-recommends wget ca-certificates

CommandNode(pos=(271, 334), parts=[
  WordNode(pos=(271, 278), word='apt-get'),
  WordNode(pos=(279, 286), word='install'),
  WordNode(pos=(287, 289), word='-y'),
  WordNode(pos=(290, 313), word='--no-install-recommends'),
  WordNode(pos=(314, 318), word='wget'),
  WordNode(pos=(319, 334), word='ca-certificates'),
])


10329) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


10330) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


10331) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


10332) break

CommandNode(pos=(438, 443), parts=[
  WordNode(pos=(438, 443), word='break'),
])


10333) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


10334) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


10335) sha512sum --strict --check -

CommandNode(pos=(519, 547), parts=[
  WordNode(pos=(519, 528), word='sha512sum'),
  WordNode(pos=(529, 537), word='--strict'),
  WordNode(pos=(538, 545), word='--check'),
  WordNode(pos=(546, 547), word='-'),
])


10336) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


10337) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


10338) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


10339) break

CommandNode(pos=(655, 660), parts=[
  WordNode(pos=(655, 660), word='break'),
])


10340) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


10341) gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz

CommandNode(pos=(697, 749), parts=[
  WordNode(pos=(697, 700), word='gpg'),
  WordNode(pos=(701, 708), word='--batch'),
  WordNode(pos=(709, 717), word='--verify'),
  WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
  WordNode(pos=(736, 749), word='tomcat.tar.gz'),
])


10342) tar -xvf tomcat.tar.gz --strip-components=1

CommandNode(pos=(752, 795), parts=[
  WordNode(pos=(752, 755), word='tar'),
  WordNode(pos=(756, 760), word='-xvf'),
  WordNode(pos=(761, 774), word='tomcat.tar.gz'),
  WordNode(pos=(775, 795), word='--strip-components=1'),
])


10343) rm bin/*.bat

CommandNode(pos=(798, 810), parts=[
  WordNode(pos=(798, 800), word='rm'),
  WordNode(pos=(801, 810), word='bin/*.bat'),
])


10344) rm tomcat.tar.gz*

CommandNode(pos=(813, 830), parts=[
  WordNode(pos=(813, 815), word='rm'),
  WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
])


10345) command -v gpgconf

CommandNode(pos=(833, 851), parts=[
  WordNode(pos=(833, 840), word='command'),
  WordNode(pos=(841, 843), word='-v'),
  WordNode(pos=(844, 851), word='gpgconf'),
])


10346) gpgconf --kill all

CommandNode(pos=(855, 873), parts=[
  WordNode(pos=(855, 862), word='gpgconf'),
  WordNode(pos=(863, 869), word='--kill'),
  WordNode(pos=(870, 873), word='all'),
])


10347) :

CommandNode(pos=(877, 878), parts=[
  WordNode(pos=(877, 878), word=':'),
])


10348) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


10349) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


10350) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


10351) apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make

CommandNode(pos=(1014, 1107), parts=[
  WordNode(pos=(1014, 1021), word='apt-get'),
  WordNode(pos=(1022, 1029), word='install'),
  WordNode(pos=(1030, 1032), word='-y'),
  WordNode(pos=(1033, 1056), word='--no-install-recommends'),
  WordNode(pos=(1059, 1067), word='dpkg-dev'),
  WordNode(pos=(1070, 1073), word='gcc'),
  WordNode(pos=(1076, 1087), word='libapr1-dev'),
  WordNode(pos=(1090, 1100), word='libssl-dev'),
  WordNode(pos=(1103, 1107), word='make'),
])


10352) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


10353) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


10354) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


10355) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


10356) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


10357) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


10358) make install

CommandNode(pos=(1478, 1490), parts=[
  WordNode(pos=(1478, 1482), word='make'),
  WordNode(pos=(1483, 1490), word='install'),
])


10359) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


10360) rm bin/tomcat-native.tar.gz

CommandNode(pos=(1524, 1551), parts=[
  WordNode(pos=(1524, 1526), word='rm'),
  WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
])


10361) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1555, 1585), parts=[
  WordNode(pos=(1555, 1563), word='apt-mark'),
  WordNode(pos=(1564, 1568), word='auto'),
  WordNode(pos=(1569, 1573), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
])


10362) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


10363) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


10364) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


10365) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1730, 1758), parts=[
  WordNode(pos=(1730, 1733), word='awk'),
  WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
])


10366) sort -u

CommandNode(pos=(1763, 1770), parts=[
  WordNode(pos=(1763, 1767), word='sort'),
  WordNode(pos=(1768, 1770), word='-u'),
])


10367) xargs -r dpkg-query --search

CommandNode(pos=(1775, 1803), parts=[
  WordNode(pos=(1775, 1780), word='xargs'),
  WordNode(pos=(1781, 1783), word='-r'),
  WordNode(pos=(1784, 1794), word='dpkg-query'),
  WordNode(pos=(1795, 1803), word='--search'),
])


10368) cut -d: -f1

CommandNode(pos=(1808, 1819), parts=[
  WordNode(pos=(1808, 1811), word='cut'),
  WordNode(pos=(1812, 1815), word='-d:'),
  WordNode(pos=(1816, 1819), word='-f1'),
])


10369) sort -u

CommandNode(pos=(1824, 1831), parts=[
  WordNode(pos=(1824, 1828), word='sort'),
  WordNode(pos=(1829, 1831), word='-u'),
])


10370) xargs -r apt-mark manual

CommandNode(pos=(1836, 1860), parts=[
  WordNode(pos=(1836, 1841), word='xargs'),
  WordNode(pos=(1842, 1844), word='-r'),
  WordNode(pos=(1845, 1853), word='apt-mark'),
  WordNode(pos=(1854, 1860), word='manual'),
])


10371) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1865, 1941), parts=[
  WordNode(pos=(1865, 1872), word='apt-get'),
  WordNode(pos=(1873, 1878), word='purge'),
  WordNode(pos=(1879, 1881), word='-y'),
  WordNode(pos=(1882, 1895), word='--auto-remove'),
  WordNode(pos=(1896, 1898), word='-o'),
  WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
])


10372) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(1944, 1971), parts=[
  WordNode(pos=(1944, 1946), word='rm'),
  WordNode(pos=(1947, 1950), word='-rf'),
  WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
])


10373) find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

CommandNode(pos=(1975, 2057), parts=[
  WordNode(pos=(1975, 1979), word='find'),
  WordNode(pos=(1980, 1986), word='./bin/'),
  WordNode(pos=(1987, 1992), word='-name'),
  WordNode(pos=(1993, 1999), word='*.sh'),
  WordNode(pos=(2000, 2005), word='-exec'),
  WordNode(pos=(2006, 2009), word='sed'),
  WordNode(pos=(2010, 2013), word='-ri'),
  WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
  WordNode(pos=(2051, 2055), word='{}'),
  WordNode(pos=(2056, 2057), word='+'),
])


10374) chmod -R +rX .

CommandNode(pos=(2061, 2075), parts=[
  WordNode(pos=(2061, 2066), word='chmod'),
  WordNode(pos=(2067, 2069), word='-R'),
  WordNode(pos=(2070, 2073), word='+rX'),
  WordNode(pos=(2074, 2075), word='.'),
])


10375) chmod 777 logs work

CommandNode(pos=(2078, 2097), parts=[
  WordNode(pos=(2078, 2083), word='chmod'),
  WordNode(pos=(2084, 2087), word='777'),
  WordNode(pos=(2088, 2092), word='logs'),
  WordNode(pos=(2093, 2097), word='work'),
])


10376) set -e

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-e'),
])


10377) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


10378) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


10379) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


10380) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


10381) grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2

CommandNode(pos=(209, 271), parts=[
  WordNode(pos=(209, 213), word='grep'),
  WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
  RedirectNode(output=2, pos=(268, 271), type='>&'),
])


10382) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


10383) exit 1

CommandNode(pos=(307, 313), parts=[
  WordNode(pos=(307, 311), word='exit'),
  WordNode(pos=(312, 313), word='1'),
])


10384) rabbitmq-plugins enable --offline rabbitmq_management

CommandNode(pos=(0, 53), parts=[
  WordNode(pos=(0, 16), word='rabbitmq-plugins'),
  WordNode(pos=(17, 23), word='enable'),
  WordNode(pos=(24, 33), word='--offline'),
  WordNode(pos=(34, 53), word='rabbitmq_management'),
])


10385) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10386) erl -noinput -eval '   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  ' -- /plugins/rabbitmq_management-*.ez > /usr/local/bin/rabbitmqadmin

CommandNode(pos=(11, 422), parts=[
  WordNode(pos=(11, 14), word='erl'),
  WordNode(pos=(15, 23), word='-noinput'),
  WordNode(pos=(24, 29), word='-eval'),
  WordNode(pos=(30, 354), word='   { ok, AdminBin } = zip:foldl(fun(FileInArchive, GetInfo, GetBin, Acc) ->    case Acc of     "" ->      case lists:suffix("/rabbitmqadmin", FileInArchive) of       true -> GetBin();       false -> Acc      end;     _ -> Acc    end   end, "", init:get_plain_arguments()),   io:format("~s", [ AdminBin ]),   init:stop().  '),
  WordNode(pos=(355, 357), word='--'),
  WordNode(pos=(358, 391), word='/plugins/rabbitmq_management-*.ez'),
  RedirectNode(output=
    WordNode(pos=(394, 422), word='/usr/local/bin/rabbitmqadmin'), pos=(392, 422), type='>'),
])


10387) [ -s /usr/local/bin/rabbitmqadmin ]

CommandNode(pos=(425, 460), parts=[
  WordNode(pos=(425, 426), word='['),
  WordNode(pos=(427, 429), word='-s'),
  WordNode(pos=(430, 458), word='/usr/local/bin/rabbitmqadmin'),
  WordNode(pos=(459, 460), word=']'),
])


10388) chmod +x /usr/local/bin/rabbitmqadmin

CommandNode(pos=(463, 500), parts=[
  WordNode(pos=(463, 468), word='chmod'),
  WordNode(pos=(469, 471), word='+x'),
  WordNode(pos=(472, 500), word='/usr/local/bin/rabbitmqadmin'),
])


10389) apt-get update

CommandNode(pos=(503, 517), parts=[
  WordNode(pos=(503, 510), word='apt-get'),
  WordNode(pos=(511, 517), word='update'),
])


10390) apt-get install -y --no-install-recommends python

CommandNode(pos=(519, 568), parts=[
  WordNode(pos=(519, 526), word='apt-get'),
  WordNode(pos=(527, 534), word='install'),
  WordNode(pos=(535, 537), word='-y'),
  WordNode(pos=(538, 561), word='--no-install-recommends'),
  WordNode(pos=(562, 568), word='python'),
])


10391) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(570, 597), parts=[
  WordNode(pos=(570, 572), word='rm'),
  WordNode(pos=(573, 576), word='-rf'),
  WordNode(pos=(577, 597), word='/var/lib/apt/lists/*'),
])


10392) rabbitmqadmin --version

CommandNode(pos=(600, 623), parts=[
  WordNode(pos=(600, 613), word='rabbitmqadmin'),
  WordNode(pos=(614, 623), word='--version'),
])


10393) set -x

CommandNode(pos=(0, 6), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 6), word='-x'),
])


10394) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


10395) apt-get update

CommandNode(pos=(54, 68), parts=[
  WordNode(pos=(54, 61), word='apt-get'),
  WordNode(pos=(62, 68), word='update'),
])


10396) apt-get install -y --no-install-recommends   ca-certificates   gcc   libc6-dev   liblua5.3-dev   libpcre2-dev   libssl-dev   make   wget   zlib1g-dev

CommandNode(pos=(72, 221), parts=[
  WordNode(pos=(72, 79), word='apt-get'),
  WordNode(pos=(80, 87), word='install'),
  WordNode(pos=(88, 90), word='-y'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 138), word='gcc'),
  WordNode(pos=(141, 150), word='libc6-dev'),
  WordNode(pos=(153, 166), word='liblua5.3-dev'),
  WordNode(pos=(169, 181), word='libpcre2-dev'),
  WordNode(pos=(184, 194), word='libssl-dev'),
  WordNode(pos=(197, 201), word='make'),
  WordNode(pos=(204, 208), word='wget'),
  WordNode(pos=(211, 221), word='zlib1g-dev'),
])


10397) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(226, 253), parts=[
  WordNode(pos=(226, 228), word='rm'),
  WordNode(pos=(229, 232), word='-rf'),
  WordNode(pos=(233, 253), word='/var/lib/apt/lists/*'),
])


10398) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


10399) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


10400) sha256sum -c

CommandNode(pos=(342, 354), parts=[
  WordNode(pos=(342, 351), word='sha256sum'),
  WordNode(pos=(352, 354), word='-c'),
])


10401) mkdir -p /usr/src/haproxy

CommandNode(pos=(359, 384), parts=[
  WordNode(pos=(359, 364), word='mkdir'),
  WordNode(pos=(365, 367), word='-p'),
  WordNode(pos=(368, 384), word='/usr/src/haproxy'),
])


10402) tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1

CommandNode(pos=(389, 453), parts=[
  WordNode(pos=(389, 392), word='tar'),
  WordNode(pos=(393, 397), word='-xzf'),
  WordNode(pos=(398, 412), word='haproxy.tar.gz'),
  WordNode(pos=(413, 415), word='-C'),
  WordNode(pos=(416, 432), word='/usr/src/haproxy'),
  WordNode(pos=(433, 453), word='--strip-components=1'),
])


10403) rm haproxy.tar.gz

CommandNode(pos=(458, 475), parts=[
  WordNode(pos=(458, 460), word='rm'),
  WordNode(pos=(461, 475), word='haproxy.tar.gz'),
])


10404) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 632), parts=[
  AssignmentNode(pos=(481, 632), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


10405) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(637, 689), parts=[
  WordNode(pos=(637, 641), word='make'),
  WordNode(pos=(642, 644), word='-C'),
  WordNode(pos=(645, 661), word='/usr/src/haproxy'),
  WordNode(pos=(662, 664), word='-j'),
  WordNode(pos=(665, 675), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(668, 673), parts=[
        WordNode(pos=(668, 673), word='nproc'),
      ]), pos=(666, 674)),
  ]),
  WordNode(pos=(676, 679), word='all'),
  WordNode(pos=(680, 689), word='$makeOpts', parts=[
    ParameterNode(pos=(680, 689), value='makeOpts'),
  ]),
])


10406) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(694, 740), parts=[
  WordNode(pos=(694, 698), word='make'),
  WordNode(pos=(699, 701), word='-C'),
  WordNode(pos=(702, 718), word='/usr/src/haproxy'),
  WordNode(pos=(719, 730), word='install-bin'),
  WordNode(pos=(731, 740), word='$makeOpts', parts=[
    ParameterNode(pos=(731, 740), value='makeOpts'),
  ]),
])


10407) mkdir -p /usr/local/etc/haproxy

CommandNode(pos=(746, 777), parts=[
  WordNode(pos=(746, 751), word='mkdir'),
  WordNode(pos=(752, 754), word='-p'),
  WordNode(pos=(755, 777), word='/usr/local/etc/haproxy'),
])


10408) cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors

CommandNode(pos=(782, 854), parts=[
  WordNode(pos=(782, 784), word='cp'),
  WordNode(pos=(785, 787), word='-R'),
  WordNode(pos=(788, 824), word='/usr/src/haproxy/examples/errorfiles'),
  WordNode(pos=(825, 854), word='/usr/local/etc/haproxy/errors'),
])


10409) rm -rf /usr/src/haproxy

CommandNode(pos=(859, 882), parts=[
  WordNode(pos=(859, 861), word='rm'),
  WordNode(pos=(862, 865), word='-rf'),
  WordNode(pos=(866, 882), word='/usr/src/haproxy'),
])


10410) apt-mark auto '.*' > /dev/null

CommandNode(pos=(888, 918), parts=[
  WordNode(pos=(888, 896), word='apt-mark'),
  WordNode(pos=(897, 901), word='auto'),
  WordNode(pos=(902, 906), word='.*'),
  RedirectNode(output=
    WordNode(pos=(909, 918), word='/dev/null'), pos=(907, 918), type='>'),
])


10411) [ -z "$savedAptMark" ]

CommandNode(pos=(925, 947), parts=[
  WordNode(pos=(925, 926), word='['),
  WordNode(pos=(927, 929), word='-z'),
  WordNode(pos=(930, 945), word='$savedAptMark', parts=[
    ParameterNode(pos=(931, 944), value='savedAptMark'),
  ]),
  WordNode(pos=(946, 947), word=']'),
])


10412) apt-mark manual $savedAptMark

CommandNode(pos=(951, 980), parts=[
  WordNode(pos=(951, 959), word='apt-mark'),
  WordNode(pos=(960, 966), word='manual'),
  WordNode(pos=(967, 980), word='$savedAptMark', parts=[
    ParameterNode(pos=(967, 980), value='savedAptMark'),
  ]),
])


10413) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(988, 1042), parts=[
  WordNode(pos=(988, 992), word='find'),
  WordNode(pos=(993, 1003), word='/usr/local'),
  WordNode(pos=(1004, 1009), word='-type'),
  WordNode(pos=(1010, 1011), word='f'),
  WordNode(pos=(1012, 1023), word='-executable'),
  WordNode(pos=(1024, 1029), word='-exec'),
  WordNode(pos=(1030, 1033), word='ldd'),
  WordNode(pos=(1034, 1038), word='{}'),
  WordNode(pos=(1039, 1042), word=';'),
])


10414) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(1047, 1075), parts=[
  WordNode(pos=(1047, 1050), word='awk'),
  WordNode(pos=(1051, 1075), word='/=>/ { print $(NF-1) }'),
])


10415) sort -u

CommandNode(pos=(1080, 1087), parts=[
  WordNode(pos=(1080, 1084), word='sort'),
  WordNode(pos=(1085, 1087), word='-u'),
])


10416) xargs -r dpkg-query --search

CommandNode(pos=(1092, 1120), parts=[
  WordNode(pos=(1092, 1097), word='xargs'),
  WordNode(pos=(1098, 1100), word='-r'),
  WordNode(pos=(1101, 1111), word='dpkg-query'),
  WordNode(pos=(1112, 1120), word='--search'),
])


10417) cut -d: -f1

CommandNode(pos=(1125, 1136), parts=[
  WordNode(pos=(1125, 1128), word='cut'),
  WordNode(pos=(1129, 1132), word='-d:'),
  WordNode(pos=(1133, 1136), word='-f1'),
])


10418) sort -u

CommandNode(pos=(1141, 1148), parts=[
  WordNode(pos=(1141, 1145), word='sort'),
  WordNode(pos=(1146, 1148), word='-u'),
])


10419) xargs -r apt-mark manual

CommandNode(pos=(1153, 1177), parts=[
  WordNode(pos=(1153, 1158), word='xargs'),
  WordNode(pos=(1159, 1161), word='-r'),
  WordNode(pos=(1162, 1170), word='apt-mark'),
  WordNode(pos=(1171, 1177), word='manual'),
])


10420) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1182, 1258), parts=[
  WordNode(pos=(1182, 1189), word='apt-get'),
  WordNode(pos=(1190, 1195), word='purge'),
  WordNode(pos=(1196, 1198), word='-y'),
  WordNode(pos=(1199, 1212), word='--auto-remove'),
  WordNode(pos=(1213, 1215), word='-o'),
  WordNode(pos=(1216, 1258), word='APT::AutoRemove::RecommendsImportant=false'),
])


10421) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10422) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


10423) apt-get install -y --no-install-recommends   gosu

CommandNode(pos=(28, 77), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 77), word='gosu'),
])


10424) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(82, 109), parts=[
  WordNode(pos=(82, 84), word='rm'),
  WordNode(pos=(85, 88), word='-rf'),
  WordNode(pos=(89, 109), word='/var/lib/apt/lists/*'),
])


10425) gosu nobody true

CommandNode(pos=(112, 128), parts=[
  WordNode(pos=(112, 116), word='gosu'),
  WordNode(pos=(117, 123), word='nobody'),
  WordNode(pos=(124, 128), word='true'),
])


10426) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10427) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


10428) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


10429) apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget

CommandNode(pos=(69, 200), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 90), word='--yes'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 125), word='autoconf'),
  WordNode(pos=(128, 143), word='ca-certificates'),
  WordNode(pos=(146, 154), word='dpkg-dev'),
  WordNode(pos=(157, 160), word='gcc'),
  WordNode(pos=(163, 168), word='gnupg'),
  WordNode(pos=(171, 186), word='libncurses5-dev'),
  WordNode(pos=(189, 193), word='make'),
  WordNode(pos=(196, 200), word='wget'),
])


10430) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(205, 232), parts=[
  WordNode(pos=(205, 207), word='rm'),
  WordNode(pos=(208, 211), word='-rf'),
  WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
])


10431) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


10432) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


10433) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(379, 416), parts=[
  AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


10434) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


10435) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


10436) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(608, 639), parts=[
  WordNode(pos=(608, 614), word='export'),
  WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(628, 637), parts=[
        WordNode(pos=(628, 634), word='mktemp'),
        WordNode(pos=(635, 637), word='-d'),
      ]), pos=(626, 638)),
  ]),
])


10437) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


10438) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


10439) gpgconf --kill all

CommandNode(pos=(822, 840), parts=[
  WordNode(pos=(822, 829), word='gpgconf'),
  WordNode(pos=(830, 836), word='--kill'),
  WordNode(pos=(837, 840), word='all'),
])


10440) rm -rf "$GNUPGHOME"

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(851, 861), value='GNUPGHOME'),
  ]),
])


10441) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


10442) sha256sum --check --strict -

CommandNode(pos=(919, 947), parts=[
  WordNode(pos=(919, 928), word='sha256sum'),
  WordNode(pos=(929, 936), word='--check'),
  WordNode(pos=(937, 945), word='--strict'),
  WordNode(pos=(946, 947), word='-'),
])


10443) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(950, 974), parts=[
  WordNode(pos=(950, 955), word='mkdir'),
  WordNode(pos=(956, 958), word='-p'),
  WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
  ]),
])


10444) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


10445) cd "$OPENSSL_PATH"

CommandNode(pos=(1073, 1091), parts=[
  WordNode(pos=(1073, 1075), word='cd'),
  WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
  ]),
])


10446) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


10447) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


10448) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1340, 1378), parts=[
  WordNode(pos=(1340, 1344), word='make'),
  WordNode(pos=(1345, 1347), word='-j'),
  WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1351, 1376), parts=[
        WordNode(pos=(1351, 1358), word='getconf'),
        WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
      ]), pos=(1349, 1377)),
  ]),
])


10449) make install_sw install_ssldirs

CommandNode(pos=(1381, 1412), parts=[
  WordNode(pos=(1381, 1385), word='make'),
  WordNode(pos=(1386, 1396), word='install_sw'),
  WordNode(pos=(1397, 1412), word='install_ssldirs'),
])


10450) cd ..

CommandNode(pos=(1415, 1420), parts=[
  WordNode(pos=(1415, 1417), word='cd'),
  WordNode(pos=(1418, 1420), word='..'),
])


10451) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1423, 1446), parts=[
  WordNode(pos=(1423, 1425), word='rm'),
  WordNode(pos=(1426, 1429), word='-rf'),
  WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
  ]),
])


10452) echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf

CommandNode(pos=(1449, 1512), parts=[
  WordNode(pos=(1449, 1453), word='echo'),
  WordNode(pos=(1454, 1470), word='/usr/local/lib'),
  RedirectNode(output=
    WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
])


10453) ldconfig

CommandNode(pos=(1515, 1523), parts=[
  WordNode(pos=(1515, 1523), word='ldconfig'),
])


10454) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


10455) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1592, 1652), parts=[
  WordNode(pos=(1592, 1594), word='ln'),
  WordNode(pos=(1595, 1598), word='-sf'),
  WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
  WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
  WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
  ]),
])


10456) openssl version

CommandNode(pos=(1655, 1670), parts=[
  WordNode(pos=(1655, 1662), word='openssl'),
  WordNode(pos=(1663, 1670), word='version'),
])


10457) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


10458) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


10459) mkdir -p "$OTP_PATH"

CommandNode(pos=(1801, 1821), parts=[
  WordNode(pos=(1801, 1806), word='mkdir'),
  WordNode(pos=(1807, 1809), word='-p'),
  WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
  ]),
])


10460) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


10461) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


10462) sha256sum --check --strict -

CommandNode(pos=(1952, 1980), parts=[
  WordNode(pos=(1952, 1961), word='sha256sum'),
  WordNode(pos=(1962, 1969), word='--check'),
  WordNode(pos=(1970, 1978), word='--strict'),
  WordNode(pos=(1979, 1980), word='-'),
])


10463) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


10464) cd "$OTP_PATH"

CommandNode(pos=(2071, 2085), parts=[
  WordNode(pos=(2071, 2073), word='cd'),
  WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
  ]),
])


10465) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(2088, 2114), parts=[
  WordNode(pos=(2088, 2094), word='export'),
  WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
  ]),
])


10466) ./otp_build autoconf

CommandNode(pos=(2117, 2137), parts=[
  WordNode(pos=(2117, 2128), word='./otp_build'),
  WordNode(pos=(2129, 2137), word='autoconf'),
])


10467) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


10468) export CFLAGS

CommandNode(pos=(2182, 2195), parts=[
  WordNode(pos=(2182, 2188), word='export'),
  WordNode(pos=(2189, 2195), word='CFLAGS'),
])


10469) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


10470) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


10471) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


10472) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


10473) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


10474) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(3077, 3155), parts=[
  WordNode(pos=(3077, 3081), word='make'),
  WordNode(pos=(3082, 3084), word='-j'),
  WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(3088, 3113), parts=[
        WordNode(pos=(3088, 3095), word='getconf'),
        WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
      ]), pos=(3086, 3114)),
  ]),
  WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


10475) make install

CommandNode(pos=(3158, 3170), parts=[
  WordNode(pos=(3158, 3162), word='make'),
  WordNode(pos=(3163, 3170), word='install'),
])


10476) cd ..

CommandNode(pos=(3173, 3178), parts=[
  WordNode(pos=(3173, 3175), word='cd'),
  WordNode(pos=(3176, 3178), word='..'),
])


10477) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(3181, 3275), parts=[
  WordNode(pos=(3181, 3183), word='rm'),
  WordNode(pos=(3184, 3187), word='-rf'),
  WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
  ]),
  WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
])


10478) apt-mark auto '.*' > /dev/null

CommandNode(pos=(3281, 3311), parts=[
  WordNode(pos=(3281, 3289), word='apt-mark'),
  WordNode(pos=(3290, 3294), word='auto'),
  WordNode(pos=(3295, 3299), word='.*'),
  RedirectNode(output=
    WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
])


10479) [ -z "$savedAptMark" ]

CommandNode(pos=(3314, 3336), parts=[
  WordNode(pos=(3314, 3315), word='['),
  WordNode(pos=(3316, 3318), word='-z'),
  WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
    ParameterNode(pos=(3320, 3333), value='savedAptMark'),
  ]),
  WordNode(pos=(3335, 3336), word=']'),
])


10480) apt-mark manual $savedAptMark

CommandNode(pos=(3340, 3369), parts=[
  WordNode(pos=(3340, 3348), word='apt-mark'),
  WordNode(pos=(3349, 3355), word='manual'),
  WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
    ParameterNode(pos=(3356, 3369), value='savedAptMark'),
  ]),
])


10481) find /usr/local -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(3372, 3426), parts=[
  WordNode(pos=(3372, 3376), word='find'),
  WordNode(pos=(3377, 3387), word='/usr/local'),
  WordNode(pos=(3388, 3393), word='-type'),
  WordNode(pos=(3394, 3395), word='f'),
  WordNode(pos=(3396, 3407), word='-executable'),
  WordNode(pos=(3408, 3413), word='-exec'),
  WordNode(pos=(3414, 3417), word='ldd'),
  WordNode(pos=(3418, 3422), word='{}'),
  WordNode(pos=(3423, 3426), word=';'),
])


10482) awk '/=>/ { print $(NF-1) }'

CommandNode(pos=(3431, 3459), parts=[
  WordNode(pos=(3431, 3434), word='awk'),
  WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
])


10483) sort -u

CommandNode(pos=(3464, 3471), parts=[
  WordNode(pos=(3464, 3468), word='sort'),
  WordNode(pos=(3469, 3471), word='-u'),
])


10484) xargs -r dpkg-query --search

CommandNode(pos=(3476, 3504), parts=[
  WordNode(pos=(3476, 3481), word='xargs'),
  WordNode(pos=(3482, 3484), word='-r'),
  WordNode(pos=(3485, 3495), word='dpkg-query'),
  WordNode(pos=(3496, 3504), word='--search'),
])


10485) cut -d: -f1

CommandNode(pos=(3509, 3520), parts=[
  WordNode(pos=(3509, 3512), word='cut'),
  WordNode(pos=(3513, 3516), word='-d:'),
  WordNode(pos=(3517, 3520), word='-f1'),
])


10486) sort -u

CommandNode(pos=(3525, 3532), parts=[
  WordNode(pos=(3525, 3529), word='sort'),
  WordNode(pos=(3530, 3532), word='-u'),
])


10487) xargs -r apt-mark manual

CommandNode(pos=(3537, 3561), parts=[
  WordNode(pos=(3537, 3542), word='xargs'),
  WordNode(pos=(3543, 3545), word='-r'),
  WordNode(pos=(3546, 3554), word='apt-mark'),
  WordNode(pos=(3555, 3561), word='manual'),
])


10488) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(3566, 3642), parts=[
  WordNode(pos=(3566, 3573), word='apt-get'),
  WordNode(pos=(3574, 3579), word='purge'),
  WordNode(pos=(3580, 3582), word='-y'),
  WordNode(pos=(3583, 3596), word='--auto-remove'),
  WordNode(pos=(3597, 3599), word='-o'),
  WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
])


10489) openssl version

CommandNode(pos=(3646, 3661), parts=[
  WordNode(pos=(3646, 3653), word='openssl'),
  WordNode(pos=(3654, 3661), word='version'),
])


10490) erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

CommandNode(pos=(3664, 3761), parts=[
  WordNode(pos=(3664, 3667), word='erl'),
  WordNode(pos=(3668, 3676), word='-noshell'),
  WordNode(pos=(3677, 3682), word='-eval'),
  WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
])


10491) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10492) groupadd --gid 999 --system rabbitmq

CommandNode(pos=(11, 47), parts=[
  WordNode(pos=(11, 19), word='groupadd'),
  WordNode(pos=(20, 25), word='--gid'),
  WordNode(pos=(26, 29), word='999'),
  WordNode(pos=(30, 38), word='--system'),
  WordNode(pos=(39, 47), word='rabbitmq'),
])


10493) useradd --uid 999 --system --home-dir "$RABBITMQ_DATA_DIR" --gid rabbitmq rabbitmq

CommandNode(pos=(50, 132), parts=[
  WordNode(pos=(50, 57), word='useradd'),
  WordNode(pos=(58, 63), word='--uid'),
  WordNode(pos=(64, 67), word='999'),
  WordNode(pos=(68, 76), word='--system'),
  WordNode(pos=(77, 87), word='--home-dir'),
  WordNode(pos=(88, 108), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(89, 107), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(109, 114), word='--gid'),
  WordNode(pos=(115, 123), word='rabbitmq'),
  WordNode(pos=(124, 132), word='rabbitmq'),
])


10494) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(135, 214), parts=[
  WordNode(pos=(135, 140), word='mkdir'),
  WordNode(pos=(141, 143), word='-p'),
  WordNode(pos=(144, 164), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(145, 163), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(165, 178), word='/etc/rabbitmq'),
  WordNode(pos=(179, 196), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(197, 214), word='/var/log/rabbitmq'),
])


10495) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(217, 315), parts=[
  WordNode(pos=(217, 222), word='chown'),
  WordNode(pos=(223, 226), word='-fR'),
  WordNode(pos=(227, 244), word='rabbitmq:rabbitmq'),
  WordNode(pos=(245, 265), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(246, 264), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(266, 279), word='/etc/rabbitmq'),
  WordNode(pos=(280, 297), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(298, 315), word='/var/log/rabbitmq'),
])


10496) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(318, 398), parts=[
  WordNode(pos=(318, 323), word='chmod'),
  WordNode(pos=(324, 327), word='777'),
  WordNode(pos=(328, 348), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(329, 347), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(349, 362), word='/etc/rabbitmq'),
  WordNode(pos=(363, 380), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(381, 398), word='/var/log/rabbitmq'),
])


10497) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(401, 464), parts=[
  WordNode(pos=(401, 403), word='ln'),
  WordNode(pos=(404, 407), word='-sf'),
  WordNode(pos=(408, 443), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(409, 427), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(444, 464), word='/root/.erlang.cookie'),
])


10498) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10499) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


10500) apt-get update

CommandNode(pos=(52, 66), parts=[
  WordNode(pos=(52, 59), word='apt-get'),
  WordNode(pos=(60, 66), word='update'),
])


10501) apt-get install --yes --no-install-recommends   ca-certificates   gnupg   wget   xz-utils

CommandNode(pos=(69, 158), parts=[
  WordNode(pos=(69, 76), word='apt-get'),
  WordNode(pos=(77, 84), word='install'),
  WordNode(pos=(85, 90), word='--yes'),
  WordNode(pos=(91, 114), word='--no-install-recommends'),
  WordNode(pos=(117, 132), word='ca-certificates'),
  WordNode(pos=(135, 140), word='gnupg'),
  WordNode(pos=(143, 147), word='wget'),
  WordNode(pos=(150, 158), word='xz-utils'),
])


10502) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(163, 190), parts=[
  WordNode(pos=(163, 165), word='rm'),
  WordNode(pos=(166, 169), word='-rf'),
  WordNode(pos=(170, 190), word='/var/lib/apt/lists/*'),
])


10503) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


10504) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


10505) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


10506) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


10507) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(607, 638), parts=[
  WordNode(pos=(607, 613), word='export'),
  WordNode(pos=(614, 638), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(627, 636), parts=[
        WordNode(pos=(627, 633), word='mktemp'),
        WordNode(pos=(634, 636), word='-d'),
      ]), pos=(625, 637)),
  ]),
])


10508) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


10509) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


10510) gpgconf --kill all

CommandNode(pos=(794, 812), parts=[
  WordNode(pos=(794, 801), word='gpgconf'),
  WordNode(pos=(802, 808), word='--kill'),
  WordNode(pos=(809, 812), word='all'),
])


10511) rm -rf "$GNUPGHOME"

CommandNode(pos=(815, 834), parts=[
  WordNode(pos=(815, 817), word='rm'),
  WordNode(pos=(818, 821), word='-rf'),
  WordNode(pos=(822, 834), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(823, 833), value='GNUPGHOME'),
  ]),
])


10512) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(838, 863), parts=[
  WordNode(pos=(838, 843), word='mkdir'),
  WordNode(pos=(844, 846), word='-p'),
  WordNode(pos=(847, 863), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(848, 862), value='RABBITMQ_HOME'),
  ]),
])


10513) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


10514) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(963, 987), parts=[
  WordNode(pos=(963, 965), word='rm'),
  WordNode(pos=(966, 969), word='-rf'),
  WordNode(pos=(970, 987), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(971, 985), value='RABBITMQ_PATH'),
  ]),
])


10515) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(990, 1073), parts=[
  WordNode(pos=(990, 994), word='grep'),
  WordNode(pos=(995, 998), word='-qE'),
  WordNode(pos=(999, 1033), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(1034, 1073), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1035, 1049), value='RABBITMQ_HOME'),
  ]),
])


10516) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1076, 1155), parts=[
  WordNode(pos=(1076, 1079), word='sed'),
  WordNode(pos=(1080, 1082), word='-i'),
  WordNode(pos=(1083, 1115), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(1116, 1155), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1117, 1131), value='RABBITMQ_HOME'),
  ]),
])


10517) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1158, 1222), parts=[
  WordNode(pos=(1158, 1162), word='grep'),
  WordNode(pos=(1163, 1166), word='-qE'),
  WordNode(pos=(1167, 1182), word='^SYS_PREFIX=$'),
  WordNode(pos=(1183, 1222), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1184, 1198), value='RABBITMQ_HOME'),
  ]),
])


10518) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1225, 1268), parts=[
  WordNode(pos=(1225, 1230), word='chown'),
  WordNode(pos=(1231, 1233), word='-R'),
  WordNode(pos=(1234, 1251), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1252, 1268), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1253, 1267), value='RABBITMQ_HOME'),
  ]),
])


10519) apt-mark auto '.*' > /dev/null

CommandNode(pos=(1272, 1302), parts=[
  WordNode(pos=(1272, 1280), word='apt-mark'),
  WordNode(pos=(1281, 1285), word='auto'),
  WordNode(pos=(1286, 1290), word='.*'),
  RedirectNode(output=
    WordNode(pos=(1293, 1302), word='/dev/null'), pos=(1291, 1302), type='>'),
])


10520) apt-mark manual $savedAptMark

CommandNode(pos=(1305, 1334), parts=[
  WordNode(pos=(1305, 1313), word='apt-mark'),
  WordNode(pos=(1314, 1320), word='manual'),
  WordNode(pos=(1321, 1334), word='$savedAptMark', parts=[
    ParameterNode(pos=(1321, 1334), value='savedAptMark'),
  ]),
])


10521) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

CommandNode(pos=(1337, 1413), parts=[
  WordNode(pos=(1337, 1344), word='apt-get'),
  WordNode(pos=(1345, 1350), word='purge'),
  WordNode(pos=(1351, 1353), word='-y'),
  WordNode(pos=(1354, 1367), word='--auto-remove'),
  WordNode(pos=(1368, 1370), word='-o'),
  WordNode(pos=(1371, 1413), word='APT::AutoRemove::RecommendsImportant=false'),
])


10522) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1417, 1461), parts=[
  WordNode(pos=(1417, 1418), word='['),
  WordNode(pos=(1419, 1420), word='!'),
  WordNode(pos=(1421, 1423), word='-e'),
  WordNode(pos=(1424, 1459), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1425, 1443), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1460, 1461), word=']'),
])


10523) gosu rabbitmq rabbitmqctl help

CommandNode(pos=(1464, 1494), parts=[
  WordNode(pos=(1464, 1468), word='gosu'),
  WordNode(pos=(1469, 1477), word='rabbitmq'),
  WordNode(pos=(1478, 1489), word='rabbitmqctl'),
  WordNode(pos=(1490, 1494), word='help'),
])


10524) gosu rabbitmq rabbitmqctl list_ciphers

CommandNode(pos=(1497, 1535), parts=[
  WordNode(pos=(1497, 1501), word='gosu'),
  WordNode(pos=(1502, 1510), word='rabbitmq'),
  WordNode(pos=(1511, 1522), word='rabbitmqctl'),
  WordNode(pos=(1523, 1535), word='list_ciphers'),
])


10525) gosu rabbitmq rabbitmq-plugins list

CommandNode(pos=(1538, 1573), parts=[
  WordNode(pos=(1538, 1542), word='gosu'),
  WordNode(pos=(1543, 1551), word='rabbitmq'),
  WordNode(pos=(1552, 1568), word='rabbitmq-plugins'),
  WordNode(pos=(1569, 1573), word='list'),
])


10526) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1576, 1614), parts=[
  WordNode(pos=(1576, 1578), word='rm'),
  WordNode(pos=(1579, 1614), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1580, 1598), value='RABBITMQ_DATA_DIR'),
  ]),
])


10527) ln -sf /opt/rabbitmq/plugins /plugins

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 6), word='-sf'),
  WordNode(pos=(7, 28), word='/opt/rabbitmq/plugins'),
  WordNode(pos=(29, 37), word='/plugins'),
])


10528) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10529) echo 'Package: php*'

CommandNode(pos=(15, 35), parts=[
  WordNode(pos=(15, 19), word='echo'),
  WordNode(pos=(20, 35), word='Package: php*'),
])


10530) echo 'Pin: release *'

CommandNode(pos=(39, 60), parts=[
  WordNode(pos=(39, 43), word='echo'),
  WordNode(pos=(44, 60), word='Pin: release *'),
])


10531) echo 'Pin-Priority: -1'

CommandNode(pos=(64, 87), parts=[
  WordNode(pos=(64, 68), word='echo'),
  WordNode(pos=(69, 87), word='Pin-Priority: -1'),
])


10532) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


10533) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


10534) rm -r /var/lib/apt/lists/*

CommandNode(pos=(116, 142), parts=[
  WordNode(pos=(116, 118), word='rm'),
  WordNode(pos=(119, 121), word='-r'),
  WordNode(pos=(122, 142), word='/var/lib/apt/lists/*'),
])


10535) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10536) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


10537) [ ! -d /var/www/html ]

CommandNode(pos=(44, 66), parts=[
  WordNode(pos=(44, 45), word='['),
  WordNode(pos=(46, 47), word='!'),
  WordNode(pos=(48, 50), word='-d'),
  WordNode(pos=(51, 64), word='/var/www/html'),
  WordNode(pos=(65, 66), word=']'),
])


10538) mkdir -p /var/www/html

CommandNode(pos=(69, 91), parts=[
  WordNode(pos=(69, 74), word='mkdir'),
  WordNode(pos=(75, 77), word='-p'),
  WordNode(pos=(78, 91), word='/var/www/html'),
])


10539) chown www-data:www-data /var/www/html

CommandNode(pos=(94, 131), parts=[
  WordNode(pos=(94, 99), word='chown'),
  WordNode(pos=(100, 117), word='www-data:www-data'),
  WordNode(pos=(118, 131), word='/var/www/html'),
])


10540) chmod 777 /var/www/html

CommandNode(pos=(134, 157), parts=[
  WordNode(pos=(134, 139), word='chmod'),
  WordNode(pos=(140, 143), word='777'),
  WordNode(pos=(144, 157), word='/var/www/html'),
])


10541) set -xe

CommandNode(pos=(0, 7), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 7), word='-xe'),
])


10542) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


10543) command -v gpg > /dev/null

CommandNode(pos=(40, 66), parts=[
  WordNode(pos=(40, 47), word='command'),
  WordNode(pos=(48, 50), word='-v'),
  WordNode(pos=(51, 54), word='gpg'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


10544) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


10545) apt-get update

CommandNode(pos=(128, 142), parts=[
  WordNode(pos=(128, 135), word='apt-get'),
  WordNode(pos=(136, 142), word='update'),
])


10546) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


10547) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(201, 228), parts=[
  WordNode(pos=(201, 203), word='rm'),
  WordNode(pos=(204, 207), word='-rf'),
  WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
])


10548) mkdir -p /usr/src

CommandNode(pos=(232, 249), parts=[
  WordNode(pos=(232, 237), word='mkdir'),
  WordNode(pos=(238, 240), word='-p'),
  WordNode(pos=(241, 249), word='/usr/src'),
])


10549) cd /usr/src

CommandNode(pos=(252, 263), parts=[
  WordNode(pos=(252, 254), word='cd'),
  WordNode(pos=(255, 263), word='/usr/src'),
])


10550) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


10551) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


10552) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


10553) sha256sum -c -

CommandNode(pos=(365, 379), parts=[
  WordNode(pos=(365, 374), word='sha256sum'),
  WordNode(pos=(375, 377), word='-c'),
  WordNode(pos=(378, 379), word='-'),
])


10554) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


10555) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


10556) md5sum -c -

CommandNode(pos=(446, 457), parts=[
  WordNode(pos=(446, 452), word='md5sum'),
  WordNode(pos=(453, 455), word='-c'),
  WordNode(pos=(456, 457), word='-'),
])


10557) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


10558) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


10559) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


10560) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


10561) gpg --batch --verify php.tar.xz.asc php.tar.xz

CommandNode(pos=(684, 730), parts=[
  WordNode(pos=(684, 687), word='gpg'),
  WordNode(pos=(688, 695), word='--batch'),
  WordNode(pos=(696, 704), word='--verify'),
  WordNode(pos=(705, 719), word='php.tar.xz.asc'),
  WordNode(pos=(720, 730), word='php.tar.xz'),
])


10562) command -v gpgconf > /dev/null

CommandNode(pos=(734, 764), parts=[
  WordNode(pos=(734, 741), word='command'),
  WordNode(pos=(742, 744), word='-v'),
  WordNode(pos=(745, 752), word='gpgconf'),
  RedirectNode(output=
    WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
])


10563) gpgconf --kill all

CommandNode(pos=(768, 786), parts=[
  WordNode(pos=(768, 775), word='gpgconf'),
  WordNode(pos=(776, 782), word='--kill'),
  WordNode(pos=(783, 786), word='all'),
])


10564) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


10565) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


10566) docker-php-ext-enable sodium

CommandNode(pos=(0, 28), parts=[
  WordNode(pos=(0, 21), word='docker-php-ext-enable'),
  WordNode(pos=(22, 28), word='sodium'),
])


10567) set -eux

CommandNode(pos=(0, 8), parts=[
  WordNode(pos=(0, 3), word='set'),
  WordNode(pos=(4, 8), word='-eux'),
])


10568) apt-get update

CommandNode(pos=(11, 25), parts=[
  WordNode(pos=(11, 18), word='apt-get'),
  WordNode(pos=(19, 25), word='update'),
])


10569) apt-get install -y --no-install-recommends   ca-certificates p11-kit

CommandNode(pos=(28, 96), parts=[
  WordNode(pos=(28, 35), word='apt-get'),
  WordNode(pos=(36, 43), word='install'),
  WordNode(pos=(44, 46), word='-y'),
  WordNode(pos=(47, 70), word='--no-install-recommends'),
  WordNode(pos=(73, 88), word='ca-certificates'),
  WordNode(pos=(89, 96), word='p11-kit'),
])


10570) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(101, 128), parts=[
  WordNode(pos=(101, 103), word='rm'),
  WordNode(pos=(104, 107), word='-rf'),
  WordNode(pos=(108, 128), word='/var/lib/apt/lists/*'),
])


10571) echo '#/bin/sh'

CommandNode(pos=(2, 17), parts=[
  WordNode(pos=(2, 6), word='echo'),
  WordNode(pos=(7, 17), word='#/bin/sh'),
])


10572) echo 'echo "$JAVA_HOME"'

CommandNode(pos=(19, 43), parts=[
  WordNode(pos=(19, 23), word='echo'),
  WordNode(pos=(24, 43), word='echo "$JAVA_HOME"'),
])


10573) chmod +x /usr/local/bin/docker-java-home

CommandNode(pos=(84, 124), parts=[
  WordNode(pos=(84, 89), word='chmod'),
  WordNode(pos=(90, 92), word='+x'),
  WordNode(pos=(93, 124), word='/usr/local/bin/docker-java-home'),
])


10574) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


10575) apt-get update

CommandNode(pos=(0, 14), parts=[
  WordNode(pos=(0, 7), word='apt-get'),
  WordNode(pos=(8, 14), word='update'),
])


10576) apt-get install -y --no-install-recommends   fontconfig-config   fonts-dejavu-core   geoip-database   init-system-helpers   libarchive-extract-perl   libexpat1   libfontconfig1   libfreetype6   libgcrypt11   libgd3   libgdbm3   libgeoip1   libgpg-error0   libjbig0   libjpeg8   liblog-message-perl   liblog-message-simple-perl   libmodule-pluggable-perl   libpng12-0   libpod-latex-perl   libssl1.0.0   libterm-ui-perl   libtext-soundex-perl   libtiff5   libvpx1   libx11-6   libx11-data   libxau6   libxcb1   libxdmcp6   libxml2   libxpm4   libxslt1.1   perl   perl-modules   rename   sgml-base   ucf   xml-core

CommandNode(pos=(18, 630), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(37, 60), word='--no-install-recommends'),
  WordNode(pos=(63, 80), word='fontconfig-config'),
  WordNode(pos=(83, 100), word='fonts-dejavu-core'),
  WordNode(pos=(103, 117), word='geoip-database'),
  WordNode(pos=(120, 139), word='init-system-helpers'),
  WordNode(pos=(142, 165), word='libarchive-extract-perl'),
  WordNode(pos=(168, 177), word='libexpat1'),
  WordNode(pos=(180, 194), word='libfontconfig1'),
  WordNode(pos=(197, 209), word='libfreetype6'),
  WordNode(pos=(212, 223), word='libgcrypt11'),
  WordNode(pos=(226, 232), word='libgd3'),
  WordNode(pos=(235, 243), word='libgdbm3'),
  WordNode(pos=(246, 255), word='libgeoip1'),
  WordNode(pos=(258, 271), word='libgpg-error0'),
  WordNode(pos=(274, 282), word='libjbig0'),
  WordNode(pos=(285, 293), word='libjpeg8'),
  WordNode(pos=(296, 315), word='liblog-message-perl'),
  WordNode(pos=(318, 344), word='liblog-message-simple-perl'),
  WordNode(pos=(347, 371), word='libmodule-pluggable-perl'),
  WordNode(pos=(374, 384), word='libpng12-0'),
  WordNode(pos=(387, 404), word='libpod-latex-perl'),
  WordNode(pos=(407, 418), word='libssl1.0.0'),
  WordNode(pos=(421, 436), word='libterm-ui-perl'),
  WordNode(pos=(439, 459), word='libtext-soundex-perl'),
  WordNode(pos=(462, 470), word='libtiff5'),
  WordNode(pos=(473, 480), word='libvpx1'),
  WordNode(pos=(483, 491), word='libx11-6'),
  WordNode(pos=(494, 505), word='libx11-data'),
  WordNode(pos=(508, 515), word='libxau6'),
  WordNode(pos=(518, 525), word='libxcb1'),
  WordNode(pos=(528, 537), word='libxdmcp6'),
  WordNode(pos=(540, 547), word='libxml2'),
  WordNode(pos=(550, 557), word='libxpm4'),
  WordNode(pos=(560, 570), word='libxslt1.1'),
  WordNode(pos=(573, 577), word='perl'),
  WordNode(pos=(580, 592), word='perl-modules'),
  WordNode(pos=(595, 601), word='rename'),
  WordNode(pos=(604, 613), word='sgml-base'),
  WordNode(pos=(616, 619), word='ucf'),
  WordNode(pos=(622, 630), word='xml-core'),
])


10577) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(635, 662), parts=[
  WordNode(pos=(635, 637), word='rm'),
  WordNode(pos=(638, 641), word='-rf'),
  WordNode(pos=(642, 662), word='/var/lib/apt/lists/*'),
])


10578) gpg --keyserver pgp.mit.edu --recv-key  A09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D  4C2C85E705DC730833990C38A9376139A524C53E  B0F4253373F8F6F510D42178520A9993A1C052F8  65506C02EFC250F1B7A3D694ECF0E90B2C172083  7338973069ED3F443F4D37DFA64FD5B17ADB39A8  6E067260B83DCF2CA93C566F518509686C7E5E82  573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62

CommandNode(pos=(0, 332), parts=[
  WordNode(pos=(0, 3), word='gpg'),
  WordNode(pos=(4, 15), word='--keyserver'),
  WordNode(pos=(16, 27), word='pgp.mit.edu'),
  WordNode(pos=(28, 38), word='--recv-key'),
  WordNode(pos=(40, 80), word='A09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D'),
  WordNode(pos=(82, 122), word='4C2C85E705DC730833990C38A9376139A524C53E'),
  WordNode(pos=(124, 164), word='B0F4253373F8F6F510D42178520A9993A1C052F8'),
  WordNode(pos=(166, 206), word='65506C02EFC250F1B7A3D694ECF0E90B2C172083'),
  WordNode(pos=(208, 248), word='7338973069ED3F443F4D37DFA64FD5B17ADB39A8'),
  WordNode(pos=(250, 290), word='6E067260B83DCF2CA93C566F518509686C7E5E82'),
  WordNode(pos=(292, 332), word='573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62'),
])


10579) buildDeps="   ca-certificates   curl   gcc   libc-dev-bin   libc6-dev   libexpat1-dev   libfontconfig1-dev   libfreetype6-dev   libgd-dev   libgd2-dev   libgeoip-dev   libice-dev   libjbig-dev   libjpeg8-dev   liblzma-dev   libpcre3-dev   libperl-dev   libpng12-dev   libpthread-stubs0-dev   libsm-dev   libssl-dev   libssl-dev   libtiff5-dev   libvpx-dev   libx11-dev   libxau-dev   libxcb1-dev   libxdmcp-dev   libxml2-dev   libxpm-dev   libxslt1-dev   libxt-dev   linux-libc-dev   make   manpages-dev   x11proto-core-dev   x11proto-input-dev   x11proto-kb-dev   xtrans-dev   zlib1g-dev  "

CommandNode(pos=(0, 591), parts=[
  AssignmentNode(pos=(0, 591), word='buildDeps=   ca-certificates   curl   gcc   libc-dev-bin   libc6-dev   libexpat1-dev   libfontconfig1-dev   libfreetype6-dev   libgd-dev   libgd2-dev   libgeoip-dev   libice-dev   libjbig-dev   libjpeg8-dev   liblzma-dev   libpcre3-dev   libperl-dev   libpng12-dev   libpthread-stubs0-dev   libsm-dev   libssl-dev   libssl-dev   libtiff5-dev   libvpx-dev   libx11-dev   libxau-dev   libxcb1-dev   libxdmcp-dev   libxml2-dev   libxpm-dev   libxslt1-dev   libxt-dev   linux-libc-dev   make   manpages-dev   x11proto-core-dev   x11proto-input-dev   x11proto-kb-dev   xtrans-dev   zlib1g-dev  '),
])


10580) apt-get update

CommandNode(pos=(594, 608), parts=[
  WordNode(pos=(594, 601), word='apt-get'),
  WordNode(pos=(602, 608), word='update'),
])


10581) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(612, 665), parts=[
  WordNode(pos=(612, 619), word='apt-get'),
  WordNode(pos=(620, 627), word='install'),
  WordNode(pos=(628, 630), word='-y'),
  WordNode(pos=(631, 654), word='--no-install-recommends'),
  WordNode(pos=(655, 665), word='$buildDeps', parts=[
    ParameterNode(pos=(655, 665), value='buildDeps'),
  ]),
])


10582) rm -rf /var/lib/apt/lists/*

CommandNode(pos=(669, 696), parts=[
  WordNode(pos=(669, 671), word='rm'),
  WordNode(pos=(672, 675), word='-rf'),
  WordNode(pos=(676, 696), word='/var/lib/apt/lists/*'),
])


10583) curl -SL "http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz" -o nginx.tar.gz

CommandNode(pos=(701, 781), parts=[
  WordNode(pos=(701, 705), word='curl'),
  WordNode(pos=(706, 709), word='-SL'),
  WordNode(pos=(710, 765), word='http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz', parts=[
    ParameterNode(pos=(743, 757), value='NGINX_VERSION'),
  ]),
  WordNode(pos=(766, 768), word='-o'),
  WordNode(pos=(769, 781), word='nginx.tar.gz'),
])


10584) curl -SL "http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc" -o nginx.tar.gz.asc

CommandNode(pos=(786, 874), parts=[
  WordNode(pos=(786, 790), word='curl'),
  WordNode(pos=(791, 794), word='-SL'),
  WordNode(pos=(795, 854), word='http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc', parts=[
    ParameterNode(pos=(828, 842), value='NGINX_VERSION'),
  ]),
  WordNode(pos=(855, 857), word='-o'),
  WordNode(pos=(858, 874), word='nginx.tar.gz.asc'),
])


10585) gpg --verify nginx.tar.gz.asc

CommandNode(pos=(879, 908), parts=[
  WordNode(pos=(879, 882), word='gpg'),
  WordNode(pos=(883, 891), word='--verify'),
  WordNode(pos=(892, 908), word='nginx.tar.gz.asc'),
])


10586) mkdir -p /usr/src/nginx

CommandNode(pos=(913, 936), parts=[
  WordNode(pos=(913, 918), word='mkdir'),
  WordNode(pos=(919, 921), word='-p'),
  WordNode(pos=(922, 936), word='/usr/src/nginx'),
])


10587) tar -xvf nginx.tar.gz -C /usr/src/nginx --strip-components=1

CommandNode(pos=(941, 1001), parts=[
  WordNode(pos=(941, 944), word='tar'),
  WordNode(pos=(945, 949), word='-xvf'),
  WordNode(pos=(950, 962), word='nginx.tar.gz'),
  WordNode(pos=(963, 965), word='-C'),
  WordNode(pos=(966, 980), word='/usr/src/nginx'),
  WordNode(pos=(981, 1001), word='--strip-components=1'),
])


10588) rm nginx.tar.gz*

CommandNode(pos=(1006, 1022), parts=[
  WordNode(pos=(1006, 1008), word='rm'),
  WordNode(pos=(1009, 1022), word='nginx.tar.gz*'),
])


10589) cd /usr/src/nginx

CommandNode(pos=(1027, 1044), parts=[
  WordNode(pos=(1027, 1029), word='cd'),
  WordNode(pos=(1030, 1044), word='/usr/src/nginx'),
])


10590) ./configure   --user=www-data   --group=www-data   --prefix=/usr/local/nginx   --conf-path=/etc/nginx.conf   --http-log-path=/proc/self/fd/1   --error-log-path=/proc/self/fd/2   --with-http_addition_module   --with-http_auth_request_module   --with-http_dav_module   --with-http_geoip_module   --with-http_gzip_static_module   --with-http_image_filter_module   --with-http_perl_module   --with-http_realip_module   --with-http_spdy_module   --with-http_ssl_module   --with-http_stub_status_module   --with-http_sub_module   --with-http_xslt_module   --with-ipv6   --with-mail   --with-mail_ssl_module   --with-pcre-jit

CommandNode(pos=(1049, 1667), parts=[
  WordNode(pos=(1049, 1060), word='./configure'),
  WordNode(pos=(1063, 1078), word='--user=www-data'),
  WordNode(pos=(1081, 1097), word='--group=www-data'),
  WordNode(pos=(1100, 1125), word='--prefix=/usr/local/nginx'),
  WordNode(pos=(1128, 1155), word='--conf-path=/etc/nginx.conf'),
  WordNode(pos=(1158, 1189), word='--http-log-path=/proc/self/fd/1'),
  WordNode(pos=(1192, 1224), word='--error-log-path=/proc/self/fd/2'),
  WordNode(pos=(1227, 1254), word='--with-http_addition_module'),
  WordNode(pos=(1257, 1288), word='--with-http_auth_request_module'),
  WordNode(pos=(1291, 1313), word='--with-http_dav_module'),
  WordNode(pos=(1316, 1340), word='--with-http_geoip_module'),
  WordNode(pos=(1343, 1373), word='--with-http_gzip_static_module'),
  WordNode(pos=(1376, 1407), word='--with-http_image_filter_module'),
  WordNode(pos=(1410, 1433), word='--with-http_perl_module'),
  WordNode(pos=(1436, 1461), word='--with-http_realip_module'),
  WordNode(pos=(1464, 1487), word='--with-http_spdy_module'),
  WordNode(pos=(1490, 1512), word='--with-http_ssl_module'),
  WordNode(pos=(1515, 1545), word='--with-http_stub_status_module'),
  WordNode(pos=(1548, 1570), word='--with-http_sub_module'),
  WordNode(pos=(1573, 1596), word='--with-http_xslt_module'),
  WordNode(pos=(1599, 1610), word='--with-ipv6'),
  WordNode(pos=(1613, 1624), word='--with-mail'),
  WordNode(pos=(1627, 1649), word='--with-mail_ssl_module'),
  WordNode(pos=(1652, 1667), word='--with-pcre-jit'),
])


10591) make -j"$(nproc)"

CommandNode(pos=(1672, 1689), parts=[
  WordNode(pos=(1672, 1676), word='make'),
  WordNode(pos=(1677, 1689), word='-j$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1682, 1687), parts=[
        WordNode(pos=(1682, 1687), word='nproc'),
      ]), pos=(1680, 1688)),
  ]),
])


10592) make install

CommandNode(pos=(1694, 1706), parts=[
  WordNode(pos=(1694, 1698), word='make'),
  WordNode(pos=(1699, 1706), word='install'),
])


10593) cd /

CommandNode(pos=(1711, 1715), parts=[
  WordNode(pos=(1711, 1713), word='cd'),
  WordNode(pos=(1714, 1715), word='/'),
])


10594) rm -r /usr/src/nginx

CommandNode(pos=(1720, 1740), parts=[
  WordNode(pos=(1720, 1722), word='rm'),
  WordNode(pos=(1723, 1725), word='-r'),
  WordNode(pos=(1726, 1740), word='/usr/src/nginx'),
])


10595) chown -R www-data:www-data /usr/local/nginx

CommandNode(pos=(1745, 1788), parts=[
  WordNode(pos=(1745, 1750), word='chown'),
  WordNode(pos=(1751, 1753), word='-R'),
  WordNode(pos=(1754, 1771), word='www-data:www-data'),
  WordNode(pos=(1772, 1788), word='/usr/local/nginx'),
])


10596) echo

CommandNode(pos=(1797, 1801), parts=[
  WordNode(pos=(1797, 1801), word='echo'),
])


10597) echo '# stay in the foreground so Docker has a process to track'

CommandNode(pos=(1805, 1869), parts=[
  WordNode(pos=(1805, 1809), word='echo'),
  WordNode(pos=(1810, 1869), word='# stay in the foreground so Docker has a process to track'),
])


10598) echo 'daemon off;'

CommandNode(pos=(1873, 1891), parts=[
  WordNode(pos=(1873, 1877), word='echo'),
  WordNode(pos=(1878, 1891), word='daemon off;'),
])


10599) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(1919, 1960), parts=[
  WordNode(pos=(1919, 1926), word='apt-get'),
  WordNode(pos=(1927, 1932), word='purge'),
  WordNode(pos=(1933, 1935), word='-y'),
  WordNode(pos=(1936, 1949), word='--auto-remove'),
  WordNode(pos=(1950, 1960), word='$buildDeps', parts=[
    ParameterNode(pos=(1950, 1960), value='buildDeps'),
  ]),
])


